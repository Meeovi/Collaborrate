# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Accounts {
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt!
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

type AccountsAvgAggregate {
  id: Float
}

input AccountsAvgOrderByAggregateInput {
  id: SortOrder
}

type AccountsCountAggregate {
  _all: Int!
  address: Int!
  alt_address: Int!
  alt_city: Int!
  alt_country: Int!
  alt_postalcode: Int!
  alt_state: Int!
  annual_revenue: Int!
  assigned_to: Int!
  campaign: Int!
  city: Int!
  country: Int!
  created_at: Int!
  email: Int!
  employees: Int!
  fax: Int!
  id: Int!
  industry: Int!
  member_of: Int!
  name: Int!
  office_phone: Int!
  postalcode: Int!
  state: Int!
  type: Int!
  website: Int!
}

input AccountsCountOrderByAggregateInput {
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  annual_revenue: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  email: SortOrder
  employees: SortOrder
  fax: SortOrder
  id: SortOrder
  industry: SortOrder
  member_of: SortOrder
  name: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  type: SortOrder
  website: SortOrder
}

input AccountsCreateInput {
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

input AccountsCreateManyInput {
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

type AccountsGroupBy {
  _avg: AccountsAvgAggregate
  _count: AccountsCountAggregate
  _max: AccountsMaxAggregate
  _min: AccountsMinAggregate
  _sum: AccountsSumAggregate
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt!
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

type AccountsMaxAggregate {
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

input AccountsMaxOrderByAggregateInput {
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  annual_revenue: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  email: SortOrder
  employees: SortOrder
  fax: SortOrder
  id: SortOrder
  industry: SortOrder
  member_of: SortOrder
  name: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  type: SortOrder
  website: SortOrder
}

type AccountsMinAggregate {
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  annual_revenue: String
  assigned_to: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  email: String
  employees: String
  fax: String
  id: BigInt
  industry: String
  member_of: String
  name: String
  office_phone: String
  postalcode: String
  state: String
  type: String
  website: String
}

input AccountsMinOrderByAggregateInput {
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  annual_revenue: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  email: SortOrder
  employees: SortOrder
  fax: SortOrder
  id: SortOrder
  industry: SortOrder
  member_of: SortOrder
  name: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  type: SortOrder
  website: SortOrder
}

enum AccountsOrderByRelevanceFieldEnum {
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  annual_revenue
  assigned_to
  campaign
  city
  country
  email
  employees
  fax
  industry
  member_of
  name
  office_phone
  postalcode
  state
  type
  website
}

input AccountsOrderByRelevanceInput {
  fields: [AccountsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AccountsOrderByWithAggregationInput {
  _avg: AccountsAvgOrderByAggregateInput
  _count: AccountsCountOrderByAggregateInput
  _max: AccountsMaxOrderByAggregateInput
  _min: AccountsMinOrderByAggregateInput
  _sum: AccountsSumOrderByAggregateInput
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  annual_revenue: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  email: SortOrder
  employees: SortOrder
  fax: SortOrder
  id: SortOrder
  industry: SortOrder
  member_of: SortOrder
  name: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  type: SortOrder
  website: SortOrder
}

input AccountsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AccountsOrderByRelevanceInput
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  annual_revenue: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  email: SortOrder
  employees: SortOrder
  fax: SortOrder
  id: SortOrder
  industry: SortOrder
  member_of: SortOrder
  name: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  type: SortOrder
  website: SortOrder
}

enum AccountsScalarFieldEnum {
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  annual_revenue
  assigned_to
  campaign
  city
  country
  created_at
  email
  employees
  fax
  id
  industry
  member_of
  name
  office_phone
  postalcode
  state
  type
  website
}

input AccountsScalarWhereWithAggregatesInput {
  AND: [AccountsScalarWhereWithAggregatesInput!]
  NOT: [AccountsScalarWhereWithAggregatesInput!]
  OR: [AccountsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  alt_address: StringNullableWithAggregatesFilter
  alt_city: StringNullableWithAggregatesFilter
  alt_country: StringNullableWithAggregatesFilter
  alt_postalcode: StringNullableWithAggregatesFilter
  alt_state: StringNullableWithAggregatesFilter
  annual_revenue: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  campaign: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  employees: StringNullableWithAggregatesFilter
  fax: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  industry: StringNullableWithAggregatesFilter
  member_of: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  office_phone: StringNullableWithAggregatesFilter
  postalcode: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type AccountsSumAggregate {
  id: BigInt
}

input AccountsSumOrderByAggregateInput {
  id: SortOrder
}

input AccountsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  annual_revenue: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  employees: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  industry: NullableStringFieldUpdateOperationsInput
  member_of: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input AccountsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  annual_revenue: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  employees: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  industry: NullableStringFieldUpdateOperationsInput
  member_of: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input AccountsWhereInput {
  AND: [AccountsWhereInput!]
  NOT: [AccountsWhereInput!]
  OR: [AccountsWhereInput!]
  address: StringNullableFilter
  alt_address: StringNullableFilter
  alt_city: StringNullableFilter
  alt_country: StringNullableFilter
  alt_postalcode: StringNullableFilter
  alt_state: StringNullableFilter
  annual_revenue: StringNullableFilter
  assigned_to: StringNullableFilter
  campaign: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  email: StringNullableFilter
  employees: StringNullableFilter
  fax: StringNullableFilter
  id: BigIntFilter
  industry: StringNullableFilter
  member_of: StringNullableFilter
  name: StringNullableFilter
  office_phone: StringNullableFilter
  postalcode: StringNullableFilter
  state: StringNullableFilter
  type: StringNullableFilter
  website: StringNullableFilter
}

input AccountsWhereUniqueInput {
  id: BigInt
}

type AffectedRowsOutput {
  count: Int!
}

type AggregateAccounts {
  _avg: AccountsAvgAggregate
  _count: AccountsCountAggregate
  _max: AccountsMaxAggregate
  _min: AccountsMinAggregate
  _sum: AccountsSumAggregate
}

type AggregateAgreements {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
}

type AggregateAnalytics {
  _avg: AnalyticsAvgAggregate
  _count: AnalyticsCountAggregate
  _max: AnalyticsMaxAggregate
  _min: AnalyticsMinAggregate
  _sum: AnalyticsSumAggregate
}

type AggregateApitoken {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
}

type AggregateArticles {
  _avg: ArticlesAvgAggregate
  _count: ArticlesCountAggregate
  _max: ArticlesMaxAggregate
  _min: ArticlesMinAggregate
  _sum: ArticlesSumAggregate
}

type AggregateAttributes {
  _avg: AttributesAvgAggregate
  _count: AttributesCountAggregate
  _max: AttributesMaxAggregate
  _min: AttributesMinAggregate
  _sum: AttributesSumAggregate
}

type AggregateBrands {
  _avg: BrandsAvgAggregate
  _count: BrandsCountAggregate
  _max: BrandsMaxAggregate
  _min: BrandsMinAggregate
  _sum: BrandsSumAggregate
}

type AggregateCart_price_rules {
  _avg: Cart_price_rulesAvgAggregate
  _count: Cart_price_rulesCountAggregate
  _max: Cart_price_rulesMaxAggregate
  _min: Cart_price_rulesMinAggregate
  _sum: Cart_price_rulesSumAggregate
}

type AggregateCases {
  _avg: CasesAvgAggregate
  _count: CasesCountAggregate
  _max: CasesMaxAggregate
  _min: CasesMinAggregate
  _sum: CasesSumAggregate
}

type AggregateCatalog_price_rule {
  _avg: Catalog_price_ruleAvgAggregate
  _count: Catalog_price_ruleCountAggregate
  _max: Catalog_price_ruleMaxAggregate
  _min: Catalog_price_ruleMinAggregate
  _sum: Catalog_price_ruleSumAggregate
}

type AggregateCategories {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
}

type AggregateChannels {
  _avg: ChannelsAvgAggregate
  _count: ChannelsCountAggregate
  _max: ChannelsMaxAggregate
  _min: ChannelsMinAggregate
  _sum: ChannelsSumAggregate
}

type AggregateChecklist {
  _avg: ChecklistAvgAggregate
  _count: ChecklistCountAggregate
  _max: ChecklistMaxAggregate
  _min: ChecklistMinAggregate
  _sum: ChecklistSumAggregate
}

type AggregateCities {
  _avg: CitiesAvgAggregate
  _count: CitiesCountAggregate
  _max: CitiesMaxAggregate
  _min: CitiesMinAggregate
  _sum: CitiesSumAggregate
}

type AggregateCollections {
  _avg: CollectionsAvgAggregate
  _count: CollectionsCountAggregate
  _max: CollectionsMaxAggregate
  _min: CollectionsMinAggregate
  _sum: CollectionsSumAggregate
}

type AggregateComments {
  _avg: CommentsAvgAggregate
  _count: CommentsCountAggregate
  _max: CommentsMaxAggregate
  _min: CommentsMinAggregate
  _sum: CommentsSumAggregate
}

type AggregateContent_type {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
}

type AggregateContracts {
  _avg: ContractsAvgAggregate
  _count: ContractsCountAggregate
  _max: ContractsMaxAggregate
  _min: ContractsMinAggregate
  _sum: ContractsSumAggregate
}

type AggregateCountries {
  _avg: CountriesAvgAggregate
  _count: CountriesCountAggregate
  _max: CountriesMaxAggregate
  _min: CountriesMinAggregate
  _sum: CountriesSumAggregate
}

type AggregateCoupons {
  _avg: CouponsAvgAggregate
  _count: CouponsCountAggregate
  _max: CouponsMaxAggregate
  _min: CouponsMinAggregate
  _sum: CouponsSumAggregate
}

type AggregateCredit_memos {
  _avg: Credit_memosAvgAggregate
  _count: Credit_memosCountAggregate
  _max: Credit_memosMaxAggregate
  _min: Credit_memosMinAggregate
  _sum: Credit_memosSumAggregate
}

type AggregateCurrencies {
  _avg: CurrenciesAvgAggregate
  _count: CurrenciesCountAggregate
  _max: CurrenciesMaxAggregate
  _min: CurrenciesMinAggregate
  _sum: CurrenciesSumAggregate
}

type AggregateCurrency_rates {
  _avg: Currency_ratesAvgAggregate
  _count: Currency_ratesCountAggregate
  _max: Currency_ratesMaxAggregate
  _min: Currency_ratesMinAggregate
  _sum: Currency_ratesSumAggregate
}

type AggregateCurrency_symbols {
  _avg: Currency_symbolsAvgAggregate
  _count: Currency_symbolsCountAggregate
  _max: Currency_symbolsMaxAggregate
  _min: Currency_symbolsMinAggregate
  _sum: Currency_symbolsSumAggregate
}

type AggregateCustomer_group {
  _avg: Customer_groupAvgAggregate
  _count: Customer_groupCountAggregate
  _max: Customer_groupMaxAggregate
  _min: Customer_groupMinAggregate
  _sum: Customer_groupSumAggregate
}

type AggregateCustomers {
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
}

type AggregateCustomizations {
  _avg: CustomizationsAvgAggregate
  _count: CustomizationsCountAggregate
  _max: CustomizationsMaxAggregate
  _min: CustomizationsMinAggregate
  _sum: CustomizationsSumAggregate
}

type AggregateDashboards {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
}

type AggregateDeepdive {
  _avg: DeepdiveAvgAggregate
  _count: DeepdiveCountAggregate
  _max: DeepdiveMaxAggregate
  _min: DeepdiveMinAggregate
  _sum: DeepdiveSumAggregate
}

type AggregateDigiboard {
  _avg: DigiboardAvgAggregate
  _count: DigiboardCountAggregate
  _max: DigiboardMaxAggregate
  _min: DigiboardMinAggregate
  _sum: DigiboardSumAggregate
}

type AggregateEmails {
  _avg: EmailsAvgAggregate
  _count: EmailsCountAggregate
  _max: EmailsMaxAggregate
  _min: EmailsMinAggregate
  _sum: EmailsSumAggregate
}

type AggregateEndofshift {
  _avg: EndofshiftAvgAggregate
  _count: EndofshiftCountAggregate
  _max: EndofshiftMaxAggregate
  _min: EndofshiftMinAggregate
  _sum: EndofshiftSumAggregate
}

type AggregateEvents {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
}

type AggregateFullfillments {
  _avg: FullfillmentsAvgAggregate
  _count: FullfillmentsCountAggregate
  _max: FullfillmentsMaxAggregate
  _min: FullfillmentsMinAggregate
  _sum: FullfillmentsSumAggregate
}

type AggregateGift_certificates {
  _avg: Gift_certificatesAvgAggregate
  _count: Gift_certificatesCountAggregate
  _max: Gift_certificatesMaxAggregate
  _min: Gift_certificatesMinAggregate
  _sum: Gift_certificatesSumAggregate
}

type AggregateGlossary {
  _avg: GlossaryAvgAggregate
  _count: GlossaryCountAggregate
  _max: GlossaryMaxAggregate
  _min: GlossaryMinAggregate
  _sum: GlossarySumAggregate
}

type AggregateImportm {
  _avg: ImportmAvgAggregate
  _count: ImportmCountAggregate
  _max: ImportmMaxAggregate
  _min: ImportmMinAggregate
  _sum: ImportmSumAggregate
}

type AggregateIntegrations {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
}

type AggregateInternalization {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
}

type AggregateInvitations {
  _avg: InvitationsAvgAggregate
  _count: InvitationsCountAggregate
  _max: InvitationsMaxAggregate
  _min: InvitationsMinAggregate
  _sum: InvitationsSumAggregate
}

type AggregateInvoices {
  _avg: InvoicesAvgAggregate
  _count: InvoicesCountAggregate
  _max: InvoicesMaxAggregate
  _min: InvoicesMinAggregate
  _sum: InvoicesSumAggregate
}

type AggregateLeads {
  _avg: LeadsAvgAggregate
  _count: LeadsCountAggregate
  _max: LeadsMaxAggregate
  _min: LeadsMinAggregate
  _sum: LeadsSumAggregate
}

type AggregateManufacturer {
  _avg: ManufacturerAvgAggregate
  _count: ManufacturerCountAggregate
  _max: ManufacturerMaxAggregate
  _min: ManufacturerMinAggregate
  _sum: ManufacturerSumAggregate
}

type AggregateMediamanager {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
}

type AggregateMeeting {
  _avg: MeetingAvgAggregate
  _count: MeetingCountAggregate
  _max: MeetingMaxAggregate
  _min: MeetingMinAggregate
  _sum: MeetingSumAggregate
}

type AggregateMessages {
  _avg: MessagesAvgAggregate
  _count: MessagesCountAggregate
  _max: MessagesMaxAggregate
  _min: MessagesMinAggregate
  _sum: MessagesSumAggregate
}

type AggregateNewsletters {
  _avg: NewslettersAvgAggregate
  _count: NewslettersCountAggregate
  _max: NewslettersMaxAggregate
  _min: NewslettersMinAggregate
  _sum: NewslettersSumAggregate
}

type AggregateOoto {
  _avg: OotoAvgAggregate
  _count: OotoCountAggregate
  _max: OotoMaxAggregate
  _min: OotoMinAggregate
  _sum: OotoSumAggregate
}

type AggregateOpportunities {
  _avg: OpportunitiesAvgAggregate
  _count: OpportunitiesCountAggregate
  _max: OpportunitiesMaxAggregate
  _min: OpportunitiesMinAggregate
  _sum: OpportunitiesSumAggregate
}

type AggregateOrders {
  _avg: OrdersAvgAggregate
  _count: OrdersCountAggregate
  _max: OrdersMaxAggregate
  _min: OrdersMinAggregate
  _sum: OrdersSumAggregate
}

type AggregatePages {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
}

type AggregatePartners {
  _avg: PartnersAvgAggregate
  _count: PartnersCountAggregate
  _max: PartnersMaxAggregate
  _min: PartnersMinAggregate
  _sum: PartnersSumAggregate
}

type AggregatePayments {
  _avg: PaymentsAvgAggregate
  _count: PaymentsCountAggregate
  _max: PaymentsMaxAggregate
  _min: PaymentsMinAggregate
  _sum: PaymentsSumAggregate
}

type AggregatePermissions {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
}

type AggregatePlugins {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
}

type AggregatePolls {
  _avg: PollsAvgAggregate
  _count: PollsCountAggregate
  _max: PollsMaxAggregate
  _min: PollsMinAggregate
  _sum: PollsSumAggregate
}

type AggregateProduct_types {
  _avg: Product_typesAvgAggregate
  _count: Product_typesCountAggregate
  _max: Product_typesMaxAggregate
  _min: Product_typesMinAggregate
  _sum: Product_typesSumAggregate
}

type AggregateProducts {
  _avg: ProductsAvgAggregate
  _count: ProductsCountAggregate
  _max: ProductsMaxAggregate
  _min: ProductsMinAggregate
  _sum: ProductsSumAggregate
}

type AggregateProjects {
  _avg: ProjectsAvgAggregate
  _count: ProjectsCountAggregate
  _max: ProjectsMaxAggregate
  _min: ProjectsMinAggregate
  _sum: ProjectsSumAggregate
}

type AggregateProviders {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
}

type AggregateQuotes {
  _avg: QuotesAvgAggregate
  _count: QuotesCountAggregate
  _max: QuotesMaxAggregate
  _min: QuotesMinAggregate
  _sum: QuotesSumAggregate
}

type AggregateRating {
  _avg: RatingAvgAggregate
  _count: RatingCountAggregate
  _max: RatingMaxAggregate
  _min: RatingMinAggregate
  _sum: RatingSumAggregate
}

type AggregateReports {
  _avg: ReportsAvgAggregate
  _count: ReportsCountAggregate
  _max: ReportsMaxAggregate
  _min: ReportsMinAggregate
  _sum: ReportsSumAggregate
}

type AggregateReturns {
  _avg: ReturnsAvgAggregate
  _count: ReturnsCountAggregate
  _max: ReturnsMaxAggregate
  _min: ReturnsMinAggregate
  _sum: ReturnsSumAggregate
}

type AggregateReviews {
  _avg: ReviewsAvgAggregate
  _count: ReviewsCountAggregate
  _max: ReviewsMaxAggregate
  _min: ReviewsMinAggregate
  _sum: ReviewsSumAggregate
}

type AggregateRewards {
  _avg: RewardsAvgAggregate
  _count: RewardsCountAggregate
  _max: RewardsMaxAggregate
  _min: RewardsMinAggregate
  _sum: RewardsSumAggregate
}

type AggregateRoles {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
}

type AggregateScheduler {
  _avg: SchedulerAvgAggregate
  _count: SchedulerCountAggregate
  _max: SchedulerMaxAggregate
  _min: SchedulerMinAggregate
  _sum: SchedulerSumAggregate
}

type AggregateSegments {
  _avg: SegmentsAvgAggregate
  _count: SegmentsCountAggregate
  _max: SegmentsMaxAggregate
  _min: SegmentsMinAggregate
  _sum: SegmentsSumAggregate
}

type AggregateSettings {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
}

type AggregateShipments {
  _avg: ShipmentsAvgAggregate
  _count: ShipmentsCountAggregate
  _max: ShipmentsMaxAggregate
  _min: ShipmentsMinAggregate
  _sum: ShipmentsSumAggregate
}

type AggregateSpecial_discounts {
  _avg: Special_discountsAvgAggregate
  _count: Special_discountsCountAggregate
  _max: Special_discountsMaxAggregate
  _min: Special_discountsMinAggregate
  _sum: Special_discountsSumAggregate
}

type AggregateStates {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
}

type AggregateStatistics {
  _avg: StatisticsAvgAggregate
  _count: StatisticsCountAggregate
  _max: StatisticsMaxAggregate
  _min: StatisticsMinAggregate
  _sum: StatisticsSumAggregate
}

type AggregateStocks {
  _avg: StocksAvgAggregate
  _count: StocksCountAggregate
  _max: StocksMaxAggregate
  _min: StocksMinAggregate
  _sum: StocksSumAggregate
}

type AggregateSurveys {
  _avg: SurveysAvgAggregate
  _count: SurveysCountAggregate
  _max: SurveysMaxAggregate
  _min: SurveysMinAggregate
  _sum: SurveysSumAggregate
}

type AggregateTags {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
}

type AggregateTargets {
  _avg: TargetsAvgAggregate
  _count: TargetsCountAggregate
  _max: TargetsMaxAggregate
  _min: TargetsMinAggregate
  _sum: TargetsSumAggregate
}

type AggregateTax_category {
  _avg: Tax_categoryAvgAggregate
  _count: Tax_categoryCountAggregate
  _max: Tax_categoryMaxAggregate
  _min: Tax_categoryMinAggregate
  _sum: Tax_categorySumAggregate
}

type AggregateTax_rate {
  _avg: Tax_rateAvgAggregate
  _count: Tax_rateCountAggregate
  _max: Tax_rateMaxAggregate
  _min: Tax_rateMinAggregate
  _sum: Tax_rateSumAggregate
}

type AggregateTax_rule {
  _avg: Tax_ruleAvgAggregate
  _count: Tax_ruleCountAggregate
  _max: Tax_ruleMaxAggregate
  _min: Tax_ruleMinAggregate
  _sum: Tax_ruleSumAggregate
}

type AggregateTemplates {
  _avg: TemplatesAvgAggregate
  _count: TemplatesCountAggregate
  _max: TemplatesMaxAggregate
  _min: TemplatesMinAggregate
  _sum: TemplatesSumAggregate
}

type AggregateThemes {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
}

type AggregateTicketing {
  _avg: TicketingAvgAggregate
  _count: TicketingCountAggregate
  _max: TicketingMaxAggregate
  _min: TicketingMinAggregate
  _sum: TicketingSumAggregate
}

type AggregateTrainings {
  _avg: TrainingsAvgAggregate
  _count: TrainingsCountAggregate
  _max: TrainingsMaxAggregate
  _min: TrainingsMinAggregate
  _sum: TrainingsSumAggregate
}

type AggregateTransactions {
  _avg: TransactionsAvgAggregate
  _count: TransactionsCountAggregate
  _max: TransactionsMaxAggregate
  _min: TransactionsMinAggregate
  _sum: TransactionsSumAggregate
}

type AggregateUpload_file {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
}

type AggregateUsers {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
}

type AggregateVendors {
  _avg: VendorsAvgAggregate
  _count: VendorsCountAggregate
  _max: VendorsMaxAggregate
  _min: VendorsMinAggregate
  _sum: VendorsSumAggregate
}

type AggregateVisits {
  _avg: VisitsAvgAggregate
  _count: VisitsCountAggregate
  _max: VisitsMaxAggregate
  _min: VisitsMinAggregate
  _sum: VisitsSumAggregate
}

type AggregateWarehouse {
  _avg: WarehouseAvgAggregate
  _count: WarehouseCountAggregate
  _max: WarehouseMaxAggregate
  _min: WarehouseMinAggregate
  _sum: WarehouseSumAggregate
}

type AggregateWebhooks {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
}

type AggregateWebsites {
  _avg: WebsitesAvgAggregate
  _count: WebsitesCountAggregate
  _max: WebsitesMaxAggregate
  _min: WebsitesMinAggregate
  _sum: WebsitesSumAggregate
}

type AggregateWishlists {
  _avg: WishlistsAvgAggregate
  _count: WishlistsCountAggregate
  _max: WishlistsMaxAggregate
  _min: WishlistsMinAggregate
  _sum: WishlistsSumAggregate
}

type AggregateWorkspaces {
  _avg: WorkspacesAvgAggregate
  _count: WorkspacesCountAggregate
  _max: WorkspacesMaxAggregate
  _min: WorkspacesMinAggregate
  _sum: WorkspacesSumAggregate
}

type AggregateZones {
  _avg: ZonesAvgAggregate
  _count: ZonesCountAggregate
  _max: ZonesMaxAggregate
  _min: ZonesMinAggregate
  _sum: ZonesSumAggregate
}

type Agreements {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt!
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsAvgAggregate {
  id: Float
}

input AgreementsAvgOrderByAggregateInput {
  id: SortOrder
}

type AgreementsCountAggregate {
  _all: Int!
  content: Int!
  created: Int!
  excerpt: Int!
  id: Int!
  image: Int!
  mediamanager: Int!
  name: Int!
  reference_id: Int!
  shop_id: Int!
  type: Int!
  updated: Int!
  user_id: Int!
}

input AgreementsCountOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

input AgreementsCreateInput {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsCreateManyInput {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsGroupBy {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
  content: String
  created: DateTime
  excerpt: String
  id: BigInt!
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsMaxAggregate {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsMaxOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

type AgreementsMinAggregate {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsMinOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

enum AgreementsOrderByRelevanceFieldEnum {
  content
  excerpt
  image
  mediamanager
  name
  reference_id
  shop_id
  type
  user_id
}

input AgreementsOrderByRelevanceInput {
  fields: [AgreementsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AgreementsOrderByWithAggregationInput {
  _avg: AgreementsAvgOrderByAggregateInput
  _count: AgreementsCountOrderByAggregateInput
  _max: AgreementsMaxOrderByAggregateInput
  _min: AgreementsMinOrderByAggregateInput
  _sum: AgreementsSumOrderByAggregateInput
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

input AgreementsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AgreementsOrderByRelevanceInput
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

enum AgreementsScalarFieldEnum {
  content
  created
  excerpt
  id
  image
  mediamanager
  name
  reference_id
  shop_id
  type
  updated
  user_id
}

input AgreementsScalarWhereWithAggregatesInput {
  AND: [AgreementsScalarWhereWithAggregatesInput!]
  NOT: [AgreementsScalarWhereWithAggregatesInput!]
  OR: [AgreementsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  reference_id: StringNullableWithAggregatesFilter
  shop_id: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated: DateTimeNullableWithAggregatesFilter
  user_id: StringNullableWithAggregatesFilter
}

type AgreementsSumAggregate {
  id: BigInt
}

input AgreementsSumOrderByAggregateInput {
  id: SortOrder
}

input AgreementsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  reference_id: NullableStringFieldUpdateOperationsInput
  shop_id: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
  user_id: NullableStringFieldUpdateOperationsInput
}

input AgreementsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  reference_id: NullableStringFieldUpdateOperationsInput
  shop_id: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
  user_id: NullableStringFieldUpdateOperationsInput
}

input AgreementsWhereInput {
  AND: [AgreementsWhereInput!]
  NOT: [AgreementsWhereInput!]
  OR: [AgreementsWhereInput!]
  content: StringNullableFilter
  created: DateTimeNullableFilter
  excerpt: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  mediamanager: StringNullableFilter
  name: StringNullableFilter
  reference_id: StringNullableFilter
  shop_id: StringNullableFilter
  type: StringNullableFilter
  updated: DateTimeNullableFilter
  user_id: StringNullableFilter
}

input AgreementsWhereUniqueInput {
  id: BigInt
}

type Analytics {
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt!
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

type AnalyticsAvgAggregate {
  id: Float
}

input AnalyticsAvgOrderByAggregateInput {
  id: SortOrder
}

type AnalyticsCountAggregate {
  _all: Int!
  category: Int!
  client_id: Int!
  client_secret: Int!
  country: Int!
  created_at: Int!
  data_collection: Int!
  data_retention: Int!
  default_view: Int!
  id: Int!
  name: Int!
  property_hit: Int!
  property_name: Int!
  search_analytics: Int!
  share_data: Int!
  tracking_code: Int!
  tracking_id: Int!
  url: Int!
  website_name: Int!
}

input AnalyticsCountOrderByAggregateInput {
  category: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  data_collection: SortOrder
  data_retention: SortOrder
  default_view: SortOrder
  id: SortOrder
  name: SortOrder
  property_hit: SortOrder
  property_name: SortOrder
  search_analytics: SortOrder
  share_data: SortOrder
  tracking_code: SortOrder
  tracking_id: SortOrder
  url: SortOrder
  website_name: SortOrder
}

input AnalyticsCreateInput {
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

input AnalyticsCreateManyInput {
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

type AnalyticsGroupBy {
  _avg: AnalyticsAvgAggregate
  _count: AnalyticsCountAggregate
  _max: AnalyticsMaxAggregate
  _min: AnalyticsMinAggregate
  _sum: AnalyticsSumAggregate
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt!
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

type AnalyticsMaxAggregate {
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

input AnalyticsMaxOrderByAggregateInput {
  category: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  data_collection: SortOrder
  data_retention: SortOrder
  default_view: SortOrder
  id: SortOrder
  name: SortOrder
  property_hit: SortOrder
  property_name: SortOrder
  search_analytics: SortOrder
  share_data: SortOrder
  tracking_code: SortOrder
  tracking_id: SortOrder
  url: SortOrder
  website_name: SortOrder
}

type AnalyticsMinAggregate {
  category: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  data_collection: Boolean
  data_retention: Boolean
  default_view: String
  id: BigInt
  name: String
  property_hit: String
  property_name: String
  search_analytics: String
  share_data: String
  tracking_code: String
  tracking_id: String
  url: String
  website_name: String
}

input AnalyticsMinOrderByAggregateInput {
  category: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  data_collection: SortOrder
  data_retention: SortOrder
  default_view: SortOrder
  id: SortOrder
  name: SortOrder
  property_hit: SortOrder
  property_name: SortOrder
  search_analytics: SortOrder
  share_data: SortOrder
  tracking_code: SortOrder
  tracking_id: SortOrder
  url: SortOrder
  website_name: SortOrder
}

enum AnalyticsOrderByRelevanceFieldEnum {
  category
  client_id
  client_secret
  country
  default_view
  name
  property_hit
  property_name
  search_analytics
  share_data
  tracking_code
  tracking_id
  url
  website_name
}

input AnalyticsOrderByRelevanceInput {
  fields: [AnalyticsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AnalyticsOrderByWithAggregationInput {
  _avg: AnalyticsAvgOrderByAggregateInput
  _count: AnalyticsCountOrderByAggregateInput
  _max: AnalyticsMaxOrderByAggregateInput
  _min: AnalyticsMinOrderByAggregateInput
  _sum: AnalyticsSumOrderByAggregateInput
  category: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  data_collection: SortOrder
  data_retention: SortOrder
  default_view: SortOrder
  id: SortOrder
  name: SortOrder
  property_hit: SortOrder
  property_name: SortOrder
  search_analytics: SortOrder
  share_data: SortOrder
  tracking_code: SortOrder
  tracking_id: SortOrder
  url: SortOrder
  website_name: SortOrder
}

input AnalyticsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AnalyticsOrderByRelevanceInput
  category: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  data_collection: SortOrder
  data_retention: SortOrder
  default_view: SortOrder
  id: SortOrder
  name: SortOrder
  property_hit: SortOrder
  property_name: SortOrder
  search_analytics: SortOrder
  share_data: SortOrder
  tracking_code: SortOrder
  tracking_id: SortOrder
  url: SortOrder
  website_name: SortOrder
}

enum AnalyticsScalarFieldEnum {
  category
  client_id
  client_secret
  country
  created_at
  data_collection
  data_retention
  default_view
  id
  name
  property_hit
  property_name
  search_analytics
  share_data
  tracking_code
  tracking_id
  url
  website_name
}

input AnalyticsScalarWhereWithAggregatesInput {
  AND: [AnalyticsScalarWhereWithAggregatesInput!]
  NOT: [AnalyticsScalarWhereWithAggregatesInput!]
  OR: [AnalyticsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  data_collection: BoolNullableWithAggregatesFilter
  data_retention: BoolNullableWithAggregatesFilter
  default_view: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  property_hit: StringNullableWithAggregatesFilter
  property_name: StringNullableWithAggregatesFilter
  search_analytics: StringNullableWithAggregatesFilter
  share_data: StringNullableWithAggregatesFilter
  tracking_code: StringNullableWithAggregatesFilter
  tracking_id: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  website_name: StringNullableWithAggregatesFilter
}

type AnalyticsSumAggregate {
  id: BigInt
}

input AnalyticsSumOrderByAggregateInput {
  id: SortOrder
}

input AnalyticsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  data_collection: NullableBoolFieldUpdateOperationsInput
  data_retention: NullableBoolFieldUpdateOperationsInput
  default_view: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  property_hit: NullableStringFieldUpdateOperationsInput
  property_name: NullableStringFieldUpdateOperationsInput
  search_analytics: NullableStringFieldUpdateOperationsInput
  share_data: NullableStringFieldUpdateOperationsInput
  tracking_code: NullableStringFieldUpdateOperationsInput
  tracking_id: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  website_name: NullableStringFieldUpdateOperationsInput
}

input AnalyticsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  data_collection: NullableBoolFieldUpdateOperationsInput
  data_retention: NullableBoolFieldUpdateOperationsInput
  default_view: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  property_hit: NullableStringFieldUpdateOperationsInput
  property_name: NullableStringFieldUpdateOperationsInput
  search_analytics: NullableStringFieldUpdateOperationsInput
  share_data: NullableStringFieldUpdateOperationsInput
  tracking_code: NullableStringFieldUpdateOperationsInput
  tracking_id: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  website_name: NullableStringFieldUpdateOperationsInput
}

input AnalyticsWhereInput {
  AND: [AnalyticsWhereInput!]
  NOT: [AnalyticsWhereInput!]
  OR: [AnalyticsWhereInput!]
  category: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  data_collection: BoolNullableFilter
  data_retention: BoolNullableFilter
  default_view: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  property_hit: StringNullableFilter
  property_name: StringNullableFilter
  search_analytics: StringNullableFilter
  share_data: StringNullableFilter
  tracking_code: StringNullableFilter
  tracking_id: StringNullableFilter
  url: StringNullableFilter
  website_name: StringNullableFilter
}

input AnalyticsWhereUniqueInput {
  id: BigInt
}

type Apitoken {
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenAvgAggregate {
  id: Float
  token: Float
}

input ApitokenAvgOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

type ApitokenCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  id: Int!
  name: Int!
  token: Int!
  token_type: Int!
}

input ApitokenCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenCreateInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

input ApitokenCreateManyInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenGroupBy {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenMaxAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

type ApitokenMinAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenOrderByRelevanceFieldEnum {
  description
  name
  token_type
}

input ApitokenOrderByRelevanceInput {
  fields: [ApitokenOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ApitokenOrderByWithAggregationInput {
  _avg: ApitokenAvgOrderByAggregateInput
  _count: ApitokenCountOrderByAggregateInput
  _max: ApitokenMaxOrderByAggregateInput
  _min: ApitokenMinOrderByAggregateInput
  _sum: ApitokenSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ApitokenOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenScalarFieldEnum {
  created_at
  description
  id
  name
  token
  token_type
}

input ApitokenScalarWhereWithAggregatesInput {
  AND: [ApitokenScalarWhereWithAggregatesInput!]
  NOT: [ApitokenScalarWhereWithAggregatesInput!]
  OR: [ApitokenScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  token: BigIntWithAggregatesFilter
  token_type: StringNullableWithAggregatesFilter
}

type ApitokenSumAggregate {
  id: BigInt
  token: BigInt
}

input ApitokenSumOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

input ApitokenUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenWhereInput {
  AND: [ApitokenWhereInput!]
  NOT: [ApitokenWhereInput!]
  OR: [ApitokenWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  token: BigIntFilter
  token_type: StringNullableFilter
}

input ApitokenWhereUniqueInput {
  id: BigInt
  name: String
  token: BigInt
}

type Articles {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int!
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesAvgAggregate {
  id: Float
}

input ArticlesAvgOrderByAggregateInput {
  id: SortOrder
}

type ArticlesCountAggregate {
  _all: Int!
  categories: Int!
  content: Int!
  cust_id: Int!
  customers: Int!
  excerpt: Int!
  id: Int!
  image: Int!
  isPublic: Int!
  meta_description: Int!
  meta_name: Int!
  meta_url: Int!
  name: Int!
  published: Int!
  tags: Int!
  type: Int!
  users: Int!
}

input ArticlesCountOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

input ArticlesCreateInput {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesCreateManyInput {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesGroupBy {
  _avg: ArticlesAvgAggregate
  _count: ArticlesCountAggregate
  _max: ArticlesMaxAggregate
  _min: ArticlesMinAggregate
  _sum: ArticlesSumAggregate
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int!
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesMaxAggregate {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesMaxOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

type ArticlesMinAggregate {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesMinOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

enum ArticlesOrderByRelevanceFieldEnum {
  categories
  content
  cust_id
  customers
  excerpt
  image
  isPublic
  meta_description
  meta_name
  meta_url
  name
  published
  tags
  type
  users
}

input ArticlesOrderByRelevanceInput {
  fields: [ArticlesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ArticlesOrderByWithAggregationInput {
  _avg: ArticlesAvgOrderByAggregateInput
  _count: ArticlesCountOrderByAggregateInput
  _max: ArticlesMaxOrderByAggregateInput
  _min: ArticlesMinOrderByAggregateInput
  _sum: ArticlesSumOrderByAggregateInput
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

input ArticlesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ArticlesOrderByRelevanceInput
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

enum ArticlesScalarFieldEnum {
  categories
  content
  cust_id
  customers
  excerpt
  id
  image
  isPublic
  meta_description
  meta_name
  meta_url
  name
  published
  tags
  type
  users
}

input ArticlesScalarWhereWithAggregatesInput {
  AND: [ArticlesScalarWhereWithAggregatesInput!]
  NOT: [ArticlesScalarWhereWithAggregatesInput!]
  OR: [ArticlesScalarWhereWithAggregatesInput!]
  categories: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  cust_id: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_name: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type ArticlesSumAggregate {
  id: Int
}

input ArticlesSumOrderByAggregateInput {
  id: SortOrder
}

input ArticlesUpdateInput {
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  cust_id: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input ArticlesUpdateManyMutationInput {
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  cust_id: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input ArticlesWhereInput {
  AND: [ArticlesWhereInput!]
  NOT: [ArticlesWhereInput!]
  OR: [ArticlesWhereInput!]
  categories: StringNullableFilter
  content: StringNullableFilter
  cust_id: StringNullableFilter
  customers: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  isPublic: StringNullableFilter
  meta_description: StringNullableFilter
  meta_name: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringNullableFilter
  published: StringNullableFilter
  tags: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
}

input ArticlesWhereUniqueInput {
  id: Int
}

type Attributes {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int!
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesAvgAggregate {
  id: Float
  prod_id: Float
}

input AttributesAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type AttributesCountAggregate {
  _all: Int!
  allow_html_tags_storefront: Int!
  attribute_class: Int!
  attribute_code: Int!
  attribute_value: Int!
  column_options: Int!
  default_label: Int!
  faceted_navigation: Int!
  filter_options: Int!
  id: Int!
  isPublic: Int!
  layered_navigation: Int!
  meta_description: Int!
  meta_name: Int!
  meta_url: Int!
  position: Int!
  prod_id: Int!
  product_attribute_set: Int!
  products: Int!
  promo_rule_conditions: Int!
  search_results_layered_navigation: Int!
  use_search: Int!
  used_product_listing: Int!
  used_sorting_product_listing: Int!
  visible_catalog_pages_storefront: Int!
}

input AttributesCountOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

input AttributesCreateInput {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesCreateManyInput {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesGroupBy {
  _avg: AttributesAvgAggregate
  _count: AttributesCountAggregate
  _max: AttributesMaxAggregate
  _min: AttributesMinAggregate
  _sum: AttributesSumAggregate
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int!
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesMaxAggregate {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesMaxOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

type AttributesMinAggregate {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesMinOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

enum AttributesOrderByRelevanceFieldEnum {
  attribute_class
  attribute_code
  attribute_value
  column_options
  default_label
  filter_options
  isPublic
  meta_description
  meta_url
  position
  product_attribute_set
  products
  use_search
}

input AttributesOrderByRelevanceInput {
  fields: [AttributesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AttributesOrderByWithAggregationInput {
  _avg: AttributesAvgOrderByAggregateInput
  _count: AttributesCountOrderByAggregateInput
  _max: AttributesMaxOrderByAggregateInput
  _min: AttributesMinOrderByAggregateInput
  _sum: AttributesSumOrderByAggregateInput
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

input AttributesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AttributesOrderByRelevanceInput
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

enum AttributesScalarFieldEnum {
  allow_html_tags_storefront
  attribute_class
  attribute_code
  attribute_value
  column_options
  default_label
  faceted_navigation
  filter_options
  id
  isPublic
  layered_navigation
  meta_description
  meta_name
  meta_url
  position
  prod_id
  product_attribute_set
  products
  promo_rule_conditions
  search_results_layered_navigation
  use_search
  used_product_listing
  used_sorting_product_listing
  visible_catalog_pages_storefront
}

input AttributesScalarWhereWithAggregatesInput {
  AND: [AttributesScalarWhereWithAggregatesInput!]
  NOT: [AttributesScalarWhereWithAggregatesInput!]
  OR: [AttributesScalarWhereWithAggregatesInput!]
  allow_html_tags_storefront: BoolNullableWithAggregatesFilter
  attribute_class: StringNullableWithAggregatesFilter
  attribute_code: StringNullableWithAggregatesFilter
  attribute_value: StringNullableWithAggregatesFilter
  column_options: StringNullableWithAggregatesFilter
  default_label: StringNullableWithAggregatesFilter
  faceted_navigation: BoolNullableWithAggregatesFilter
  filter_options: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  layered_navigation: BoolNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_name: BoolNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  position: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  product_attribute_set: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  promo_rule_conditions: BoolNullableWithAggregatesFilter
  search_results_layered_navigation: BoolNullableWithAggregatesFilter
  use_search: StringNullableWithAggregatesFilter
  used_product_listing: BoolNullableWithAggregatesFilter
  used_sorting_product_listing: BoolNullableWithAggregatesFilter
  visible_catalog_pages_storefront: BoolNullableWithAggregatesFilter
}

type AttributesSumAggregate {
  id: Int
  prod_id: BigInt
}

input AttributesSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input AttributesUpdateInput {
  allow_html_tags_storefront: NullableBoolFieldUpdateOperationsInput
  attribute_class: NullableStringFieldUpdateOperationsInput
  attribute_code: NullableStringFieldUpdateOperationsInput
  attribute_value: NullableStringFieldUpdateOperationsInput
  column_options: NullableStringFieldUpdateOperationsInput
  default_label: NullableStringFieldUpdateOperationsInput
  faceted_navigation: NullableBoolFieldUpdateOperationsInput
  filter_options: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  layered_navigation: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableBoolFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_attribute_set: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  promo_rule_conditions: NullableBoolFieldUpdateOperationsInput
  search_results_layered_navigation: NullableBoolFieldUpdateOperationsInput
  use_search: NullableStringFieldUpdateOperationsInput
  used_product_listing: NullableBoolFieldUpdateOperationsInput
  used_sorting_product_listing: NullableBoolFieldUpdateOperationsInput
  visible_catalog_pages_storefront: NullableBoolFieldUpdateOperationsInput
}

input AttributesUpdateManyMutationInput {
  allow_html_tags_storefront: NullableBoolFieldUpdateOperationsInput
  attribute_class: NullableStringFieldUpdateOperationsInput
  attribute_code: NullableStringFieldUpdateOperationsInput
  attribute_value: NullableStringFieldUpdateOperationsInput
  column_options: NullableStringFieldUpdateOperationsInput
  default_label: NullableStringFieldUpdateOperationsInput
  faceted_navigation: NullableBoolFieldUpdateOperationsInput
  filter_options: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  layered_navigation: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableBoolFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_attribute_set: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  promo_rule_conditions: NullableBoolFieldUpdateOperationsInput
  search_results_layered_navigation: NullableBoolFieldUpdateOperationsInput
  use_search: NullableStringFieldUpdateOperationsInput
  used_product_listing: NullableBoolFieldUpdateOperationsInput
  used_sorting_product_listing: NullableBoolFieldUpdateOperationsInput
  visible_catalog_pages_storefront: NullableBoolFieldUpdateOperationsInput
}

input AttributesWhereInput {
  AND: [AttributesWhereInput!]
  NOT: [AttributesWhereInput!]
  OR: [AttributesWhereInput!]
  allow_html_tags_storefront: BoolNullableFilter
  attribute_class: StringNullableFilter
  attribute_code: StringNullableFilter
  attribute_value: StringNullableFilter
  column_options: StringNullableFilter
  default_label: StringNullableFilter
  faceted_navigation: BoolNullableFilter
  filter_options: StringNullableFilter
  id: IntFilter
  isPublic: StringNullableFilter
  layered_navigation: BoolNullableFilter
  meta_description: StringNullableFilter
  meta_name: BoolNullableFilter
  meta_url: StringNullableFilter
  position: StringNullableFilter
  prod_id: BigIntFilter
  product_attribute_set: StringNullableFilter
  products: StringNullableFilter
  promo_rule_conditions: BoolNullableFilter
  search_results_layered_navigation: BoolNullableFilter
  use_search: StringNullableFilter
  used_product_listing: BoolNullableFilter
  used_sorting_product_listing: BoolNullableFilter
  visible_catalog_pages_storefront: BoolNullableFilter
}

input AttributesWhereUniqueInput {
  id: Int
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input BigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input BigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input BigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input BigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input BigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

type Brands {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsAvgAggregate {
  id: Float
  product: Float
}

input BrandsAvgOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

type BrandsCountAggregate {
  _all: Int!
  city: Int!
  code: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  mediamanager: Int!
  name: Int!
  product: Int!
  products: Int!
  state: Int!
  workspaces: Int!
}

input BrandsCountOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

input BrandsCreateInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsCreateManyInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsGroupBy {
  _avg: BrandsAvgAggregate
  _count: BrandsCountAggregate
  _max: BrandsMaxAggregate
  _min: BrandsMinAggregate
  _sum: BrandsSumAggregate
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsMaxAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsMaxOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

type BrandsMinAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsMinOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

enum BrandsOrderByRelevanceFieldEnum {
  city
  code
  country
  description
  isPublic
  media
  mediamanager
  name
  products
  state
  workspaces
}

input BrandsOrderByRelevanceInput {
  fields: [BrandsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input BrandsOrderByWithAggregationInput {
  _avg: BrandsAvgOrderByAggregateInput
  _count: BrandsCountOrderByAggregateInput
  _max: BrandsMaxOrderByAggregateInput
  _min: BrandsMinOrderByAggregateInput
  _sum: BrandsSumOrderByAggregateInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

input BrandsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: BrandsOrderByRelevanceInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

enum BrandsScalarFieldEnum {
  city
  code
  country
  created_at
  description
  id
  isPublic
  media
  mediamanager
  name
  product
  products
  state
  workspaces
}

input BrandsScalarWhereWithAggregatesInput {
  AND: [BrandsScalarWhereWithAggregatesInput!]
  NOT: [BrandsScalarWhereWithAggregatesInput!]
  OR: [BrandsScalarWhereWithAggregatesInput!]
  city: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: BigIntNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type BrandsSumAggregate {
  id: BigInt
  product: BigInt
}

input BrandsSumOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

input BrandsUpdateInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input BrandsUpdateManyMutationInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input BrandsWhereInput {
  AND: [BrandsWhereInput!]
  NOT: [BrandsWhereInput!]
  OR: [BrandsWhereInput!]
  city: StringNullableFilter
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  media: StringNullableFilter
  mediamanager: StringNullableFilter
  name: StringNullableFilter
  product: BigIntNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
  workspaces: StringNullableFilter
}

input BrandsWhereUniqueInput {
  id: BigInt
}

type Cart_price_rules {
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  id: Int!
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

type Cart_price_rulesAvgAggregate {
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  id: Float
}

input Cart_price_rulesAvgOrderByAggregateInput {
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  id: SortOrder
}

type Cart_price_rulesCountAggregate {
  _all: Int!
  actions_apply: Int!
  actions_apply_shipping_amount: Int!
  actions_discard_subsequent_rules: Int!
  actions_discount_amount: Int!
  actions_discount_qty_step: Int!
  actions_max_qty_discount_is_applied_to: Int!
  active: Int!
  coupon: Int!
  description: Int!
  end_date: Int!
  id: Int!
  priority: Int!
  rule: Int!
  start_date: Int!
  status: Int!
  uses_per_customer: Int!
  website: Int!
}

input Cart_price_rulesCountOrderByAggregateInput {
  actions_apply: SortOrder
  actions_apply_shipping_amount: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  active: SortOrder
  coupon: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  uses_per_customer: SortOrder
  website: SortOrder
}

input Cart_price_rulesCreateInput {
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

input Cart_price_rulesCreateManyInput {
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

type Cart_price_rulesGroupBy {
  _avg: Cart_price_rulesAvgAggregate
  _count: Cart_price_rulesCountAggregate
  _max: Cart_price_rulesMaxAggregate
  _min: Cart_price_rulesMinAggregate
  _sum: Cart_price_rulesSumAggregate
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  id: Int!
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

type Cart_price_rulesMaxAggregate {
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

input Cart_price_rulesMaxOrderByAggregateInput {
  actions_apply: SortOrder
  actions_apply_shipping_amount: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  active: SortOrder
  coupon: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  uses_per_customer: SortOrder
  website: SortOrder
}

type Cart_price_rulesMinAggregate {
  actions_apply: String
  actions_apply_shipping_amount: Boolean
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  active: Boolean
  coupon: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  uses_per_customer: String
  website: String
}

input Cart_price_rulesMinOrderByAggregateInput {
  actions_apply: SortOrder
  actions_apply_shipping_amount: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  active: SortOrder
  coupon: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  uses_per_customer: SortOrder
  website: SortOrder
}

enum Cart_price_rulesOrderByRelevanceFieldEnum {
  actions_apply
  coupon
  description
  priority
  rule
  status
  uses_per_customer
  website
}

input Cart_price_rulesOrderByRelevanceInput {
  fields: [Cart_price_rulesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Cart_price_rulesOrderByWithAggregationInput {
  _avg: Cart_price_rulesAvgOrderByAggregateInput
  _count: Cart_price_rulesCountOrderByAggregateInput
  _max: Cart_price_rulesMaxOrderByAggregateInput
  _min: Cart_price_rulesMinOrderByAggregateInput
  _sum: Cart_price_rulesSumOrderByAggregateInput
  actions_apply: SortOrder
  actions_apply_shipping_amount: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  active: SortOrder
  coupon: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  uses_per_customer: SortOrder
  website: SortOrder
}

input Cart_price_rulesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Cart_price_rulesOrderByRelevanceInput
  actions_apply: SortOrder
  actions_apply_shipping_amount: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  active: SortOrder
  coupon: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  uses_per_customer: SortOrder
  website: SortOrder
}

enum Cart_price_rulesScalarFieldEnum {
  actions_apply
  actions_apply_shipping_amount
  actions_discard_subsequent_rules
  actions_discount_amount
  actions_discount_qty_step
  actions_max_qty_discount_is_applied_to
  active
  coupon
  description
  end_date
  id
  priority
  rule
  start_date
  status
  uses_per_customer
  website
}

input Cart_price_rulesScalarWhereWithAggregatesInput {
  AND: [Cart_price_rulesScalarWhereWithAggregatesInput!]
  NOT: [Cart_price_rulesScalarWhereWithAggregatesInput!]
  OR: [Cart_price_rulesScalarWhereWithAggregatesInput!]
  actions_apply: StringNullableWithAggregatesFilter
  actions_apply_shipping_amount: BoolNullableWithAggregatesFilter
  actions_discard_subsequent_rules: BoolNullableWithAggregatesFilter
  actions_discount_amount: DecimalNullableWithAggregatesFilter
  actions_discount_qty_step: DecimalNullableWithAggregatesFilter
  actions_max_qty_discount_is_applied_to: DecimalNullableWithAggregatesFilter
  active: BoolNullableWithAggregatesFilter
  coupon: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  end_date: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  rule: StringNullableWithAggregatesFilter
  start_date: DateTimeNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  uses_per_customer: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type Cart_price_rulesSumAggregate {
  actions_discount_amount: Decimal
  actions_discount_qty_step: Decimal
  actions_max_qty_discount_is_applied_to: Decimal
  id: Int
}

input Cart_price_rulesSumOrderByAggregateInput {
  actions_discount_amount: SortOrder
  actions_discount_qty_step: SortOrder
  actions_max_qty_discount_is_applied_to: SortOrder
  id: SortOrder
}

input Cart_price_rulesUpdateInput {
  actions_apply: NullableStringFieldUpdateOperationsInput
  actions_apply_shipping_amount: NullableBoolFieldUpdateOperationsInput
  actions_discard_subsequent_rules: NullableBoolFieldUpdateOperationsInput
  actions_discount_amount: NullableDecimalFieldUpdateOperationsInput
  actions_discount_qty_step: NullableDecimalFieldUpdateOperationsInput
  actions_max_qty_discount_is_applied_to: NullableDecimalFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  coupon: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  rule: NullableStringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  uses_per_customer: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input Cart_price_rulesUpdateManyMutationInput {
  actions_apply: NullableStringFieldUpdateOperationsInput
  actions_apply_shipping_amount: NullableBoolFieldUpdateOperationsInput
  actions_discard_subsequent_rules: NullableBoolFieldUpdateOperationsInput
  actions_discount_amount: NullableDecimalFieldUpdateOperationsInput
  actions_discount_qty_step: NullableDecimalFieldUpdateOperationsInput
  actions_max_qty_discount_is_applied_to: NullableDecimalFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  coupon: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  rule: NullableStringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  uses_per_customer: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input Cart_price_rulesWhereInput {
  AND: [Cart_price_rulesWhereInput!]
  NOT: [Cart_price_rulesWhereInput!]
  OR: [Cart_price_rulesWhereInput!]
  actions_apply: StringNullableFilter
  actions_apply_shipping_amount: BoolNullableFilter
  actions_discard_subsequent_rules: BoolNullableFilter
  actions_discount_amount: DecimalNullableFilter
  actions_discount_qty_step: DecimalNullableFilter
  actions_max_qty_discount_is_applied_to: DecimalNullableFilter
  active: BoolNullableFilter
  coupon: StringNullableFilter
  description: StringNullableFilter
  end_date: DateTimeNullableFilter
  id: IntFilter
  priority: StringNullableFilter
  rule: StringNullableFilter
  start_date: DateTimeNullableFilter
  status: StringNullableFilter
  uses_per_customer: StringNullableFilter
  website: StringNullableFilter
}

input Cart_price_rulesWhereUniqueInput {
  id: Int
}

type Cases {
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt!
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

type CasesAvgAggregate {
  case_number: Float
  id: Float
}

input CasesAvgOrderByAggregateInput {
  case_number: SortOrder
  id: SortOrder
}

type CasesCountAggregate {
  _all: Int!
  account_name: Int!
  assigned_to: Int!
  case_number: Int!
  created_at: Int!
  date_modified: Int!
  description: Int!
  id: Int!
  priority: Int!
  resolution: Int!
  state: Int!
  status: Int!
  subject: Int!
  type: Int!
}

input CasesCountOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  case_number: SortOrder
  created_at: SortOrder
  date_modified: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  resolution: SortOrder
  state: SortOrder
  status: SortOrder
  subject: SortOrder
  type: SortOrder
}

input CasesCreateInput {
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

input CasesCreateManyInput {
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

type CasesGroupBy {
  _avg: CasesAvgAggregate
  _count: CasesCountAggregate
  _max: CasesMaxAggregate
  _min: CasesMinAggregate
  _sum: CasesSumAggregate
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt!
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

type CasesMaxAggregate {
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

input CasesMaxOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  case_number: SortOrder
  created_at: SortOrder
  date_modified: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  resolution: SortOrder
  state: SortOrder
  status: SortOrder
  subject: SortOrder
  type: SortOrder
}

type CasesMinAggregate {
  account_name: String
  assigned_to: String
  case_number: Int
  created_at: DateTime
  date_modified: DateTime
  description: String
  id: BigInt
  priority: String
  resolution: String
  state: String
  status: String
  subject: String
  type: String
}

input CasesMinOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  case_number: SortOrder
  created_at: SortOrder
  date_modified: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  resolution: SortOrder
  state: SortOrder
  status: SortOrder
  subject: SortOrder
  type: SortOrder
}

enum CasesOrderByRelevanceFieldEnum {
  account_name
  assigned_to
  description
  priority
  resolution
  state
  status
  subject
  type
}

input CasesOrderByRelevanceInput {
  fields: [CasesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CasesOrderByWithAggregationInput {
  _avg: CasesAvgOrderByAggregateInput
  _count: CasesCountOrderByAggregateInput
  _max: CasesMaxOrderByAggregateInput
  _min: CasesMinOrderByAggregateInput
  _sum: CasesSumOrderByAggregateInput
  account_name: SortOrder
  assigned_to: SortOrder
  case_number: SortOrder
  created_at: SortOrder
  date_modified: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  resolution: SortOrder
  state: SortOrder
  status: SortOrder
  subject: SortOrder
  type: SortOrder
}

input CasesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CasesOrderByRelevanceInput
  account_name: SortOrder
  assigned_to: SortOrder
  case_number: SortOrder
  created_at: SortOrder
  date_modified: SortOrder
  description: SortOrder
  id: SortOrder
  priority: SortOrder
  resolution: SortOrder
  state: SortOrder
  status: SortOrder
  subject: SortOrder
  type: SortOrder
}

enum CasesScalarFieldEnum {
  account_name
  assigned_to
  case_number
  created_at
  date_modified
  description
  id
  priority
  resolution
  state
  status
  subject
  type
}

input CasesScalarWhereWithAggregatesInput {
  AND: [CasesScalarWhereWithAggregatesInput!]
  NOT: [CasesScalarWhereWithAggregatesInput!]
  OR: [CasesScalarWhereWithAggregatesInput!]
  account_name: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  case_number: IntNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  date_modified: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  resolution: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  subject: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
}

type CasesSumAggregate {
  case_number: Int
  id: BigInt
}

input CasesSumOrderByAggregateInput {
  case_number: SortOrder
  id: SortOrder
}

input CasesUpdateInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  case_number: NullableIntFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input CasesUpdateManyMutationInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  case_number: NullableIntFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input CasesWhereInput {
  AND: [CasesWhereInput!]
  NOT: [CasesWhereInput!]
  OR: [CasesWhereInput!]
  account_name: StringNullableFilter
  assigned_to: StringNullableFilter
  case_number: IntNullableFilter
  created_at: DateTimeNullableFilter
  date_modified: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  priority: StringNullableFilter
  resolution: StringNullableFilter
  state: StringNullableFilter
  status: StringNullableFilter
  subject: StringNullableFilter
  type: StringNullableFilter
}

input CasesWhereUniqueInput {
  id: BigInt
}

type Catalog_price_rule {
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  id: Int!
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

type Catalog_price_ruleAvgAggregate {
  actions_discount_amount: Decimal
  id: Float
}

input Catalog_price_ruleAvgOrderByAggregateInput {
  actions_discount_amount: SortOrder
  id: SortOrder
}

type Catalog_price_ruleCountAggregate {
  _all: Int!
  actions_apply: Int!
  actions_discard_subsequent_rules: Int!
  actions_discount_amount: Int!
  active: Int!
  customer_groups: Int!
  description: Int!
  end_date: Int!
  id: Int!
  priority: Int!
  rule: Int!
  start_date: Int!
  status: Int!
  website: Int!
}

input Catalog_price_ruleCountOrderByAggregateInput {
  actions_apply: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  active: SortOrder
  customer_groups: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  website: SortOrder
}

input Catalog_price_ruleCreateInput {
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

input Catalog_price_ruleCreateManyInput {
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

type Catalog_price_ruleGroupBy {
  _avg: Catalog_price_ruleAvgAggregate
  _count: Catalog_price_ruleCountAggregate
  _max: Catalog_price_ruleMaxAggregate
  _min: Catalog_price_ruleMinAggregate
  _sum: Catalog_price_ruleSumAggregate
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  id: Int!
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

type Catalog_price_ruleMaxAggregate {
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

input Catalog_price_ruleMaxOrderByAggregateInput {
  actions_apply: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  active: SortOrder
  customer_groups: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  website: SortOrder
}

type Catalog_price_ruleMinAggregate {
  actions_apply: String
  actions_discard_subsequent_rules: Boolean
  actions_discount_amount: Decimal
  active: Boolean
  customer_groups: String
  description: String
  end_date: DateTime
  id: Int
  priority: String
  rule: String
  start_date: DateTime
  status: String
  website: String
}

input Catalog_price_ruleMinOrderByAggregateInput {
  actions_apply: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  active: SortOrder
  customer_groups: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  website: SortOrder
}

enum Catalog_price_ruleOrderByRelevanceFieldEnum {
  actions_apply
  customer_groups
  description
  priority
  rule
  status
  website
}

input Catalog_price_ruleOrderByRelevanceInput {
  fields: [Catalog_price_ruleOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Catalog_price_ruleOrderByWithAggregationInput {
  _avg: Catalog_price_ruleAvgOrderByAggregateInput
  _count: Catalog_price_ruleCountOrderByAggregateInput
  _max: Catalog_price_ruleMaxOrderByAggregateInput
  _min: Catalog_price_ruleMinOrderByAggregateInput
  _sum: Catalog_price_ruleSumOrderByAggregateInput
  actions_apply: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  active: SortOrder
  customer_groups: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  website: SortOrder
}

input Catalog_price_ruleOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Catalog_price_ruleOrderByRelevanceInput
  actions_apply: SortOrder
  actions_discard_subsequent_rules: SortOrder
  actions_discount_amount: SortOrder
  active: SortOrder
  customer_groups: SortOrder
  description: SortOrder
  end_date: SortOrder
  id: SortOrder
  priority: SortOrder
  rule: SortOrder
  start_date: SortOrder
  status: SortOrder
  website: SortOrder
}

enum Catalog_price_ruleScalarFieldEnum {
  actions_apply
  actions_discard_subsequent_rules
  actions_discount_amount
  active
  customer_groups
  description
  end_date
  id
  priority
  rule
  start_date
  status
  website
}

input Catalog_price_ruleScalarWhereWithAggregatesInput {
  AND: [Catalog_price_ruleScalarWhereWithAggregatesInput!]
  NOT: [Catalog_price_ruleScalarWhereWithAggregatesInput!]
  OR: [Catalog_price_ruleScalarWhereWithAggregatesInput!]
  actions_apply: StringNullableWithAggregatesFilter
  actions_discard_subsequent_rules: BoolNullableWithAggregatesFilter
  actions_discount_amount: DecimalNullableWithAggregatesFilter
  active: BoolNullableWithAggregatesFilter
  customer_groups: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  end_date: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  rule: StringNullableWithAggregatesFilter
  start_date: DateTimeNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type Catalog_price_ruleSumAggregate {
  actions_discount_amount: Decimal
  id: Int
}

input Catalog_price_ruleSumOrderByAggregateInput {
  actions_discount_amount: SortOrder
  id: SortOrder
}

input Catalog_price_ruleUpdateInput {
  actions_apply: NullableStringFieldUpdateOperationsInput
  actions_discard_subsequent_rules: NullableBoolFieldUpdateOperationsInput
  actions_discount_amount: NullableDecimalFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  customer_groups: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  rule: NullableStringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input Catalog_price_ruleUpdateManyMutationInput {
  actions_apply: NullableStringFieldUpdateOperationsInput
  actions_discard_subsequent_rules: NullableBoolFieldUpdateOperationsInput
  actions_discount_amount: NullableDecimalFieldUpdateOperationsInput
  active: NullableBoolFieldUpdateOperationsInput
  customer_groups: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  end_date: NullableDateTimeFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  rule: NullableStringFieldUpdateOperationsInput
  start_date: NullableDateTimeFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input Catalog_price_ruleWhereInput {
  AND: [Catalog_price_ruleWhereInput!]
  NOT: [Catalog_price_ruleWhereInput!]
  OR: [Catalog_price_ruleWhereInput!]
  actions_apply: StringNullableFilter
  actions_discard_subsequent_rules: BoolNullableFilter
  actions_discount_amount: DecimalNullableFilter
  active: BoolNullableFilter
  customer_groups: StringNullableFilter
  description: StringNullableFilter
  end_date: DateTimeNullableFilter
  id: IntFilter
  priority: StringNullableFilter
  rule: StringNullableFilter
  start_date: DateTimeNullableFilter
  status: StringNullableFilter
  website: StringNullableFilter
}

input Catalog_price_ruleWhereUniqueInput {
  id: Int
}

type Categories {
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesAvgAggregate {
  id: Float
}

input CategoriesAvgOrderByAggregateInput {
  id: SortOrder
}

type CategoriesCountAggregate {
  _all: Int!
  content: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  meta_url: Int!
  name: Int!
  product: Int!
  status: Int!
  thumbnail: Int!
  visibility: Int!
  websites: Int!
  workspaces: Int!
}

input CategoriesCountOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesCreateInput {
  content: String
  country: String
  description: String
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesCreateManyInput {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesGroupBy {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesMaxAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMaxOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

type CategoriesMinAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMinOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesOrderByRelevanceFieldEnum {
  content
  country
  description
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesOrderByRelevanceInput {
  fields: [CategoriesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CategoriesOrderByWithAggregationInput {
  _avg: CategoriesAvgOrderByAggregateInput
  _count: CategoriesCountOrderByAggregateInput
  _max: CategoriesMaxOrderByAggregateInput
  _min: CategoriesMinOrderByAggregateInput
  _sum: CategoriesSumOrderByAggregateInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CategoriesOrderByRelevanceInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesScalarFieldEnum {
  content
  country
  description
  id
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  status
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesScalarWhereWithAggregatesInput {
  AND: [CategoriesScalarWhereWithAggregatesInput!]
  NOT: [CategoriesScalarWhereWithAggregatesInput!]
  OR: [CategoriesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type CategoriesSumAggregate {
  id: Int
}

input CategoriesSumOrderByAggregateInput {
  id: SortOrder
}

input CategoriesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesWhereInput {
  AND: [CategoriesWhereInput!]
  NOT: [CategoriesWhereInput!]
  OR: [CategoriesWhereInput!]
  content: StringNullableFilter
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringFilter
  product: StringNullableFilter
  status: BoolNullableFilter
  thumbnail: StringNullableFilter
  visibility: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
}

input CategoriesWhereUniqueInput {
  id: Int
}

type Channels {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt!
  include_tax: String
  name: String
}

type ChannelsAvgAggregate {
  id: Float
}

input ChannelsAvgOrderByAggregateInput {
  id: SortOrder
}

type ChannelsCountAggregate {
  _all: Int!
  client_id: Int!
  client_secret: Int!
  code: Int!
  created_at: Int!
  currency: Int!
  default_lang: Int!
  default_shipping: Int!
  default_zone: Int!
  id: Int!
  include_tax: Int!
  name: Int!
}

input ChannelsCountOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

input ChannelsCreateInput {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsCreateManyInput {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

type ChannelsGroupBy {
  _avg: ChannelsAvgAggregate
  _count: ChannelsCountAggregate
  _max: ChannelsMaxAggregate
  _min: ChannelsMinAggregate
  _sum: ChannelsSumAggregate
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt!
  include_tax: String
  name: String
}

type ChannelsMaxAggregate {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsMaxOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

type ChannelsMinAggregate {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsMinOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

enum ChannelsOrderByRelevanceFieldEnum {
  client_id
  client_secret
  code
  currency
  default_lang
  default_shipping
  default_zone
  include_tax
  name
}

input ChannelsOrderByRelevanceInput {
  fields: [ChannelsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ChannelsOrderByWithAggregationInput {
  _avg: ChannelsAvgOrderByAggregateInput
  _count: ChannelsCountOrderByAggregateInput
  _max: ChannelsMaxOrderByAggregateInput
  _min: ChannelsMinOrderByAggregateInput
  _sum: ChannelsSumOrderByAggregateInput
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

input ChannelsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ChannelsOrderByRelevanceInput
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

enum ChannelsScalarFieldEnum {
  client_id
  client_secret
  code
  created_at
  currency
  default_lang
  default_shipping
  default_zone
  id
  include_tax
  name
}

input ChannelsScalarWhereWithAggregatesInput {
  AND: [ChannelsScalarWhereWithAggregatesInput!]
  NOT: [ChannelsScalarWhereWithAggregatesInput!]
  OR: [ChannelsScalarWhereWithAggregatesInput!]
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  default_lang: StringNullableWithAggregatesFilter
  default_shipping: StringNullableWithAggregatesFilter
  default_zone: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  include_tax: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type ChannelsSumAggregate {
  id: BigInt
}

input ChannelsSumOrderByAggregateInput {
  id: SortOrder
}

input ChannelsUpdateInput {
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  default_lang: NullableStringFieldUpdateOperationsInput
  default_shipping: NullableStringFieldUpdateOperationsInput
  default_zone: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  include_tax: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ChannelsUpdateManyMutationInput {
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  default_lang: NullableStringFieldUpdateOperationsInput
  default_shipping: NullableStringFieldUpdateOperationsInput
  default_zone: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  include_tax: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ChannelsWhereInput {
  AND: [ChannelsWhereInput!]
  NOT: [ChannelsWhereInput!]
  OR: [ChannelsWhereInput!]
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  default_lang: StringNullableFilter
  default_shipping: StringNullableFilter
  default_zone: StringNullableFilter
  id: BigIntFilter
  include_tax: StringNullableFilter
  name: StringNullableFilter
}

input ChannelsWhereUniqueInput {
  id: BigInt
}

type Checklist {
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistAvgAggregate {
  id: Float
}

input ChecklistAvgOrderByAggregateInput {
  id: SortOrder
}

type ChecklistCountAggregate {
  _all: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  location: Int!
  manager: Int!
  media: Int!
  prod_id: Int!
  project: Int!
  region: Int!
  regional_manager: Int!
  task: Int!
  ticket: Int!
  trainings: Int!
  type: Int!
  username: Int!
}

input ChecklistCountOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

input ChecklistCreateInput {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistCreateManyInput {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistGroupBy {
  _avg: ChecklistAvgAggregate
  _count: ChecklistCountAggregate
  _max: ChecklistMaxAggregate
  _min: ChecklistMinAggregate
  _sum: ChecklistSumAggregate
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistMaxAggregate {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistMaxOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

type ChecklistMinAggregate {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistMinOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

enum ChecklistOrderByRelevanceFieldEnum {
  country
  description
  location
  manager
  media
  prod_id
  project
  region
  regional_manager
  task
  ticket
  trainings
  type
  username
}

input ChecklistOrderByRelevanceInput {
  fields: [ChecklistOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ChecklistOrderByWithAggregationInput {
  _avg: ChecklistAvgOrderByAggregateInput
  _count: ChecklistCountOrderByAggregateInput
  _max: ChecklistMaxOrderByAggregateInput
  _min: ChecklistMinOrderByAggregateInput
  _sum: ChecklistSumOrderByAggregateInput
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

input ChecklistOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ChecklistOrderByRelevanceInput
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

enum ChecklistScalarFieldEnum {
  country
  created_at
  description
  id
  location
  manager
  media
  prod_id
  project
  region
  regional_manager
  task
  ticket
  trainings
  type
  username
}

input ChecklistScalarWhereWithAggregatesInput {
  AND: [ChecklistScalarWhereWithAggregatesInput!]
  NOT: [ChecklistScalarWhereWithAggregatesInput!]
  OR: [ChecklistScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  manager: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  prod_id: StringNullableWithAggregatesFilter
  project: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  regional_manager: StringNullableWithAggregatesFilter
  task: StringNullableWithAggregatesFilter
  ticket: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
}

type ChecklistSumAggregate {
  id: BigInt
}

input ChecklistSumOrderByAggregateInput {
  id: SortOrder
}

input ChecklistUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  manager: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  prod_id: NullableStringFieldUpdateOperationsInput
  project: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  regional_manager: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  ticket: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input ChecklistUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  manager: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  prod_id: NullableStringFieldUpdateOperationsInput
  project: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  regional_manager: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  ticket: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input ChecklistWhereInput {
  AND: [ChecklistWhereInput!]
  NOT: [ChecklistWhereInput!]
  OR: [ChecklistWhereInput!]
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  manager: StringNullableFilter
  media: StringNullableFilter
  prod_id: StringNullableFilter
  project: StringNullableFilter
  region: StringNullableFilter
  regional_manager: StringNullableFilter
  task: StringNullableFilter
  ticket: StringNullableFilter
  trainings: StringNullableFilter
  type: StringNullableFilter
  username: StringNullableFilter
}

input ChecklistWhereUniqueInput {
  id: BigInt
}

type Cities {
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesAvgAggregate {
  id: Float
}

input CitiesAvgOrderByAggregateInput {
  id: SortOrder
}

type CitiesCountAggregate {
  _all: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  postalCode: Int!
  state: Int!
}

input CitiesCountOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

input CitiesCreateInput {
  country: String
  description: String
  image: String
  name: String!
  postalCode: String
  state: String
}

input CitiesCreateManyInput {
  country: String
  description: String
  id: Int
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesGroupBy {
  _avg: CitiesAvgAggregate
  _count: CitiesCountAggregate
  _max: CitiesMaxAggregate
  _min: CitiesMinAggregate
  _sum: CitiesSumAggregate
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesMaxAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  postalCode: String
  state: String
}

input CitiesMaxOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

type CitiesMinAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  postalCode: String
  state: String
}

input CitiesMinOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

enum CitiesOrderByRelevanceFieldEnum {
  country
  description
  image
  name
  postalCode
  state
}

input CitiesOrderByRelevanceInput {
  fields: [CitiesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CitiesOrderByWithAggregationInput {
  _avg: CitiesAvgOrderByAggregateInput
  _count: CitiesCountOrderByAggregateInput
  _max: CitiesMaxOrderByAggregateInput
  _min: CitiesMinOrderByAggregateInput
  _sum: CitiesSumOrderByAggregateInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

input CitiesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CitiesOrderByRelevanceInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

enum CitiesScalarFieldEnum {
  country
  description
  id
  image
  name
  postalCode
  state
}

input CitiesScalarWhereWithAggregatesInput {
  AND: [CitiesScalarWhereWithAggregatesInput!]
  NOT: [CitiesScalarWhereWithAggregatesInput!]
  OR: [CitiesScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  postalCode: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type CitiesSumAggregate {
  id: Int
}

input CitiesSumOrderByAggregateInput {
  id: SortOrder
}

input CitiesUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input CitiesUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input CitiesWhereInput {
  AND: [CitiesWhereInput!]
  NOT: [CitiesWhereInput!]
  OR: [CitiesWhereInput!]
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  postalCode: StringNullableFilter
  state: StringNullableFilter
}

input CitiesWhereUniqueInput {
  id: Int
}

type Collections {
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsAvgAggregate {
  id: Float
}

input CollectionsAvgOrderByAggregateInput {
  id: SortOrder
}

type CollectionsCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  id: Int!
  image: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  name: Int!
  product: Int!
}

input CollectionsCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

input CollectionsCreateInput {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsCreateManyInput {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsGroupBy {
  _avg: CollectionsAvgAggregate
  _count: CollectionsCountAggregate
  _max: CollectionsMaxAggregate
  _min: CollectionsMinAggregate
  _sum: CollectionsSumAggregate
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsMaxAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

type CollectionsMinAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

enum CollectionsOrderByRelevanceFieldEnum {
  description
  image
  meta_description
  meta_keywords
  meta_title
  name
  product
}

input CollectionsOrderByRelevanceInput {
  fields: [CollectionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CollectionsOrderByWithAggregationInput {
  _avg: CollectionsAvgOrderByAggregateInput
  _count: CollectionsCountOrderByAggregateInput
  _max: CollectionsMaxOrderByAggregateInput
  _min: CollectionsMinOrderByAggregateInput
  _sum: CollectionsSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

input CollectionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CollectionsOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

enum CollectionsScalarFieldEnum {
  created_at
  description
  id
  image
  meta_description
  meta_keywords
  meta_title
  name
  product
}

input CollectionsScalarWhereWithAggregatesInput {
  AND: [CollectionsScalarWhereWithAggregatesInput!]
  NOT: [CollectionsScalarWhereWithAggregatesInput!]
  OR: [CollectionsScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
}

type CollectionsSumAggregate {
  id: BigInt
}

input CollectionsSumOrderByAggregateInput {
  id: SortOrder
}

input CollectionsUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
}

input CollectionsUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
}

input CollectionsWhereInput {
  AND: [CollectionsWhereInput!]
  NOT: [CollectionsWhereInput!]
  OR: [CollectionsWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  name: StringNullableFilter
  product: StringNullableFilter
}

input CollectionsWhereUniqueInput {
  id: BigInt
}

type Comments {
  cust_id: Int!
  customer_name: String!
  customers: String
  description: String
  id: Int!
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

type CommentsAvgAggregate {
  cust_id: Float
  id: Float
}

input CommentsAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

type CommentsCountAggregate {
  _all: Int!
  cust_id: Int!
  customer_name: Int!
  customers: Int!
  description: Int!
  id: Int!
  image: Int!
  mediamanager: Int!
  published: Int!
  response: Int!
  trainings: Int!
}

input CommentsCountOrderByAggregateInput {
  cust_id: SortOrder
  customer_name: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  published: SortOrder
  response: SortOrder
  trainings: SortOrder
}

input CommentsCreateInput {
  cust_id: Int!
  customer_name: String!
  customers: String
  description: String
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

input CommentsCreateManyInput {
  cust_id: Int!
  customer_name: String!
  customers: String
  description: String
  id: Int
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

type CommentsGroupBy {
  _avg: CommentsAvgAggregate
  _count: CommentsCountAggregate
  _max: CommentsMaxAggregate
  _min: CommentsMinAggregate
  _sum: CommentsSumAggregate
  cust_id: Int!
  customer_name: String!
  customers: String
  description: String
  id: Int!
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

type CommentsMaxAggregate {
  cust_id: Int
  customer_name: String
  customers: String
  description: String
  id: Int
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

input CommentsMaxOrderByAggregateInput {
  cust_id: SortOrder
  customer_name: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  published: SortOrder
  response: SortOrder
  trainings: SortOrder
}

type CommentsMinAggregate {
  cust_id: Int
  customer_name: String
  customers: String
  description: String
  id: Int
  image: String
  mediamanager: String
  published: DateTime
  response: String
  trainings: String
}

input CommentsMinOrderByAggregateInput {
  cust_id: SortOrder
  customer_name: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  published: SortOrder
  response: SortOrder
  trainings: SortOrder
}

enum CommentsOrderByRelevanceFieldEnum {
  customer_name
  customers
  description
  image
  mediamanager
  response
  trainings
}

input CommentsOrderByRelevanceInput {
  fields: [CommentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CommentsOrderByWithAggregationInput {
  _avg: CommentsAvgOrderByAggregateInput
  _count: CommentsCountOrderByAggregateInput
  _max: CommentsMaxOrderByAggregateInput
  _min: CommentsMinOrderByAggregateInput
  _sum: CommentsSumOrderByAggregateInput
  cust_id: SortOrder
  customer_name: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  published: SortOrder
  response: SortOrder
  trainings: SortOrder
}

input CommentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CommentsOrderByRelevanceInput
  cust_id: SortOrder
  customer_name: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  published: SortOrder
  response: SortOrder
  trainings: SortOrder
}

enum CommentsScalarFieldEnum {
  cust_id
  customer_name
  customers
  description
  id
  image
  mediamanager
  published
  response
  trainings
}

input CommentsScalarWhereWithAggregatesInput {
  AND: [CommentsScalarWhereWithAggregatesInput!]
  NOT: [CommentsScalarWhereWithAggregatesInput!]
  OR: [CommentsScalarWhereWithAggregatesInput!]
  cust_id: IntWithAggregatesFilter
  customer_name: StringWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  response: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
}

type CommentsSumAggregate {
  cust_id: Int
  id: Int
}

input CommentsSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

input CommentsUpdateInput {
  cust_id: IntFieldUpdateOperationsInput
  customer_name: StringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  response: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CommentsUpdateManyMutationInput {
  cust_id: IntFieldUpdateOperationsInput
  customer_name: StringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  response: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CommentsWhereInput {
  AND: [CommentsWhereInput!]
  NOT: [CommentsWhereInput!]
  OR: [CommentsWhereInput!]
  cust_id: IntFilter
  customer_name: StringFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  mediamanager: StringNullableFilter
  published: DateTimeNullableFilter
  response: StringNullableFilter
  trainings: StringNullableFilter
}

input CommentsWhereUniqueInput {
  id: Int
}

type Content_type {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeAvgAggregate {
  id: Float
  number: Decimal
}

input Content_typeAvgOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

type Content_typeCountAggregate {
  _all: Int!
  boolean: Int!
  created_at: Int!
  database_name: Int!
  date: Int!
  email: Int!
  id: Int!
  json: Int!
  link: Int!
  media: Int!
  number: Int!
  password: Int!
  rich_text: Int!
  text: Int!
  time: Int!
  timestamp: Int!
  uid: Int!
}

input Content_typeCountOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeCreateInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeCreateManyInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeGroupBy {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeMaxAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMaxOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

type Content_typeMinAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMinOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeOrderByRelevanceFieldEnum {
  database_name
  email
  link
  media
  password
  rich_text
  text
  uid
}

input Content_typeOrderByRelevanceInput {
  fields: [Content_typeOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Content_typeOrderByWithAggregationInput {
  _avg: Content_typeAvgOrderByAggregateInput
  _count: Content_typeCountOrderByAggregateInput
  _max: Content_typeMaxOrderByAggregateInput
  _min: Content_typeMinOrderByAggregateInput
  _sum: Content_typeSumOrderByAggregateInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Content_typeOrderByRelevanceInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeScalarFieldEnum {
  boolean
  created_at
  database_name
  date
  email
  id
  json
  link
  media
  number
  password
  rich_text
  text
  time
  timestamp
  uid
}

input Content_typeScalarWhereWithAggregatesInput {
  AND: [Content_typeScalarWhereWithAggregatesInput!]
  NOT: [Content_typeScalarWhereWithAggregatesInput!]
  OR: [Content_typeScalarWhereWithAggregatesInput!]
  boolean: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  database_name: StringNullableWithAggregatesFilter
  date: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  json: JsonNullableWithAggregatesFilter
  link: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  number: DecimalNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  rich_text: StringNullableWithAggregatesFilter
  text: StringNullableWithAggregatesFilter
  time: DateTimeNullableWithAggregatesFilter
  timestamp: DateTimeNullableWithAggregatesFilter
  uid: StringNullableWithAggregatesFilter
}

type Content_typeSumAggregate {
  id: BigInt
  number: Decimal
}

input Content_typeSumOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

input Content_typeUpdateInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeUpdateManyMutationInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeWhereInput {
  AND: [Content_typeWhereInput!]
  NOT: [Content_typeWhereInput!]
  OR: [Content_typeWhereInput!]
  boolean: BoolNullableFilter
  created_at: DateTimeNullableFilter
  database_name: StringNullableFilter
  date: DateTimeNullableFilter
  email: StringNullableFilter
  id: BigIntFilter
  json: JsonNullableFilter
  link: StringNullableFilter
  media: StringNullableFilter
  number: DecimalNullableFilter
  password: StringNullableFilter
  rich_text: StringNullableFilter
  text: StringNullableFilter
  time: DateTimeNullableFilter
  timestamp: DateTimeNullableFilter
  uid: StringNullableFilter
}

input Content_typeWhereUniqueInput {
  id: BigInt
}

type Contracts {
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt!
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

type ContractsAvgAggregate {
  id: Float
}

input ContractsAvgOrderByAggregateInput {
  id: SortOrder
}

type ContractsCountAggregate {
  _all: Int!
  account: Int!
  company_signed_date: Int!
  contact: Int!
  contract_manager: Int!
  contract_title: Int!
  contract_type: Int!
  contract_value: Int!
  created_at: Int!
  currency: Int!
  customer_signed_date: Int!
  description: Int!
  discount: Int!
  end_date: Int!
  grand_total: Int!
  id: Int!
  line_items: Int!
  opportunity: Int!
  renewal_reminder: Int!
  shipping: Int!
  shipping_tax: Int!
  start_date: Int!
  status: Int!
  subtotal: Int!
  tax: Int!
  total: Int!
}

input ContractsCountOrderByAggregateInput {
  account: SortOrder
  company_signed_date: SortOrder
  contact: SortOrder
  contract_manager: SortOrder
  contract_title: SortOrder
  contract_type: SortOrder
  contract_value: SortOrder
  created_at: SortOrder
  currency: SortOrder
  customer_signed_date: SortOrder
  description: SortOrder
  discount: SortOrder
  end_date: SortOrder
  grand_total: SortOrder
  id: SortOrder
  line_items: SortOrder
  opportunity: SortOrder
  renewal_reminder: SortOrder
  shipping: SortOrder
  shipping_tax: SortOrder
  start_date: SortOrder
  status: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
}

input ContractsCreateInput {
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

input ContractsCreateManyInput {
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

type ContractsGroupBy {
  _avg: ContractsAvgAggregate
  _count: ContractsCountAggregate
  _max: ContractsMaxAggregate
  _min: ContractsMinAggregate
  _sum: ContractsSumAggregate
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt!
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

type ContractsMaxAggregate {
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

input ContractsMaxOrderByAggregateInput {
  account: SortOrder
  company_signed_date: SortOrder
  contact: SortOrder
  contract_manager: SortOrder
  contract_title: SortOrder
  contract_type: SortOrder
  contract_value: SortOrder
  created_at: SortOrder
  currency: SortOrder
  customer_signed_date: SortOrder
  description: SortOrder
  discount: SortOrder
  end_date: SortOrder
  grand_total: SortOrder
  id: SortOrder
  line_items: SortOrder
  opportunity: SortOrder
  renewal_reminder: SortOrder
  shipping: SortOrder
  shipping_tax: SortOrder
  start_date: SortOrder
  status: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
}

type ContractsMinAggregate {
  account: String
  company_signed_date: String
  contact: String
  contract_manager: String
  contract_title: String
  contract_type: String
  contract_value: String
  created_at: DateTime
  currency: String
  customer_signed_date: String
  description: String
  discount: String
  end_date: String
  grand_total: String
  id: BigInt
  line_items: String
  opportunity: String
  renewal_reminder: String
  shipping: String
  shipping_tax: String
  start_date: String
  status: String
  subtotal: String
  tax: String
  total: String
}

input ContractsMinOrderByAggregateInput {
  account: SortOrder
  company_signed_date: SortOrder
  contact: SortOrder
  contract_manager: SortOrder
  contract_title: SortOrder
  contract_type: SortOrder
  contract_value: SortOrder
  created_at: SortOrder
  currency: SortOrder
  customer_signed_date: SortOrder
  description: SortOrder
  discount: SortOrder
  end_date: SortOrder
  grand_total: SortOrder
  id: SortOrder
  line_items: SortOrder
  opportunity: SortOrder
  renewal_reminder: SortOrder
  shipping: SortOrder
  shipping_tax: SortOrder
  start_date: SortOrder
  status: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
}

enum ContractsOrderByRelevanceFieldEnum {
  account
  company_signed_date
  contact
  contract_manager
  contract_title
  contract_type
  contract_value
  currency
  customer_signed_date
  description
  discount
  end_date
  grand_total
  line_items
  opportunity
  renewal_reminder
  shipping
  shipping_tax
  start_date
  status
  subtotal
  tax
  total
}

input ContractsOrderByRelevanceInput {
  fields: [ContractsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ContractsOrderByWithAggregationInput {
  _avg: ContractsAvgOrderByAggregateInput
  _count: ContractsCountOrderByAggregateInput
  _max: ContractsMaxOrderByAggregateInput
  _min: ContractsMinOrderByAggregateInput
  _sum: ContractsSumOrderByAggregateInput
  account: SortOrder
  company_signed_date: SortOrder
  contact: SortOrder
  contract_manager: SortOrder
  contract_title: SortOrder
  contract_type: SortOrder
  contract_value: SortOrder
  created_at: SortOrder
  currency: SortOrder
  customer_signed_date: SortOrder
  description: SortOrder
  discount: SortOrder
  end_date: SortOrder
  grand_total: SortOrder
  id: SortOrder
  line_items: SortOrder
  opportunity: SortOrder
  renewal_reminder: SortOrder
  shipping: SortOrder
  shipping_tax: SortOrder
  start_date: SortOrder
  status: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
}

input ContractsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ContractsOrderByRelevanceInput
  account: SortOrder
  company_signed_date: SortOrder
  contact: SortOrder
  contract_manager: SortOrder
  contract_title: SortOrder
  contract_type: SortOrder
  contract_value: SortOrder
  created_at: SortOrder
  currency: SortOrder
  customer_signed_date: SortOrder
  description: SortOrder
  discount: SortOrder
  end_date: SortOrder
  grand_total: SortOrder
  id: SortOrder
  line_items: SortOrder
  opportunity: SortOrder
  renewal_reminder: SortOrder
  shipping: SortOrder
  shipping_tax: SortOrder
  start_date: SortOrder
  status: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
}

enum ContractsScalarFieldEnum {
  account
  company_signed_date
  contact
  contract_manager
  contract_title
  contract_type
  contract_value
  created_at
  currency
  customer_signed_date
  description
  discount
  end_date
  grand_total
  id
  line_items
  opportunity
  renewal_reminder
  shipping
  shipping_tax
  start_date
  status
  subtotal
  tax
  total
}

input ContractsScalarWhereWithAggregatesInput {
  AND: [ContractsScalarWhereWithAggregatesInput!]
  NOT: [ContractsScalarWhereWithAggregatesInput!]
  OR: [ContractsScalarWhereWithAggregatesInput!]
  account: StringNullableWithAggregatesFilter
  company_signed_date: StringNullableWithAggregatesFilter
  contact: StringNullableWithAggregatesFilter
  contract_manager: StringNullableWithAggregatesFilter
  contract_title: StringNullableWithAggregatesFilter
  contract_type: StringNullableWithAggregatesFilter
  contract_value: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  customer_signed_date: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  grand_total: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  line_items: StringNullableWithAggregatesFilter
  opportunity: StringNullableWithAggregatesFilter
  renewal_reminder: StringNullableWithAggregatesFilter
  shipping: StringNullableWithAggregatesFilter
  shipping_tax: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
  tax: StringNullableWithAggregatesFilter
  total: StringNullableWithAggregatesFilter
}

type ContractsSumAggregate {
  id: BigInt
}

input ContractsSumOrderByAggregateInput {
  id: SortOrder
}

input ContractsUpdateInput {
  account: NullableStringFieldUpdateOperationsInput
  company_signed_date: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  contract_manager: NullableStringFieldUpdateOperationsInput
  contract_title: NullableStringFieldUpdateOperationsInput
  contract_type: NullableStringFieldUpdateOperationsInput
  contract_value: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customer_signed_date: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  line_items: NullableStringFieldUpdateOperationsInput
  opportunity: NullableStringFieldUpdateOperationsInput
  renewal_reminder: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
}

input ContractsUpdateManyMutationInput {
  account: NullableStringFieldUpdateOperationsInput
  company_signed_date: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  contract_manager: NullableStringFieldUpdateOperationsInput
  contract_title: NullableStringFieldUpdateOperationsInput
  contract_type: NullableStringFieldUpdateOperationsInput
  contract_value: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  customer_signed_date: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  line_items: NullableStringFieldUpdateOperationsInput
  opportunity: NullableStringFieldUpdateOperationsInput
  renewal_reminder: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
}

input ContractsWhereInput {
  AND: [ContractsWhereInput!]
  NOT: [ContractsWhereInput!]
  OR: [ContractsWhereInput!]
  account: StringNullableFilter
  company_signed_date: StringNullableFilter
  contact: StringNullableFilter
  contract_manager: StringNullableFilter
  contract_title: StringNullableFilter
  contract_type: StringNullableFilter
  contract_value: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  customer_signed_date: StringNullableFilter
  description: StringNullableFilter
  discount: StringNullableFilter
  end_date: StringNullableFilter
  grand_total: StringNullableFilter
  id: BigIntFilter
  line_items: StringNullableFilter
  opportunity: StringNullableFilter
  renewal_reminder: StringNullableFilter
  shipping: StringNullableFilter
  shipping_tax: StringNullableFilter
  start_date: StringNullableFilter
  status: StringNullableFilter
  subtotal: StringNullableFilter
  tax: StringNullableFilter
  total: StringNullableFilter
}

input ContractsWhereUniqueInput {
  id: BigInt
}

type Countries {
  description: String
  id: Int!
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesAvgAggregate {
  id: Float
}

input CountriesAvgOrderByAggregateInput {
  id: SortOrder
}

type CountriesCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  region: Int!
  trainings: Int!
}

input CountriesCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

input CountriesCreateInput {
  description: String
  image: String
  name: String!
  region: String
  trainings: String
}

input CountriesCreateManyInput {
  description: String
  id: Int
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesGroupBy {
  _avg: CountriesAvgAggregate
  _count: CountriesCountAggregate
  _max: CountriesMaxAggregate
  _min: CountriesMinAggregate
  _sum: CountriesSumAggregate
  description: String
  id: Int!
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesMaxAggregate {
  description: String
  id: Int
  image: String
  name: String
  region: String
  trainings: String
}

input CountriesMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

type CountriesMinAggregate {
  description: String
  id: Int
  image: String
  name: String
  region: String
  trainings: String
}

input CountriesMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

enum CountriesOrderByRelevanceFieldEnum {
  description
  image
  name
  region
  trainings
}

input CountriesOrderByRelevanceInput {
  fields: [CountriesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CountriesOrderByWithAggregationInput {
  _avg: CountriesAvgOrderByAggregateInput
  _count: CountriesCountOrderByAggregateInput
  _max: CountriesMaxOrderByAggregateInput
  _min: CountriesMinOrderByAggregateInput
  _sum: CountriesSumOrderByAggregateInput
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

input CountriesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CountriesOrderByRelevanceInput
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

enum CountriesScalarFieldEnum {
  description
  id
  image
  name
  region
  trainings
}

input CountriesScalarWhereWithAggregatesInput {
  AND: [CountriesScalarWhereWithAggregatesInput!]
  NOT: [CountriesScalarWhereWithAggregatesInput!]
  OR: [CountriesScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
}

type CountriesSumAggregate {
  id: Int
}

input CountriesSumOrderByAggregateInput {
  id: SortOrder
}

input CountriesUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CountriesUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CountriesWhereInput {
  AND: [CountriesWhereInput!]
  NOT: [CountriesWhereInput!]
  OR: [CountriesWhereInput!]
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  region: StringNullableFilter
  trainings: StringNullableFilter
}

input CountriesWhereUniqueInput {
  id: Int
}

type Coupons {
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  prod_id: BigInt!
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

type CouponsAvgAggregate {
  id: Float
  prod_id: Float
}

input CouponsAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type CouponsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  customers: Int!
  discount: Int!
  excerpt: Int!
  expiration: Int!
  id: Int!
  image: Int!
  name: Int!
  prod_id: Int!
  products: Int!
  products_couponsToproducts: Int!
  published: Int!
  users: Int!
}

input CouponsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  products_couponsToproducts: SortOrder
  published: SortOrder
  users: SortOrder
}

input CouponsCreateInput {
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  prod_id: BigInt!
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

input CouponsCreateManyInput {
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  prod_id: BigInt!
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

type CouponsGroupBy {
  _avg: CouponsAvgAggregate
  _count: CouponsCountAggregate
  _max: CouponsMaxAggregate
  _min: CouponsMinAggregate
  _sum: CouponsSumAggregate
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  prod_id: BigInt!
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

type CouponsMaxAggregate {
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  prod_id: BigInt
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

input CouponsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  products_couponsToproducts: SortOrder
  published: SortOrder
  users: SortOrder
}

type CouponsMinAggregate {
  articles: String
  categories: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  prod_id: BigInt
  products: String
  products_couponsToproducts: String
  published: DateTime
  users: String
}

input CouponsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  products_couponsToproducts: SortOrder
  published: SortOrder
  users: SortOrder
}

enum CouponsOrderByRelevanceFieldEnum {
  articles
  categories
  customers
  discount
  excerpt
  expiration
  image
  name
  products
  products_couponsToproducts
  users
}

input CouponsOrderByRelevanceInput {
  fields: [CouponsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CouponsOrderByWithAggregationInput {
  _avg: CouponsAvgOrderByAggregateInput
  _count: CouponsCountOrderByAggregateInput
  _max: CouponsMaxOrderByAggregateInput
  _min: CouponsMinOrderByAggregateInput
  _sum: CouponsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  products_couponsToproducts: SortOrder
  published: SortOrder
  users: SortOrder
}

input CouponsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CouponsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  products_couponsToproducts: SortOrder
  published: SortOrder
  users: SortOrder
}

enum CouponsScalarFieldEnum {
  articles
  categories
  customers
  discount
  excerpt
  expiration
  id
  image
  name
  prod_id
  products
  products_couponsToproducts
  published
  users
}

input CouponsScalarWhereWithAggregatesInput {
  AND: [CouponsScalarWhereWithAggregatesInput!]
  NOT: [CouponsScalarWhereWithAggregatesInput!]
  OR: [CouponsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  expiration: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  products_couponsToproducts: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type CouponsSumAggregate {
  id: BigInt
  prod_id: BigInt
}

input CouponsSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input CouponsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_couponsToproducts: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input CouponsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_couponsToproducts: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input CouponsWhereInput {
  AND: [CouponsWhereInput!]
  NOT: [CouponsWhereInput!]
  OR: [CouponsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  customers: StringNullableFilter
  discount: StringNullableFilter
  excerpt: StringNullableFilter
  expiration: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  products_couponsToproducts: StringNullableFilter
  published: DateTimeNullableFilter
  users: StringNullableFilter
}

input CouponsWhereUniqueInput {
  id: BigInt
}

type Credit_memos {
  action: String
  bill_to_name: String!
  created: DateTime
  credit_memo: String!
  cust_id: Int!
  customers: String
  id: BigInt!
  order_number: Int!
  prod_id: BigInt!
  products: String
  refunded: String
  status: String
}

type Credit_memosAvgAggregate {
  cust_id: Float
  id: Float
  order_number: Float
  prod_id: Float
}

input Credit_memosAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
}

type Credit_memosCountAggregate {
  _all: Int!
  action: Int!
  bill_to_name: Int!
  created: Int!
  credit_memo: Int!
  cust_id: Int!
  customers: Int!
  id: Int!
  order_number: Int!
  prod_id: Int!
  products: Int!
  refunded: Int!
  status: Int!
}

input Credit_memosCountOrderByAggregateInput {
  action: SortOrder
  bill_to_name: SortOrder
  created: SortOrder
  credit_memo: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
  products: SortOrder
  refunded: SortOrder
  status: SortOrder
}

input Credit_memosCreateInput {
  action: String
  bill_to_name: String!
  created: DateTime
  credit_memo: String!
  cust_id: Int!
  customers: String
  id: BigInt!
  order_number: Int!
  prod_id: BigInt!
  products: String
  refunded: String
  status: String
}

input Credit_memosCreateManyInput {
  action: String
  bill_to_name: String!
  created: DateTime
  credit_memo: String!
  cust_id: Int!
  customers: String
  id: BigInt!
  order_number: Int!
  prod_id: BigInt!
  products: String
  refunded: String
  status: String
}

type Credit_memosGroupBy {
  _avg: Credit_memosAvgAggregate
  _count: Credit_memosCountAggregate
  _max: Credit_memosMaxAggregate
  _min: Credit_memosMinAggregate
  _sum: Credit_memosSumAggregate
  action: String
  bill_to_name: String!
  created: DateTime
  credit_memo: String!
  cust_id: Int!
  customers: String
  id: BigInt!
  order_number: Int!
  prod_id: BigInt!
  products: String
  refunded: String
  status: String
}

type Credit_memosMaxAggregate {
  action: String
  bill_to_name: String
  created: DateTime
  credit_memo: String
  cust_id: Int
  customers: String
  id: BigInt
  order_number: Int
  prod_id: BigInt
  products: String
  refunded: String
  status: String
}

input Credit_memosMaxOrderByAggregateInput {
  action: SortOrder
  bill_to_name: SortOrder
  created: SortOrder
  credit_memo: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
  products: SortOrder
  refunded: SortOrder
  status: SortOrder
}

type Credit_memosMinAggregate {
  action: String
  bill_to_name: String
  created: DateTime
  credit_memo: String
  cust_id: Int
  customers: String
  id: BigInt
  order_number: Int
  prod_id: BigInt
  products: String
  refunded: String
  status: String
}

input Credit_memosMinOrderByAggregateInput {
  action: SortOrder
  bill_to_name: SortOrder
  created: SortOrder
  credit_memo: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
  products: SortOrder
  refunded: SortOrder
  status: SortOrder
}

enum Credit_memosOrderByRelevanceFieldEnum {
  action
  bill_to_name
  credit_memo
  customers
  products
  refunded
  status
}

input Credit_memosOrderByRelevanceInput {
  fields: [Credit_memosOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Credit_memosOrderByWithAggregationInput {
  _avg: Credit_memosAvgOrderByAggregateInput
  _count: Credit_memosCountOrderByAggregateInput
  _max: Credit_memosMaxOrderByAggregateInput
  _min: Credit_memosMinOrderByAggregateInput
  _sum: Credit_memosSumOrderByAggregateInput
  action: SortOrder
  bill_to_name: SortOrder
  created: SortOrder
  credit_memo: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
  products: SortOrder
  refunded: SortOrder
  status: SortOrder
}

input Credit_memosOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Credit_memosOrderByRelevanceInput
  action: SortOrder
  bill_to_name: SortOrder
  created: SortOrder
  credit_memo: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
  products: SortOrder
  refunded: SortOrder
  status: SortOrder
}

enum Credit_memosScalarFieldEnum {
  action
  bill_to_name
  created
  credit_memo
  cust_id
  customers
  id
  order_number
  prod_id
  products
  refunded
  status
}

input Credit_memosScalarWhereWithAggregatesInput {
  AND: [Credit_memosScalarWhereWithAggregatesInput!]
  NOT: [Credit_memosScalarWhereWithAggregatesInput!]
  OR: [Credit_memosScalarWhereWithAggregatesInput!]
  action: StringNullableWithAggregatesFilter
  bill_to_name: StringWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  credit_memo: StringWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  order_number: IntWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  refunded: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
}

type Credit_memosSumAggregate {
  cust_id: Int
  id: BigInt
  order_number: Int
  prod_id: BigInt
}

input Credit_memosSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_number: SortOrder
  prod_id: SortOrder
}

input Credit_memosUpdateInput {
  action: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  credit_memo: StringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  order_number: IntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  refunded: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input Credit_memosUpdateManyMutationInput {
  action: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  credit_memo: StringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  order_number: IntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  refunded: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input Credit_memosWhereInput {
  AND: [Credit_memosWhereInput!]
  NOT: [Credit_memosWhereInput!]
  OR: [Credit_memosWhereInput!]
  action: StringNullableFilter
  bill_to_name: StringFilter
  created: DateTimeNullableFilter
  credit_memo: StringFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  id: BigIntFilter
  order_number: IntFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  refunded: StringNullableFilter
  status: StringNullableFilter
}

input Credit_memosWhereUniqueInput {
  credit_memo_id: credit_memosCredit_memoIdCompoundUniqueInput
}

type Currencies {
  code: String
  created_at: DateTime
  id: BigInt!
  name: String
  region: String
}

type CurrenciesAvgAggregate {
  id: Float
}

input CurrenciesAvgOrderByAggregateInput {
  id: SortOrder
}

type CurrenciesCountAggregate {
  _all: Int!
  code: Int!
  created_at: Int!
  id: Int!
  name: Int!
  region: Int!
}

input CurrenciesCountOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
}

input CurrenciesCreateInput {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
}

input CurrenciesCreateManyInput {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
}

type CurrenciesGroupBy {
  _avg: CurrenciesAvgAggregate
  _count: CurrenciesCountAggregate
  _max: CurrenciesMaxAggregate
  _min: CurrenciesMinAggregate
  _sum: CurrenciesSumAggregate
  code: String
  created_at: DateTime
  id: BigInt!
  name: String
  region: String
}

type CurrenciesMaxAggregate {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
}

input CurrenciesMaxOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
}

type CurrenciesMinAggregate {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
}

input CurrenciesMinOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
}

enum CurrenciesOrderByRelevanceFieldEnum {
  code
  name
  region
}

input CurrenciesOrderByRelevanceInput {
  fields: [CurrenciesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CurrenciesOrderByWithAggregationInput {
  _avg: CurrenciesAvgOrderByAggregateInput
  _count: CurrenciesCountOrderByAggregateInput
  _max: CurrenciesMaxOrderByAggregateInput
  _min: CurrenciesMinOrderByAggregateInput
  _sum: CurrenciesSumOrderByAggregateInput
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
}

input CurrenciesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CurrenciesOrderByRelevanceInput
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
}

enum CurrenciesScalarFieldEnum {
  code
  created_at
  id
  name
  region
}

input CurrenciesScalarWhereWithAggregatesInput {
  AND: [CurrenciesScalarWhereWithAggregatesInput!]
  NOT: [CurrenciesScalarWhereWithAggregatesInput!]
  OR: [CurrenciesScalarWhereWithAggregatesInput!]
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
}

type CurrenciesSumAggregate {
  id: BigInt
}

input CurrenciesSumOrderByAggregateInput {
  id: SortOrder
}

input CurrenciesUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
}

input CurrenciesUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
}

input CurrenciesWhereInput {
  AND: [CurrenciesWhereInput!]
  NOT: [CurrenciesWhereInput!]
  OR: [CurrenciesWhereInput!]
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  region: StringNullableFilter
}

input CurrenciesWhereUniqueInput {
  id: BigInt
}

type Currency_rates {
  id: BigInt!
  import_service: String!
  usd: Decimal
}

type Currency_ratesAvgAggregate {
  id: Float
  usd: Decimal
}

input Currency_ratesAvgOrderByAggregateInput {
  id: SortOrder
  usd: SortOrder
}

type Currency_ratesCountAggregate {
  _all: Int!
  id: Int!
  import_service: Int!
  usd: Int!
}

input Currency_ratesCountOrderByAggregateInput {
  id: SortOrder
  import_service: SortOrder
  usd: SortOrder
}

input Currency_ratesCreateInput {
  id: BigInt!
  import_service: String!
  usd: Decimal
}

input Currency_ratesCreateManyInput {
  id: BigInt!
  import_service: String!
  usd: Decimal
}

type Currency_ratesGroupBy {
  _avg: Currency_ratesAvgAggregate
  _count: Currency_ratesCountAggregate
  _max: Currency_ratesMaxAggregate
  _min: Currency_ratesMinAggregate
  _sum: Currency_ratesSumAggregate
  id: BigInt!
  import_service: String!
  usd: Decimal
}

type Currency_ratesMaxAggregate {
  id: BigInt
  import_service: String
  usd: Decimal
}

input Currency_ratesMaxOrderByAggregateInput {
  id: SortOrder
  import_service: SortOrder
  usd: SortOrder
}

type Currency_ratesMinAggregate {
  id: BigInt
  import_service: String
  usd: Decimal
}

input Currency_ratesMinOrderByAggregateInput {
  id: SortOrder
  import_service: SortOrder
  usd: SortOrder
}

enum Currency_ratesOrderByRelevanceFieldEnum {
  import_service
}

input Currency_ratesOrderByRelevanceInput {
  fields: [Currency_ratesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Currency_ratesOrderByWithAggregationInput {
  _avg: Currency_ratesAvgOrderByAggregateInput
  _count: Currency_ratesCountOrderByAggregateInput
  _max: Currency_ratesMaxOrderByAggregateInput
  _min: Currency_ratesMinOrderByAggregateInput
  _sum: Currency_ratesSumOrderByAggregateInput
  id: SortOrder
  import_service: SortOrder
  usd: SortOrder
}

input Currency_ratesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Currency_ratesOrderByRelevanceInput
  id: SortOrder
  import_service: SortOrder
  usd: SortOrder
}

enum Currency_ratesScalarFieldEnum {
  id
  import_service
  usd
}

input Currency_ratesScalarWhereWithAggregatesInput {
  AND: [Currency_ratesScalarWhereWithAggregatesInput!]
  NOT: [Currency_ratesScalarWhereWithAggregatesInput!]
  OR: [Currency_ratesScalarWhereWithAggregatesInput!]
  id: BigIntWithAggregatesFilter
  import_service: StringWithAggregatesFilter
  usd: DecimalNullableWithAggregatesFilter
}

type Currency_ratesSumAggregate {
  id: BigInt
  usd: Decimal
}

input Currency_ratesSumOrderByAggregateInput {
  id: SortOrder
  usd: SortOrder
}

input Currency_ratesUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  import_service: StringFieldUpdateOperationsInput
  usd: NullableDecimalFieldUpdateOperationsInput
}

input Currency_ratesUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  import_service: StringFieldUpdateOperationsInput
  usd: NullableDecimalFieldUpdateOperationsInput
}

input Currency_ratesWhereInput {
  AND: [Currency_ratesWhereInput!]
  NOT: [Currency_ratesWhereInput!]
  OR: [Currency_ratesWhereInput!]
  id: BigIntFilter
  import_service: StringFilter
  usd: DecimalNullableFilter
}

input Currency_ratesWhereUniqueInput {
  id: BigInt
  import_service: String
}

type Currency_symbols {
  id: BigInt!
  symbol: String!
  use_standard: Boolean
}

type Currency_symbolsAvgAggregate {
  id: Float
}

input Currency_symbolsAvgOrderByAggregateInput {
  id: SortOrder
}

type Currency_symbolsCountAggregate {
  _all: Int!
  id: Int!
  symbol: Int!
  use_standard: Int!
}

input Currency_symbolsCountOrderByAggregateInput {
  id: SortOrder
  symbol: SortOrder
  use_standard: SortOrder
}

input Currency_symbolsCreateInput {
  id: BigInt
  symbol: String!
  use_standard: Boolean
}

input Currency_symbolsCreateManyInput {
  id: BigInt
  symbol: String!
  use_standard: Boolean
}

type Currency_symbolsGroupBy {
  _avg: Currency_symbolsAvgAggregate
  _count: Currency_symbolsCountAggregate
  _max: Currency_symbolsMaxAggregate
  _min: Currency_symbolsMinAggregate
  _sum: Currency_symbolsSumAggregate
  id: BigInt!
  symbol: String!
  use_standard: Boolean
}

type Currency_symbolsMaxAggregate {
  id: BigInt
  symbol: String
  use_standard: Boolean
}

input Currency_symbolsMaxOrderByAggregateInput {
  id: SortOrder
  symbol: SortOrder
  use_standard: SortOrder
}

type Currency_symbolsMinAggregate {
  id: BigInt
  symbol: String
  use_standard: Boolean
}

input Currency_symbolsMinOrderByAggregateInput {
  id: SortOrder
  symbol: SortOrder
  use_standard: SortOrder
}

enum Currency_symbolsOrderByRelevanceFieldEnum {
  symbol
}

input Currency_symbolsOrderByRelevanceInput {
  fields: [Currency_symbolsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Currency_symbolsOrderByWithAggregationInput {
  _avg: Currency_symbolsAvgOrderByAggregateInput
  _count: Currency_symbolsCountOrderByAggregateInput
  _max: Currency_symbolsMaxOrderByAggregateInput
  _min: Currency_symbolsMinOrderByAggregateInput
  _sum: Currency_symbolsSumOrderByAggregateInput
  id: SortOrder
  symbol: SortOrder
  use_standard: SortOrder
}

input Currency_symbolsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Currency_symbolsOrderByRelevanceInput
  id: SortOrder
  symbol: SortOrder
  use_standard: SortOrder
}

enum Currency_symbolsScalarFieldEnum {
  id
  symbol
  use_standard
}

input Currency_symbolsScalarWhereWithAggregatesInput {
  AND: [Currency_symbolsScalarWhereWithAggregatesInput!]
  NOT: [Currency_symbolsScalarWhereWithAggregatesInput!]
  OR: [Currency_symbolsScalarWhereWithAggregatesInput!]
  id: BigIntWithAggregatesFilter
  symbol: StringWithAggregatesFilter
  use_standard: BoolNullableWithAggregatesFilter
}

type Currency_symbolsSumAggregate {
  id: BigInt
}

input Currency_symbolsSumOrderByAggregateInput {
  id: SortOrder
}

input Currency_symbolsUpdateInput {
  id: BigIntFieldUpdateOperationsInput
  symbol: StringFieldUpdateOperationsInput
  use_standard: NullableBoolFieldUpdateOperationsInput
}

input Currency_symbolsUpdateManyMutationInput {
  id: BigIntFieldUpdateOperationsInput
  symbol: StringFieldUpdateOperationsInput
  use_standard: NullableBoolFieldUpdateOperationsInput
}

input Currency_symbolsWhereInput {
  AND: [Currency_symbolsWhereInput!]
  NOT: [Currency_symbolsWhereInput!]
  OR: [Currency_symbolsWhereInput!]
  id: BigIntFilter
  symbol: StringFilter
  use_standard: BoolNullableFilter
}

input Currency_symbolsWhereUniqueInput {
  id: BigInt
  symbol: String
}

type Customer_group {
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  id: BigInt!
  image: String
  name: String
  tax_class: String
}

type Customer_groupAvgAggregate {
  cust_id: Float
  id: Float
}

input Customer_groupAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

type Customer_groupCountAggregate {
  _all: Int!
  content: Int!
  coverPhoto: Int!
  created_at: Int!
  cust_id: Int!
  customers: Int!
  id: Int!
  image: Int!
  name: Int!
  tax_class: Int!
}

input Customer_groupCountOrderByAggregateInput {
  content: SortOrder
  coverPhoto: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  tax_class: SortOrder
}

input Customer_groupCreateInput {
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  id: BigInt
  image: String
  name: String
  tax_class: String
}

input Customer_groupCreateManyInput {
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  id: BigInt
  image: String
  name: String
  tax_class: String
}

type Customer_groupGroupBy {
  _avg: Customer_groupAvgAggregate
  _count: Customer_groupCountAggregate
  _max: Customer_groupMaxAggregate
  _min: Customer_groupMinAggregate
  _sum: Customer_groupSumAggregate
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  id: BigInt!
  image: String
  name: String
  tax_class: String
}

type Customer_groupMaxAggregate {
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int
  customers: String
  id: BigInt
  image: String
  name: String
  tax_class: String
}

input Customer_groupMaxOrderByAggregateInput {
  content: SortOrder
  coverPhoto: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  tax_class: SortOrder
}

type Customer_groupMinAggregate {
  content: String
  coverPhoto: String
  created_at: DateTime
  cust_id: Int
  customers: String
  id: BigInt
  image: String
  name: String
  tax_class: String
}

input Customer_groupMinOrderByAggregateInput {
  content: SortOrder
  coverPhoto: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  tax_class: SortOrder
}

enum Customer_groupOrderByRelevanceFieldEnum {
  content
  coverPhoto
  customers
  image
  name
  tax_class
}

input Customer_groupOrderByRelevanceInput {
  fields: [Customer_groupOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Customer_groupOrderByWithAggregationInput {
  _avg: Customer_groupAvgOrderByAggregateInput
  _count: Customer_groupCountOrderByAggregateInput
  _max: Customer_groupMaxOrderByAggregateInput
  _min: Customer_groupMinOrderByAggregateInput
  _sum: Customer_groupSumOrderByAggregateInput
  content: SortOrder
  coverPhoto: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  tax_class: SortOrder
}

input Customer_groupOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Customer_groupOrderByRelevanceInput
  content: SortOrder
  coverPhoto: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  tax_class: SortOrder
}

enum Customer_groupScalarFieldEnum {
  content
  coverPhoto
  created_at
  cust_id
  customers
  id
  image
  name
  tax_class
}

input Customer_groupScalarWhereWithAggregatesInput {
  AND: [Customer_groupScalarWhereWithAggregatesInput!]
  NOT: [Customer_groupScalarWhereWithAggregatesInput!]
  OR: [Customer_groupScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  coverPhoto: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  tax_class: StringNullableWithAggregatesFilter
}

type Customer_groupSumAggregate {
  cust_id: Int
  id: BigInt
}

input Customer_groupSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

input Customer_groupUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  coverPhoto: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
}

input Customer_groupUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  coverPhoto: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
}

input Customer_groupWhereInput {
  AND: [Customer_groupWhereInput!]
  NOT: [Customer_groupWhereInput!]
  OR: [Customer_groupWhereInput!]
  content: StringNullableFilter
  coverPhoto: StringNullableFilter
  created_at: DateTimeNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringNullableFilter
  tax_class: StringNullableFilter
}

input Customer_groupWhereUniqueInput {
  id: BigInt
}

type Customers {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersAvgAggregate {
  id: Float
}

input CustomersAvgOrderByAggregateInput {
  id: SortOrder
}

type CustomersCountAggregate {
  Address: Int!
  _all: Int!
  address_two: Int!
  comments: Int!
  confirmed_email: Int!
  country: Int!
  credit_memos: Int!
  customer_group: Int!
  customer_payment: Int!
  customer_since: Int!
  date_of_birth: Int!
  description: Int!
  email: Int!
  emails: Int!
  first_name: Int!
  gender: Int!
  id: Int!
  image: Int!
  last_name: Int!
  mediamanager: Int!
  messages: Int!
  middle_name: Int!
  name_prefix: Int!
  name_suffix: Int!
  newsletter_subscribers: Int!
  orders: Int!
  password: Int!
  payment_type: Int!
  phone: Int!
  product: Int!
  projects: Int!
  quotes: Int!
  returns: Int!
  short_description: Int!
  state: Int!
  tax_vat_number: Int!
  thumbnail: Int!
  username: Int!
  websites: Int!
  workspaces: Int!
  zipcode: Int!
}

input CustomersCountOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersCreateInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersCreateManyInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersGroupBy {
  Address: String
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersMaxAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMaxOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

type CustomersMinAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMinOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersOrderByRelevanceFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  date_of_birth
  description
  email
  emails
  first_name
  gender
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersOrderByRelevanceInput {
  fields: [CustomersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CustomersOrderByWithAggregationInput {
  Address: SortOrder
  _avg: CustomersAvgOrderByAggregateInput
  _count: CustomersCountOrderByAggregateInput
  _max: CustomersMaxOrderByAggregateInput
  _min: CustomersMinOrderByAggregateInput
  _sum: CustomersSumOrderByAggregateInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersOrderByWithRelationAndSearchRelevanceInput {
  Address: SortOrder
  _relevance: CustomersOrderByRelevanceInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersScalarFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  customer_since
  date_of_birth
  description
  email
  emails
  first_name
  gender
  id
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersScalarWhereWithAggregatesInput {
  AND: [CustomersScalarWhereWithAggregatesInput!]
  Address: StringNullableWithAggregatesFilter
  NOT: [CustomersScalarWhereWithAggregatesInput!]
  OR: [CustomersScalarWhereWithAggregatesInput!]
  address_two: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  confirmed_email: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  credit_memos: StringNullableWithAggregatesFilter
  customer_group: StringNullableWithAggregatesFilter
  customer_payment: StringNullableWithAggregatesFilter
  customer_since: DateTimeNullableWithAggregatesFilter
  date_of_birth: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  emails: StringNullableWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  gender: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  last_name: StringWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  messages: StringNullableWithAggregatesFilter
  middle_name: StringNullableWithAggregatesFilter
  name_prefix: StringNullableWithAggregatesFilter
  name_suffix: StringNullableWithAggregatesFilter
  newsletter_subscribers: StringNullableWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  payment_type: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  returns: StringNullableWithAggregatesFilter
  short_description: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tax_vat_number: StringNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type CustomersSumAggregate {
  id: Int
}

input CustomersSumOrderByAggregateInput {
  id: SortOrder
}

input CustomersUpdateInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersUpdateManyMutationInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersWhereInput {
  AND: [CustomersWhereInput!]
  Address: StringNullableFilter
  NOT: [CustomersWhereInput!]
  OR: [CustomersWhereInput!]
  address_two: StringNullableFilter
  comments: StringNullableFilter
  confirmed_email: StringNullableFilter
  country: StringNullableFilter
  credit_memos: StringNullableFilter
  customer_group: StringNullableFilter
  customer_payment: StringNullableFilter
  customer_since: DateTimeNullableFilter
  date_of_birth: StringNullableFilter
  description: StringNullableFilter
  email: StringFilter
  emails: StringNullableFilter
  first_name: StringFilter
  gender: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  last_name: StringFilter
  mediamanager: StringNullableFilter
  messages: StringNullableFilter
  middle_name: StringNullableFilter
  name_prefix: StringNullableFilter
  name_suffix: StringNullableFilter
  newsletter_subscribers: StringNullableFilter
  orders: StringNullableFilter
  password: StringNullableFilter
  payment_type: StringNullableFilter
  phone: StringNullableFilter
  product: StringNullableFilter
  projects: StringNullableFilter
  quotes: StringNullableFilter
  returns: StringNullableFilter
  short_description: StringNullableFilter
  state: StringNullableFilter
  tax_vat_number: StringNullableFilter
  thumbnail: StringNullableFilter
  username: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
  zipcode: StringNullableFilter
}

input CustomersWhereUniqueInput {
  id: Int
}

type Customizations {
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  id: Int!
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

type CustomizationsAvgAggregate {
  id: Float
}

input CustomizationsAvgOrderByAggregateInput {
  id: SortOrder
}

type CustomizationsCountAggregate {
  _all: Int!
  allow_signup: Int!
  announcement: Int!
  banner: Int!
  created_at: Int!
  email: Int!
  footer_link: Int!
  id: Int!
  nav_link: Int!
  notification: Int!
  site_name: Int!
  site_url: Int!
}

input CustomizationsCountOrderByAggregateInput {
  allow_signup: SortOrder
  announcement: SortOrder
  banner: SortOrder
  created_at: SortOrder
  email: SortOrder
  footer_link: SortOrder
  id: SortOrder
  nav_link: SortOrder
  notification: SortOrder
  site_name: SortOrder
  site_url: SortOrder
}

input CustomizationsCreateInput {
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

input CustomizationsCreateManyInput {
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  id: Int
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

type CustomizationsGroupBy {
  _avg: CustomizationsAvgAggregate
  _count: CustomizationsCountAggregate
  _max: CustomizationsMaxAggregate
  _min: CustomizationsMinAggregate
  _sum: CustomizationsSumAggregate
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  id: Int!
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

type CustomizationsMaxAggregate {
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  id: Int
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

input CustomizationsMaxOrderByAggregateInput {
  allow_signup: SortOrder
  announcement: SortOrder
  banner: SortOrder
  created_at: SortOrder
  email: SortOrder
  footer_link: SortOrder
  id: SortOrder
  nav_link: SortOrder
  notification: SortOrder
  site_name: SortOrder
  site_url: SortOrder
}

type CustomizationsMinAggregate {
  allow_signup: String
  announcement: String
  banner: String
  created_at: DateTime
  email: String
  footer_link: String
  id: Int
  nav_link: String
  notification: String
  site_name: String
  site_url: String
}

input CustomizationsMinOrderByAggregateInput {
  allow_signup: SortOrder
  announcement: SortOrder
  banner: SortOrder
  created_at: SortOrder
  email: SortOrder
  footer_link: SortOrder
  id: SortOrder
  nav_link: SortOrder
  notification: SortOrder
  site_name: SortOrder
  site_url: SortOrder
}

enum CustomizationsOrderByRelevanceFieldEnum {
  allow_signup
  announcement
  banner
  email
  footer_link
  nav_link
  notification
  site_name
  site_url
}

input CustomizationsOrderByRelevanceInput {
  fields: [CustomizationsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CustomizationsOrderByWithAggregationInput {
  _avg: CustomizationsAvgOrderByAggregateInput
  _count: CustomizationsCountOrderByAggregateInput
  _max: CustomizationsMaxOrderByAggregateInput
  _min: CustomizationsMinOrderByAggregateInput
  _sum: CustomizationsSumOrderByAggregateInput
  allow_signup: SortOrder
  announcement: SortOrder
  banner: SortOrder
  created_at: SortOrder
  email: SortOrder
  footer_link: SortOrder
  id: SortOrder
  nav_link: SortOrder
  notification: SortOrder
  site_name: SortOrder
  site_url: SortOrder
}

input CustomizationsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CustomizationsOrderByRelevanceInput
  allow_signup: SortOrder
  announcement: SortOrder
  banner: SortOrder
  created_at: SortOrder
  email: SortOrder
  footer_link: SortOrder
  id: SortOrder
  nav_link: SortOrder
  notification: SortOrder
  site_name: SortOrder
  site_url: SortOrder
}

enum CustomizationsScalarFieldEnum {
  allow_signup
  announcement
  banner
  created_at
  email
  footer_link
  id
  nav_link
  notification
  site_name
  site_url
}

input CustomizationsScalarWhereWithAggregatesInput {
  AND: [CustomizationsScalarWhereWithAggregatesInput!]
  NOT: [CustomizationsScalarWhereWithAggregatesInput!]
  OR: [CustomizationsScalarWhereWithAggregatesInput!]
  allow_signup: StringNullableWithAggregatesFilter
  announcement: StringNullableWithAggregatesFilter
  banner: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  footer_link: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  nav_link: StringNullableWithAggregatesFilter
  notification: StringNullableWithAggregatesFilter
  site_name: StringNullableWithAggregatesFilter
  site_url: StringNullableWithAggregatesFilter
}

type CustomizationsSumAggregate {
  id: Int
}

input CustomizationsSumOrderByAggregateInput {
  id: SortOrder
}

input CustomizationsUpdateInput {
  allow_signup: NullableStringFieldUpdateOperationsInput
  announcement: NullableStringFieldUpdateOperationsInput
  banner: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  footer_link: NullableStringFieldUpdateOperationsInput
  nav_link: NullableStringFieldUpdateOperationsInput
  notification: NullableStringFieldUpdateOperationsInput
  site_name: NullableStringFieldUpdateOperationsInput
  site_url: NullableStringFieldUpdateOperationsInput
}

input CustomizationsUpdateManyMutationInput {
  allow_signup: NullableStringFieldUpdateOperationsInput
  announcement: NullableStringFieldUpdateOperationsInput
  banner: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  footer_link: NullableStringFieldUpdateOperationsInput
  nav_link: NullableStringFieldUpdateOperationsInput
  notification: NullableStringFieldUpdateOperationsInput
  site_name: NullableStringFieldUpdateOperationsInput
  site_url: NullableStringFieldUpdateOperationsInput
}

input CustomizationsWhereInput {
  AND: [CustomizationsWhereInput!]
  NOT: [CustomizationsWhereInput!]
  OR: [CustomizationsWhereInput!]
  allow_signup: StringNullableFilter
  announcement: StringNullableFilter
  banner: StringNullableFilter
  created_at: DateTimeNullableFilter
  email: StringNullableFilter
  footer_link: StringNullableFilter
  id: IntFilter
  nav_link: StringNullableFilter
  notification: StringNullableFilter
  site_name: StringNullableFilter
  site_url: StringNullableFilter
}

input CustomizationsWhereUniqueInput {
  id: Int
}

type Dashboards {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsAvgAggregate {
  id: Float
}

input DashboardsAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardsCountAggregate {
  _all: Int!
  articles: Int!
  category: Int!
  checklists: Int!
  client_id: Int!
  client_secret: Int!
  content: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  logo: Int!
  media: Int!
  name: Int!
  privacy: Int!
  products: Int!
  projects: Int!
  published: Int!
  reports: Int!
  sales: Int!
  tasks: Int!
  tickets: Int!
  url: Int!
  users: Int!
  visits: Int!
}

input DashboardsCountOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsCreateInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsCreateManyInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsGroupBy {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsMaxAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMaxOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

type DashboardsMinAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMinOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsOrderByRelevanceFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  customers
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsOrderByRelevanceInput {
  fields: [DashboardsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardsOrderByWithAggregationInput {
  _avg: DashboardsAvgOrderByAggregateInput
  _count: DashboardsCountOrderByAggregateInput
  _max: DashboardsMaxOrderByAggregateInput
  _min: DashboardsMinOrderByAggregateInput
  _sum: DashboardsSumOrderByAggregateInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardsOrderByRelevanceInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsScalarFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  created_at
  customers
  id
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsScalarWhereWithAggregatesInput {
  AND: [DashboardsScalarWhereWithAggregatesInput!]
  NOT: [DashboardsScalarWhereWithAggregatesInput!]
  OR: [DashboardsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  category: StringNullableWithAggregatesFilter
  checklists: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  privacy: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  sales: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  visits: StringNullableWithAggregatesFilter
}

type DashboardsSumAggregate {
  id: BigInt
}

input DashboardsSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsWhereInput {
  AND: [DashboardsWhereInput!]
  NOT: [DashboardsWhereInput!]
  OR: [DashboardsWhereInput!]
  articles: StringNullableFilter
  category: StringNullableFilter
  checklists: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  logo: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  privacy: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  published: StringNullableFilter
  reports: StringNullableFilter
  sales: StringNullableFilter
  tasks: StringNullableFilter
  tickets: StringNullableFilter
  url: StringNullableFilter
  users: StringNullableFilter
  visits: StringNullableFilter
}

input DashboardsWhereUniqueInput {
  id: BigInt
  name: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

"""
GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library.
"""
scalar Decimal

input DecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input DecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input DecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input DecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input DecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

type Deepdive {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt!
  login: String
  start_date: String
  whid: String
}

type DeepdiveAvgAggregate {
  id: Float
}

input DeepdiveAvgOrderByAggregateInput {
  id: SortOrder
}

type DeepdiveCountAggregate {
  _all: Int!
  attendees: Int!
  content: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  login: Int!
  start_date: Int!
  whid: Int!
}

input DeepdiveCountOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input DeepdiveCreateInput {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveCreateManyInput {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

type DeepdiveGroupBy {
  _avg: DeepdiveAvgAggregate
  _count: DeepdiveCountAggregate
  _max: DeepdiveMaxAggregate
  _min: DeepdiveMinAggregate
  _sum: DeepdiveSumAggregate
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt!
  login: String
  start_date: String
  whid: String
}

type DeepdiveMaxAggregate {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveMaxOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

type DeepdiveMinAggregate {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveMinOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum DeepdiveOrderByRelevanceFieldEnum {
  attendees
  content
  end_date
  login
  start_date
  whid
}

input DeepdiveOrderByRelevanceInput {
  fields: [DeepdiveOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DeepdiveOrderByWithAggregationInput {
  _avg: DeepdiveAvgOrderByAggregateInput
  _count: DeepdiveCountOrderByAggregateInput
  _max: DeepdiveMaxOrderByAggregateInput
  _min: DeepdiveMinOrderByAggregateInput
  _sum: DeepdiveSumOrderByAggregateInput
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input DeepdiveOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DeepdiveOrderByRelevanceInput
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum DeepdiveScalarFieldEnum {
  attendees
  content
  created_at
  end_date
  id
  login
  start_date
  whid
}

input DeepdiveScalarWhereWithAggregatesInput {
  AND: [DeepdiveScalarWhereWithAggregatesInput!]
  NOT: [DeepdiveScalarWhereWithAggregatesInput!]
  OR: [DeepdiveScalarWhereWithAggregatesInput!]
  attendees: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type DeepdiveSumAggregate {
  id: BigInt
}

input DeepdiveSumOrderByAggregateInput {
  id: SortOrder
}

input DeepdiveUpdateInput {
  attendees: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input DeepdiveUpdateManyMutationInput {
  attendees: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input DeepdiveWhereInput {
  AND: [DeepdiveWhereInput!]
  NOT: [DeepdiveWhereInput!]
  OR: [DeepdiveWhereInput!]
  attendees: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  login: StringNullableFilter
  start_date: StringNullableFilter
  whid: StringNullableFilter
}

input DeepdiveWhereUniqueInput {
  id: BigInt
}

type Digiboard {
  board: String
  course: String
  created_at: DateTime!
  id: Int!
  name: String!
  student: String
}

type DigiboardAvgAggregate {
  id: Float
}

input DigiboardAvgOrderByAggregateInput {
  id: SortOrder
}

type DigiboardCountAggregate {
  _all: Int!
  board: Int!
  course: Int!
  created_at: Int!
  id: Int!
  name: Int!
  student: Int!
}

input DigiboardCountOrderByAggregateInput {
  board: SortOrder
  course: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  student: SortOrder
}

input DigiboardCreateInput {
  board: String
  course: String
  created_at: DateTime
  name: String!
  student: String
}

input DigiboardCreateManyInput {
  board: String
  course: String
  created_at: DateTime
  id: Int
  name: String!
  student: String
}

type DigiboardGroupBy {
  _avg: DigiboardAvgAggregate
  _count: DigiboardCountAggregate
  _max: DigiboardMaxAggregate
  _min: DigiboardMinAggregate
  _sum: DigiboardSumAggregate
  board: String
  course: String
  created_at: DateTime!
  id: Int!
  name: String!
  student: String
}

type DigiboardMaxAggregate {
  board: String
  course: String
  created_at: DateTime
  id: Int
  name: String
  student: String
}

input DigiboardMaxOrderByAggregateInput {
  board: SortOrder
  course: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  student: SortOrder
}

type DigiboardMinAggregate {
  board: String
  course: String
  created_at: DateTime
  id: Int
  name: String
  student: String
}

input DigiboardMinOrderByAggregateInput {
  board: SortOrder
  course: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  student: SortOrder
}

enum DigiboardOrderByRelevanceFieldEnum {
  board
  course
  name
  student
}

input DigiboardOrderByRelevanceInput {
  fields: [DigiboardOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DigiboardOrderByWithAggregationInput {
  _avg: DigiboardAvgOrderByAggregateInput
  _count: DigiboardCountOrderByAggregateInput
  _max: DigiboardMaxOrderByAggregateInput
  _min: DigiboardMinOrderByAggregateInput
  _sum: DigiboardSumOrderByAggregateInput
  board: SortOrder
  course: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  student: SortOrder
}

input DigiboardOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DigiboardOrderByRelevanceInput
  board: SortOrder
  course: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  student: SortOrder
}

enum DigiboardScalarFieldEnum {
  board
  course
  created_at
  id
  name
  student
}

input DigiboardScalarWhereWithAggregatesInput {
  AND: [DigiboardScalarWhereWithAggregatesInput!]
  NOT: [DigiboardScalarWhereWithAggregatesInput!]
  OR: [DigiboardScalarWhereWithAggregatesInput!]
  board: StringNullableWithAggregatesFilter
  course: StringNullableWithAggregatesFilter
  created_at: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  student: StringNullableWithAggregatesFilter
}

type DigiboardSumAggregate {
  id: Int
}

input DigiboardSumOrderByAggregateInput {
  id: SortOrder
}

input DigiboardUpdateInput {
  board: NullableStringFieldUpdateOperationsInput
  course: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  student: NullableStringFieldUpdateOperationsInput
}

input DigiboardUpdateManyMutationInput {
  board: NullableStringFieldUpdateOperationsInput
  course: NullableStringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  student: NullableStringFieldUpdateOperationsInput
}

input DigiboardWhereInput {
  AND: [DigiboardWhereInput!]
  NOT: [DigiboardWhereInput!]
  OR: [DigiboardWhereInput!]
  board: StringNullableFilter
  course: StringNullableFilter
  created_at: DateTimeFilter
  id: IntFilter
  name: StringFilter
  student: StringNullableFilter
}

input DigiboardWhereUniqueInput {
  id: Int
}

type Emails {
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int!
  media: String
  staff_id: Int
  subject: String
  users: String
}

type EmailsAvgAggregate {
  cust_id: Float
  id: Float
  staff_id: Float
}

input EmailsAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
}

type EmailsCountAggregate {
  _all: Int!
  bcc: Int!
  cc: Int!
  content: Int!
  created_at: Int!
  cust_id: Int!
  customers: Int!
  from: Int!
  id: Int!
  media: Int!
  staff_id: Int!
  subject: Int!
  users: Int!
}

input EmailsCountOrderByAggregateInput {
  bcc: SortOrder
  cc: SortOrder
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

input EmailsCreateInput {
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  media: String
  staff_id: Int
  subject: String
  users: String
}

input EmailsCreateManyInput {
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int
  media: String
  staff_id: Int
  subject: String
  users: String
}

type EmailsGroupBy {
  _avg: EmailsAvgAggregate
  _count: EmailsCountAggregate
  _max: EmailsMaxAggregate
  _min: EmailsMinAggregate
  _sum: EmailsSumAggregate
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int!
  media: String
  staff_id: Int
  subject: String
  users: String
}

type EmailsMaxAggregate {
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int
  customers: String
  from: String
  id: Int
  media: String
  staff_id: Int
  subject: String
  users: String
}

input EmailsMaxOrderByAggregateInput {
  bcc: SortOrder
  cc: SortOrder
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

type EmailsMinAggregate {
  bcc: String
  cc: String
  content: String
  created_at: DateTime
  cust_id: Int
  customers: String
  from: String
  id: Int
  media: String
  staff_id: Int
  subject: String
  users: String
}

input EmailsMinOrderByAggregateInput {
  bcc: SortOrder
  cc: SortOrder
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

enum EmailsOrderByRelevanceFieldEnum {
  bcc
  cc
  content
  customers
  from
  media
  subject
  users
}

input EmailsOrderByRelevanceInput {
  fields: [EmailsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input EmailsOrderByWithAggregationInput {
  _avg: EmailsAvgOrderByAggregateInput
  _count: EmailsCountOrderByAggregateInput
  _max: EmailsMaxOrderByAggregateInput
  _min: EmailsMinOrderByAggregateInput
  _sum: EmailsSumOrderByAggregateInput
  bcc: SortOrder
  cc: SortOrder
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

input EmailsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: EmailsOrderByRelevanceInput
  bcc: SortOrder
  cc: SortOrder
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

enum EmailsScalarFieldEnum {
  bcc
  cc
  content
  created_at
  cust_id
  customers
  from
  id
  media
  staff_id
  subject
  users
}

input EmailsScalarWhereWithAggregatesInput {
  AND: [EmailsScalarWhereWithAggregatesInput!]
  NOT: [EmailsScalarWhereWithAggregatesInput!]
  OR: [EmailsScalarWhereWithAggregatesInput!]
  bcc: StringNullableWithAggregatesFilter
  cc: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  from: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  staff_id: IntNullableWithAggregatesFilter
  subject: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type EmailsSumAggregate {
  cust_id: Int
  id: Int
  staff_id: Int
}

input EmailsSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
}

input EmailsUpdateInput {
  bcc: NullableStringFieldUpdateOperationsInput
  cc: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  from: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input EmailsUpdateManyMutationInput {
  bcc: NullableStringFieldUpdateOperationsInput
  cc: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  from: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input EmailsWhereInput {
  AND: [EmailsWhereInput!]
  NOT: [EmailsWhereInput!]
  OR: [EmailsWhereInput!]
  bcc: StringNullableFilter
  cc: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  from: StringNullableFilter
  id: IntFilter
  media: StringNullableFilter
  staff_id: IntNullableFilter
  subject: StringNullableFilter
  users: StringNullableFilter
}

input EmailsWhereUniqueInput {
  id: Int
}

type Endofshift {
  content: String
  created_at: DateTime
  id: BigInt!
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftAvgAggregate {
  id: Float
}

input EndofshiftAvgOrderByAggregateInput {
  id: SortOrder
}

type EndofshiftCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  id: Int!
  login: Int!
  mcms: Int!
  next_shift: Int!
  projects: Int!
  tickets: Int!
  whid: Int!
}

input EndofshiftCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

input EndofshiftCreateInput {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftCreateManyInput {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftGroupBy {
  _avg: EndofshiftAvgAggregate
  _count: EndofshiftCountAggregate
  _max: EndofshiftMaxAggregate
  _min: EndofshiftMinAggregate
  _sum: EndofshiftSumAggregate
  content: String
  created_at: DateTime
  id: BigInt!
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftMaxAggregate {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

type EndofshiftMinAggregate {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

enum EndofshiftOrderByRelevanceFieldEnum {
  content
  login
  mcms
  next_shift
  projects
  tickets
  whid
}

input EndofshiftOrderByRelevanceInput {
  fields: [EndofshiftOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input EndofshiftOrderByWithAggregationInput {
  _avg: EndofshiftAvgOrderByAggregateInput
  _count: EndofshiftCountOrderByAggregateInput
  _max: EndofshiftMaxOrderByAggregateInput
  _min: EndofshiftMinOrderByAggregateInput
  _sum: EndofshiftSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

input EndofshiftOrderByWithRelationAndSearchRelevanceInput {
  _relevance: EndofshiftOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

enum EndofshiftScalarFieldEnum {
  content
  created_at
  id
  login
  mcms
  next_shift
  projects
  tickets
  whid
}

input EndofshiftScalarWhereWithAggregatesInput {
  AND: [EndofshiftScalarWhereWithAggregatesInput!]
  NOT: [EndofshiftScalarWhereWithAggregatesInput!]
  OR: [EndofshiftScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  mcms: StringNullableWithAggregatesFilter
  next_shift: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type EndofshiftSumAggregate {
  id: BigInt
}

input EndofshiftSumOrderByAggregateInput {
  id: SortOrder
}

input EndofshiftUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  mcms: NullableStringFieldUpdateOperationsInput
  next_shift: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input EndofshiftUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  mcms: NullableStringFieldUpdateOperationsInput
  next_shift: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input EndofshiftWhereInput {
  AND: [EndofshiftWhereInput!]
  NOT: [EndofshiftWhereInput!]
  OR: [EndofshiftWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  login: StringNullableFilter
  mcms: StringNullableFilter
  next_shift: StringNullableFilter
  projects: StringNullableFilter
  tickets: StringNullableFilter
  whid: StringNullableFilter
}

input EndofshiftWhereUniqueInput {
  id: BigInt
}

type Events {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt!
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

type EventsAvgAggregate {
  id: Float
}

input EventsAvgOrderByAggregateInput {
  id: SortOrder
}

type EventsCountAggregate {
  _all: Int!
  category: Int!
  city: Int!
  content: Int!
  country: Int!
  created_at: Int!
  end: Int!
  id: Int!
  image: Int!
  name: Int!
  postalcode: Int!
  start: Int!
  state: Int!
  tickets: Int!
}

input EventsCountOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
}

input EventsCreateInput {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

input EventsCreateManyInput {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

type EventsGroupBy {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt!
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

type EventsMaxAggregate {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

input EventsMaxOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
}

type EventsMinAggregate {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
}

input EventsMinOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
}

enum EventsOrderByRelevanceFieldEnum {
  category
  city
  content
  country
  end
  image
  name
  postalcode
  start
  state
  tickets
}

input EventsOrderByRelevanceInput {
  fields: [EventsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input EventsOrderByWithAggregationInput {
  _avg: EventsAvgOrderByAggregateInput
  _count: EventsCountOrderByAggregateInput
  _max: EventsMaxOrderByAggregateInput
  _min: EventsMinOrderByAggregateInput
  _sum: EventsSumOrderByAggregateInput
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
}

input EventsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: EventsOrderByRelevanceInput
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
}

enum EventsScalarFieldEnum {
  category
  city
  content
  country
  created_at
  end
  id
  image
  name
  postalcode
  start
  state
  tickets
}

input EventsScalarWhereWithAggregatesInput {
  AND: [EventsScalarWhereWithAggregatesInput!]
  NOT: [EventsScalarWhereWithAggregatesInput!]
  OR: [EventsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  end: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  postalcode: StringNullableWithAggregatesFilter
  start: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
}

type EventsSumAggregate {
  id: BigInt
}

input EventsSumOrderByAggregateInput {
  id: SortOrder
}

input EventsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  start: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
}

input EventsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  start: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
}

input EventsWhereInput {
  AND: [EventsWhereInput!]
  NOT: [EventsWhereInput!]
  OR: [EventsWhereInput!]
  category: StringNullableFilter
  city: StringNullableFilter
  content: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  end: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringNullableFilter
  postalcode: StringNullableFilter
  start: StringNullableFilter
  state: StringNullableFilter
  tickets: StringNullableFilter
}

input EventsWhereUniqueInput {
  id: BigInt
}

type Fullfillments {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt!
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsAvgAggregate {
  id: Float
}

input FullfillmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type FullfillmentsCountAggregate {
  _all: Int!
  address: Int!
  address_two: Int!
  city: Int!
  company: Int!
  country: Int!
  country_area: Int!
  created_at: Int!
  id: Int!
  name: Int!
  phone: Int!
  pickup: Int!
  shipping_zones: Int!
  state: Int!
  stock: Int!
  zipcode: Int!
}

input FullfillmentsCountOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

input FullfillmentsCreateInput {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsCreateManyInput {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsGroupBy {
  _avg: FullfillmentsAvgAggregate
  _count: FullfillmentsCountAggregate
  _max: FullfillmentsMaxAggregate
  _min: FullfillmentsMinAggregate
  _sum: FullfillmentsSumAggregate
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt!
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsMaxAggregate {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsMaxOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

type FullfillmentsMinAggregate {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsMinOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

enum FullfillmentsOrderByRelevanceFieldEnum {
  address
  address_two
  city
  company
  country
  country_area
  name
  phone
  pickup
  shipping_zones
  state
  stock
  zipcode
}

input FullfillmentsOrderByRelevanceInput {
  fields: [FullfillmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input FullfillmentsOrderByWithAggregationInput {
  _avg: FullfillmentsAvgOrderByAggregateInput
  _count: FullfillmentsCountOrderByAggregateInput
  _max: FullfillmentsMaxOrderByAggregateInput
  _min: FullfillmentsMinOrderByAggregateInput
  _sum: FullfillmentsSumOrderByAggregateInput
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

input FullfillmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: FullfillmentsOrderByRelevanceInput
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

enum FullfillmentsScalarFieldEnum {
  address
  address_two
  city
  company
  country
  country_area
  created_at
  id
  name
  phone
  pickup
  shipping_zones
  state
  stock
  zipcode
}

input FullfillmentsScalarWhereWithAggregatesInput {
  AND: [FullfillmentsScalarWhereWithAggregatesInput!]
  NOT: [FullfillmentsScalarWhereWithAggregatesInput!]
  OR: [FullfillmentsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  address_two: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  company: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  country_area: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  pickup: StringNullableWithAggregatesFilter
  shipping_zones: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  stock: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type FullfillmentsSumAggregate {
  id: BigInt
}

input FullfillmentsSumOrderByAggregateInput {
  id: SortOrder
}

input FullfillmentsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  country_area: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  pickup: NullableStringFieldUpdateOperationsInput
  shipping_zones: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  stock: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input FullfillmentsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  country_area: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  pickup: NullableStringFieldUpdateOperationsInput
  shipping_zones: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  stock: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input FullfillmentsWhereInput {
  AND: [FullfillmentsWhereInput!]
  NOT: [FullfillmentsWhereInput!]
  OR: [FullfillmentsWhereInput!]
  address: StringNullableFilter
  address_two: StringNullableFilter
  city: StringNullableFilter
  company: StringNullableFilter
  country: StringNullableFilter
  country_area: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  phone: StringNullableFilter
  pickup: StringNullableFilter
  shipping_zones: StringNullableFilter
  state: StringNullableFilter
  stock: StringNullableFilter
  zipcode: StringNullableFilter
}

input FullfillmentsWhereUniqueInput {
  id: BigInt
}

type Gift_certificates {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

type Gift_certificatesAvgAggregate {
  id: Float
}

input Gift_certificatesAvgOrderByAggregateInput {
  id: SortOrder
}

type Gift_certificatesCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  coupons: Int!
  customers: Int!
  discount: Int!
  excerpt: Int!
  expiration: Int!
  id: Int!
  image: Int!
  name: Int!
  products: Int!
  published: Int!
  rewards: Int!
  special_offers: Int!
  type: Int!
  users: Int!
}

input Gift_certificatesCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  type: SortOrder
  users: SortOrder
}

input Gift_certificatesCreateInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

input Gift_certificatesCreateManyInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

type Gift_certificatesGroupBy {
  _avg: Gift_certificatesAvgAggregate
  _count: Gift_certificatesCountAggregate
  _max: Gift_certificatesMaxAggregate
  _min: Gift_certificatesMinAggregate
  _sum: Gift_certificatesSumAggregate
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

type Gift_certificatesMaxAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

input Gift_certificatesMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  type: SortOrder
  users: SortOrder
}

type Gift_certificatesMinAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  products: String
  published: DateTime
  rewards: String
  special_offers: String
  type: String
  users: String
}

input Gift_certificatesMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  type: SortOrder
  users: SortOrder
}

enum Gift_certificatesOrderByRelevanceFieldEnum {
  articles
  categories
  coupons
  customers
  discount
  excerpt
  expiration
  image
  name
  products
  rewards
  special_offers
  type
  users
}

input Gift_certificatesOrderByRelevanceInput {
  fields: [Gift_certificatesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Gift_certificatesOrderByWithAggregationInput {
  _avg: Gift_certificatesAvgOrderByAggregateInput
  _count: Gift_certificatesCountOrderByAggregateInput
  _max: Gift_certificatesMaxOrderByAggregateInput
  _min: Gift_certificatesMinOrderByAggregateInput
  _sum: Gift_certificatesSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  type: SortOrder
  users: SortOrder
}

input Gift_certificatesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Gift_certificatesOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  type: SortOrder
  users: SortOrder
}

enum Gift_certificatesScalarFieldEnum {
  articles
  categories
  coupons
  customers
  discount
  excerpt
  expiration
  id
  image
  name
  products
  published
  rewards
  special_offers
  type
  users
}

input Gift_certificatesScalarWhereWithAggregatesInput {
  AND: [Gift_certificatesScalarWhereWithAggregatesInput!]
  NOT: [Gift_certificatesScalarWhereWithAggregatesInput!]
  OR: [Gift_certificatesScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  expiration: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  rewards: StringNullableWithAggregatesFilter
  special_offers: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type Gift_certificatesSumAggregate {
  id: BigInt
}

input Gift_certificatesSumOrderByAggregateInput {
  id: SortOrder
}

input Gift_certificatesUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input Gift_certificatesUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input Gift_certificatesWhereInput {
  AND: [Gift_certificatesWhereInput!]
  NOT: [Gift_certificatesWhereInput!]
  OR: [Gift_certificatesWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  customers: StringNullableFilter
  discount: StringNullableFilter
  excerpt: StringNullableFilter
  expiration: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  published: DateTimeNullableFilter
  rewards: StringNullableFilter
  special_offers: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
}

input Gift_certificatesWhereUniqueInput {
  id: BigInt
}

type Glossary {
  content: String
  id: Int!
  image: String
  name: String!
  published: DateTime
}

type GlossaryAvgAggregate {
  id: Float
}

input GlossaryAvgOrderByAggregateInput {
  id: SortOrder
}

type GlossaryCountAggregate {
  _all: Int!
  content: Int!
  id: Int!
  image: Int!
  name: Int!
  published: Int!
}

input GlossaryCountOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

input GlossaryCreateInput {
  content: String
  image: String
  name: String!
  published: DateTime
}

input GlossaryCreateManyInput {
  content: String
  id: Int
  image: String
  name: String!
  published: DateTime
}

type GlossaryGroupBy {
  _avg: GlossaryAvgAggregate
  _count: GlossaryCountAggregate
  _max: GlossaryMaxAggregate
  _min: GlossaryMinAggregate
  _sum: GlossarySumAggregate
  content: String
  id: Int!
  image: String
  name: String!
  published: DateTime
}

type GlossaryMaxAggregate {
  content: String
  id: Int
  image: String
  name: String
  published: DateTime
}

input GlossaryMaxOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

type GlossaryMinAggregate {
  content: String
  id: Int
  image: String
  name: String
  published: DateTime
}

input GlossaryMinOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

enum GlossaryOrderByRelevanceFieldEnum {
  content
  image
  name
}

input GlossaryOrderByRelevanceInput {
  fields: [GlossaryOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input GlossaryOrderByWithAggregationInput {
  _avg: GlossaryAvgOrderByAggregateInput
  _count: GlossaryCountOrderByAggregateInput
  _max: GlossaryMaxOrderByAggregateInput
  _min: GlossaryMinOrderByAggregateInput
  _sum: GlossarySumOrderByAggregateInput
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

input GlossaryOrderByWithRelationAndSearchRelevanceInput {
  _relevance: GlossaryOrderByRelevanceInput
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

enum GlossaryScalarFieldEnum {
  content
  id
  image
  name
  published
}

input GlossaryScalarWhereWithAggregatesInput {
  AND: [GlossaryScalarWhereWithAggregatesInput!]
  NOT: [GlossaryScalarWhereWithAggregatesInput!]
  OR: [GlossaryScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
}

type GlossarySumAggregate {
  id: Int
}

input GlossarySumOrderByAggregateInput {
  id: SortOrder
}

input GlossaryUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
}

input GlossaryUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
}

input GlossaryWhereInput {
  AND: [GlossaryWhereInput!]
  NOT: [GlossaryWhereInput!]
  OR: [GlossaryWhereInput!]
  content: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  published: DateTimeNullableFilter
}

input GlossaryWhereUniqueInput {
  id: Int
}

type Importm {
  created_at: DateTime
  description: String
  file: String
  id: BigInt!
  image: String
  name: String
  url: String
}

type ImportmAvgAggregate {
  id: Float
}

input ImportmAvgOrderByAggregateInput {
  id: SortOrder
}

type ImportmCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  file: Int!
  id: Int!
  image: Int!
  name: Int!
  url: Int!
}

input ImportmCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  file: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  url: SortOrder
}

input ImportmCreateInput {
  created_at: DateTime
  description: String
  file: String
  id: BigInt
  image: String
  name: String
  url: String
}

input ImportmCreateManyInput {
  created_at: DateTime
  description: String
  file: String
  id: BigInt
  image: String
  name: String
  url: String
}

type ImportmGroupBy {
  _avg: ImportmAvgAggregate
  _count: ImportmCountAggregate
  _max: ImportmMaxAggregate
  _min: ImportmMinAggregate
  _sum: ImportmSumAggregate
  created_at: DateTime
  description: String
  file: String
  id: BigInt!
  image: String
  name: String
  url: String
}

type ImportmMaxAggregate {
  created_at: DateTime
  description: String
  file: String
  id: BigInt
  image: String
  name: String
  url: String
}

input ImportmMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  file: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  url: SortOrder
}

type ImportmMinAggregate {
  created_at: DateTime
  description: String
  file: String
  id: BigInt
  image: String
  name: String
  url: String
}

input ImportmMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  file: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  url: SortOrder
}

enum ImportmOrderByRelevanceFieldEnum {
  description
  file
  image
  name
  url
}

input ImportmOrderByRelevanceInput {
  fields: [ImportmOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ImportmOrderByWithAggregationInput {
  _avg: ImportmAvgOrderByAggregateInput
  _count: ImportmCountOrderByAggregateInput
  _max: ImportmMaxOrderByAggregateInput
  _min: ImportmMinOrderByAggregateInput
  _sum: ImportmSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  file: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  url: SortOrder
}

input ImportmOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ImportmOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  file: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  url: SortOrder
}

enum ImportmScalarFieldEnum {
  created_at
  description
  file
  id
  image
  name
  url
}

input ImportmScalarWhereWithAggregatesInput {
  AND: [ImportmScalarWhereWithAggregatesInput!]
  NOT: [ImportmScalarWhereWithAggregatesInput!]
  OR: [ImportmScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  file: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type ImportmSumAggregate {
  id: BigInt
}

input ImportmSumOrderByAggregateInput {
  id: SortOrder
}

input ImportmUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input ImportmUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input ImportmWhereInput {
  AND: [ImportmWhereInput!]
  NOT: [ImportmWhereInput!]
  OR: [ImportmWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  file: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringNullableFilter
  url: StringNullableFilter
}

input ImportmWhereUniqueInput {
  id: BigInt
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Integrations {
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsAvgAggregate {
  id: Float
}

input IntegrationsAvgOrderByAggregateInput {
  id: SortOrder
}

type IntegrationsCountAggregate {
  _all: Int!
  category: Int!
  content: Int!
  created_at: Int!
  id: Int!
  location: Int!
  media: Int!
  name: Int!
}

input IntegrationsCountOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsCreateInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsCreateManyInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

type IntegrationsGroupBy {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsMaxAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMaxOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

type IntegrationsMinAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMinOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsOrderByRelevanceFieldEnum {
  category
  content
  location
  media
  name
}

input IntegrationsOrderByRelevanceInput {
  fields: [IntegrationsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input IntegrationsOrderByWithAggregationInput {
  _avg: IntegrationsAvgOrderByAggregateInput
  _count: IntegrationsCountOrderByAggregateInput
  _max: IntegrationsMaxOrderByAggregateInput
  _min: IntegrationsMinOrderByAggregateInput
  _sum: IntegrationsSumOrderByAggregateInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: IntegrationsOrderByRelevanceInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsScalarFieldEnum {
  category
  content
  created_at
  id
  location
  media
  name
}

input IntegrationsScalarWhereWithAggregatesInput {
  AND: [IntegrationsScalarWhereWithAggregatesInput!]
  NOT: [IntegrationsScalarWhereWithAggregatesInput!]
  OR: [IntegrationsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type IntegrationsSumAggregate {
  id: BigInt
}

input IntegrationsSumOrderByAggregateInput {
  id: SortOrder
}

input IntegrationsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsWhereInput {
  AND: [IntegrationsWhereInput!]
  NOT: [IntegrationsWhereInput!]
  OR: [IntegrationsWhereInput!]
  category: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
}

input IntegrationsWhereUniqueInput {
  id: BigInt
}

type Internalization {
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationAvgAggregate {
  id: Float
}

input InternalizationAvgOrderByAggregateInput {
  id: SortOrder
}

type InternalizationCountAggregate {
  _all: Int!
  created_at: Int!
  default: Int!
  description: Int!
  id: Int!
  name: Int!
  region: Int!
  website: Int!
}

input InternalizationCountOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationCreateInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationCreateManyInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

type InternalizationGroupBy {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationMaxAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMaxOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

type InternalizationMinAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMinOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationOrderByRelevanceFieldEnum {
  default
  description
  name
  region
  website
}

input InternalizationOrderByRelevanceInput {
  fields: [InternalizationOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InternalizationOrderByWithAggregationInput {
  _avg: InternalizationAvgOrderByAggregateInput
  _count: InternalizationCountOrderByAggregateInput
  _max: InternalizationMaxOrderByAggregateInput
  _min: InternalizationMinOrderByAggregateInput
  _sum: InternalizationSumOrderByAggregateInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InternalizationOrderByRelevanceInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationScalarFieldEnum {
  created_at
  default
  description
  id
  name
  region
  website
}

input InternalizationScalarWhereWithAggregatesInput {
  AND: [InternalizationScalarWhereWithAggregatesInput!]
  NOT: [InternalizationScalarWhereWithAggregatesInput!]
  OR: [InternalizationScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  default: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type InternalizationSumAggregate {
  id: BigInt
}

input InternalizationSumOrderByAggregateInput {
  id: SortOrder
}

input InternalizationUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationWhereInput {
  AND: [InternalizationWhereInput!]
  NOT: [InternalizationWhereInput!]
  OR: [InternalizationWhereInput!]
  created_at: DateTimeNullableFilter
  default: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  region: StringNullableFilter
  website: StringNullableFilter
}

input InternalizationWhereUniqueInput {
  id: BigInt
}

type Invitations {
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt!
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

type InvitationsAvgAggregate {
  id: Float
}

input InvitationsAvgOrderByAggregateInput {
  id: SortOrder
}

type InvitationsCountAggregate {
  _all: Int!
  billingAddress: Int!
  content: Int!
  created_at: Int!
  email: Int!
  grandTotalPurchased: Int!
  id: Int!
  invoiceDate: Int!
  media: Int!
  orderNumber: Int!
  paymentMethod: Int!
  shippingAddress: Int!
  status: Int!
}

input InvitationsCountOrderByAggregateInput {
  billingAddress: SortOrder
  content: SortOrder
  created_at: SortOrder
  email: SortOrder
  grandTotalPurchased: SortOrder
  id: SortOrder
  invoiceDate: SortOrder
  media: SortOrder
  orderNumber: SortOrder
  paymentMethod: SortOrder
  shippingAddress: SortOrder
  status: SortOrder
}

input InvitationsCreateInput {
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

input InvitationsCreateManyInput {
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

type InvitationsGroupBy {
  _avg: InvitationsAvgAggregate
  _count: InvitationsCountAggregate
  _max: InvitationsMaxAggregate
  _min: InvitationsMinAggregate
  _sum: InvitationsSumAggregate
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt!
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

type InvitationsMaxAggregate {
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

input InvitationsMaxOrderByAggregateInput {
  billingAddress: SortOrder
  content: SortOrder
  created_at: SortOrder
  email: SortOrder
  grandTotalPurchased: SortOrder
  id: SortOrder
  invoiceDate: SortOrder
  media: SortOrder
  orderNumber: SortOrder
  paymentMethod: SortOrder
  shippingAddress: SortOrder
  status: SortOrder
}

type InvitationsMinAggregate {
  billingAddress: String
  content: String
  created_at: DateTime
  email: String
  grandTotalPurchased: String
  id: BigInt
  invoiceDate: DateTime
  media: String
  orderNumber: String
  paymentMethod: String
  shippingAddress: String
  status: String
}

input InvitationsMinOrderByAggregateInput {
  billingAddress: SortOrder
  content: SortOrder
  created_at: SortOrder
  email: SortOrder
  grandTotalPurchased: SortOrder
  id: SortOrder
  invoiceDate: SortOrder
  media: SortOrder
  orderNumber: SortOrder
  paymentMethod: SortOrder
  shippingAddress: SortOrder
  status: SortOrder
}

enum InvitationsOrderByRelevanceFieldEnum {
  billingAddress
  content
  email
  grandTotalPurchased
  media
  orderNumber
  paymentMethod
  shippingAddress
  status
}

input InvitationsOrderByRelevanceInput {
  fields: [InvitationsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InvitationsOrderByWithAggregationInput {
  _avg: InvitationsAvgOrderByAggregateInput
  _count: InvitationsCountOrderByAggregateInput
  _max: InvitationsMaxOrderByAggregateInput
  _min: InvitationsMinOrderByAggregateInput
  _sum: InvitationsSumOrderByAggregateInput
  billingAddress: SortOrder
  content: SortOrder
  created_at: SortOrder
  email: SortOrder
  grandTotalPurchased: SortOrder
  id: SortOrder
  invoiceDate: SortOrder
  media: SortOrder
  orderNumber: SortOrder
  paymentMethod: SortOrder
  shippingAddress: SortOrder
  status: SortOrder
}

input InvitationsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InvitationsOrderByRelevanceInput
  billingAddress: SortOrder
  content: SortOrder
  created_at: SortOrder
  email: SortOrder
  grandTotalPurchased: SortOrder
  id: SortOrder
  invoiceDate: SortOrder
  media: SortOrder
  orderNumber: SortOrder
  paymentMethod: SortOrder
  shippingAddress: SortOrder
  status: SortOrder
}

enum InvitationsScalarFieldEnum {
  billingAddress
  content
  created_at
  email
  grandTotalPurchased
  id
  invoiceDate
  media
  orderNumber
  paymentMethod
  shippingAddress
  status
}

input InvitationsScalarWhereWithAggregatesInput {
  AND: [InvitationsScalarWhereWithAggregatesInput!]
  NOT: [InvitationsScalarWhereWithAggregatesInput!]
  OR: [InvitationsScalarWhereWithAggregatesInput!]
  billingAddress: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  grandTotalPurchased: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  invoiceDate: DateTimeNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  orderNumber: StringNullableWithAggregatesFilter
  paymentMethod: StringNullableWithAggregatesFilter
  shippingAddress: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
}

type InvitationsSumAggregate {
  id: BigInt
}

input InvitationsSumOrderByAggregateInput {
  id: SortOrder
}

input InvitationsUpdateInput {
  billingAddress: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grandTotalPurchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoiceDate: NullableDateTimeFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  orderNumber: NullableStringFieldUpdateOperationsInput
  paymentMethod: NullableStringFieldUpdateOperationsInput
  shippingAddress: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input InvitationsUpdateManyMutationInput {
  billingAddress: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grandTotalPurchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoiceDate: NullableDateTimeFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  orderNumber: NullableStringFieldUpdateOperationsInput
  paymentMethod: NullableStringFieldUpdateOperationsInput
  shippingAddress: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input InvitationsWhereInput {
  AND: [InvitationsWhereInput!]
  NOT: [InvitationsWhereInput!]
  OR: [InvitationsWhereInput!]
  billingAddress: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  email: StringNullableFilter
  grandTotalPurchased: StringNullableFilter
  id: BigIntFilter
  invoiceDate: DateTimeNullableFilter
  media: StringNullableFilter
  orderNumber: StringNullableFilter
  paymentMethod: StringNullableFilter
  shippingAddress: StringNullableFilter
  status: StringNullableFilter
}

input InvitationsWhereUniqueInput {
  id: BigInt
}

type Invoices {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt!
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesAvgAggregate {
  id: Float
  invoice: Float
  order_number: Float
}

input InvoicesAvgOrderByAggregateInput {
  id: SortOrder
  invoice: SortOrder
  order_number: SortOrder
}

type InvoicesCountAggregate {
  _all: Int!
  bill_to_name: Int!
  billing_address: Int!
  customer_group: Int!
  customer_name: Int!
  email: Int!
  grand_total_base: Int!
  grand_total_purchased: Int!
  id: Int!
  invoice: Int!
  invoice_date: Int!
  order_number: Int!
  payment_method: Int!
  shipping_address: Int!
  shipping_and_handling: Int!
  shipping_information: Int!
  status: Int!
  subtotal: Int!
}

input InvoicesCountOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

input InvoicesCreateInput {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesCreateManyInput {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesGroupBy {
  _avg: InvoicesAvgAggregate
  _count: InvoicesCountAggregate
  _max: InvoicesMaxAggregate
  _min: InvoicesMinAggregate
  _sum: InvoicesSumAggregate
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt!
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesMaxAggregate {
  bill_to_name: String
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int
  invoice_date: DateTime
  order_number: BigInt
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesMaxOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

type InvoicesMinAggregate {
  bill_to_name: String
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int
  invoice_date: DateTime
  order_number: BigInt
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesMinOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

enum InvoicesOrderByRelevanceFieldEnum {
  bill_to_name
  billing_address
  customer_group
  customer_name
  email
  grand_total_base
  grand_total_purchased
  payment_method
  shipping_address
  shipping_and_handling
  shipping_information
  status
  subtotal
}

input InvoicesOrderByRelevanceInput {
  fields: [InvoicesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InvoicesOrderByWithAggregationInput {
  _avg: InvoicesAvgOrderByAggregateInput
  _count: InvoicesCountOrderByAggregateInput
  _max: InvoicesMaxOrderByAggregateInput
  _min: InvoicesMinOrderByAggregateInput
  _sum: InvoicesSumOrderByAggregateInput
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

input InvoicesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InvoicesOrderByRelevanceInput
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

enum InvoicesScalarFieldEnum {
  bill_to_name
  billing_address
  customer_group
  customer_name
  email
  grand_total_base
  grand_total_purchased
  id
  invoice
  invoice_date
  order_number
  payment_method
  shipping_address
  shipping_and_handling
  shipping_information
  status
  subtotal
}

input InvoicesScalarWhereWithAggregatesInput {
  AND: [InvoicesScalarWhereWithAggregatesInput!]
  NOT: [InvoicesScalarWhereWithAggregatesInput!]
  OR: [InvoicesScalarWhereWithAggregatesInput!]
  bill_to_name: StringWithAggregatesFilter
  billing_address: StringNullableWithAggregatesFilter
  customer_group: StringNullableWithAggregatesFilter
  customer_name: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  grand_total_base: StringNullableWithAggregatesFilter
  grand_total_purchased: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  invoice: IntWithAggregatesFilter
  invoice_date: DateTimeNullableWithAggregatesFilter
  order_number: BigIntWithAggregatesFilter
  payment_method: StringNullableWithAggregatesFilter
  shipping_address: StringNullableWithAggregatesFilter
  shipping_and_handling: StringNullableWithAggregatesFilter
  shipping_information: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
}

type InvoicesSumAggregate {
  id: BigInt
  invoice: Int
  order_number: BigInt
}

input InvoicesSumOrderByAggregateInput {
  id: SortOrder
  invoice: SortOrder
  order_number: SortOrder
}

input InvoicesUpdateInput {
  bill_to_name: StringFieldUpdateOperationsInput
  billing_address: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableStringFieldUpdateOperationsInput
  grand_total_purchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoice: IntFieldUpdateOperationsInput
  invoice_date: NullableDateTimeFieldUpdateOperationsInput
  order_number: BigIntFieldUpdateOperationsInput
  payment_method: NullableStringFieldUpdateOperationsInput
  shipping_address: NullableStringFieldUpdateOperationsInput
  shipping_and_handling: NullableStringFieldUpdateOperationsInput
  shipping_information: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
}

input InvoicesUpdateManyMutationInput {
  bill_to_name: StringFieldUpdateOperationsInput
  billing_address: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableStringFieldUpdateOperationsInput
  grand_total_purchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoice: IntFieldUpdateOperationsInput
  invoice_date: NullableDateTimeFieldUpdateOperationsInput
  order_number: BigIntFieldUpdateOperationsInput
  payment_method: NullableStringFieldUpdateOperationsInput
  shipping_address: NullableStringFieldUpdateOperationsInput
  shipping_and_handling: NullableStringFieldUpdateOperationsInput
  shipping_information: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
}

input InvoicesWhereInput {
  AND: [InvoicesWhereInput!]
  NOT: [InvoicesWhereInput!]
  OR: [InvoicesWhereInput!]
  bill_to_name: StringFilter
  billing_address: StringNullableFilter
  customer_group: StringNullableFilter
  customer_name: StringNullableFilter
  email: StringNullableFilter
  grand_total_base: StringNullableFilter
  grand_total_purchased: StringNullableFilter
  id: BigIntFilter
  invoice: IntFilter
  invoice_date: DateTimeNullableFilter
  order_number: BigIntFilter
  payment_method: StringNullableFilter
  shipping_address: StringNullableFilter
  shipping_and_handling: StringNullableFilter
  shipping_information: StringNullableFilter
  status: StringNullableFilter
  subtotal: StringNullableFilter
}

input InvoicesWhereUniqueInput {
  id: BigInt
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Leads {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt!
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

type LeadsAvgAggregate {
  id: Float
}

input LeadsAvgOrderByAggregateInput {
  id: SortOrder
}

type LeadsCountAggregate {
  Prefix: Int!
  _all: Int!
  account_name: Int!
  address: Int!
  alt_address: Int!
  alt_city: Int!
  alt_country: Int!
  alt_postalcode: Int!
  alt_state: Int!
  campaign: Int!
  city: Int!
  country: Int!
  created_at: Int!
  customer_name: Int!
  department: Int!
  description: Int!
  email: Int!
  fax: Int!
  first_name: Int!
  id: Int!
  job_title: Int!
  last_name: Int!
  lead_source: Int!
  lead_source_description: Int!
  mobile: Int!
  office_phone: Int!
  opportunity_amount: Int!
  postalcode: Int!
  referred_by: Int!
  state: Int!
  status: Int!
  status_description: Int!
  website: Int!
}

input LeadsCountOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  email: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  lead_source: SortOrder
  lead_source_description: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  opportunity_amount: SortOrder
  postalcode: SortOrder
  referred_by: SortOrder
  state: SortOrder
  status: SortOrder
  status_description: SortOrder
  website: SortOrder
}

input LeadsCreateInput {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

input LeadsCreateManyInput {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

type LeadsGroupBy {
  Prefix: String
  _avg: LeadsAvgAggregate
  _count: LeadsCountAggregate
  _max: LeadsMaxAggregate
  _min: LeadsMinAggregate
  _sum: LeadsSumAggregate
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt!
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

type LeadsMaxAggregate {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

input LeadsMaxOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  email: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  lead_source: SortOrder
  lead_source_description: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  opportunity_amount: SortOrder
  postalcode: SortOrder
  referred_by: SortOrder
  state: SortOrder
  status: SortOrder
  status_description: SortOrder
  website: SortOrder
}

type LeadsMinAggregate {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  campaign: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  email: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  lead_source: String
  lead_source_description: String
  mobile: String
  office_phone: String
  opportunity_amount: String
  postalcode: String
  referred_by: String
  state: String
  status: String
  status_description: String
  website: String
}

input LeadsMinOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  email: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  lead_source: SortOrder
  lead_source_description: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  opportunity_amount: SortOrder
  postalcode: SortOrder
  referred_by: SortOrder
  state: SortOrder
  status: SortOrder
  status_description: SortOrder
  website: SortOrder
}

enum LeadsOrderByRelevanceFieldEnum {
  Prefix
  account_name
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  campaign
  city
  country
  customer_name
  department
  description
  email
  fax
  first_name
  job_title
  last_name
  lead_source
  lead_source_description
  mobile
  office_phone
  opportunity_amount
  postalcode
  referred_by
  state
  status
  status_description
  website
}

input LeadsOrderByRelevanceInput {
  fields: [LeadsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input LeadsOrderByWithAggregationInput {
  Prefix: SortOrder
  _avg: LeadsAvgOrderByAggregateInput
  _count: LeadsCountOrderByAggregateInput
  _max: LeadsMaxOrderByAggregateInput
  _min: LeadsMinOrderByAggregateInput
  _sum: LeadsSumOrderByAggregateInput
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  email: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  lead_source: SortOrder
  lead_source_description: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  opportunity_amount: SortOrder
  postalcode: SortOrder
  referred_by: SortOrder
  state: SortOrder
  status: SortOrder
  status_description: SortOrder
  website: SortOrder
}

input LeadsOrderByWithRelationAndSearchRelevanceInput {
  Prefix: SortOrder
  _relevance: LeadsOrderByRelevanceInput
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  campaign: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  email: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  lead_source: SortOrder
  lead_source_description: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  opportunity_amount: SortOrder
  postalcode: SortOrder
  referred_by: SortOrder
  state: SortOrder
  status: SortOrder
  status_description: SortOrder
  website: SortOrder
}

enum LeadsScalarFieldEnum {
  Prefix
  account_name
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  campaign
  city
  country
  created_at
  customer_name
  department
  description
  email
  fax
  first_name
  id
  job_title
  last_name
  lead_source
  lead_source_description
  mobile
  office_phone
  opportunity_amount
  postalcode
  referred_by
  state
  status
  status_description
  website
}

input LeadsScalarWhereWithAggregatesInput {
  AND: [LeadsScalarWhereWithAggregatesInput!]
  NOT: [LeadsScalarWhereWithAggregatesInput!]
  OR: [LeadsScalarWhereWithAggregatesInput!]
  Prefix: StringNullableWithAggregatesFilter
  account_name: StringNullableWithAggregatesFilter
  address: StringNullableWithAggregatesFilter
  alt_address: StringNullableWithAggregatesFilter
  alt_city: StringNullableWithAggregatesFilter
  alt_country: StringNullableWithAggregatesFilter
  alt_postalcode: StringNullableWithAggregatesFilter
  alt_state: StringNullableWithAggregatesFilter
  campaign: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customer_name: StringNullableWithAggregatesFilter
  department: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  fax: StringNullableWithAggregatesFilter
  first_name: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  job_title: StringNullableWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  lead_source: StringNullableWithAggregatesFilter
  lead_source_description: StringNullableWithAggregatesFilter
  mobile: StringNullableWithAggregatesFilter
  office_phone: StringNullableWithAggregatesFilter
  opportunity_amount: StringNullableWithAggregatesFilter
  postalcode: StringNullableWithAggregatesFilter
  referred_by: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  status_description: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type LeadsSumAggregate {
  id: BigInt
}

input LeadsSumOrderByAggregateInput {
  id: SortOrder
}

input LeadsUpdateInput {
  Prefix: NullableStringFieldUpdateOperationsInput
  account_name: NullableStringFieldUpdateOperationsInput
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  job_title: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  lead_source: NullableStringFieldUpdateOperationsInput
  lead_source_description: NullableStringFieldUpdateOperationsInput
  mobile: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  opportunity_amount: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  referred_by: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  status_description: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input LeadsUpdateManyMutationInput {
  Prefix: NullableStringFieldUpdateOperationsInput
  account_name: NullableStringFieldUpdateOperationsInput
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  job_title: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  lead_source: NullableStringFieldUpdateOperationsInput
  lead_source_description: NullableStringFieldUpdateOperationsInput
  mobile: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  opportunity_amount: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  referred_by: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  status_description: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input LeadsWhereInput {
  AND: [LeadsWhereInput!]
  NOT: [LeadsWhereInput!]
  OR: [LeadsWhereInput!]
  Prefix: StringNullableFilter
  account_name: StringNullableFilter
  address: StringNullableFilter
  alt_address: StringNullableFilter
  alt_city: StringNullableFilter
  alt_country: StringNullableFilter
  alt_postalcode: StringNullableFilter
  alt_state: StringNullableFilter
  campaign: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  customer_name: StringNullableFilter
  department: StringNullableFilter
  description: StringNullableFilter
  email: StringNullableFilter
  fax: StringNullableFilter
  first_name: StringNullableFilter
  id: BigIntFilter
  job_title: StringNullableFilter
  last_name: StringNullableFilter
  lead_source: StringNullableFilter
  lead_source_description: StringNullableFilter
  mobile: StringNullableFilter
  office_phone: StringNullableFilter
  opportunity_amount: StringNullableFilter
  postalcode: StringNullableFilter
  referred_by: StringNullableFilter
  state: StringNullableFilter
  status: StringNullableFilter
  status_description: StringNullableFilter
  website: StringNullableFilter
}

input LeadsWhereUniqueInput {
  id: BigInt
}

type Manufacturer {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerAvgAggregate {
  id: Float
  product: Float
}

input ManufacturerAvgOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

type ManufacturerCountAggregate {
  _all: Int!
  city: Int!
  code: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  name: Int!
  product: Int!
  products: Int!
  state: Int!
}

input ManufacturerCountOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

input ManufacturerCreateInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerCreateManyInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerGroupBy {
  _avg: ManufacturerAvgAggregate
  _count: ManufacturerCountAggregate
  _max: ManufacturerMaxAggregate
  _min: ManufacturerMinAggregate
  _sum: ManufacturerSumAggregate
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerMaxAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerMaxOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

type ManufacturerMinAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerMinOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

enum ManufacturerOrderByRelevanceFieldEnum {
  city
  code
  country
  description
  isPublic
  media
  name
  products
  state
}

input ManufacturerOrderByRelevanceInput {
  fields: [ManufacturerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ManufacturerOrderByWithAggregationInput {
  _avg: ManufacturerAvgOrderByAggregateInput
  _count: ManufacturerCountOrderByAggregateInput
  _max: ManufacturerMaxOrderByAggregateInput
  _min: ManufacturerMinOrderByAggregateInput
  _sum: ManufacturerSumOrderByAggregateInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

input ManufacturerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ManufacturerOrderByRelevanceInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

enum ManufacturerScalarFieldEnum {
  city
  code
  country
  created_at
  description
  id
  isPublic
  media
  name
  product
  products
  state
}

input ManufacturerScalarWhereWithAggregatesInput {
  AND: [ManufacturerScalarWhereWithAggregatesInput!]
  NOT: [ManufacturerScalarWhereWithAggregatesInput!]
  OR: [ManufacturerScalarWhereWithAggregatesInput!]
  city: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: BigIntNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type ManufacturerSumAggregate {
  id: BigInt
  product: BigInt
}

input ManufacturerSumOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

input ManufacturerUpdateInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input ManufacturerUpdateManyMutationInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input ManufacturerWhereInput {
  AND: [ManufacturerWhereInput!]
  NOT: [ManufacturerWhereInput!]
  OR: [ManufacturerWhereInput!]
  city: StringNullableFilter
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  product: BigIntNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
}

input ManufacturerWhereUniqueInput {
  id: BigInt
}

type Mediamanager {
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerAvgAggregate {
  agreements: Float
  author: Float
  brands: Float
  comment: Float
  id: Float
  members: Float
  products: Float
  task_name: Float
}

input MediamanagerAvgOrderByAggregateInput {
  agreements: SortOrder
  author: SortOrder
  brands: SortOrder
  comment: SortOrder
  id: SortOrder
  members: SortOrder
  products: SortOrder
  task_name: SortOrder
}

type MediamanagerCountAggregate {
  _all: Int!
  agreements: Int!
  agreements_agreementsTomediamanager: Int!
  albums: Int!
  author: Int!
  brands: Int!
  brands_brandsTomediamanager: Int!
  comment: Int!
  comments: Int!
  content_type: Int!
  copyright: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  dimensions: Int!
  expiration_date: Int!
  id: Int!
  keywords: Int!
  media: Int!
  members: Int!
  name: Int!
  products: Int!
  products_mediamanagerToproducts: Int!
  status: Int!
  tags: Int!
  task_description: Int!
  task_name: Int!
  task_type: Int!
  tasks: Int!
  users: Int!
  versions: Int!
  watermark_description: Int!
  watermark_media: Int!
  watermark_name: Int!
  workspace: Int!
}

input MediamanagerCountOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerCreateInput {
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerCreateManyInput {
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerGroupBy {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerMaxAggregate {
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMaxOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

type MediamanagerMinAggregate {
  agreements: Int
  agreements_agreementsTomediamanager: String
  albums: String
  author: Int
  brands: BigInt
  brands_brandsTomediamanager: String
  comment: Int
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: Int
  name: String
  products: BigInt
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: BigInt
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMinOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerOrderByRelevanceFieldEnum {
  agreements_agreementsTomediamanager
  albums
  brands_brandsTomediamanager
  comments
  content_type
  copyright
  customers
  description
  dimensions
  expiration_date
  keywords
  media
  name
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerOrderByRelevanceInput {
  fields: [MediamanagerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input MediamanagerOrderByWithAggregationInput {
  _avg: MediamanagerAvgOrderByAggregateInput
  _count: MediamanagerCountOrderByAggregateInput
  _max: MediamanagerMaxOrderByAggregateInput
  _min: MediamanagerMinOrderByAggregateInput
  _sum: MediamanagerSumOrderByAggregateInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: MediamanagerOrderByRelevanceInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerScalarFieldEnum {
  agreements
  agreements_agreementsTomediamanager
  albums
  author
  brands
  brands_brandsTomediamanager
  comment
  comments
  content_type
  copyright
  created_at
  customers
  description
  dimensions
  expiration_date
  id
  keywords
  media
  members
  name
  products
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_name
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerScalarWhereWithAggregatesInput {
  AND: [MediamanagerScalarWhereWithAggregatesInput!]
  NOT: [MediamanagerScalarWhereWithAggregatesInput!]
  OR: [MediamanagerScalarWhereWithAggregatesInput!]
  agreements: IntNullableWithAggregatesFilter
  agreements_agreementsTomediamanager: StringNullableWithAggregatesFilter
  albums: StringNullableWithAggregatesFilter
  author: IntNullableWithAggregatesFilter
  brands: BigIntNullableWithAggregatesFilter
  brands_brandsTomediamanager: StringNullableWithAggregatesFilter
  comment: IntNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  content_type: StringNullableWithAggregatesFilter
  copyright: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  dimensions: StringNullableWithAggregatesFilter
  expiration_date: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  keywords: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  members: IntNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: BigIntNullableWithAggregatesFilter
  products_mediamanagerToproducts: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  task_description: StringNullableWithAggregatesFilter
  task_name: BigIntNullableWithAggregatesFilter
  task_type: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  versions: StringNullableWithAggregatesFilter
  watermark_description: StringNullableWithAggregatesFilter
  watermark_media: StringNullableWithAggregatesFilter
  watermark_name: StringNullableWithAggregatesFilter
  workspace: StringNullableWithAggregatesFilter
}

type MediamanagerSumAggregate {
  agreements: Int
  author: Int
  brands: BigInt
  comment: Int
  id: Int
  members: Int
  products: BigInt
  task_name: BigInt
}

input MediamanagerSumOrderByAggregateInput {
  agreements: SortOrder
  author: SortOrder
  brands: SortOrder
  comment: SortOrder
  id: SortOrder
  members: SortOrder
  products: SortOrder
  task_name: SortOrder
}

input MediamanagerUpdateInput {
  agreements: NullableIntFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableIntFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableIntFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableBigIntFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerUpdateManyMutationInput {
  agreements: NullableIntFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableIntFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableIntFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableBigIntFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerWhereInput {
  AND: [MediamanagerWhereInput!]
  NOT: [MediamanagerWhereInput!]
  OR: [MediamanagerWhereInput!]
  agreements: IntNullableFilter
  agreements_agreementsTomediamanager: StringNullableFilter
  albums: StringNullableFilter
  author: IntNullableFilter
  brands: BigIntNullableFilter
  brands_brandsTomediamanager: StringNullableFilter
  comment: IntNullableFilter
  comments: StringNullableFilter
  content_type: StringNullableFilter
  copyright: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  dimensions: StringNullableFilter
  expiration_date: StringNullableFilter
  id: IntFilter
  keywords: StringNullableFilter
  media: StringNullableFilter
  members: IntNullableFilter
  name: StringNullableFilter
  products: BigIntNullableFilter
  products_mediamanagerToproducts: StringNullableFilter
  status: StringNullableFilter
  tags: StringNullableFilter
  task_description: StringNullableFilter
  task_name: BigIntNullableFilter
  task_type: StringNullableFilter
  tasks: StringNullableFilter
  users: StringNullableFilter
  versions: StringNullableFilter
  watermark_description: StringNullableFilter
  watermark_media: StringNullableFilter
  watermark_name: StringNullableFilter
  workspace: StringNullableFilter
}

input MediamanagerWhereUniqueInput {
  id: Int
}

type Meeting {
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt!
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

type MeetingAvgAggregate {
  id: Float
}

input MeetingAvgOrderByAggregateInput {
  id: SortOrder
}

type MeetingCountAggregate {
  _all: Int!
  assigned_to: Int!
  content: Int!
  created_at: Int!
  duration: Int!
  end_date: Int!
  id: Int!
  invitees: Int!
  related_to: Int!
  reminders: Int!
  scheduling: Int!
  start_date: Int!
  status: Int!
  subject: Int!
}

input MeetingCountOrderByAggregateInput {
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  duration: SortOrder
  end_date: SortOrder
  id: SortOrder
  invitees: SortOrder
  related_to: SortOrder
  reminders: SortOrder
  scheduling: SortOrder
  start_date: SortOrder
  status: SortOrder
  subject: SortOrder
}

input MeetingCreateInput {
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

input MeetingCreateManyInput {
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

type MeetingGroupBy {
  _avg: MeetingAvgAggregate
  _count: MeetingCountAggregate
  _max: MeetingMaxAggregate
  _min: MeetingMinAggregate
  _sum: MeetingSumAggregate
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt!
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

type MeetingMaxAggregate {
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

input MeetingMaxOrderByAggregateInput {
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  duration: SortOrder
  end_date: SortOrder
  id: SortOrder
  invitees: SortOrder
  related_to: SortOrder
  reminders: SortOrder
  scheduling: SortOrder
  start_date: SortOrder
  status: SortOrder
  subject: SortOrder
}

type MeetingMinAggregate {
  assigned_to: String
  content: String
  created_at: DateTime
  duration: String
  end_date: String
  id: BigInt
  invitees: String
  related_to: String
  reminders: String
  scheduling: String
  start_date: String
  status: String
  subject: String
}

input MeetingMinOrderByAggregateInput {
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  duration: SortOrder
  end_date: SortOrder
  id: SortOrder
  invitees: SortOrder
  related_to: SortOrder
  reminders: SortOrder
  scheduling: SortOrder
  start_date: SortOrder
  status: SortOrder
  subject: SortOrder
}

enum MeetingOrderByRelevanceFieldEnum {
  assigned_to
  content
  duration
  end_date
  invitees
  related_to
  reminders
  scheduling
  start_date
  status
  subject
}

input MeetingOrderByRelevanceInput {
  fields: [MeetingOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input MeetingOrderByWithAggregationInput {
  _avg: MeetingAvgOrderByAggregateInput
  _count: MeetingCountOrderByAggregateInput
  _max: MeetingMaxOrderByAggregateInput
  _min: MeetingMinOrderByAggregateInput
  _sum: MeetingSumOrderByAggregateInput
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  duration: SortOrder
  end_date: SortOrder
  id: SortOrder
  invitees: SortOrder
  related_to: SortOrder
  reminders: SortOrder
  scheduling: SortOrder
  start_date: SortOrder
  status: SortOrder
  subject: SortOrder
}

input MeetingOrderByWithRelationAndSearchRelevanceInput {
  _relevance: MeetingOrderByRelevanceInput
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  duration: SortOrder
  end_date: SortOrder
  id: SortOrder
  invitees: SortOrder
  related_to: SortOrder
  reminders: SortOrder
  scheduling: SortOrder
  start_date: SortOrder
  status: SortOrder
  subject: SortOrder
}

enum MeetingScalarFieldEnum {
  assigned_to
  content
  created_at
  duration
  end_date
  id
  invitees
  related_to
  reminders
  scheduling
  start_date
  status
  subject
}

input MeetingScalarWhereWithAggregatesInput {
  AND: [MeetingScalarWhereWithAggregatesInput!]
  NOT: [MeetingScalarWhereWithAggregatesInput!]
  OR: [MeetingScalarWhereWithAggregatesInput!]
  assigned_to: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  duration: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  invitees: StringNullableWithAggregatesFilter
  related_to: StringNullableWithAggregatesFilter
  reminders: StringNullableWithAggregatesFilter
  scheduling: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  subject: StringNullableWithAggregatesFilter
}

type MeetingSumAggregate {
  id: BigInt
}

input MeetingSumOrderByAggregateInput {
  id: SortOrder
}

input MeetingUpdateInput {
  assigned_to: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  duration: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invitees: NullableStringFieldUpdateOperationsInput
  related_to: NullableStringFieldUpdateOperationsInput
  reminders: NullableStringFieldUpdateOperationsInput
  scheduling: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
}

input MeetingUpdateManyMutationInput {
  assigned_to: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  duration: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invitees: NullableStringFieldUpdateOperationsInput
  related_to: NullableStringFieldUpdateOperationsInput
  reminders: NullableStringFieldUpdateOperationsInput
  scheduling: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
}

input MeetingWhereInput {
  AND: [MeetingWhereInput!]
  NOT: [MeetingWhereInput!]
  OR: [MeetingWhereInput!]
  assigned_to: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  duration: StringNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  invitees: StringNullableFilter
  related_to: StringNullableFilter
  reminders: StringNullableFilter
  scheduling: StringNullableFilter
  start_date: StringNullableFilter
  status: StringNullableFilter
  subject: StringNullableFilter
}

input MeetingWhereUniqueInput {
  id: BigInt
}

type Messages {
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int!
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

type MessagesAvgAggregate {
  cust_id: Float
  id: Float
  staff_id: Float
}

input MessagesAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
}

type MessagesCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  cust_id: Int!
  customers: Int!
  from: Int!
  id: Int!
  media: Int!
  sender: Int!
  staff_id: Int!
  subject: Int!
  users: Int!
}

input MessagesCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  sender: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

input MessagesCreateInput {
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

input MessagesCreateManyInput {
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

type MessagesGroupBy {
  _avg: MessagesAvgAggregate
  _count: MessagesCountAggregate
  _max: MessagesMaxAggregate
  _min: MessagesMinAggregate
  _sum: MessagesSumAggregate
  content: String
  created_at: DateTime
  cust_id: Int!
  customers: String
  from: String
  id: Int!
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

type MessagesMaxAggregate {
  content: String
  created_at: DateTime
  cust_id: Int
  customers: String
  from: String
  id: Int
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

input MessagesMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  sender: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

type MessagesMinAggregate {
  content: String
  created_at: DateTime
  cust_id: Int
  customers: String
  from: String
  id: Int
  media: String
  sender: String
  staff_id: Int
  subject: String
  users: String
}

input MessagesMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  sender: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

enum MessagesOrderByRelevanceFieldEnum {
  content
  customers
  from
  media
  sender
  subject
  users
}

input MessagesOrderByRelevanceInput {
  fields: [MessagesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input MessagesOrderByWithAggregationInput {
  _avg: MessagesAvgOrderByAggregateInput
  _count: MessagesCountOrderByAggregateInput
  _max: MessagesMaxOrderByAggregateInput
  _min: MessagesMinOrderByAggregateInput
  _sum: MessagesSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  sender: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

input MessagesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: MessagesOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  from: SortOrder
  id: SortOrder
  media: SortOrder
  sender: SortOrder
  staff_id: SortOrder
  subject: SortOrder
  users: SortOrder
}

enum MessagesScalarFieldEnum {
  content
  created_at
  cust_id
  customers
  from
  id
  media
  sender
  staff_id
  subject
  users
}

input MessagesScalarWhereWithAggregatesInput {
  AND: [MessagesScalarWhereWithAggregatesInput!]
  NOT: [MessagesScalarWhereWithAggregatesInput!]
  OR: [MessagesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  from: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  sender: StringNullableWithAggregatesFilter
  staff_id: IntNullableWithAggregatesFilter
  subject: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type MessagesSumAggregate {
  cust_id: Int
  id: Int
  staff_id: Int
}

input MessagesSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
}

input MessagesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  from: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  sender: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input MessagesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  from: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  sender: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input MessagesWhereInput {
  AND: [MessagesWhereInput!]
  NOT: [MessagesWhereInput!]
  OR: [MessagesWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  from: StringNullableFilter
  id: IntFilter
  media: StringNullableFilter
  sender: StringNullableFilter
  staff_id: IntNullableFilter
  subject: StringNullableFilter
  users: StringNullableFilter
}

input MessagesWhereUniqueInput {
  id: Int
}

type Mutation {
  createManyAccounts(data: [AccountsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyAgreements(data: [AgreementsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyAnalytics(data: [AnalyticsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyApitoken(data: [ApitokenCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyArticles(data: [ArticlesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyAttributes(data: [AttributesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBrands(data: [BrandsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCart_price_rules(data: [Cart_price_rulesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCases(data: [CasesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCatalog_price_rule(data: [Catalog_price_ruleCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCategories(data: [CategoriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyChannels(data: [ChannelsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyChecklist(data: [ChecklistCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCities(data: [CitiesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCollections(data: [CollectionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyComments(data: [CommentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContent_type(data: [Content_typeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContracts(data: [ContractsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCountries(data: [CountriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCoupons(data: [CouponsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCredit_memos(data: [Credit_memosCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCurrencies(data: [CurrenciesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCurrency_rates(data: [Currency_ratesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCurrency_symbols(data: [Currency_symbolsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCustomer_group(data: [Customer_groupCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCustomers(data: [CustomersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCustomizations(data: [CustomizationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboards(data: [DashboardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDeepdive(data: [DeepdiveCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDigiboard(data: [DigiboardCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyEmails(data: [EmailsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyEndofshift(data: [EndofshiftCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyEvents(data: [EventsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyFullfillments(data: [FullfillmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGift_certificates(data: [Gift_certificatesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGlossary(data: [GlossaryCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyImportm(data: [ImportmCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyIntegrations(data: [IntegrationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInternalization(data: [InternalizationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInvitations(data: [InvitationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInvoices(data: [InvoicesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLeads(data: [LeadsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyManufacturer(data: [ManufacturerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMediamanager(data: [MediamanagerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMeeting(data: [MeetingCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMessages(data: [MessagesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNewsletters(data: [NewslettersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOoto(data: [OotoCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOpportunities(data: [OpportunitiesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOrders(data: [OrdersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPages(data: [PagesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPartners(data: [PartnersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPayments(data: [PaymentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPermissions(data: [PermissionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPlugins(data: [PluginsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPolls(data: [PollsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProduct_types(data: [Product_typesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProducts(data: [ProductsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProjects(data: [ProjectsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProviders(data: [ProvidersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyQuotes(data: [QuotesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRating(data: [RatingCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReports(data: [ReportsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReturns(data: [ReturnsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReviews(data: [ReviewsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRewards(data: [RewardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRoles(data: [RolesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyScheduler(data: [SchedulerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySegments(data: [SegmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySettings(data: [SettingsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyShipments(data: [ShipmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySpecial_discounts(data: [Special_discountsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyStates(data: [StatesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyStatistics(data: [StatisticsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyStocks(data: [StocksCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySurveys(data: [SurveysCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTags(data: [TagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTargets(data: [TargetsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTax_category(data: [Tax_categoryCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTax_rate(data: [Tax_rateCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTax_rule(data: [Tax_ruleCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTemplates(data: [TemplatesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyThemes(data: [ThemesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTicketing(data: [TicketingCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTrainings(data: [TrainingsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTransactions(data: [TransactionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUpload_file(data: [Upload_fileCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyVendors(data: [VendorsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyVisits(data: [VisitsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWarehouse(data: [WarehouseCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWebhooks(data: [WebhooksCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWebsites(data: [WebsitesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWishlists(data: [WishlistsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWorkspaces(data: [WorkspacesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyZones(data: [ZonesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAccounts(data: AccountsCreateInput!): Accounts!
  createOneAgreements(data: AgreementsCreateInput!): Agreements!
  createOneAnalytics(data: AnalyticsCreateInput!): Analytics!
  createOneApitoken(data: ApitokenCreateInput!): Apitoken!
  createOneArticles(data: ArticlesCreateInput!): Articles!
  createOneAttributes(data: AttributesCreateInput!): Attributes!
  createOneBrands(data: BrandsCreateInput!): Brands!
  createOneCart_price_rules(data: Cart_price_rulesCreateInput!): Cart_price_rules!
  createOneCases(data: CasesCreateInput!): Cases!
  createOneCatalog_price_rule(data: Catalog_price_ruleCreateInput!): Catalog_price_rule!
  createOneCategories(data: CategoriesCreateInput!): Categories!
  createOneChannels(data: ChannelsCreateInput!): Channels!
  createOneChecklist(data: ChecklistCreateInput!): Checklist!
  createOneCities(data: CitiesCreateInput!): Cities!
  createOneCollections(data: CollectionsCreateInput!): Collections!
  createOneComments(data: CommentsCreateInput!): Comments!
  createOneContent_type(data: Content_typeCreateInput!): Content_type!
  createOneContracts(data: ContractsCreateInput!): Contracts!
  createOneCountries(data: CountriesCreateInput!): Countries!
  createOneCoupons(data: CouponsCreateInput!): Coupons!
  createOneCredit_memos(data: Credit_memosCreateInput!): Credit_memos!
  createOneCurrencies(data: CurrenciesCreateInput!): Currencies!
  createOneCurrency_rates(data: Currency_ratesCreateInput!): Currency_rates!
  createOneCurrency_symbols(data: Currency_symbolsCreateInput!): Currency_symbols!
  createOneCustomer_group(data: Customer_groupCreateInput!): Customer_group!
  createOneCustomers(data: CustomersCreateInput!): Customers!
  createOneCustomizations(data: CustomizationsCreateInput!): Customizations!
  createOneDashboards(data: DashboardsCreateInput!): Dashboards!
  createOneDeepdive(data: DeepdiveCreateInput!): Deepdive!
  createOneDigiboard(data: DigiboardCreateInput!): Digiboard!
  createOneEmails(data: EmailsCreateInput!): Emails!
  createOneEndofshift(data: EndofshiftCreateInput!): Endofshift!
  createOneEvents(data: EventsCreateInput!): Events!
  createOneFullfillments(data: FullfillmentsCreateInput!): Fullfillments!
  createOneGift_certificates(data: Gift_certificatesCreateInput!): Gift_certificates!
  createOneGlossary(data: GlossaryCreateInput!): Glossary!
  createOneImportm(data: ImportmCreateInput!): Importm!
  createOneIntegrations(data: IntegrationsCreateInput!): Integrations!
  createOneInternalization(data: InternalizationCreateInput!): Internalization!
  createOneInvitations(data: InvitationsCreateInput!): Invitations!
  createOneInvoices(data: InvoicesCreateInput!): Invoices!
  createOneLeads(data: LeadsCreateInput!): Leads!
  createOneManufacturer(data: ManufacturerCreateInput!): Manufacturer!
  createOneMediamanager(data: MediamanagerCreateInput!): Mediamanager!
  createOneMeeting(data: MeetingCreateInput!): Meeting!
  createOneMessages(data: MessagesCreateInput!): Messages!
  createOneNewsletters(data: NewslettersCreateInput!): Newsletters!
  createOneOoto(data: OotoCreateInput!): Ooto!
  createOneOpportunities(data: OpportunitiesCreateInput!): Opportunities!
  createOneOrders(data: OrdersCreateInput!): Orders!
  createOnePages(data: PagesCreateInput!): Pages!
  createOnePartners(data: PartnersCreateInput!): Partners!
  createOnePayments(data: PaymentsCreateInput!): Payments!
  createOnePermissions(data: PermissionsCreateInput!): Permissions!
  createOnePlugins(data: PluginsCreateInput!): Plugins!
  createOnePolls(data: PollsCreateInput!): Polls!
  createOneProduct_types(data: Product_typesCreateInput!): Product_types!
  createOneProducts(data: ProductsCreateInput!): Products!
  createOneProjects(data: ProjectsCreateInput!): Projects!
  createOneProviders(data: ProvidersCreateInput!): Providers!
  createOneQuotes(data: QuotesCreateInput!): Quotes!
  createOneRating(data: RatingCreateInput!): Rating!
  createOneReports(data: ReportsCreateInput!): Reports!
  createOneReturns(data: ReturnsCreateInput!): Returns!
  createOneReviews(data: ReviewsCreateInput!): Reviews!
  createOneRewards(data: RewardsCreateInput!): Rewards!
  createOneRoles(data: RolesCreateInput!): Roles!
  createOneScheduler(data: SchedulerCreateInput!): Scheduler!
  createOneSegments(data: SegmentsCreateInput!): Segments!
  createOneSettings(data: SettingsCreateInput!): Settings!
  createOneShipments(data: ShipmentsCreateInput!): Shipments!
  createOneSpecial_discounts(data: Special_discountsCreateInput!): Special_discounts!
  createOneStates(data: StatesCreateInput!): States!
  createOneStatistics(data: StatisticsCreateInput!): Statistics!
  createOneStocks(data: StocksCreateInput!): Stocks!
  createOneSurveys(data: SurveysCreateInput!): Surveys!
  createOneTags(data: TagsCreateInput!): Tags!
  createOneTargets(data: TargetsCreateInput!): Targets!
  createOneTax_category(data: Tax_categoryCreateInput!): Tax_category!
  createOneTax_rate(data: Tax_rateCreateInput!): Tax_rate!
  createOneTax_rule(data: Tax_ruleCreateInput!): Tax_rule!
  createOneTemplates(data: TemplatesCreateInput!): Templates!
  createOneThemes(data: ThemesCreateInput!): Themes!
  createOneTicketing(data: TicketingCreateInput!): Ticketing!
  createOneTrainings(data: TrainingsCreateInput!): Trainings!
  createOneTransactions(data: TransactionsCreateInput!): Transactions!
  createOneUpload_file(data: Upload_fileCreateInput!): Upload_file!
  createOneUsers(data: UsersCreateInput!): Users!
  createOneVendors(data: VendorsCreateInput!): Vendors!
  createOneVisits(data: VisitsCreateInput!): Visits!
  createOneWarehouse(data: WarehouseCreateInput!): Warehouse!
  createOneWebhooks(data: WebhooksCreateInput!): Webhooks!
  createOneWebsites(data: WebsitesCreateInput!): Websites!
  createOneWishlists(data: WishlistsCreateInput!): Wishlists!
  createOneWorkspaces(data: WorkspacesCreateInput!): Workspaces!
  createOneZones(data: ZonesCreateInput!): Zones!
  deleteManyAccounts(where: AccountsWhereInput): AffectedRowsOutput!
  deleteManyAgreements(where: AgreementsWhereInput): AffectedRowsOutput!
  deleteManyAnalytics(where: AnalyticsWhereInput): AffectedRowsOutput!
  deleteManyApitoken(where: ApitokenWhereInput): AffectedRowsOutput!
  deleteManyArticles(where: ArticlesWhereInput): AffectedRowsOutput!
  deleteManyAttributes(where: AttributesWhereInput): AffectedRowsOutput!
  deleteManyBrands(where: BrandsWhereInput): AffectedRowsOutput!
  deleteManyCart_price_rules(where: Cart_price_rulesWhereInput): AffectedRowsOutput!
  deleteManyCases(where: CasesWhereInput): AffectedRowsOutput!
  deleteManyCatalog_price_rule(where: Catalog_price_ruleWhereInput): AffectedRowsOutput!
  deleteManyCategories(where: CategoriesWhereInput): AffectedRowsOutput!
  deleteManyChannels(where: ChannelsWhereInput): AffectedRowsOutput!
  deleteManyChecklist(where: ChecklistWhereInput): AffectedRowsOutput!
  deleteManyCities(where: CitiesWhereInput): AffectedRowsOutput!
  deleteManyCollections(where: CollectionsWhereInput): AffectedRowsOutput!
  deleteManyComments(where: CommentsWhereInput): AffectedRowsOutput!
  deleteManyContent_type(where: Content_typeWhereInput): AffectedRowsOutput!
  deleteManyContracts(where: ContractsWhereInput): AffectedRowsOutput!
  deleteManyCountries(where: CountriesWhereInput): AffectedRowsOutput!
  deleteManyCoupons(where: CouponsWhereInput): AffectedRowsOutput!
  deleteManyCredit_memos(where: Credit_memosWhereInput): AffectedRowsOutput!
  deleteManyCurrencies(where: CurrenciesWhereInput): AffectedRowsOutput!
  deleteManyCurrency_rates(where: Currency_ratesWhereInput): AffectedRowsOutput!
  deleteManyCurrency_symbols(where: Currency_symbolsWhereInput): AffectedRowsOutput!
  deleteManyCustomer_group(where: Customer_groupWhereInput): AffectedRowsOutput!
  deleteManyCustomers(where: CustomersWhereInput): AffectedRowsOutput!
  deleteManyCustomizations(where: CustomizationsWhereInput): AffectedRowsOutput!
  deleteManyDashboards(where: DashboardsWhereInput): AffectedRowsOutput!
  deleteManyDeepdive(where: DeepdiveWhereInput): AffectedRowsOutput!
  deleteManyDigiboard(where: DigiboardWhereInput): AffectedRowsOutput!
  deleteManyEmails(where: EmailsWhereInput): AffectedRowsOutput!
  deleteManyEndofshift(where: EndofshiftWhereInput): AffectedRowsOutput!
  deleteManyEvents(where: EventsWhereInput): AffectedRowsOutput!
  deleteManyFullfillments(where: FullfillmentsWhereInput): AffectedRowsOutput!
  deleteManyGift_certificates(where: Gift_certificatesWhereInput): AffectedRowsOutput!
  deleteManyGlossary(where: GlossaryWhereInput): AffectedRowsOutput!
  deleteManyImportm(where: ImportmWhereInput): AffectedRowsOutput!
  deleteManyIntegrations(where: IntegrationsWhereInput): AffectedRowsOutput!
  deleteManyInternalization(where: InternalizationWhereInput): AffectedRowsOutput!
  deleteManyInvitations(where: InvitationsWhereInput): AffectedRowsOutput!
  deleteManyInvoices(where: InvoicesWhereInput): AffectedRowsOutput!
  deleteManyLeads(where: LeadsWhereInput): AffectedRowsOutput!
  deleteManyManufacturer(where: ManufacturerWhereInput): AffectedRowsOutput!
  deleteManyMediamanager(where: MediamanagerWhereInput): AffectedRowsOutput!
  deleteManyMeeting(where: MeetingWhereInput): AffectedRowsOutput!
  deleteManyMessages(where: MessagesWhereInput): AffectedRowsOutput!
  deleteManyNewsletters(where: NewslettersWhereInput): AffectedRowsOutput!
  deleteManyOoto(where: OotoWhereInput): AffectedRowsOutput!
  deleteManyOpportunities(where: OpportunitiesWhereInput): AffectedRowsOutput!
  deleteManyOrders(where: OrdersWhereInput): AffectedRowsOutput!
  deleteManyPages(where: PagesWhereInput): AffectedRowsOutput!
  deleteManyPartners(where: PartnersWhereInput): AffectedRowsOutput!
  deleteManyPayments(where: PaymentsWhereInput): AffectedRowsOutput!
  deleteManyPermissions(where: PermissionsWhereInput): AffectedRowsOutput!
  deleteManyPlugins(where: PluginsWhereInput): AffectedRowsOutput!
  deleteManyPolls(where: PollsWhereInput): AffectedRowsOutput!
  deleteManyProduct_types(where: Product_typesWhereInput): AffectedRowsOutput!
  deleteManyProducts(where: ProductsWhereInput): AffectedRowsOutput!
  deleteManyProjects(where: ProjectsWhereInput): AffectedRowsOutput!
  deleteManyProviders(where: ProvidersWhereInput): AffectedRowsOutput!
  deleteManyQuotes(where: QuotesWhereInput): AffectedRowsOutput!
  deleteManyRating(where: RatingWhereInput): AffectedRowsOutput!
  deleteManyReports(where: ReportsWhereInput): AffectedRowsOutput!
  deleteManyReturns(where: ReturnsWhereInput): AffectedRowsOutput!
  deleteManyReviews(where: ReviewsWhereInput): AffectedRowsOutput!
  deleteManyRewards(where: RewardsWhereInput): AffectedRowsOutput!
  deleteManyRoles(where: RolesWhereInput): AffectedRowsOutput!
  deleteManyScheduler(where: SchedulerWhereInput): AffectedRowsOutput!
  deleteManySegments(where: SegmentsWhereInput): AffectedRowsOutput!
  deleteManySettings(where: SettingsWhereInput): AffectedRowsOutput!
  deleteManyShipments(where: ShipmentsWhereInput): AffectedRowsOutput!
  deleteManySpecial_discounts(where: Special_discountsWhereInput): AffectedRowsOutput!
  deleteManyStates(where: StatesWhereInput): AffectedRowsOutput!
  deleteManyStatistics(where: StatisticsWhereInput): AffectedRowsOutput!
  deleteManyStocks(where: StocksWhereInput): AffectedRowsOutput!
  deleteManySurveys(where: SurveysWhereInput): AffectedRowsOutput!
  deleteManyTags(where: TagsWhereInput): AffectedRowsOutput!
  deleteManyTargets(where: TargetsWhereInput): AffectedRowsOutput!
  deleteManyTax_category(where: Tax_categoryWhereInput): AffectedRowsOutput!
  deleteManyTax_rate(where: Tax_rateWhereInput): AffectedRowsOutput!
  deleteManyTax_rule(where: Tax_ruleWhereInput): AffectedRowsOutput!
  deleteManyTemplates(where: TemplatesWhereInput): AffectedRowsOutput!
  deleteManyThemes(where: ThemesWhereInput): AffectedRowsOutput!
  deleteManyTicketing(where: TicketingWhereInput): AffectedRowsOutput!
  deleteManyTrainings(where: TrainingsWhereInput): AffectedRowsOutput!
  deleteManyTransactions(where: TransactionsWhereInput): AffectedRowsOutput!
  deleteManyUpload_file(where: Upload_fileWhereInput): AffectedRowsOutput!
  deleteManyUsers(where: UsersWhereInput): AffectedRowsOutput!
  deleteManyVendors(where: VendorsWhereInput): AffectedRowsOutput!
  deleteManyVisits(where: VisitsWhereInput): AffectedRowsOutput!
  deleteManyWarehouse(where: WarehouseWhereInput): AffectedRowsOutput!
  deleteManyWebhooks(where: WebhooksWhereInput): AffectedRowsOutput!
  deleteManyWebsites(where: WebsitesWhereInput): AffectedRowsOutput!
  deleteManyWishlists(where: WishlistsWhereInput): AffectedRowsOutput!
  deleteManyWorkspaces(where: WorkspacesWhereInput): AffectedRowsOutput!
  deleteManyZones(where: ZonesWhereInput): AffectedRowsOutput!
  deleteOneAccounts(where: AccountsWhereUniqueInput!): Accounts
  deleteOneAgreements(where: AgreementsWhereUniqueInput!): Agreements
  deleteOneAnalytics(where: AnalyticsWhereUniqueInput!): Analytics
  deleteOneApitoken(where: ApitokenWhereUniqueInput!): Apitoken
  deleteOneArticles(where: ArticlesWhereUniqueInput!): Articles
  deleteOneAttributes(where: AttributesWhereUniqueInput!): Attributes
  deleteOneBrands(where: BrandsWhereUniqueInput!): Brands
  deleteOneCart_price_rules(where: Cart_price_rulesWhereUniqueInput!): Cart_price_rules
  deleteOneCases(where: CasesWhereUniqueInput!): Cases
  deleteOneCatalog_price_rule(where: Catalog_price_ruleWhereUniqueInput!): Catalog_price_rule
  deleteOneCategories(where: CategoriesWhereUniqueInput!): Categories
  deleteOneChannels(where: ChannelsWhereUniqueInput!): Channels
  deleteOneChecklist(where: ChecklistWhereUniqueInput!): Checklist
  deleteOneCities(where: CitiesWhereUniqueInput!): Cities
  deleteOneCollections(where: CollectionsWhereUniqueInput!): Collections
  deleteOneComments(where: CommentsWhereUniqueInput!): Comments
  deleteOneContent_type(where: Content_typeWhereUniqueInput!): Content_type
  deleteOneContracts(where: ContractsWhereUniqueInput!): Contracts
  deleteOneCountries(where: CountriesWhereUniqueInput!): Countries
  deleteOneCoupons(where: CouponsWhereUniqueInput!): Coupons
  deleteOneCredit_memos(where: Credit_memosWhereUniqueInput!): Credit_memos
  deleteOneCurrencies(where: CurrenciesWhereUniqueInput!): Currencies
  deleteOneCurrency_rates(where: Currency_ratesWhereUniqueInput!): Currency_rates
  deleteOneCurrency_symbols(where: Currency_symbolsWhereUniqueInput!): Currency_symbols
  deleteOneCustomer_group(where: Customer_groupWhereUniqueInput!): Customer_group
  deleteOneCustomers(where: CustomersWhereUniqueInput!): Customers
  deleteOneCustomizations(where: CustomizationsWhereUniqueInput!): Customizations
  deleteOneDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  deleteOneDeepdive(where: DeepdiveWhereUniqueInput!): Deepdive
  deleteOneDigiboard(where: DigiboardWhereUniqueInput!): Digiboard
  deleteOneEmails(where: EmailsWhereUniqueInput!): Emails
  deleteOneEndofshift(where: EndofshiftWhereUniqueInput!): Endofshift
  deleteOneEvents(where: EventsWhereUniqueInput!): Events
  deleteOneFullfillments(where: FullfillmentsWhereUniqueInput!): Fullfillments
  deleteOneGift_certificates(where: Gift_certificatesWhereUniqueInput!): Gift_certificates
  deleteOneGlossary(where: GlossaryWhereUniqueInput!): Glossary
  deleteOneImportm(where: ImportmWhereUniqueInput!): Importm
  deleteOneIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  deleteOneInternalization(where: InternalizationWhereUniqueInput!): Internalization
  deleteOneInvitations(where: InvitationsWhereUniqueInput!): Invitations
  deleteOneInvoices(where: InvoicesWhereUniqueInput!): Invoices
  deleteOneLeads(where: LeadsWhereUniqueInput!): Leads
  deleteOneManufacturer(where: ManufacturerWhereUniqueInput!): Manufacturer
  deleteOneMediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  deleteOneMeeting(where: MeetingWhereUniqueInput!): Meeting
  deleteOneMessages(where: MessagesWhereUniqueInput!): Messages
  deleteOneNewsletters(where: NewslettersWhereUniqueInput!): Newsletters
  deleteOneOoto(where: OotoWhereUniqueInput!): Ooto
  deleteOneOpportunities(where: OpportunitiesWhereUniqueInput!): Opportunities
  deleteOneOrders(where: OrdersWhereUniqueInput!): Orders
  deleteOnePages(where: PagesWhereUniqueInput!): Pages
  deleteOnePartners(where: PartnersWhereUniqueInput!): Partners
  deleteOnePayments(where: PaymentsWhereUniqueInput!): Payments
  deleteOnePermissions(where: PermissionsWhereUniqueInput!): Permissions
  deleteOnePlugins(where: PluginsWhereUniqueInput!): Plugins
  deleteOnePolls(where: PollsWhereUniqueInput!): Polls
  deleteOneProduct_types(where: Product_typesWhereUniqueInput!): Product_types
  deleteOneProducts(where: ProductsWhereUniqueInput!): Products
  deleteOneProjects(where: ProjectsWhereUniqueInput!): Projects
  deleteOneProviders(where: ProvidersWhereUniqueInput!): Providers
  deleteOneQuotes(where: QuotesWhereUniqueInput!): Quotes
  deleteOneRating(where: RatingWhereUniqueInput!): Rating
  deleteOneReports(where: ReportsWhereUniqueInput!): Reports
  deleteOneReturns(where: ReturnsWhereUniqueInput!): Returns
  deleteOneReviews(where: ReviewsWhereUniqueInput!): Reviews
  deleteOneRewards(where: RewardsWhereUniqueInput!): Rewards
  deleteOneRoles(where: RolesWhereUniqueInput!): Roles
  deleteOneScheduler(where: SchedulerWhereUniqueInput!): Scheduler
  deleteOneSegments(where: SegmentsWhereUniqueInput!): Segments
  deleteOneSettings(where: SettingsWhereUniqueInput!): Settings
  deleteOneShipments(where: ShipmentsWhereUniqueInput!): Shipments
  deleteOneSpecial_discounts(where: Special_discountsWhereUniqueInput!): Special_discounts
  deleteOneStates(where: StatesWhereUniqueInput!): States
  deleteOneStatistics(where: StatisticsWhereUniqueInput!): Statistics
  deleteOneStocks(where: StocksWhereUniqueInput!): Stocks
  deleteOneSurveys(where: SurveysWhereUniqueInput!): Surveys
  deleteOneTags(where: TagsWhereUniqueInput!): Tags
  deleteOneTargets(where: TargetsWhereUniqueInput!): Targets
  deleteOneTax_category(where: Tax_categoryWhereUniqueInput!): Tax_category
  deleteOneTax_rate(where: Tax_rateWhereUniqueInput!): Tax_rate
  deleteOneTax_rule(where: Tax_ruleWhereUniqueInput!): Tax_rule
  deleteOneTemplates(where: TemplatesWhereUniqueInput!): Templates
  deleteOneThemes(where: ThemesWhereUniqueInput!): Themes
  deleteOneTicketing(where: TicketingWhereUniqueInput!): Ticketing
  deleteOneTrainings(where: TrainingsWhereUniqueInput!): Trainings
  deleteOneTransactions(where: TransactionsWhereUniqueInput!): Transactions
  deleteOneUpload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  deleteOneUsers(where: UsersWhereUniqueInput!): Users
  deleteOneVendors(where: VendorsWhereUniqueInput!): Vendors
  deleteOneVisits(where: VisitsWhereUniqueInput!): Visits
  deleteOneWarehouse(where: WarehouseWhereUniqueInput!): Warehouse
  deleteOneWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  deleteOneWebsites(where: WebsitesWhereUniqueInput!): Websites
  deleteOneWishlists(where: WishlistsWhereUniqueInput!): Wishlists
  deleteOneWorkspaces(where: WorkspacesWhereUniqueInput!): Workspaces
  deleteOneZones(where: ZonesWhereUniqueInput!): Zones
  updateManyAccounts(data: AccountsUpdateManyMutationInput!, where: AccountsWhereInput): AffectedRowsOutput!
  updateManyAgreements(data: AgreementsUpdateManyMutationInput!, where: AgreementsWhereInput): AffectedRowsOutput!
  updateManyAnalytics(data: AnalyticsUpdateManyMutationInput!, where: AnalyticsWhereInput): AffectedRowsOutput!
  updateManyApitoken(data: ApitokenUpdateManyMutationInput!, where: ApitokenWhereInput): AffectedRowsOutput!
  updateManyArticles(data: ArticlesUpdateManyMutationInput!, where: ArticlesWhereInput): AffectedRowsOutput!
  updateManyAttributes(data: AttributesUpdateManyMutationInput!, where: AttributesWhereInput): AffectedRowsOutput!
  updateManyBrands(data: BrandsUpdateManyMutationInput!, where: BrandsWhereInput): AffectedRowsOutput!
  updateManyCart_price_rules(data: Cart_price_rulesUpdateManyMutationInput!, where: Cart_price_rulesWhereInput): AffectedRowsOutput!
  updateManyCases(data: CasesUpdateManyMutationInput!, where: CasesWhereInput): AffectedRowsOutput!
  updateManyCatalog_price_rule(data: Catalog_price_ruleUpdateManyMutationInput!, where: Catalog_price_ruleWhereInput): AffectedRowsOutput!
  updateManyCategories(data: CategoriesUpdateManyMutationInput!, where: CategoriesWhereInput): AffectedRowsOutput!
  updateManyChannels(data: ChannelsUpdateManyMutationInput!, where: ChannelsWhereInput): AffectedRowsOutput!
  updateManyChecklist(data: ChecklistUpdateManyMutationInput!, where: ChecklistWhereInput): AffectedRowsOutput!
  updateManyCities(data: CitiesUpdateManyMutationInput!, where: CitiesWhereInput): AffectedRowsOutput!
  updateManyCollections(data: CollectionsUpdateManyMutationInput!, where: CollectionsWhereInput): AffectedRowsOutput!
  updateManyComments(data: CommentsUpdateManyMutationInput!, where: CommentsWhereInput): AffectedRowsOutput!
  updateManyContent_type(data: Content_typeUpdateManyMutationInput!, where: Content_typeWhereInput): AffectedRowsOutput!
  updateManyContracts(data: ContractsUpdateManyMutationInput!, where: ContractsWhereInput): AffectedRowsOutput!
  updateManyCountries(data: CountriesUpdateManyMutationInput!, where: CountriesWhereInput): AffectedRowsOutput!
  updateManyCoupons(data: CouponsUpdateManyMutationInput!, where: CouponsWhereInput): AffectedRowsOutput!
  updateManyCredit_memos(data: Credit_memosUpdateManyMutationInput!, where: Credit_memosWhereInput): AffectedRowsOutput!
  updateManyCurrencies(data: CurrenciesUpdateManyMutationInput!, where: CurrenciesWhereInput): AffectedRowsOutput!
  updateManyCurrency_rates(data: Currency_ratesUpdateManyMutationInput!, where: Currency_ratesWhereInput): AffectedRowsOutput!
  updateManyCurrency_symbols(data: Currency_symbolsUpdateManyMutationInput!, where: Currency_symbolsWhereInput): AffectedRowsOutput!
  updateManyCustomer_group(data: Customer_groupUpdateManyMutationInput!, where: Customer_groupWhereInput): AffectedRowsOutput!
  updateManyCustomers(data: CustomersUpdateManyMutationInput!, where: CustomersWhereInput): AffectedRowsOutput!
  updateManyCustomizations(data: CustomizationsUpdateManyMutationInput!, where: CustomizationsWhereInput): AffectedRowsOutput!
  updateManyDashboards(data: DashboardsUpdateManyMutationInput!, where: DashboardsWhereInput): AffectedRowsOutput!
  updateManyDeepdive(data: DeepdiveUpdateManyMutationInput!, where: DeepdiveWhereInput): AffectedRowsOutput!
  updateManyDigiboard(data: DigiboardUpdateManyMutationInput!, where: DigiboardWhereInput): AffectedRowsOutput!
  updateManyEmails(data: EmailsUpdateManyMutationInput!, where: EmailsWhereInput): AffectedRowsOutput!
  updateManyEndofshift(data: EndofshiftUpdateManyMutationInput!, where: EndofshiftWhereInput): AffectedRowsOutput!
  updateManyEvents(data: EventsUpdateManyMutationInput!, where: EventsWhereInput): AffectedRowsOutput!
  updateManyFullfillments(data: FullfillmentsUpdateManyMutationInput!, where: FullfillmentsWhereInput): AffectedRowsOutput!
  updateManyGift_certificates(data: Gift_certificatesUpdateManyMutationInput!, where: Gift_certificatesWhereInput): AffectedRowsOutput!
  updateManyGlossary(data: GlossaryUpdateManyMutationInput!, where: GlossaryWhereInput): AffectedRowsOutput!
  updateManyImportm(data: ImportmUpdateManyMutationInput!, where: ImportmWhereInput): AffectedRowsOutput!
  updateManyIntegrations(data: IntegrationsUpdateManyMutationInput!, where: IntegrationsWhereInput): AffectedRowsOutput!
  updateManyInternalization(data: InternalizationUpdateManyMutationInput!, where: InternalizationWhereInput): AffectedRowsOutput!
  updateManyInvitations(data: InvitationsUpdateManyMutationInput!, where: InvitationsWhereInput): AffectedRowsOutput!
  updateManyInvoices(data: InvoicesUpdateManyMutationInput!, where: InvoicesWhereInput): AffectedRowsOutput!
  updateManyLeads(data: LeadsUpdateManyMutationInput!, where: LeadsWhereInput): AffectedRowsOutput!
  updateManyManufacturer(data: ManufacturerUpdateManyMutationInput!, where: ManufacturerWhereInput): AffectedRowsOutput!
  updateManyMediamanager(data: MediamanagerUpdateManyMutationInput!, where: MediamanagerWhereInput): AffectedRowsOutput!
  updateManyMeeting(data: MeetingUpdateManyMutationInput!, where: MeetingWhereInput): AffectedRowsOutput!
  updateManyMessages(data: MessagesUpdateManyMutationInput!, where: MessagesWhereInput): AffectedRowsOutput!
  updateManyNewsletters(data: NewslettersUpdateManyMutationInput!, where: NewslettersWhereInput): AffectedRowsOutput!
  updateManyOoto(data: OotoUpdateManyMutationInput!, where: OotoWhereInput): AffectedRowsOutput!
  updateManyOpportunities(data: OpportunitiesUpdateManyMutationInput!, where: OpportunitiesWhereInput): AffectedRowsOutput!
  updateManyOrders(data: OrdersUpdateManyMutationInput!, where: OrdersWhereInput): AffectedRowsOutput!
  updateManyPages(data: PagesUpdateManyMutationInput!, where: PagesWhereInput): AffectedRowsOutput!
  updateManyPartners(data: PartnersUpdateManyMutationInput!, where: PartnersWhereInput): AffectedRowsOutput!
  updateManyPayments(data: PaymentsUpdateManyMutationInput!, where: PaymentsWhereInput): AffectedRowsOutput!
  updateManyPermissions(data: PermissionsUpdateManyMutationInput!, where: PermissionsWhereInput): AffectedRowsOutput!
  updateManyPlugins(data: PluginsUpdateManyMutationInput!, where: PluginsWhereInput): AffectedRowsOutput!
  updateManyPolls(data: PollsUpdateManyMutationInput!, where: PollsWhereInput): AffectedRowsOutput!
  updateManyProduct_types(data: Product_typesUpdateManyMutationInput!, where: Product_typesWhereInput): AffectedRowsOutput!
  updateManyProducts(data: ProductsUpdateManyMutationInput!, where: ProductsWhereInput): AffectedRowsOutput!
  updateManyProjects(data: ProjectsUpdateManyMutationInput!, where: ProjectsWhereInput): AffectedRowsOutput!
  updateManyProviders(data: ProvidersUpdateManyMutationInput!, where: ProvidersWhereInput): AffectedRowsOutput!
  updateManyQuotes(data: QuotesUpdateManyMutationInput!, where: QuotesWhereInput): AffectedRowsOutput!
  updateManyRating(data: RatingUpdateManyMutationInput!, where: RatingWhereInput): AffectedRowsOutput!
  updateManyReports(data: ReportsUpdateManyMutationInput!, where: ReportsWhereInput): AffectedRowsOutput!
  updateManyReturns(data: ReturnsUpdateManyMutationInput!, where: ReturnsWhereInput): AffectedRowsOutput!
  updateManyReviews(data: ReviewsUpdateManyMutationInput!, where: ReviewsWhereInput): AffectedRowsOutput!
  updateManyRewards(data: RewardsUpdateManyMutationInput!, where: RewardsWhereInput): AffectedRowsOutput!
  updateManyRoles(data: RolesUpdateManyMutationInput!, where: RolesWhereInput): AffectedRowsOutput!
  updateManyScheduler(data: SchedulerUpdateManyMutationInput!, where: SchedulerWhereInput): AffectedRowsOutput!
  updateManySegments(data: SegmentsUpdateManyMutationInput!, where: SegmentsWhereInput): AffectedRowsOutput!
  updateManySettings(data: SettingsUpdateManyMutationInput!, where: SettingsWhereInput): AffectedRowsOutput!
  updateManyShipments(data: ShipmentsUpdateManyMutationInput!, where: ShipmentsWhereInput): AffectedRowsOutput!
  updateManySpecial_discounts(data: Special_discountsUpdateManyMutationInput!, where: Special_discountsWhereInput): AffectedRowsOutput!
  updateManyStates(data: StatesUpdateManyMutationInput!, where: StatesWhereInput): AffectedRowsOutput!
  updateManyStatistics(data: StatisticsUpdateManyMutationInput!, where: StatisticsWhereInput): AffectedRowsOutput!
  updateManyStocks(data: StocksUpdateManyMutationInput!, where: StocksWhereInput): AffectedRowsOutput!
  updateManySurveys(data: SurveysUpdateManyMutationInput!, where: SurveysWhereInput): AffectedRowsOutput!
  updateManyTags(data: TagsUpdateManyMutationInput!, where: TagsWhereInput): AffectedRowsOutput!
  updateManyTargets(data: TargetsUpdateManyMutationInput!, where: TargetsWhereInput): AffectedRowsOutput!
  updateManyTax_category(data: Tax_categoryUpdateManyMutationInput!, where: Tax_categoryWhereInput): AffectedRowsOutput!
  updateManyTax_rate(data: Tax_rateUpdateManyMutationInput!, where: Tax_rateWhereInput): AffectedRowsOutput!
  updateManyTax_rule(data: Tax_ruleUpdateManyMutationInput!, where: Tax_ruleWhereInput): AffectedRowsOutput!
  updateManyTemplates(data: TemplatesUpdateManyMutationInput!, where: TemplatesWhereInput): AffectedRowsOutput!
  updateManyThemes(data: ThemesUpdateManyMutationInput!, where: ThemesWhereInput): AffectedRowsOutput!
  updateManyTicketing(data: TicketingUpdateManyMutationInput!, where: TicketingWhereInput): AffectedRowsOutput!
  updateManyTrainings(data: TrainingsUpdateManyMutationInput!, where: TrainingsWhereInput): AffectedRowsOutput!
  updateManyTransactions(data: TransactionsUpdateManyMutationInput!, where: TransactionsWhereInput): AffectedRowsOutput!
  updateManyUpload_file(data: Upload_fileUpdateManyMutationInput!, where: Upload_fileWhereInput): AffectedRowsOutput!
  updateManyUsers(data: UsersUpdateManyMutationInput!, where: UsersWhereInput): AffectedRowsOutput!
  updateManyVendors(data: VendorsUpdateManyMutationInput!, where: VendorsWhereInput): AffectedRowsOutput!
  updateManyVisits(data: VisitsUpdateManyMutationInput!, where: VisitsWhereInput): AffectedRowsOutput!
  updateManyWarehouse(data: WarehouseUpdateManyMutationInput!, where: WarehouseWhereInput): AffectedRowsOutput!
  updateManyWebhooks(data: WebhooksUpdateManyMutationInput!, where: WebhooksWhereInput): AffectedRowsOutput!
  updateManyWebsites(data: WebsitesUpdateManyMutationInput!, where: WebsitesWhereInput): AffectedRowsOutput!
  updateManyWishlists(data: WishlistsUpdateManyMutationInput!, where: WishlistsWhereInput): AffectedRowsOutput!
  updateManyWorkspaces(data: WorkspacesUpdateManyMutationInput!, where: WorkspacesWhereInput): AffectedRowsOutput!
  updateManyZones(data: ZonesUpdateManyMutationInput!, where: ZonesWhereInput): AffectedRowsOutput!
  updateOneAccounts(data: AccountsUpdateInput!, where: AccountsWhereUniqueInput!): Accounts
  updateOneAgreements(data: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements
  updateOneAnalytics(data: AnalyticsUpdateInput!, where: AnalyticsWhereUniqueInput!): Analytics
  updateOneApitoken(data: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken
  updateOneArticles(data: ArticlesUpdateInput!, where: ArticlesWhereUniqueInput!): Articles
  updateOneAttributes(data: AttributesUpdateInput!, where: AttributesWhereUniqueInput!): Attributes
  updateOneBrands(data: BrandsUpdateInput!, where: BrandsWhereUniqueInput!): Brands
  updateOneCart_price_rules(data: Cart_price_rulesUpdateInput!, where: Cart_price_rulesWhereUniqueInput!): Cart_price_rules
  updateOneCases(data: CasesUpdateInput!, where: CasesWhereUniqueInput!): Cases
  updateOneCatalog_price_rule(data: Catalog_price_ruleUpdateInput!, where: Catalog_price_ruleWhereUniqueInput!): Catalog_price_rule
  updateOneCategories(data: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories
  updateOneChannels(data: ChannelsUpdateInput!, where: ChannelsWhereUniqueInput!): Channels
  updateOneChecklist(data: ChecklistUpdateInput!, where: ChecklistWhereUniqueInput!): Checklist
  updateOneCities(data: CitiesUpdateInput!, where: CitiesWhereUniqueInput!): Cities
  updateOneCollections(data: CollectionsUpdateInput!, where: CollectionsWhereUniqueInput!): Collections
  updateOneComments(data: CommentsUpdateInput!, where: CommentsWhereUniqueInput!): Comments
  updateOneContent_type(data: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type
  updateOneContracts(data: ContractsUpdateInput!, where: ContractsWhereUniqueInput!): Contracts
  updateOneCountries(data: CountriesUpdateInput!, where: CountriesWhereUniqueInput!): Countries
  updateOneCoupons(data: CouponsUpdateInput!, where: CouponsWhereUniqueInput!): Coupons
  updateOneCredit_memos(data: Credit_memosUpdateInput!, where: Credit_memosWhereUniqueInput!): Credit_memos
  updateOneCurrencies(data: CurrenciesUpdateInput!, where: CurrenciesWhereUniqueInput!): Currencies
  updateOneCurrency_rates(data: Currency_ratesUpdateInput!, where: Currency_ratesWhereUniqueInput!): Currency_rates
  updateOneCurrency_symbols(data: Currency_symbolsUpdateInput!, where: Currency_symbolsWhereUniqueInput!): Currency_symbols
  updateOneCustomer_group(data: Customer_groupUpdateInput!, where: Customer_groupWhereUniqueInput!): Customer_group
  updateOneCustomers(data: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers
  updateOneCustomizations(data: CustomizationsUpdateInput!, where: CustomizationsWhereUniqueInput!): Customizations
  updateOneDashboards(data: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards
  updateOneDeepdive(data: DeepdiveUpdateInput!, where: DeepdiveWhereUniqueInput!): Deepdive
  updateOneDigiboard(data: DigiboardUpdateInput!, where: DigiboardWhereUniqueInput!): Digiboard
  updateOneEmails(data: EmailsUpdateInput!, where: EmailsWhereUniqueInput!): Emails
  updateOneEndofshift(data: EndofshiftUpdateInput!, where: EndofshiftWhereUniqueInput!): Endofshift
  updateOneEvents(data: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events
  updateOneFullfillments(data: FullfillmentsUpdateInput!, where: FullfillmentsWhereUniqueInput!): Fullfillments
  updateOneGift_certificates(data: Gift_certificatesUpdateInput!, where: Gift_certificatesWhereUniqueInput!): Gift_certificates
  updateOneGlossary(data: GlossaryUpdateInput!, where: GlossaryWhereUniqueInput!): Glossary
  updateOneImportm(data: ImportmUpdateInput!, where: ImportmWhereUniqueInput!): Importm
  updateOneIntegrations(data: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations
  updateOneInternalization(data: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization
  updateOneInvitations(data: InvitationsUpdateInput!, where: InvitationsWhereUniqueInput!): Invitations
  updateOneInvoices(data: InvoicesUpdateInput!, where: InvoicesWhereUniqueInput!): Invoices
  updateOneLeads(data: LeadsUpdateInput!, where: LeadsWhereUniqueInput!): Leads
  updateOneManufacturer(data: ManufacturerUpdateInput!, where: ManufacturerWhereUniqueInput!): Manufacturer
  updateOneMediamanager(data: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager
  updateOneMeeting(data: MeetingUpdateInput!, where: MeetingWhereUniqueInput!): Meeting
  updateOneMessages(data: MessagesUpdateInput!, where: MessagesWhereUniqueInput!): Messages
  updateOneNewsletters(data: NewslettersUpdateInput!, where: NewslettersWhereUniqueInput!): Newsletters
  updateOneOoto(data: OotoUpdateInput!, where: OotoWhereUniqueInput!): Ooto
  updateOneOpportunities(data: OpportunitiesUpdateInput!, where: OpportunitiesWhereUniqueInput!): Opportunities
  updateOneOrders(data: OrdersUpdateInput!, where: OrdersWhereUniqueInput!): Orders
  updateOnePages(data: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages
  updateOnePartners(data: PartnersUpdateInput!, where: PartnersWhereUniqueInput!): Partners
  updateOnePayments(data: PaymentsUpdateInput!, where: PaymentsWhereUniqueInput!): Payments
  updateOnePermissions(data: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions
  updateOnePlugins(data: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins
  updateOnePolls(data: PollsUpdateInput!, where: PollsWhereUniqueInput!): Polls
  updateOneProduct_types(data: Product_typesUpdateInput!, where: Product_typesWhereUniqueInput!): Product_types
  updateOneProducts(data: ProductsUpdateInput!, where: ProductsWhereUniqueInput!): Products
  updateOneProjects(data: ProjectsUpdateInput!, where: ProjectsWhereUniqueInput!): Projects
  updateOneProviders(data: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers
  updateOneQuotes(data: QuotesUpdateInput!, where: QuotesWhereUniqueInput!): Quotes
  updateOneRating(data: RatingUpdateInput!, where: RatingWhereUniqueInput!): Rating
  updateOneReports(data: ReportsUpdateInput!, where: ReportsWhereUniqueInput!): Reports
  updateOneReturns(data: ReturnsUpdateInput!, where: ReturnsWhereUniqueInput!): Returns
  updateOneReviews(data: ReviewsUpdateInput!, where: ReviewsWhereUniqueInput!): Reviews
  updateOneRewards(data: RewardsUpdateInput!, where: RewardsWhereUniqueInput!): Rewards
  updateOneRoles(data: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles
  updateOneScheduler(data: SchedulerUpdateInput!, where: SchedulerWhereUniqueInput!): Scheduler
  updateOneSegments(data: SegmentsUpdateInput!, where: SegmentsWhereUniqueInput!): Segments
  updateOneSettings(data: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings
  updateOneShipments(data: ShipmentsUpdateInput!, where: ShipmentsWhereUniqueInput!): Shipments
  updateOneSpecial_discounts(data: Special_discountsUpdateInput!, where: Special_discountsWhereUniqueInput!): Special_discounts
  updateOneStates(data: StatesUpdateInput!, where: StatesWhereUniqueInput!): States
  updateOneStatistics(data: StatisticsUpdateInput!, where: StatisticsWhereUniqueInput!): Statistics
  updateOneStocks(data: StocksUpdateInput!, where: StocksWhereUniqueInput!): Stocks
  updateOneSurveys(data: SurveysUpdateInput!, where: SurveysWhereUniqueInput!): Surveys
  updateOneTags(data: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags
  updateOneTargets(data: TargetsUpdateInput!, where: TargetsWhereUniqueInput!): Targets
  updateOneTax_category(data: Tax_categoryUpdateInput!, where: Tax_categoryWhereUniqueInput!): Tax_category
  updateOneTax_rate(data: Tax_rateUpdateInput!, where: Tax_rateWhereUniqueInput!): Tax_rate
  updateOneTax_rule(data: Tax_ruleUpdateInput!, where: Tax_ruleWhereUniqueInput!): Tax_rule
  updateOneTemplates(data: TemplatesUpdateInput!, where: TemplatesWhereUniqueInput!): Templates
  updateOneThemes(data: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes
  updateOneTicketing(data: TicketingUpdateInput!, where: TicketingWhereUniqueInput!): Ticketing
  updateOneTrainings(data: TrainingsUpdateInput!, where: TrainingsWhereUniqueInput!): Trainings
  updateOneTransactions(data: TransactionsUpdateInput!, where: TransactionsWhereUniqueInput!): Transactions
  updateOneUpload_file(data: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file
  updateOneUsers(data: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users
  updateOneVendors(data: VendorsUpdateInput!, where: VendorsWhereUniqueInput!): Vendors
  updateOneVisits(data: VisitsUpdateInput!, where: VisitsWhereUniqueInput!): Visits
  updateOneWarehouse(data: WarehouseUpdateInput!, where: WarehouseWhereUniqueInput!): Warehouse
  updateOneWebhooks(data: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks
  updateOneWebsites(data: WebsitesUpdateInput!, where: WebsitesWhereUniqueInput!): Websites
  updateOneWishlists(data: WishlistsUpdateInput!, where: WishlistsWhereUniqueInput!): Wishlists
  updateOneWorkspaces(data: WorkspacesUpdateInput!, where: WorkspacesWhereUniqueInput!): Workspaces
  updateOneZones(data: ZonesUpdateInput!, where: ZonesWhereUniqueInput!): Zones
  upsertOneAccounts(create: AccountsCreateInput!, update: AccountsUpdateInput!, where: AccountsWhereUniqueInput!): Accounts!
  upsertOneAgreements(create: AgreementsCreateInput!, update: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements!
  upsertOneAnalytics(create: AnalyticsCreateInput!, update: AnalyticsUpdateInput!, where: AnalyticsWhereUniqueInput!): Analytics!
  upsertOneApitoken(create: ApitokenCreateInput!, update: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken!
  upsertOneArticles(create: ArticlesCreateInput!, update: ArticlesUpdateInput!, where: ArticlesWhereUniqueInput!): Articles!
  upsertOneAttributes(create: AttributesCreateInput!, update: AttributesUpdateInput!, where: AttributesWhereUniqueInput!): Attributes!
  upsertOneBrands(create: BrandsCreateInput!, update: BrandsUpdateInput!, where: BrandsWhereUniqueInput!): Brands!
  upsertOneCart_price_rules(create: Cart_price_rulesCreateInput!, update: Cart_price_rulesUpdateInput!, where: Cart_price_rulesWhereUniqueInput!): Cart_price_rules!
  upsertOneCases(create: CasesCreateInput!, update: CasesUpdateInput!, where: CasesWhereUniqueInput!): Cases!
  upsertOneCatalog_price_rule(create: Catalog_price_ruleCreateInput!, update: Catalog_price_ruleUpdateInput!, where: Catalog_price_ruleWhereUniqueInput!): Catalog_price_rule!
  upsertOneCategories(create: CategoriesCreateInput!, update: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories!
  upsertOneChannels(create: ChannelsCreateInput!, update: ChannelsUpdateInput!, where: ChannelsWhereUniqueInput!): Channels!
  upsertOneChecklist(create: ChecklistCreateInput!, update: ChecklistUpdateInput!, where: ChecklistWhereUniqueInput!): Checklist!
  upsertOneCities(create: CitiesCreateInput!, update: CitiesUpdateInput!, where: CitiesWhereUniqueInput!): Cities!
  upsertOneCollections(create: CollectionsCreateInput!, update: CollectionsUpdateInput!, where: CollectionsWhereUniqueInput!): Collections!
  upsertOneComments(create: CommentsCreateInput!, update: CommentsUpdateInput!, where: CommentsWhereUniqueInput!): Comments!
  upsertOneContent_type(create: Content_typeCreateInput!, update: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type!
  upsertOneContracts(create: ContractsCreateInput!, update: ContractsUpdateInput!, where: ContractsWhereUniqueInput!): Contracts!
  upsertOneCountries(create: CountriesCreateInput!, update: CountriesUpdateInput!, where: CountriesWhereUniqueInput!): Countries!
  upsertOneCoupons(create: CouponsCreateInput!, update: CouponsUpdateInput!, where: CouponsWhereUniqueInput!): Coupons!
  upsertOneCredit_memos(create: Credit_memosCreateInput!, update: Credit_memosUpdateInput!, where: Credit_memosWhereUniqueInput!): Credit_memos!
  upsertOneCurrencies(create: CurrenciesCreateInput!, update: CurrenciesUpdateInput!, where: CurrenciesWhereUniqueInput!): Currencies!
  upsertOneCurrency_rates(create: Currency_ratesCreateInput!, update: Currency_ratesUpdateInput!, where: Currency_ratesWhereUniqueInput!): Currency_rates!
  upsertOneCurrency_symbols(create: Currency_symbolsCreateInput!, update: Currency_symbolsUpdateInput!, where: Currency_symbolsWhereUniqueInput!): Currency_symbols!
  upsertOneCustomer_group(create: Customer_groupCreateInput!, update: Customer_groupUpdateInput!, where: Customer_groupWhereUniqueInput!): Customer_group!
  upsertOneCustomers(create: CustomersCreateInput!, update: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers!
  upsertOneCustomizations(create: CustomizationsCreateInput!, update: CustomizationsUpdateInput!, where: CustomizationsWhereUniqueInput!): Customizations!
  upsertOneDashboards(create: DashboardsCreateInput!, update: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards!
  upsertOneDeepdive(create: DeepdiveCreateInput!, update: DeepdiveUpdateInput!, where: DeepdiveWhereUniqueInput!): Deepdive!
  upsertOneDigiboard(create: DigiboardCreateInput!, update: DigiboardUpdateInput!, where: DigiboardWhereUniqueInput!): Digiboard!
  upsertOneEmails(create: EmailsCreateInput!, update: EmailsUpdateInput!, where: EmailsWhereUniqueInput!): Emails!
  upsertOneEndofshift(create: EndofshiftCreateInput!, update: EndofshiftUpdateInput!, where: EndofshiftWhereUniqueInput!): Endofshift!
  upsertOneEvents(create: EventsCreateInput!, update: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events!
  upsertOneFullfillments(create: FullfillmentsCreateInput!, update: FullfillmentsUpdateInput!, where: FullfillmentsWhereUniqueInput!): Fullfillments!
  upsertOneGift_certificates(create: Gift_certificatesCreateInput!, update: Gift_certificatesUpdateInput!, where: Gift_certificatesWhereUniqueInput!): Gift_certificates!
  upsertOneGlossary(create: GlossaryCreateInput!, update: GlossaryUpdateInput!, where: GlossaryWhereUniqueInput!): Glossary!
  upsertOneImportm(create: ImportmCreateInput!, update: ImportmUpdateInput!, where: ImportmWhereUniqueInput!): Importm!
  upsertOneIntegrations(create: IntegrationsCreateInput!, update: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations!
  upsertOneInternalization(create: InternalizationCreateInput!, update: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization!
  upsertOneInvitations(create: InvitationsCreateInput!, update: InvitationsUpdateInput!, where: InvitationsWhereUniqueInput!): Invitations!
  upsertOneInvoices(create: InvoicesCreateInput!, update: InvoicesUpdateInput!, where: InvoicesWhereUniqueInput!): Invoices!
  upsertOneLeads(create: LeadsCreateInput!, update: LeadsUpdateInput!, where: LeadsWhereUniqueInput!): Leads!
  upsertOneManufacturer(create: ManufacturerCreateInput!, update: ManufacturerUpdateInput!, where: ManufacturerWhereUniqueInput!): Manufacturer!
  upsertOneMediamanager(create: MediamanagerCreateInput!, update: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager!
  upsertOneMeeting(create: MeetingCreateInput!, update: MeetingUpdateInput!, where: MeetingWhereUniqueInput!): Meeting!
  upsertOneMessages(create: MessagesCreateInput!, update: MessagesUpdateInput!, where: MessagesWhereUniqueInput!): Messages!
  upsertOneNewsletters(create: NewslettersCreateInput!, update: NewslettersUpdateInput!, where: NewslettersWhereUniqueInput!): Newsletters!
  upsertOneOoto(create: OotoCreateInput!, update: OotoUpdateInput!, where: OotoWhereUniqueInput!): Ooto!
  upsertOneOpportunities(create: OpportunitiesCreateInput!, update: OpportunitiesUpdateInput!, where: OpportunitiesWhereUniqueInput!): Opportunities!
  upsertOneOrders(create: OrdersCreateInput!, update: OrdersUpdateInput!, where: OrdersWhereUniqueInput!): Orders!
  upsertOnePages(create: PagesCreateInput!, update: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages!
  upsertOnePartners(create: PartnersCreateInput!, update: PartnersUpdateInput!, where: PartnersWhereUniqueInput!): Partners!
  upsertOnePayments(create: PaymentsCreateInput!, update: PaymentsUpdateInput!, where: PaymentsWhereUniqueInput!): Payments!
  upsertOnePermissions(create: PermissionsCreateInput!, update: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions!
  upsertOnePlugins(create: PluginsCreateInput!, update: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins!
  upsertOnePolls(create: PollsCreateInput!, update: PollsUpdateInput!, where: PollsWhereUniqueInput!): Polls!
  upsertOneProduct_types(create: Product_typesCreateInput!, update: Product_typesUpdateInput!, where: Product_typesWhereUniqueInput!): Product_types!
  upsertOneProducts(create: ProductsCreateInput!, update: ProductsUpdateInput!, where: ProductsWhereUniqueInput!): Products!
  upsertOneProjects(create: ProjectsCreateInput!, update: ProjectsUpdateInput!, where: ProjectsWhereUniqueInput!): Projects!
  upsertOneProviders(create: ProvidersCreateInput!, update: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers!
  upsertOneQuotes(create: QuotesCreateInput!, update: QuotesUpdateInput!, where: QuotesWhereUniqueInput!): Quotes!
  upsertOneRating(create: RatingCreateInput!, update: RatingUpdateInput!, where: RatingWhereUniqueInput!): Rating!
  upsertOneReports(create: ReportsCreateInput!, update: ReportsUpdateInput!, where: ReportsWhereUniqueInput!): Reports!
  upsertOneReturns(create: ReturnsCreateInput!, update: ReturnsUpdateInput!, where: ReturnsWhereUniqueInput!): Returns!
  upsertOneReviews(create: ReviewsCreateInput!, update: ReviewsUpdateInput!, where: ReviewsWhereUniqueInput!): Reviews!
  upsertOneRewards(create: RewardsCreateInput!, update: RewardsUpdateInput!, where: RewardsWhereUniqueInput!): Rewards!
  upsertOneRoles(create: RolesCreateInput!, update: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles!
  upsertOneScheduler(create: SchedulerCreateInput!, update: SchedulerUpdateInput!, where: SchedulerWhereUniqueInput!): Scheduler!
  upsertOneSegments(create: SegmentsCreateInput!, update: SegmentsUpdateInput!, where: SegmentsWhereUniqueInput!): Segments!
  upsertOneSettings(create: SettingsCreateInput!, update: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings!
  upsertOneShipments(create: ShipmentsCreateInput!, update: ShipmentsUpdateInput!, where: ShipmentsWhereUniqueInput!): Shipments!
  upsertOneSpecial_discounts(create: Special_discountsCreateInput!, update: Special_discountsUpdateInput!, where: Special_discountsWhereUniqueInput!): Special_discounts!
  upsertOneStates(create: StatesCreateInput!, update: StatesUpdateInput!, where: StatesWhereUniqueInput!): States!
  upsertOneStatistics(create: StatisticsCreateInput!, update: StatisticsUpdateInput!, where: StatisticsWhereUniqueInput!): Statistics!
  upsertOneStocks(create: StocksCreateInput!, update: StocksUpdateInput!, where: StocksWhereUniqueInput!): Stocks!
  upsertOneSurveys(create: SurveysCreateInput!, update: SurveysUpdateInput!, where: SurveysWhereUniqueInput!): Surveys!
  upsertOneTags(create: TagsCreateInput!, update: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags!
  upsertOneTargets(create: TargetsCreateInput!, update: TargetsUpdateInput!, where: TargetsWhereUniqueInput!): Targets!
  upsertOneTax_category(create: Tax_categoryCreateInput!, update: Tax_categoryUpdateInput!, where: Tax_categoryWhereUniqueInput!): Tax_category!
  upsertOneTax_rate(create: Tax_rateCreateInput!, update: Tax_rateUpdateInput!, where: Tax_rateWhereUniqueInput!): Tax_rate!
  upsertOneTax_rule(create: Tax_ruleCreateInput!, update: Tax_ruleUpdateInput!, where: Tax_ruleWhereUniqueInput!): Tax_rule!
  upsertOneTemplates(create: TemplatesCreateInput!, update: TemplatesUpdateInput!, where: TemplatesWhereUniqueInput!): Templates!
  upsertOneThemes(create: ThemesCreateInput!, update: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes!
  upsertOneTicketing(create: TicketingCreateInput!, update: TicketingUpdateInput!, where: TicketingWhereUniqueInput!): Ticketing!
  upsertOneTrainings(create: TrainingsCreateInput!, update: TrainingsUpdateInput!, where: TrainingsWhereUniqueInput!): Trainings!
  upsertOneTransactions(create: TransactionsCreateInput!, update: TransactionsUpdateInput!, where: TransactionsWhereUniqueInput!): Transactions!
  upsertOneUpload_file(create: Upload_fileCreateInput!, update: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file!
  upsertOneUsers(create: UsersCreateInput!, update: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users!
  upsertOneVendors(create: VendorsCreateInput!, update: VendorsUpdateInput!, where: VendorsWhereUniqueInput!): Vendors!
  upsertOneVisits(create: VisitsCreateInput!, update: VisitsUpdateInput!, where: VisitsWhereUniqueInput!): Visits!
  upsertOneWarehouse(create: WarehouseCreateInput!, update: WarehouseUpdateInput!, where: WarehouseWhereUniqueInput!): Warehouse!
  upsertOneWebhooks(create: WebhooksCreateInput!, update: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks!
  upsertOneWebsites(create: WebsitesCreateInput!, update: WebsitesUpdateInput!, where: WebsitesWhereUniqueInput!): Websites!
  upsertOneWishlists(create: WishlistsCreateInput!, update: WishlistsUpdateInput!, where: WishlistsWhereUniqueInput!): Wishlists!
  upsertOneWorkspaces(create: WorkspacesCreateInput!, update: WorkspacesUpdateInput!, where: WorkspacesWhereUniqueInput!): Workspaces!
  upsertOneZones(create: ZonesCreateInput!, update: ZonesUpdateInput!, where: ZonesWhereUniqueInput!): Zones!
}

input NestedBigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedDecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

type Newsletters {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int!
  status: String
  store: String
  websites: String
}

type NewslettersAvgAggregate {
  cust_id: Float
  id: Float
}

input NewslettersAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

type NewslettersCountAggregate {
  _all: Int!
  created_at: Int!
  cust_id: Int!
  customer_first_name: Int!
  customer_last_name: Int!
  customers: Int!
  email: Int!
  id: Int!
  status: Int!
  store: Int!
  websites: Int!
}

input NewslettersCountOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

input NewslettersCreateInput {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  status: String
  store: String
  websites: String
}

input NewslettersCreateManyInput {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int
  status: String
  store: String
  websites: String
}

type NewslettersGroupBy {
  _avg: NewslettersAvgAggregate
  _count: NewslettersCountAggregate
  _max: NewslettersMaxAggregate
  _min: NewslettersMinAggregate
  _sum: NewslettersSumAggregate
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int!
  status: String
  store: String
  websites: String
}

type NewslettersMaxAggregate {
  created_at: DateTime
  cust_id: Int
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String
  id: Int
  status: String
  store: String
  websites: String
}

input NewslettersMaxOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

type NewslettersMinAggregate {
  created_at: DateTime
  cust_id: Int
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String
  id: Int
  status: String
  store: String
  websites: String
}

input NewslettersMinOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

enum NewslettersOrderByRelevanceFieldEnum {
  customer_first_name
  customer_last_name
  customers
  email
  status
  store
  websites
}

input NewslettersOrderByRelevanceInput {
  fields: [NewslettersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input NewslettersOrderByWithAggregationInput {
  _avg: NewslettersAvgOrderByAggregateInput
  _count: NewslettersCountOrderByAggregateInput
  _max: NewslettersMaxOrderByAggregateInput
  _min: NewslettersMinOrderByAggregateInput
  _sum: NewslettersSumOrderByAggregateInput
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

input NewslettersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: NewslettersOrderByRelevanceInput
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

enum NewslettersScalarFieldEnum {
  created_at
  cust_id
  customer_first_name
  customer_last_name
  customers
  email
  id
  status
  store
  websites
}

input NewslettersScalarWhereWithAggregatesInput {
  AND: [NewslettersScalarWhereWithAggregatesInput!]
  NOT: [NewslettersScalarWhereWithAggregatesInput!]
  OR: [NewslettersScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customer_first_name: StringNullableWithAggregatesFilter
  customer_last_name: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  store: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
}

type NewslettersSumAggregate {
  cust_id: Int
  id: Int
}

input NewslettersSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

input NewslettersUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customer_first_name: NullableStringFieldUpdateOperationsInput
  customer_last_name: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input NewslettersUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customer_first_name: NullableStringFieldUpdateOperationsInput
  customer_last_name: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input NewslettersWhereInput {
  AND: [NewslettersWhereInput!]
  NOT: [NewslettersWhereInput!]
  OR: [NewslettersWhereInput!]
  created_at: DateTimeNullableFilter
  cust_id: IntFilter
  customer_first_name: StringNullableFilter
  customer_last_name: StringNullableFilter
  customers: StringNullableFilter
  email: StringFilter
  id: IntFilter
  status: StringNullableFilter
  store: StringNullableFilter
  websites: StringNullableFilter
}

input NewslettersWhereUniqueInput {
  email: String
  id: Int
}

input NullableBigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableDecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Ooto {
  created_at: DateTime
  end_date: String
  id: BigInt!
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoAvgAggregate {
  id: Float
}

input OotoAvgOrderByAggregateInput {
  id: SortOrder
}

type OotoCountAggregate {
  _all: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  location: Int!
  login: Int!
  note: Int!
  start_date: Int!
  using_time: Int!
}

input OotoCountOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

input OotoCreateInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoCreateManyInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoGroupBy {
  _avg: OotoAvgAggregate
  _count: OotoCountAggregate
  _max: OotoMaxAggregate
  _min: OotoMinAggregate
  _sum: OotoSumAggregate
  created_at: DateTime
  end_date: String
  id: BigInt!
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoMaxAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoMaxOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

type OotoMinAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoMinOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

enum OotoOrderByRelevanceFieldEnum {
  end_date
  location
  login
  note
  start_date
  using_time
}

input OotoOrderByRelevanceInput {
  fields: [OotoOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input OotoOrderByWithAggregationInput {
  _avg: OotoAvgOrderByAggregateInput
  _count: OotoCountOrderByAggregateInput
  _max: OotoMaxOrderByAggregateInput
  _min: OotoMinOrderByAggregateInput
  _sum: OotoSumOrderByAggregateInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

input OotoOrderByWithRelationAndSearchRelevanceInput {
  _relevance: OotoOrderByRelevanceInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

enum OotoScalarFieldEnum {
  created_at
  end_date
  id
  location
  login
  note
  start_date
  using_time
}

input OotoScalarWhereWithAggregatesInput {
  AND: [OotoScalarWhereWithAggregatesInput!]
  NOT: [OotoScalarWhereWithAggregatesInput!]
  OR: [OotoScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  note: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  using_time: StringNullableWithAggregatesFilter
}

type OotoSumAggregate {
  id: BigInt
}

input OotoSumOrderByAggregateInput {
  id: SortOrder
}

input OotoUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  using_time: NullableStringFieldUpdateOperationsInput
}

input OotoUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  using_time: NullableStringFieldUpdateOperationsInput
}

input OotoWhereInput {
  AND: [OotoWhereInput!]
  NOT: [OotoWhereInput!]
  OR: [OotoWhereInput!]
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  login: StringNullableFilter
  note: StringNullableFilter
  start_date: StringNullableFilter
  using_time: StringNullableFilter
}

input OotoWhereUniqueInput {
  id: BigInt
}

type Opportunities {
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt!
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

type OpportunitiesAvgAggregate {
  id: Float
}

input OpportunitiesAvgOrderByAggregateInput {
  id: SortOrder
}

type OpportunitiesCountAggregate {
  _all: Int!
  account_name: Int!
  amount: Int!
  assigned_to: Int!
  campaign: Int!
  created_at: Int!
  currency: Int!
  description: Int!
  expected_close_date: Int!
  id: Int!
  lead_source: Int!
  name: Int!
  next_step: Int!
  probability: Int!
  sales_stage: Int!
  type: Int!
}

input OpportunitiesCountOrderByAggregateInput {
  account_name: SortOrder
  amount: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  created_at: SortOrder
  currency: SortOrder
  description: SortOrder
  expected_close_date: SortOrder
  id: SortOrder
  lead_source: SortOrder
  name: SortOrder
  next_step: SortOrder
  probability: SortOrder
  sales_stage: SortOrder
  type: SortOrder
}

input OpportunitiesCreateInput {
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

input OpportunitiesCreateManyInput {
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

type OpportunitiesGroupBy {
  _avg: OpportunitiesAvgAggregate
  _count: OpportunitiesCountAggregate
  _max: OpportunitiesMaxAggregate
  _min: OpportunitiesMinAggregate
  _sum: OpportunitiesSumAggregate
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt!
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

type OpportunitiesMaxAggregate {
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

input OpportunitiesMaxOrderByAggregateInput {
  account_name: SortOrder
  amount: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  created_at: SortOrder
  currency: SortOrder
  description: SortOrder
  expected_close_date: SortOrder
  id: SortOrder
  lead_source: SortOrder
  name: SortOrder
  next_step: SortOrder
  probability: SortOrder
  sales_stage: SortOrder
  type: SortOrder
}

type OpportunitiesMinAggregate {
  account_name: String
  amount: String
  assigned_to: String
  campaign: String
  created_at: DateTime
  currency: String
  description: String
  expected_close_date: String
  id: BigInt
  lead_source: String
  name: String
  next_step: String
  probability: String
  sales_stage: String
  type: String
}

input OpportunitiesMinOrderByAggregateInput {
  account_name: SortOrder
  amount: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  created_at: SortOrder
  currency: SortOrder
  description: SortOrder
  expected_close_date: SortOrder
  id: SortOrder
  lead_source: SortOrder
  name: SortOrder
  next_step: SortOrder
  probability: SortOrder
  sales_stage: SortOrder
  type: SortOrder
}

enum OpportunitiesOrderByRelevanceFieldEnum {
  account_name
  amount
  assigned_to
  campaign
  currency
  description
  expected_close_date
  lead_source
  name
  next_step
  probability
  sales_stage
  type
}

input OpportunitiesOrderByRelevanceInput {
  fields: [OpportunitiesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input OpportunitiesOrderByWithAggregationInput {
  _avg: OpportunitiesAvgOrderByAggregateInput
  _count: OpportunitiesCountOrderByAggregateInput
  _max: OpportunitiesMaxOrderByAggregateInput
  _min: OpportunitiesMinOrderByAggregateInput
  _sum: OpportunitiesSumOrderByAggregateInput
  account_name: SortOrder
  amount: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  created_at: SortOrder
  currency: SortOrder
  description: SortOrder
  expected_close_date: SortOrder
  id: SortOrder
  lead_source: SortOrder
  name: SortOrder
  next_step: SortOrder
  probability: SortOrder
  sales_stage: SortOrder
  type: SortOrder
}

input OpportunitiesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: OpportunitiesOrderByRelevanceInput
  account_name: SortOrder
  amount: SortOrder
  assigned_to: SortOrder
  campaign: SortOrder
  created_at: SortOrder
  currency: SortOrder
  description: SortOrder
  expected_close_date: SortOrder
  id: SortOrder
  lead_source: SortOrder
  name: SortOrder
  next_step: SortOrder
  probability: SortOrder
  sales_stage: SortOrder
  type: SortOrder
}

enum OpportunitiesScalarFieldEnum {
  account_name
  amount
  assigned_to
  campaign
  created_at
  currency
  description
  expected_close_date
  id
  lead_source
  name
  next_step
  probability
  sales_stage
  type
}

input OpportunitiesScalarWhereWithAggregatesInput {
  AND: [OpportunitiesScalarWhereWithAggregatesInput!]
  NOT: [OpportunitiesScalarWhereWithAggregatesInput!]
  OR: [OpportunitiesScalarWhereWithAggregatesInput!]
  account_name: StringNullableWithAggregatesFilter
  amount: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  campaign: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  expected_close_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  lead_source: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  next_step: StringNullableWithAggregatesFilter
  probability: StringNullableWithAggregatesFilter
  sales_stage: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
}

type OpportunitiesSumAggregate {
  id: BigInt
}

input OpportunitiesSumOrderByAggregateInput {
  id: SortOrder
}

input OpportunitiesUpdateInput {
  account_name: NullableStringFieldUpdateOperationsInput
  amount: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  expected_close_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  lead_source: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  next_step: NullableStringFieldUpdateOperationsInput
  probability: NullableStringFieldUpdateOperationsInput
  sales_stage: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input OpportunitiesUpdateManyMutationInput {
  account_name: NullableStringFieldUpdateOperationsInput
  amount: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  campaign: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  expected_close_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  lead_source: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  next_step: NullableStringFieldUpdateOperationsInput
  probability: NullableStringFieldUpdateOperationsInput
  sales_stage: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input OpportunitiesWhereInput {
  AND: [OpportunitiesWhereInput!]
  NOT: [OpportunitiesWhereInput!]
  OR: [OpportunitiesWhereInput!]
  account_name: StringNullableFilter
  amount: StringNullableFilter
  assigned_to: StringNullableFilter
  campaign: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  description: StringNullableFilter
  expected_close_date: StringNullableFilter
  id: BigIntFilter
  lead_source: StringNullableFilter
  name: StringNullableFilter
  next_step: StringNullableFilter
  probability: StringNullableFilter
  sales_stage: StringNullableFilter
  type: StringNullableFilter
}

input OpportunitiesWhereUniqueInput {
  id: BigInt
}

type Orders {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int!
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersAvgAggregate {
  cust_id: Float
  grand_total_base: Float
  grand_total_purchased: Float
  id: Float
  prod_id: Float
  purchase_point: Float
}

input OrdersAvgOrderByAggregateInput {
  cust_id: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  purchase_point: SortOrder
}

type OrdersCountAggregate {
  _all: Int!
  action: Int!
  allocated_sources: Int!
  bill_to_name: Int!
  braintree_transaction_source: Int!
  cust_id: Int!
  customers: Int!
  grand_total_base: Int!
  grand_total_purchased: Int!
  id: Int!
  prod_id: Int!
  products: Int!
  purchase_date: Int!
  purchase_point: Int!
  quotes: Int!
  ship_to_name: Int!
  status: Int!
  transactions: Int!
}

input OrdersCountOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

input OrdersCreateInput {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersCreateManyInput {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersGroupBy {
  _avg: OrdersAvgAggregate
  _count: OrdersCountAggregate
  _max: OrdersMaxAggregate
  _min: OrdersMinAggregate
  _sum: OrdersSumAggregate
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int!
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersMaxAggregate {
  action: Boolean
  allocated_sources: String
  bill_to_name: String
  braintree_transaction_source: String
  cust_id: Int
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersMaxOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

type OrdersMinAggregate {
  action: Boolean
  allocated_sources: String
  bill_to_name: String
  braintree_transaction_source: String
  cust_id: Int
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersMinOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

enum OrdersOrderByRelevanceFieldEnum {
  allocated_sources
  bill_to_name
  braintree_transaction_source
  customers
  products
  quotes
  ship_to_name
  transactions
}

input OrdersOrderByRelevanceInput {
  fields: [OrdersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input OrdersOrderByWithAggregationInput {
  _avg: OrdersAvgOrderByAggregateInput
  _count: OrdersCountOrderByAggregateInput
  _max: OrdersMaxOrderByAggregateInput
  _min: OrdersMinOrderByAggregateInput
  _sum: OrdersSumOrderByAggregateInput
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

input OrdersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: OrdersOrderByRelevanceInput
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

enum OrdersScalarFieldEnum {
  action
  allocated_sources
  bill_to_name
  braintree_transaction_source
  cust_id
  customers
  grand_total_base
  grand_total_purchased
  id
  prod_id
  products
  purchase_date
  purchase_point
  quotes
  ship_to_name
  status
  transactions
}

input OrdersScalarWhereWithAggregatesInput {
  AND: [OrdersScalarWhereWithAggregatesInput!]
  NOT: [OrdersScalarWhereWithAggregatesInput!]
  OR: [OrdersScalarWhereWithAggregatesInput!]
  action: BoolNullableWithAggregatesFilter
  allocated_sources: StringNullableWithAggregatesFilter
  bill_to_name: StringWithAggregatesFilter
  braintree_transaction_source: StringNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  grand_total_base: IntNullableWithAggregatesFilter
  grand_total_purchased: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  purchase_date: DateTimeNullableWithAggregatesFilter
  purchase_point: IntNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  ship_to_name: StringNullableWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  transactions: StringNullableWithAggregatesFilter
}

type OrdersSumAggregate {
  cust_id: Int
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  purchase_point: Int
}

input OrdersSumOrderByAggregateInput {
  cust_id: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  purchase_point: SortOrder
}

input OrdersUpdateInput {
  action: NullableBoolFieldUpdateOperationsInput
  allocated_sources: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  braintree_transaction_source: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableIntFieldUpdateOperationsInput
  grand_total_purchased: NullableIntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  purchase_date: NullableDateTimeFieldUpdateOperationsInput
  purchase_point: NullableIntFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  ship_to_name: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  transactions: NullableStringFieldUpdateOperationsInput
}

input OrdersUpdateManyMutationInput {
  action: NullableBoolFieldUpdateOperationsInput
  allocated_sources: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  braintree_transaction_source: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableIntFieldUpdateOperationsInput
  grand_total_purchased: NullableIntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  purchase_date: NullableDateTimeFieldUpdateOperationsInput
  purchase_point: NullableIntFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  ship_to_name: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  transactions: NullableStringFieldUpdateOperationsInput
}

input OrdersWhereInput {
  AND: [OrdersWhereInput!]
  NOT: [OrdersWhereInput!]
  OR: [OrdersWhereInput!]
  action: BoolNullableFilter
  allocated_sources: StringNullableFilter
  bill_to_name: StringFilter
  braintree_transaction_source: StringNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  grand_total_base: IntNullableFilter
  grand_total_purchased: IntNullableFilter
  id: IntFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  purchase_date: DateTimeNullableFilter
  purchase_point: IntNullableFilter
  quotes: StringNullableFilter
  ship_to_name: StringNullableFilter
  status: BoolNullableFilter
  transactions: StringNullableFilter
}

input OrdersWhereUniqueInput {
  id: Int
}

type Pages {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesAvgAggregate {
  id: Float
}

input PagesAvgOrderByAggregateInput {
  id: SortOrder
}

type PagesCountAggregate {
  _all: Int!
  content: Int!
  content_title: Int!
  enable_page: Int!
  id: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  title: Int!
  url_key: Int!
}

input PagesCountOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesCreateInput {
  content: String
  content_title: String
  enable_page: Boolean
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

input PagesCreateManyInput {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesGroupBy {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
  content: String
  content_title: String
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesMaxAggregate {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMaxOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

type PagesMinAggregate {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMinOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesOrderByRelevanceFieldEnum {
  content
  content_title
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesOrderByRelevanceInput {
  fields: [PagesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PagesOrderByWithAggregationInput {
  _avg: PagesAvgOrderByAggregateInput
  _count: PagesCountOrderByAggregateInput
  _max: PagesMaxOrderByAggregateInput
  _min: PagesMinOrderByAggregateInput
  _sum: PagesSumOrderByAggregateInput
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PagesOrderByRelevanceInput
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesScalarFieldEnum {
  content
  content_title
  enable_page
  id
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesScalarWhereWithAggregatesInput {
  AND: [PagesScalarWhereWithAggregatesInput!]
  NOT: [PagesScalarWhereWithAggregatesInput!]
  OR: [PagesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  content_title: StringNullableWithAggregatesFilter
  enable_page: BoolNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  url_key: StringNullableWithAggregatesFilter
}

type PagesSumAggregate {
  id: Int
}

input PagesSumOrderByAggregateInput {
  id: SortOrder
}

input PagesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesWhereInput {
  AND: [PagesWhereInput!]
  NOT: [PagesWhereInput!]
  OR: [PagesWhereInput!]
  content: StringNullableFilter
  content_title: StringNullableFilter
  enable_page: BoolNullableFilter
  id: IntFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  title: StringFilter
  url_key: StringNullableFilter
}

input PagesWhereUniqueInput {
  id: Int
}

type Partners {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt!
  isPublic: String
  name: String
  state: String
}

type PartnersAvgAggregate {
  id: Float
}

input PartnersAvgOrderByAggregateInput {
  id: SortOrder
}

type PartnersCountAggregate {
  _all: Int!
  address: Int!
  business_type: Int!
  city: Int!
  country: Int!
  created_at: Int!
  id: Int!
  isPublic: Int!
  name: Int!
  state: Int!
}

input PartnersCountOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

input PartnersCreateInput {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersCreateManyInput {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

type PartnersGroupBy {
  _avg: PartnersAvgAggregate
  _count: PartnersCountAggregate
  _max: PartnersMaxAggregate
  _min: PartnersMinAggregate
  _sum: PartnersSumAggregate
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt!
  isPublic: String
  name: String
  state: String
}

type PartnersMaxAggregate {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersMaxOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

type PartnersMinAggregate {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersMinOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

enum PartnersOrderByRelevanceFieldEnum {
  address
  business_type
  city
  country
  isPublic
  name
  state
}

input PartnersOrderByRelevanceInput {
  fields: [PartnersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PartnersOrderByWithAggregationInput {
  _avg: PartnersAvgOrderByAggregateInput
  _count: PartnersCountOrderByAggregateInput
  _max: PartnersMaxOrderByAggregateInput
  _min: PartnersMinOrderByAggregateInput
  _sum: PartnersSumOrderByAggregateInput
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

input PartnersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PartnersOrderByRelevanceInput
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

enum PartnersScalarFieldEnum {
  address
  business_type
  city
  country
  created_at
  id
  isPublic
  name
  state
}

input PartnersScalarWhereWithAggregatesInput {
  AND: [PartnersScalarWhereWithAggregatesInput!]
  NOT: [PartnersScalarWhereWithAggregatesInput!]
  OR: [PartnersScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  business_type: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type PartnersSumAggregate {
  id: BigInt
}

input PartnersSumOrderByAggregateInput {
  id: SortOrder
}

input PartnersUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  business_type: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input PartnersUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  business_type: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input PartnersWhereInput {
  AND: [PartnersWhereInput!]
  NOT: [PartnersWhereInput!]
  OR: [PartnersWhereInput!]
  address: StringNullableFilter
  business_type: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  name: StringNullableFilter
  state: StringNullableFilter
}

input PartnersWhereUniqueInput {
  id: BigInt
}

type Payments {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsAvgAggregate {
  id: Float
}

input PaymentsAvgOrderByAggregateInput {
  id: SortOrder
}

type PaymentsCountAggregate {
  _all: Int!
  active: Int!
  client_id: Int!
  client_secret: Int!
  country: Int!
  created_at: Int!
  host_uri: Int!
  icon: Int!
  id: Int!
  name: Int!
  redirect_url: Int!
  redirect_url_app: Int!
}

input PaymentsCountOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input PaymentsCreateInput {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

input PaymentsCreateManyInput {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsGroupBy {
  _avg: PaymentsAvgAggregate
  _count: PaymentsCountAggregate
  _max: PaymentsMaxAggregate
  _min: PaymentsMinAggregate
  _sum: PaymentsSumAggregate
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsMaxAggregate {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input PaymentsMaxOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

type PaymentsMinAggregate {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input PaymentsMinOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum PaymentsOrderByRelevanceFieldEnum {
  active
  client_id
  client_secret
  country
  host_uri
  icon
  name
  redirect_url
  redirect_url_app
}

input PaymentsOrderByRelevanceInput {
  fields: [PaymentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PaymentsOrderByWithAggregationInput {
  _avg: PaymentsAvgOrderByAggregateInput
  _count: PaymentsCountOrderByAggregateInput
  _max: PaymentsMaxOrderByAggregateInput
  _min: PaymentsMinOrderByAggregateInput
  _sum: PaymentsSumOrderByAggregateInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input PaymentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PaymentsOrderByRelevanceInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum PaymentsScalarFieldEnum {
  active
  client_id
  client_secret
  country
  created_at
  host_uri
  icon
  id
  name
  redirect_url
  redirect_url_app
}

input PaymentsScalarWhereWithAggregatesInput {
  AND: [PaymentsScalarWhereWithAggregatesInput!]
  NOT: [PaymentsScalarWhereWithAggregatesInput!]
  OR: [PaymentsScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  host_uri: StringNullableWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  redirect_url: StringNullableWithAggregatesFilter
  redirect_url_app: StringNullableWithAggregatesFilter
}

type PaymentsSumAggregate {
  id: BigInt
}

input PaymentsSumOrderByAggregateInput {
  id: SortOrder
}

input PaymentsUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input PaymentsUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input PaymentsWhereInput {
  AND: [PaymentsWhereInput!]
  NOT: [PaymentsWhereInput!]
  OR: [PaymentsWhereInput!]
  active: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  host_uri: StringNullableFilter
  icon: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  redirect_url: StringNullableFilter
  redirect_url_app: StringNullableFilter
}

input PaymentsWhereUniqueInput {
  id: BigInt
  name: String
}

type Permissions {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsAvgAggregate {
  id: Float
}

input PermissionsAvgOrderByAggregateInput {
  id: SortOrder
}

type PermissionsCountAggregate {
  _all: Int!
  content: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  id: Int!
  name: Int!
  read: Int!
  role: Int!
  update: Int!
  users: Int!
}

input PermissionsCountOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsCreateInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsCreateManyInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsGroupBy {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsMaxAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMaxOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

type PermissionsMinAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMinOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsOrderByRelevanceFieldEnum {
  content
  create
  delete
  name
  read
  role
  update
  users
}

input PermissionsOrderByRelevanceInput {
  fields: [PermissionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PermissionsOrderByWithAggregationInput {
  _avg: PermissionsAvgOrderByAggregateInput
  _count: PermissionsCountOrderByAggregateInput
  _max: PermissionsMaxOrderByAggregateInput
  _min: PermissionsMinOrderByAggregateInput
  _sum: PermissionsSumOrderByAggregateInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PermissionsOrderByRelevanceInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsScalarFieldEnum {
  content
  create
  created_at
  delete
  id
  name
  read
  role
  update
  users
}

input PermissionsScalarWhereWithAggregatesInput {
  AND: [PermissionsScalarWhereWithAggregatesInput!]
  NOT: [PermissionsScalarWhereWithAggregatesInput!]
  OR: [PermissionsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  read: StringNullableWithAggregatesFilter
  role: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type PermissionsSumAggregate {
  id: BigInt
}

input PermissionsSumOrderByAggregateInput {
  id: SortOrder
}

input PermissionsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsWhereInput {
  AND: [PermissionsWhereInput!]
  NOT: [PermissionsWhereInput!]
  OR: [PermissionsWhereInput!]
  content: StringNullableFilter
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  read: StringNullableFilter
  role: StringNullableFilter
  update: StringNullableFilter
  users: StringNullableFilter
}

input PermissionsWhereUniqueInput {
  id: BigInt
}

type Plugins {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsAvgAggregate {
  id: Float
}

input PluginsAvgOrderByAggregateInput {
  id: SortOrder
}

type PluginsCountAggregate {
  _all: Int!
  agree_terms: Int!
  created_at: Int!
  description: Int!
  github_link: Int!
  id: Int!
  last_updated: Int!
  logo: Int!
  name: Int!
  publisher_email: Int!
  publisher_name: Int!
  screenshots: Int!
  url: Int!
}

input PluginsCountOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsCreateInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsCreateManyInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsGroupBy {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsMaxAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMaxOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

type PluginsMinAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMinOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsOrderByRelevanceFieldEnum {
  description
  github_link
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsOrderByRelevanceInput {
  fields: [PluginsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PluginsOrderByWithAggregationInput {
  _avg: PluginsAvgOrderByAggregateInput
  _count: PluginsCountOrderByAggregateInput
  _max: PluginsMaxOrderByAggregateInput
  _min: PluginsMinOrderByAggregateInput
  _sum: PluginsSumOrderByAggregateInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PluginsOrderByRelevanceInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsScalarFieldEnum {
  agree_terms
  created_at
  description
  github_link
  id
  last_updated
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsScalarWhereWithAggregatesInput {
  AND: [PluginsScalarWhereWithAggregatesInput!]
  NOT: [PluginsScalarWhereWithAggregatesInput!]
  OR: [PluginsScalarWhereWithAggregatesInput!]
  agree_terms: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  github_link: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  last_updated: DateTimeNullableWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  publisher_email: StringNullableWithAggregatesFilter
  publisher_name: StringNullableWithAggregatesFilter
  screenshots: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type PluginsSumAggregate {
  id: BigInt
}

input PluginsSumOrderByAggregateInput {
  id: SortOrder
}

input PluginsUpdateInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsUpdateManyMutationInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsWhereInput {
  AND: [PluginsWhereInput!]
  NOT: [PluginsWhereInput!]
  OR: [PluginsWhereInput!]
  agree_terms: BoolNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  github_link: StringNullableFilter
  id: BigIntFilter
  last_updated: DateTimeNullableFilter
  logo: StringNullableFilter
  name: StringNullableFilter
  publisher_email: StringNullableFilter
  publisher_name: StringNullableFilter
  screenshots: StringNullableFilter
  url: StringNullableFilter
}

input PluginsWhereUniqueInput {
  id: BigInt
}

type Polls {
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

type PollsAvgAggregate {
  id: Float
}

input PollsAvgOrderByAggregateInput {
  id: SortOrder
}

type PollsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  customers: Int!
  description: Int!
  excerpt: Int!
  id: Int!
  image: Int!
  name: Int!
  products: Int!
  published: Int!
  question: Int!
  response: Int!
  users: Int!
}

input PollsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  question: SortOrder
  response: SortOrder
  users: SortOrder
}

input PollsCreateInput {
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  image: String
  name: String!
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

input PollsCreateManyInput {
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  id: Int
  image: String
  name: String!
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

type PollsGroupBy {
  _avg: PollsAvgAggregate
  _count: PollsCountAggregate
  _max: PollsMaxAggregate
  _min: PollsMinAggregate
  _sum: PollsSumAggregate
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

type PollsMaxAggregate {
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

input PollsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  question: SortOrder
  response: SortOrder
  users: SortOrder
}

type PollsMinAggregate {
  articles: String
  categories: String
  customers: String
  description: String
  excerpt: String
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  question: String
  response: String
  users: String
}

input PollsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  question: SortOrder
  response: SortOrder
  users: SortOrder
}

enum PollsOrderByRelevanceFieldEnum {
  articles
  categories
  customers
  description
  excerpt
  image
  name
  products
  question
  response
  users
}

input PollsOrderByRelevanceInput {
  fields: [PollsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PollsOrderByWithAggregationInput {
  _avg: PollsAvgOrderByAggregateInput
  _count: PollsCountOrderByAggregateInput
  _max: PollsMaxOrderByAggregateInput
  _min: PollsMinOrderByAggregateInput
  _sum: PollsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  question: SortOrder
  response: SortOrder
  users: SortOrder
}

input PollsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PollsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  question: SortOrder
  response: SortOrder
  users: SortOrder
}

enum PollsScalarFieldEnum {
  articles
  categories
  customers
  description
  excerpt
  id
  image
  name
  products
  published
  question
  response
  users
}

input PollsScalarWhereWithAggregatesInput {
  AND: [PollsScalarWhereWithAggregatesInput!]
  NOT: [PollsScalarWhereWithAggregatesInput!]
  OR: [PollsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  question: StringNullableWithAggregatesFilter
  response: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type PollsSumAggregate {
  id: Int
}

input PollsSumOrderByAggregateInput {
  id: SortOrder
}

input PollsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  question: NullableStringFieldUpdateOperationsInput
  response: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PollsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  question: NullableStringFieldUpdateOperationsInput
  response: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PollsWhereInput {
  AND: [PollsWhereInput!]
  NOT: [PollsWhereInput!]
  OR: [PollsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  published: DateTimeNullableFilter
  question: StringNullableFilter
  response: StringNullableFilter
  users: StringNullableFilter
}

input PollsWhereUniqueInput {
  id: Int
}

type Product_types {
  filter_options: String
  id: Int!
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesAvgAggregate {
  id: Float
  prod_id: Float
}

input Product_typesAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type Product_typesCountAggregate {
  _all: Int!
  filter_options: Int!
  id: Int!
  isShippable: Int!
  meta_description: Int!
  meta_url: Int!
  prod_id: Int!
  product_type: Int!
  products: Int!
  taxes: Int!
  type_name: Int!
}

input Product_typesCountOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

input Product_typesCreateInput {
  filter_options: String
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesCreateManyInput {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesGroupBy {
  _avg: Product_typesAvgAggregate
  _count: Product_typesCountAggregate
  _max: Product_typesMaxAggregate
  _min: Product_typesMinAggregate
  _sum: Product_typesSumAggregate
  filter_options: String
  id: Int!
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesMaxAggregate {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesMaxOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

type Product_typesMinAggregate {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesMinOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

enum Product_typesOrderByRelevanceFieldEnum {
  filter_options
  isShippable
  meta_description
  meta_url
  product_type
  products
  taxes
  type_name
}

input Product_typesOrderByRelevanceInput {
  fields: [Product_typesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Product_typesOrderByWithAggregationInput {
  _avg: Product_typesAvgOrderByAggregateInput
  _count: Product_typesCountOrderByAggregateInput
  _max: Product_typesMaxOrderByAggregateInput
  _min: Product_typesMinOrderByAggregateInput
  _sum: Product_typesSumOrderByAggregateInput
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

input Product_typesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Product_typesOrderByRelevanceInput
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

enum Product_typesScalarFieldEnum {
  filter_options
  id
  isShippable
  meta_description
  meta_url
  prod_id
  product_type
  products
  taxes
  type_name
}

input Product_typesScalarWhereWithAggregatesInput {
  AND: [Product_typesScalarWhereWithAggregatesInput!]
  NOT: [Product_typesScalarWhereWithAggregatesInput!]
  OR: [Product_typesScalarWhereWithAggregatesInput!]
  filter_options: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  isShippable: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  product_type: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  taxes: StringNullableWithAggregatesFilter
  type_name: StringNullableWithAggregatesFilter
}

type Product_typesSumAggregate {
  id: Int
  prod_id: BigInt
}

input Product_typesSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input Product_typesUpdateInput {
  filter_options: NullableStringFieldUpdateOperationsInput
  isShippable: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_type: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  taxes: NullableStringFieldUpdateOperationsInput
  type_name: NullableStringFieldUpdateOperationsInput
}

input Product_typesUpdateManyMutationInput {
  filter_options: NullableStringFieldUpdateOperationsInput
  isShippable: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_type: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  taxes: NullableStringFieldUpdateOperationsInput
  type_name: NullableStringFieldUpdateOperationsInput
}

input Product_typesWhereInput {
  AND: [Product_typesWhereInput!]
  NOT: [Product_typesWhereInput!]
  OR: [Product_typesWhereInput!]
  filter_options: StringNullableFilter
  id: IntFilter
  isShippable: StringNullableFilter
  meta_description: StringNullableFilter
  meta_url: StringNullableFilter
  prod_id: BigIntFilter
  product_type: StringNullableFilter
  products: StringNullableFilter
  taxes: StringNullableFilter
  type_name: StringNullableFilter
}

input Product_typesWhereUniqueInput {
  id: Int
}

type Products {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt!
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsAvgAggregate {
  id: Float
  related_product: Float
  sku: Float
}

input ProductsAvgOrderByAggregateInput {
  id: SortOrder
  related_product: SortOrder
  sku: SortOrder
}

type ProductsCountAggregate {
  _all: Int!
  attributes: Int!
  brand: Int!
  brands: Int!
  categories: Int!
  content: Int!
  contract: Int!
  cost_string: Int!
  country: Int!
  coupons: Int!
  created_at: Int!
  credit_memos: Int!
  customer_type: Int!
  family: Int!
  file: Int!
  format: Int!
  height: Int!
  id: Int!
  image: Int!
  manufacture: Int!
  manufacturer: Int!
  manufacturer_part_number: Int!
  mediamanager: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  meta_url: Int!
  name: Int!
  occassions: Int!
  occassions_occassionsToproducts: Int!
  orders: Int!
  other_products: Int!
  part_number: Int!
  price: Int!
  product: Int!
  product_attribute: Int!
  product_types: Int!
  products: Int!
  quantity_per_source: Int!
  quotes: Int!
  rating: Int!
  related_product: Int!
  returns: Int!
  salable_quantity: Int!
  short_description: Int!
  size: Int!
  sku: Int!
  status: Int!
  stock_status: Int!
  tags: Int!
  tax_class: Int!
  tax_rate: Int!
  tax_rule: Int!
  thumbnail: Int!
  trainings: Int!
  types: Int!
  variants: Int!
  visibility: Int!
  websites: Int!
  weight: Int!
  workspaces: Int!
  zone: Int!
}

input ProductsCountOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProductsCreateInput {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsCreateManyInput {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsGroupBy {
  _avg: ProductsAvgAggregate
  _count: ProductsCountAggregate
  _max: ProductsMaxAggregate
  _min: ProductsMinAggregate
  _sum: ProductsSumAggregate
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt!
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsMaxAggregate {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsMaxOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

type ProductsMinAggregate {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsMinOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProductsOrderByRelevanceFieldEnum {
  attributes
  brand
  brands
  categories
  content
  contract
  cost_string
  country
  coupons
  credit_memos
  customer_type
  family
  file
  format
  height
  image
  manufacture
  manufacturer
  manufacturer_part_number
  mediamanager
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  occassions
  occassions_occassionsToproducts
  orders
  other_products
  part_number
  price
  product
  product_attribute
  product_types
  products
  quantity_per_source
  quotes
  rating
  returns
  salable_quantity
  short_description
  size
  stock_status
  tags
  tax_class
  tax_rate
  tax_rule
  thumbnail
  trainings
  types
  variants
  visibility
  websites
  weight
  workspaces
  zone
}

input ProductsOrderByRelevanceInput {
  fields: [ProductsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProductsOrderByWithAggregationInput {
  _avg: ProductsAvgOrderByAggregateInput
  _count: ProductsCountOrderByAggregateInput
  _max: ProductsMaxOrderByAggregateInput
  _min: ProductsMinOrderByAggregateInput
  _sum: ProductsSumOrderByAggregateInput
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProductsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProductsOrderByRelevanceInput
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProductsScalarFieldEnum {
  attributes
  brand
  brands
  categories
  content
  contract
  cost_string
  country
  coupons
  created_at
  credit_memos
  customer_type
  family
  file
  format
  height
  id
  image
  manufacture
  manufacturer
  manufacturer_part_number
  mediamanager
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  occassions
  occassions_occassionsToproducts
  orders
  other_products
  part_number
  price
  product
  product_attribute
  product_types
  products
  quantity_per_source
  quotes
  rating
  related_product
  returns
  salable_quantity
  short_description
  size
  sku
  status
  stock_status
  tags
  tax_class
  tax_rate
  tax_rule
  thumbnail
  trainings
  types
  variants
  visibility
  websites
  weight
  workspaces
  zone
}

input ProductsScalarWhereWithAggregatesInput {
  AND: [ProductsScalarWhereWithAggregatesInput!]
  NOT: [ProductsScalarWhereWithAggregatesInput!]
  OR: [ProductsScalarWhereWithAggregatesInput!]
  attributes: StringNullableWithAggregatesFilter
  brand: StringNullableWithAggregatesFilter
  brands: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  contract: StringNullableWithAggregatesFilter
  cost_string: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  credit_memos: StringNullableWithAggregatesFilter
  customer_type: StringNullableWithAggregatesFilter
  family: StringNullableWithAggregatesFilter
  file: StringNullableWithAggregatesFilter
  format: StringNullableWithAggregatesFilter
  height: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  manufacture: StringNullableWithAggregatesFilter
  manufacturer: StringNullableWithAggregatesFilter
  manufacturer_part_number: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  occassions: StringNullableWithAggregatesFilter
  occassions_occassionsToproducts: StringNullableWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  other_products: StringNullableWithAggregatesFilter
  part_number: StringNullableWithAggregatesFilter
  price: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  product_attribute: StringNullableWithAggregatesFilter
  product_types: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quantity_per_source: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  rating: StringNullableWithAggregatesFilter
  related_product: BigIntNullableWithAggregatesFilter
  returns: StringNullableWithAggregatesFilter
  salable_quantity: StringNullableWithAggregatesFilter
  short_description: StringNullableWithAggregatesFilter
  size: StringNullableWithAggregatesFilter
  sku: BigIntWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  stock_status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  tax_class: StringNullableWithAggregatesFilter
  tax_rate: StringNullableWithAggregatesFilter
  tax_rule: StringNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
  types: StringNullableWithAggregatesFilter
  variants: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  weight: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zone: StringNullableWithAggregatesFilter
}

type ProductsSumAggregate {
  id: BigInt
  related_product: BigInt
  sku: BigInt
}

input ProductsSumOrderByAggregateInput {
  id: SortOrder
  related_product: SortOrder
  sku: SortOrder
}

input ProductsUpdateInput {
  attributes: NullableStringFieldUpdateOperationsInput
  brand: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  contract: NullableStringFieldUpdateOperationsInput
  cost_string: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_type: NullableStringFieldUpdateOperationsInput
  family: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  manufacture: NullableStringFieldUpdateOperationsInput
  manufacturer: NullableStringFieldUpdateOperationsInput
  manufacturer_part_number: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  occassions_occassionsToproducts: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  other_products: NullableStringFieldUpdateOperationsInput
  part_number: NullableStringFieldUpdateOperationsInput
  price: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  product_attribute: NullableStringFieldUpdateOperationsInput
  product_types: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity_per_source: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  related_product: NullableBigIntFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  salable_quantity: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: BigIntFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  stock_status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
  tax_rule: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  types: NullableStringFieldUpdateOperationsInput
  variants: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProductsUpdateManyMutationInput {
  attributes: NullableStringFieldUpdateOperationsInput
  brand: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  contract: NullableStringFieldUpdateOperationsInput
  cost_string: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_type: NullableStringFieldUpdateOperationsInput
  family: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  manufacture: NullableStringFieldUpdateOperationsInput
  manufacturer: NullableStringFieldUpdateOperationsInput
  manufacturer_part_number: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  occassions_occassionsToproducts: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  other_products: NullableStringFieldUpdateOperationsInput
  part_number: NullableStringFieldUpdateOperationsInput
  price: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  product_attribute: NullableStringFieldUpdateOperationsInput
  product_types: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity_per_source: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  related_product: NullableBigIntFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  salable_quantity: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: BigIntFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  stock_status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
  tax_rule: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  types: NullableStringFieldUpdateOperationsInput
  variants: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProductsWhereInput {
  AND: [ProductsWhereInput!]
  NOT: [ProductsWhereInput!]
  OR: [ProductsWhereInput!]
  attributes: StringNullableFilter
  brand: StringNullableFilter
  brands: StringNullableFilter
  categories: StringNullableFilter
  content: StringNullableFilter
  contract: StringNullableFilter
  cost_string: StringNullableFilter
  country: StringNullableFilter
  coupons: StringNullableFilter
  created_at: DateTimeNullableFilter
  credit_memos: StringNullableFilter
  customer_type: StringNullableFilter
  family: StringNullableFilter
  file: StringNullableFilter
  format: StringNullableFilter
  height: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  manufacture: StringNullableFilter
  manufacturer: StringNullableFilter
  manufacturer_part_number: StringNullableFilter
  mediamanager: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringFilter
  occassions: StringNullableFilter
  occassions_occassionsToproducts: StringNullableFilter
  orders: StringNullableFilter
  other_products: StringNullableFilter
  part_number: StringNullableFilter
  price: StringNullableFilter
  product: StringNullableFilter
  product_attribute: StringNullableFilter
  product_types: StringNullableFilter
  products: StringNullableFilter
  quantity_per_source: StringNullableFilter
  quotes: StringNullableFilter
  rating: StringNullableFilter
  related_product: BigIntNullableFilter
  returns: StringNullableFilter
  salable_quantity: StringNullableFilter
  short_description: StringNullableFilter
  size: StringNullableFilter
  sku: BigIntFilter
  status: BoolNullableFilter
  stock_status: StringNullableFilter
  tags: StringNullableFilter
  tax_class: StringNullableFilter
  tax_rate: StringNullableFilter
  tax_rule: StringNullableFilter
  thumbnail: StringNullableFilter
  trainings: StringNullableFilter
  types: StringNullableFilter
  variants: StringNullableFilter
  visibility: StringNullableFilter
  websites: StringNullableFilter
  weight: StringNullableFilter
  workspaces: StringNullableFilter
  zone: StringNullableFilter
}

input ProductsWhereUniqueInput {
  id: BigInt
  sku: BigInt
}

type Projects {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt!
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsAvgAggregate {
  cust_id: Float
  id: Float
  staff_id: Float
  task_id: Float
  ticket_id: Float
}

input ProjectsAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
  task_id: SortOrder
  ticket_id: SortOrder
}

type ProjectsCountAggregate {
  _all: Int!
  assignee: Int!
  categories: Int!
  company: Int!
  considerworkingdays: Int!
  created_at: Int!
  cust_id: Int!
  customers: Int!
  doing: Int!
  done: Int!
  end_date: Int!
  file: Int!
  goal_collaborators: Int!
  goal_measurement: Int!
  goal_name: Int!
  goal_privacy: Int!
  goal_progress_source: Int!
  goal_timeperiod: Int!
  goal_updatemethod: Int!
  id: Int!
  method: Int!
  name: Int!
  priority: Int!
  product: Int!
  project_manager: Int!
  project_template: Int!
  resource: Int!
  section_rule: Int!
  staff_id: Int!
  start_date: Int!
  status: Int!
  tags: Int!
  task_id: Int!
  tasks: Int!
  team: Int!
  ticket_id: Int!
  ticketing: Int!
  type: Int!
  users: Int!
  websites: Int!
  workspaces: Int!
  zone: Int!
}

input ProjectsCountOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProjectsCreateInput {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsCreateManyInput {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsGroupBy {
  _avg: ProjectsAvgAggregate
  _count: ProjectsCountAggregate
  _max: ProjectsMaxAggregate
  _min: ProjectsMinAggregate
  _sum: ProjectsSumAggregate
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt!
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsMaxAggregate {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsMaxOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

type ProjectsMinAggregate {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsMinOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProjectsOrderByRelevanceFieldEnum {
  assignee
  categories
  company
  considerworkingdays
  customers
  doing
  done
  end_date
  file
  goal_collaborators
  goal_measurement
  goal_name
  goal_privacy
  goal_progress_source
  goal_timeperiod
  goal_updatemethod
  method
  name
  priority
  product
  project_manager
  project_template
  resource
  section_rule
  start_date
  status
  tags
  tasks
  team
  ticketing
  type
  users
  websites
  workspaces
  zone
}

input ProjectsOrderByRelevanceInput {
  fields: [ProjectsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProjectsOrderByWithAggregationInput {
  _avg: ProjectsAvgOrderByAggregateInput
  _count: ProjectsCountOrderByAggregateInput
  _max: ProjectsMaxOrderByAggregateInput
  _min: ProjectsMinOrderByAggregateInput
  _sum: ProjectsSumOrderByAggregateInput
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProjectsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProjectsOrderByRelevanceInput
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProjectsScalarFieldEnum {
  assignee
  categories
  company
  considerworkingdays
  created_at
  cust_id
  customers
  doing
  done
  end_date
  file
  goal_collaborators
  goal_measurement
  goal_name
  goal_privacy
  goal_progress_source
  goal_timeperiod
  goal_updatemethod
  id
  method
  name
  priority
  product
  project_manager
  project_template
  resource
  section_rule
  staff_id
  start_date
  status
  tags
  task_id
  tasks
  team
  ticket_id
  ticketing
  type
  users
  websites
  workspaces
  zone
}

input ProjectsScalarWhereWithAggregatesInput {
  AND: [ProjectsScalarWhereWithAggregatesInput!]
  NOT: [ProjectsScalarWhereWithAggregatesInput!]
  OR: [ProjectsScalarWhereWithAggregatesInput!]
  assignee: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  company: StringNullableWithAggregatesFilter
  considerworkingdays: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  doing: StringNullableWithAggregatesFilter
  done: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  file: StringNullableWithAggregatesFilter
  goal_collaborators: StringNullableWithAggregatesFilter
  goal_measurement: StringNullableWithAggregatesFilter
  goal_name: StringNullableWithAggregatesFilter
  goal_privacy: StringNullableWithAggregatesFilter
  goal_progress_source: StringNullableWithAggregatesFilter
  goal_timeperiod: StringNullableWithAggregatesFilter
  goal_updatemethod: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  method: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  project_manager: StringNullableWithAggregatesFilter
  project_template: StringNullableWithAggregatesFilter
  resource: StringNullableWithAggregatesFilter
  section_rule: StringNullableWithAggregatesFilter
  staff_id: IntNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  task_id: BigIntNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  team: StringNullableWithAggregatesFilter
  ticket_id: BigIntNullableWithAggregatesFilter
  ticketing: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zone: StringNullableWithAggregatesFilter
}

type ProjectsSumAggregate {
  cust_id: Int
  id: BigInt
  staff_id: Int
  task_id: BigInt
  ticket_id: BigInt
}

input ProjectsSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
  task_id: SortOrder
  ticket_id: SortOrder
}

input ProjectsUpdateInput {
  assignee: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  considerworkingdays: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: NullableIntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  doing: NullableStringFieldUpdateOperationsInput
  done: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  goal_collaborators: NullableStringFieldUpdateOperationsInput
  goal_measurement: NullableStringFieldUpdateOperationsInput
  goal_name: NullableStringFieldUpdateOperationsInput
  goal_privacy: NullableStringFieldUpdateOperationsInput
  goal_progress_source: NullableStringFieldUpdateOperationsInput
  goal_timeperiod: NullableStringFieldUpdateOperationsInput
  goal_updatemethod: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  method: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  project_manager: NullableStringFieldUpdateOperationsInput
  project_template: NullableStringFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  section_rule: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_id: NullableBigIntFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_id: NullableBigIntFieldUpdateOperationsInput
  ticketing: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProjectsUpdateManyMutationInput {
  assignee: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  considerworkingdays: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: NullableIntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  doing: NullableStringFieldUpdateOperationsInput
  done: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  goal_collaborators: NullableStringFieldUpdateOperationsInput
  goal_measurement: NullableStringFieldUpdateOperationsInput
  goal_name: NullableStringFieldUpdateOperationsInput
  goal_privacy: NullableStringFieldUpdateOperationsInput
  goal_progress_source: NullableStringFieldUpdateOperationsInput
  goal_timeperiod: NullableStringFieldUpdateOperationsInput
  goal_updatemethod: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  method: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  project_manager: NullableStringFieldUpdateOperationsInput
  project_template: NullableStringFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  section_rule: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_id: NullableBigIntFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_id: NullableBigIntFieldUpdateOperationsInput
  ticketing: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProjectsWhereInput {
  AND: [ProjectsWhereInput!]
  NOT: [ProjectsWhereInput!]
  OR: [ProjectsWhereInput!]
  assignee: StringNullableFilter
  categories: StringNullableFilter
  company: StringNullableFilter
  considerworkingdays: StringNullableFilter
  created_at: DateTimeNullableFilter
  cust_id: IntNullableFilter
  customers: StringNullableFilter
  doing: StringNullableFilter
  done: StringNullableFilter
  end_date: StringNullableFilter
  file: StringNullableFilter
  goal_collaborators: StringNullableFilter
  goal_measurement: StringNullableFilter
  goal_name: StringNullableFilter
  goal_privacy: StringNullableFilter
  goal_progress_source: StringNullableFilter
  goal_timeperiod: StringNullableFilter
  goal_updatemethod: StringNullableFilter
  id: BigIntFilter
  method: StringNullableFilter
  name: StringNullableFilter
  priority: StringNullableFilter
  product: StringNullableFilter
  project_manager: StringNullableFilter
  project_template: StringNullableFilter
  resource: StringNullableFilter
  section_rule: StringNullableFilter
  staff_id: IntNullableFilter
  start_date: StringNullableFilter
  status: StringNullableFilter
  tags: StringNullableFilter
  task_id: BigIntNullableFilter
  tasks: StringNullableFilter
  team: StringNullableFilter
  ticket_id: BigIntNullableFilter
  ticketing: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
  zone: StringNullableFilter
}

input ProjectsWhereUniqueInput {
  id: BigInt
}

type Providers {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersAvgAggregate {
  id: Float
}

input ProvidersAvgOrderByAggregateInput {
  id: SortOrder
}

type ProvidersCountAggregate {
  _all: Int!
  active: Int!
  client_id: Int!
  client_secret: Int!
  created_at: Int!
  host_uri: Int!
  icon: Int!
  id: Int!
  name: Int!
  redirect_url: Int!
  redirect_url_app: Int!
}

input ProvidersCountOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersCreateInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

input ProvidersCreateManyInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersGroupBy {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersMaxAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMaxOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

type ProvidersMinAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMinOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersOrderByRelevanceFieldEnum {
  active
  client_id
  client_secret
  host_uri
  icon
  name
  redirect_url
  redirect_url_app
}

input ProvidersOrderByRelevanceInput {
  fields: [ProvidersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProvidersOrderByWithAggregationInput {
  _avg: ProvidersAvgOrderByAggregateInput
  _count: ProvidersCountOrderByAggregateInput
  _max: ProvidersMaxOrderByAggregateInput
  _min: ProvidersMinOrderByAggregateInput
  _sum: ProvidersSumOrderByAggregateInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProvidersOrderByRelevanceInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersScalarFieldEnum {
  active
  client_id
  client_secret
  created_at
  host_uri
  icon
  id
  name
  redirect_url
  redirect_url_app
}

input ProvidersScalarWhereWithAggregatesInput {
  AND: [ProvidersScalarWhereWithAggregatesInput!]
  NOT: [ProvidersScalarWhereWithAggregatesInput!]
  OR: [ProvidersScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  host_uri: StringNullableWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  redirect_url: StringNullableWithAggregatesFilter
  redirect_url_app: StringNullableWithAggregatesFilter
}

type ProvidersSumAggregate {
  id: BigInt
}

input ProvidersSumOrderByAggregateInput {
  id: SortOrder
}

input ProvidersUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersWhereInput {
  AND: [ProvidersWhereInput!]
  NOT: [ProvidersWhereInput!]
  OR: [ProvidersWhereInput!]
  active: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  created_at: DateTimeNullableFilter
  host_uri: StringNullableFilter
  icon: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  redirect_url: StringNullableFilter
  redirect_url_app: StringNullableFilter
}

input ProvidersWhereUniqueInput {
  id: BigInt
  name: String
}

type Query {
  aggregateAccounts(cursor: AccountsWhereUniqueInput, orderBy: [AccountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AccountsWhereInput): AggregateAccounts!
  aggregateAgreements(cursor: AgreementsWhereUniqueInput, orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): AggregateAgreements!
  aggregateAnalytics(cursor: AnalyticsWhereUniqueInput, orderBy: [AnalyticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AnalyticsWhereInput): AggregateAnalytics!
  aggregateApitoken(cursor: ApitokenWhereUniqueInput, orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): AggregateApitoken!
  aggregateArticles(cursor: ArticlesWhereUniqueInput, orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): AggregateArticles!
  aggregateAttributes(cursor: AttributesWhereUniqueInput, orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): AggregateAttributes!
  aggregateBrands(cursor: BrandsWhereUniqueInput, orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): AggregateBrands!
  aggregateCart_price_rules(cursor: Cart_price_rulesWhereUniqueInput, orderBy: [Cart_price_rulesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Cart_price_rulesWhereInput): AggregateCart_price_rules!
  aggregateCases(cursor: CasesWhereUniqueInput, orderBy: [CasesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CasesWhereInput): AggregateCases!
  aggregateCatalog_price_rule(cursor: Catalog_price_ruleWhereUniqueInput, orderBy: [Catalog_price_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Catalog_price_ruleWhereInput): AggregateCatalog_price_rule!
  aggregateCategories(cursor: CategoriesWhereUniqueInput, orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): AggregateCategories!
  aggregateChannels(cursor: ChannelsWhereUniqueInput, orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): AggregateChannels!
  aggregateChecklist(cursor: ChecklistWhereUniqueInput, orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): AggregateChecklist!
  aggregateCities(cursor: CitiesWhereUniqueInput, orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): AggregateCities!
  aggregateCollections(cursor: CollectionsWhereUniqueInput, orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): AggregateCollections!
  aggregateComments(cursor: CommentsWhereUniqueInput, orderBy: [CommentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CommentsWhereInput): AggregateComments!
  aggregateContent_type(cursor: Content_typeWhereUniqueInput, orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): AggregateContent_type!
  aggregateContracts(cursor: ContractsWhereUniqueInput, orderBy: [ContractsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ContractsWhereInput): AggregateContracts!
  aggregateCountries(cursor: CountriesWhereUniqueInput, orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): AggregateCountries!
  aggregateCoupons(cursor: CouponsWhereUniqueInput, orderBy: [CouponsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CouponsWhereInput): AggregateCoupons!
  aggregateCredit_memos(cursor: Credit_memosWhereUniqueInput, orderBy: [Credit_memosOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Credit_memosWhereInput): AggregateCredit_memos!
  aggregateCurrencies(cursor: CurrenciesWhereUniqueInput, orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): AggregateCurrencies!
  aggregateCurrency_rates(cursor: Currency_ratesWhereUniqueInput, orderBy: [Currency_ratesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_ratesWhereInput): AggregateCurrency_rates!
  aggregateCurrency_symbols(cursor: Currency_symbolsWhereUniqueInput, orderBy: [Currency_symbolsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_symbolsWhereInput): AggregateCurrency_symbols!
  aggregateCustomer_group(cursor: Customer_groupWhereUniqueInput, orderBy: [Customer_groupOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Customer_groupWhereInput): AggregateCustomer_group!
  aggregateCustomers(cursor: CustomersWhereUniqueInput, orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): AggregateCustomers!
  aggregateCustomizations(cursor: CustomizationsWhereUniqueInput, orderBy: [CustomizationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomizationsWhereInput): AggregateCustomizations!
  aggregateDashboards(cursor: DashboardsWhereUniqueInput, orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): AggregateDashboards!
  aggregateDeepdive(cursor: DeepdiveWhereUniqueInput, orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): AggregateDeepdive!
  aggregateDigiboard(cursor: DigiboardWhereUniqueInput, orderBy: [DigiboardOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DigiboardWhereInput): AggregateDigiboard!
  aggregateEmails(cursor: EmailsWhereUniqueInput, orderBy: [EmailsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EmailsWhereInput): AggregateEmails!
  aggregateEndofshift(cursor: EndofshiftWhereUniqueInput, orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): AggregateEndofshift!
  aggregateEvents(cursor: EventsWhereUniqueInput, orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): AggregateEvents!
  aggregateFullfillments(cursor: FullfillmentsWhereUniqueInput, orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): AggregateFullfillments!
  aggregateGift_certificates(cursor: Gift_certificatesWhereUniqueInput, orderBy: [Gift_certificatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Gift_certificatesWhereInput): AggregateGift_certificates!
  aggregateGlossary(cursor: GlossaryWhereUniqueInput, orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): AggregateGlossary!
  aggregateImportm(cursor: ImportmWhereUniqueInput, orderBy: [ImportmOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ImportmWhereInput): AggregateImportm!
  aggregateIntegrations(cursor: IntegrationsWhereUniqueInput, orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): AggregateIntegrations!
  aggregateInternalization(cursor: InternalizationWhereUniqueInput, orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): AggregateInternalization!
  aggregateInvitations(cursor: InvitationsWhereUniqueInput, orderBy: [InvitationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvitationsWhereInput): AggregateInvitations!
  aggregateInvoices(cursor: InvoicesWhereUniqueInput, orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): AggregateInvoices!
  aggregateLeads(cursor: LeadsWhereUniqueInput, orderBy: [LeadsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LeadsWhereInput): AggregateLeads!
  aggregateManufacturer(cursor: ManufacturerWhereUniqueInput, orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): AggregateManufacturer!
  aggregateMediamanager(cursor: MediamanagerWhereUniqueInput, orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): AggregateMediamanager!
  aggregateMeeting(cursor: MeetingWhereUniqueInput, orderBy: [MeetingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MeetingWhereInput): AggregateMeeting!
  aggregateMessages(cursor: MessagesWhereUniqueInput, orderBy: [MessagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MessagesWhereInput): AggregateMessages!
  aggregateNewsletters(cursor: NewslettersWhereUniqueInput, orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): AggregateNewsletters!
  aggregateOoto(cursor: OotoWhereUniqueInput, orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): AggregateOoto!
  aggregateOpportunities(cursor: OpportunitiesWhereUniqueInput, orderBy: [OpportunitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OpportunitiesWhereInput): AggregateOpportunities!
  aggregateOrders(cursor: OrdersWhereUniqueInput, orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): AggregateOrders!
  aggregatePages(cursor: PagesWhereUniqueInput, orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): AggregatePages!
  aggregatePartners(cursor: PartnersWhereUniqueInput, orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): AggregatePartners!
  aggregatePayments(cursor: PaymentsWhereUniqueInput, orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): AggregatePayments!
  aggregatePermissions(cursor: PermissionsWhereUniqueInput, orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): AggregatePermissions!
  aggregatePlugins(cursor: PluginsWhereUniqueInput, orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): AggregatePlugins!
  aggregatePolls(cursor: PollsWhereUniqueInput, orderBy: [PollsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PollsWhereInput): AggregatePolls!
  aggregateProduct_types(cursor: Product_typesWhereUniqueInput, orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): AggregateProduct_types!
  aggregateProducts(cursor: ProductsWhereUniqueInput, orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): AggregateProducts!
  aggregateProjects(cursor: ProjectsWhereUniqueInput, orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): AggregateProjects!
  aggregateProviders(cursor: ProvidersWhereUniqueInput, orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): AggregateProviders!
  aggregateQuotes(cursor: QuotesWhereUniqueInput, orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): AggregateQuotes!
  aggregateRating(cursor: RatingWhereUniqueInput, orderBy: [RatingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RatingWhereInput): AggregateRating!
  aggregateReports(cursor: ReportsWhereUniqueInput, orderBy: [ReportsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReportsWhereInput): AggregateReports!
  aggregateReturns(cursor: ReturnsWhereUniqueInput, orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): AggregateReturns!
  aggregateReviews(cursor: ReviewsWhereUniqueInput, orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): AggregateReviews!
  aggregateRewards(cursor: RewardsWhereUniqueInput, orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): AggregateRewards!
  aggregateRoles(cursor: RolesWhereUniqueInput, orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): AggregateRoles!
  aggregateScheduler(cursor: SchedulerWhereUniqueInput, orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): AggregateScheduler!
  aggregateSegments(cursor: SegmentsWhereUniqueInput, orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): AggregateSegments!
  aggregateSettings(cursor: SettingsWhereUniqueInput, orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): AggregateSettings!
  aggregateShipments(cursor: ShipmentsWhereUniqueInput, orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): AggregateShipments!
  aggregateSpecial_discounts(cursor: Special_discountsWhereUniqueInput, orderBy: [Special_discountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Special_discountsWhereInput): AggregateSpecial_discounts!
  aggregateStates(cursor: StatesWhereUniqueInput, orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): AggregateStates!
  aggregateStatistics(cursor: StatisticsWhereUniqueInput, orderBy: [StatisticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatisticsWhereInput): AggregateStatistics!
  aggregateStocks(cursor: StocksWhereUniqueInput, orderBy: [StocksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StocksWhereInput): AggregateStocks!
  aggregateSurveys(cursor: SurveysWhereUniqueInput, orderBy: [SurveysOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SurveysWhereInput): AggregateSurveys!
  aggregateTags(cursor: TagsWhereUniqueInput, orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): AggregateTags!
  aggregateTargets(cursor: TargetsWhereUniqueInput, orderBy: [TargetsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TargetsWhereInput): AggregateTargets!
  aggregateTax_category(cursor: Tax_categoryWhereUniqueInput, orderBy: [Tax_categoryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_categoryWhereInput): AggregateTax_category!
  aggregateTax_rate(cursor: Tax_rateWhereUniqueInput, orderBy: [Tax_rateOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_rateWhereInput): AggregateTax_rate!
  aggregateTax_rule(cursor: Tax_ruleWhereUniqueInput, orderBy: [Tax_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_ruleWhereInput): AggregateTax_rule!
  aggregateTemplates(cursor: TemplatesWhereUniqueInput, orderBy: [TemplatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TemplatesWhereInput): AggregateTemplates!
  aggregateThemes(cursor: ThemesWhereUniqueInput, orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): AggregateThemes!
  aggregateTicketing(cursor: TicketingWhereUniqueInput, orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): AggregateTicketing!
  aggregateTrainings(cursor: TrainingsWhereUniqueInput, orderBy: [TrainingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TrainingsWhereInput): AggregateTrainings!
  aggregateTransactions(cursor: TransactionsWhereUniqueInput, orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): AggregateTransactions!
  aggregateUpload_file(cursor: Upload_fileWhereUniqueInput, orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): AggregateUpload_file!
  aggregateUsers(cursor: UsersWhereUniqueInput, orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): AggregateUsers!
  aggregateVendors(cursor: VendorsWhereUniqueInput, orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): AggregateVendors!
  aggregateVisits(cursor: VisitsWhereUniqueInput, orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): AggregateVisits!
  aggregateWarehouse(cursor: WarehouseWhereUniqueInput, orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): AggregateWarehouse!
  aggregateWebhooks(cursor: WebhooksWhereUniqueInput, orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): AggregateWebhooks!
  aggregateWebsites(cursor: WebsitesWhereUniqueInput, orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): AggregateWebsites!
  aggregateWishlists(cursor: WishlistsWhereUniqueInput, orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): AggregateWishlists!
  aggregateWorkspaces(cursor: WorkspacesWhereUniqueInput, orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): AggregateWorkspaces!
  aggregateZones(cursor: ZonesWhereUniqueInput, orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): AggregateZones!
  apitoken(where: ApitokenWhereUniqueInput!): Apitoken
  apitokens(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): [Apitoken!]!
  catalog_price_rule(where: Catalog_price_ruleWhereUniqueInput!): Catalog_price_rule
  catalog_price_rules(cursor: Catalog_price_ruleWhereUniqueInput, distinct: [Catalog_price_ruleScalarFieldEnum!], orderBy: [Catalog_price_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Catalog_price_ruleWhereInput): [Catalog_price_rule!]!
  checklist(where: ChecklistWhereUniqueInput!): Checklist
  checklists(cursor: ChecklistWhereUniqueInput, distinct: [ChecklistScalarFieldEnum!], orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): [Checklist!]!
  content_type(where: Content_typeWhereUniqueInput!): Content_type
  content_types(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_type!]!
  customer_group(where: Customer_groupWhereUniqueInput!): Customer_group
  customer_groups(cursor: Customer_groupWhereUniqueInput, distinct: [Customer_groupScalarFieldEnum!], orderBy: [Customer_groupOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Customer_groupWhereInput): [Customer_group!]!
  deepdive(where: DeepdiveWhereUniqueInput!): Deepdive
  deepdives(cursor: DeepdiveWhereUniqueInput, distinct: [DeepdiveScalarFieldEnum!], orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): [Deepdive!]!
  digiboard(where: DigiboardWhereUniqueInput!): Digiboard
  digiboards(cursor: DigiboardWhereUniqueInput, distinct: [DigiboardScalarFieldEnum!], orderBy: [DigiboardOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DigiboardWhereInput): [Digiboard!]!
  endofshift(where: EndofshiftWhereUniqueInput!): Endofshift
  endofshifts(cursor: EndofshiftWhereUniqueInput, distinct: [EndofshiftScalarFieldEnum!], orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): [Endofshift!]!
  findFirstAccounts(cursor: AccountsWhereUniqueInput, distinct: [AccountsScalarFieldEnum!], orderBy: [AccountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AccountsWhereInput): Accounts
  findFirstAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): Agreements
  findFirstAnalytics(cursor: AnalyticsWhereUniqueInput, distinct: [AnalyticsScalarFieldEnum!], orderBy: [AnalyticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AnalyticsWhereInput): Analytics
  findFirstApitoken(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): Apitoken
  findFirstArticles(cursor: ArticlesWhereUniqueInput, distinct: [ArticlesScalarFieldEnum!], orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): Articles
  findFirstAttributes(cursor: AttributesWhereUniqueInput, distinct: [AttributesScalarFieldEnum!], orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): Attributes
  findFirstBrands(cursor: BrandsWhereUniqueInput, distinct: [BrandsScalarFieldEnum!], orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): Brands
  findFirstCart_price_rules(cursor: Cart_price_rulesWhereUniqueInput, distinct: [Cart_price_rulesScalarFieldEnum!], orderBy: [Cart_price_rulesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Cart_price_rulesWhereInput): Cart_price_rules
  findFirstCases(cursor: CasesWhereUniqueInput, distinct: [CasesScalarFieldEnum!], orderBy: [CasesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CasesWhereInput): Cases
  findFirstCatalog_price_rule(cursor: Catalog_price_ruleWhereUniqueInput, distinct: [Catalog_price_ruleScalarFieldEnum!], orderBy: [Catalog_price_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Catalog_price_ruleWhereInput): Catalog_price_rule
  findFirstCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): Categories
  findFirstChannels(cursor: ChannelsWhereUniqueInput, distinct: [ChannelsScalarFieldEnum!], orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): Channels
  findFirstChecklist(cursor: ChecklistWhereUniqueInput, distinct: [ChecklistScalarFieldEnum!], orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): Checklist
  findFirstCities(cursor: CitiesWhereUniqueInput, distinct: [CitiesScalarFieldEnum!], orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): Cities
  findFirstCollections(cursor: CollectionsWhereUniqueInput, distinct: [CollectionsScalarFieldEnum!], orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): Collections
  findFirstComments(cursor: CommentsWhereUniqueInput, distinct: [CommentsScalarFieldEnum!], orderBy: [CommentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CommentsWhereInput): Comments
  findFirstContent_type(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): Content_type
  findFirstContracts(cursor: ContractsWhereUniqueInput, distinct: [ContractsScalarFieldEnum!], orderBy: [ContractsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ContractsWhereInput): Contracts
  findFirstCountries(cursor: CountriesWhereUniqueInput, distinct: [CountriesScalarFieldEnum!], orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): Countries
  findFirstCoupons(cursor: CouponsWhereUniqueInput, distinct: [CouponsScalarFieldEnum!], orderBy: [CouponsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CouponsWhereInput): Coupons
  findFirstCredit_memos(cursor: Credit_memosWhereUniqueInput, distinct: [Credit_memosScalarFieldEnum!], orderBy: [Credit_memosOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Credit_memosWhereInput): Credit_memos
  findFirstCurrencies(cursor: CurrenciesWhereUniqueInput, distinct: [CurrenciesScalarFieldEnum!], orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): Currencies
  findFirstCurrency_rates(cursor: Currency_ratesWhereUniqueInput, distinct: [Currency_ratesScalarFieldEnum!], orderBy: [Currency_ratesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_ratesWhereInput): Currency_rates
  findFirstCurrency_symbols(cursor: Currency_symbolsWhereUniqueInput, distinct: [Currency_symbolsScalarFieldEnum!], orderBy: [Currency_symbolsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_symbolsWhereInput): Currency_symbols
  findFirstCustomer_group(cursor: Customer_groupWhereUniqueInput, distinct: [Customer_groupScalarFieldEnum!], orderBy: [Customer_groupOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Customer_groupWhereInput): Customer_group
  findFirstCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): Customers
  findFirstCustomizations(cursor: CustomizationsWhereUniqueInput, distinct: [CustomizationsScalarFieldEnum!], orderBy: [CustomizationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomizationsWhereInput): Customizations
  findFirstDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): Dashboards
  findFirstDeepdive(cursor: DeepdiveWhereUniqueInput, distinct: [DeepdiveScalarFieldEnum!], orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): Deepdive
  findFirstDigiboard(cursor: DigiboardWhereUniqueInput, distinct: [DigiboardScalarFieldEnum!], orderBy: [DigiboardOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DigiboardWhereInput): Digiboard
  findFirstEmails(cursor: EmailsWhereUniqueInput, distinct: [EmailsScalarFieldEnum!], orderBy: [EmailsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EmailsWhereInput): Emails
  findFirstEndofshift(cursor: EndofshiftWhereUniqueInput, distinct: [EndofshiftScalarFieldEnum!], orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): Endofshift
  findFirstEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): Events
  findFirstFullfillments(cursor: FullfillmentsWhereUniqueInput, distinct: [FullfillmentsScalarFieldEnum!], orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): Fullfillments
  findFirstGift_certificates(cursor: Gift_certificatesWhereUniqueInput, distinct: [Gift_certificatesScalarFieldEnum!], orderBy: [Gift_certificatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Gift_certificatesWhereInput): Gift_certificates
  findFirstGlossary(cursor: GlossaryWhereUniqueInput, distinct: [GlossaryScalarFieldEnum!], orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): Glossary
  findFirstImportm(cursor: ImportmWhereUniqueInput, distinct: [ImportmScalarFieldEnum!], orderBy: [ImportmOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ImportmWhereInput): Importm
  findFirstIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): Integrations
  findFirstInternalization(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): Internalization
  findFirstInvitations(cursor: InvitationsWhereUniqueInput, distinct: [InvitationsScalarFieldEnum!], orderBy: [InvitationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvitationsWhereInput): Invitations
  findFirstInvoices(cursor: InvoicesWhereUniqueInput, distinct: [InvoicesScalarFieldEnum!], orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): Invoices
  findFirstLeads(cursor: LeadsWhereUniqueInput, distinct: [LeadsScalarFieldEnum!], orderBy: [LeadsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LeadsWhereInput): Leads
  findFirstManufacturer(cursor: ManufacturerWhereUniqueInput, distinct: [ManufacturerScalarFieldEnum!], orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): Manufacturer
  findFirstMediamanager(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): Mediamanager
  findFirstMeeting(cursor: MeetingWhereUniqueInput, distinct: [MeetingScalarFieldEnum!], orderBy: [MeetingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MeetingWhereInput): Meeting
  findFirstMessages(cursor: MessagesWhereUniqueInput, distinct: [MessagesScalarFieldEnum!], orderBy: [MessagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MessagesWhereInput): Messages
  findFirstNewsletters(cursor: NewslettersWhereUniqueInput, distinct: [NewslettersScalarFieldEnum!], orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): Newsletters
  findFirstOoto(cursor: OotoWhereUniqueInput, distinct: [OotoScalarFieldEnum!], orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): Ooto
  findFirstOpportunities(cursor: OpportunitiesWhereUniqueInput, distinct: [OpportunitiesScalarFieldEnum!], orderBy: [OpportunitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OpportunitiesWhereInput): Opportunities
  findFirstOrders(cursor: OrdersWhereUniqueInput, distinct: [OrdersScalarFieldEnum!], orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): Orders
  findFirstPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): Pages
  findFirstPartners(cursor: PartnersWhereUniqueInput, distinct: [PartnersScalarFieldEnum!], orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): Partners
  findFirstPayments(cursor: PaymentsWhereUniqueInput, distinct: [PaymentsScalarFieldEnum!], orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): Payments
  findFirstPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): Permissions
  findFirstPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): Plugins
  findFirstPolls(cursor: PollsWhereUniqueInput, distinct: [PollsScalarFieldEnum!], orderBy: [PollsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PollsWhereInput): Polls
  findFirstProduct_types(cursor: Product_typesWhereUniqueInput, distinct: [Product_typesScalarFieldEnum!], orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): Product_types
  findFirstProducts(cursor: ProductsWhereUniqueInput, distinct: [ProductsScalarFieldEnum!], orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): Products
  findFirstProjects(cursor: ProjectsWhereUniqueInput, distinct: [ProjectsScalarFieldEnum!], orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): Projects
  findFirstProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): Providers
  findFirstQuotes(cursor: QuotesWhereUniqueInput, distinct: [QuotesScalarFieldEnum!], orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): Quotes
  findFirstRating(cursor: RatingWhereUniqueInput, distinct: [RatingScalarFieldEnum!], orderBy: [RatingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RatingWhereInput): Rating
  findFirstReports(cursor: ReportsWhereUniqueInput, distinct: [ReportsScalarFieldEnum!], orderBy: [ReportsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReportsWhereInput): Reports
  findFirstReturns(cursor: ReturnsWhereUniqueInput, distinct: [ReturnsScalarFieldEnum!], orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): Returns
  findFirstReviews(cursor: ReviewsWhereUniqueInput, distinct: [ReviewsScalarFieldEnum!], orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): Reviews
  findFirstRewards(cursor: RewardsWhereUniqueInput, distinct: [RewardsScalarFieldEnum!], orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): Rewards
  findFirstRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): Roles
  findFirstScheduler(cursor: SchedulerWhereUniqueInput, distinct: [SchedulerScalarFieldEnum!], orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): Scheduler
  findFirstSegments(cursor: SegmentsWhereUniqueInput, distinct: [SegmentsScalarFieldEnum!], orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): Segments
  findFirstSettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): Settings
  findFirstShipments(cursor: ShipmentsWhereUniqueInput, distinct: [ShipmentsScalarFieldEnum!], orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): Shipments
  findFirstSpecial_discounts(cursor: Special_discountsWhereUniqueInput, distinct: [Special_discountsScalarFieldEnum!], orderBy: [Special_discountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Special_discountsWhereInput): Special_discounts
  findFirstStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): States
  findFirstStatistics(cursor: StatisticsWhereUniqueInput, distinct: [StatisticsScalarFieldEnum!], orderBy: [StatisticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatisticsWhereInput): Statistics
  findFirstStocks(cursor: StocksWhereUniqueInput, distinct: [StocksScalarFieldEnum!], orderBy: [StocksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StocksWhereInput): Stocks
  findFirstSurveys(cursor: SurveysWhereUniqueInput, distinct: [SurveysScalarFieldEnum!], orderBy: [SurveysOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SurveysWhereInput): Surveys
  findFirstTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): Tags
  findFirstTargets(cursor: TargetsWhereUniqueInput, distinct: [TargetsScalarFieldEnum!], orderBy: [TargetsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TargetsWhereInput): Targets
  findFirstTax_category(cursor: Tax_categoryWhereUniqueInput, distinct: [Tax_categoryScalarFieldEnum!], orderBy: [Tax_categoryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_categoryWhereInput): Tax_category
  findFirstTax_rate(cursor: Tax_rateWhereUniqueInput, distinct: [Tax_rateScalarFieldEnum!], orderBy: [Tax_rateOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_rateWhereInput): Tax_rate
  findFirstTax_rule(cursor: Tax_ruleWhereUniqueInput, distinct: [Tax_ruleScalarFieldEnum!], orderBy: [Tax_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_ruleWhereInput): Tax_rule
  findFirstTemplates(cursor: TemplatesWhereUniqueInput, distinct: [TemplatesScalarFieldEnum!], orderBy: [TemplatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TemplatesWhereInput): Templates
  findFirstThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): Themes
  findFirstTicketing(cursor: TicketingWhereUniqueInput, distinct: [TicketingScalarFieldEnum!], orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): Ticketing
  findFirstTrainings(cursor: TrainingsWhereUniqueInput, distinct: [TrainingsScalarFieldEnum!], orderBy: [TrainingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TrainingsWhereInput): Trainings
  findFirstTransactions(cursor: TransactionsWhereUniqueInput, distinct: [TransactionsScalarFieldEnum!], orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): Transactions
  findFirstUpload_file(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): Upload_file
  findFirstUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstVendors(cursor: VendorsWhereUniqueInput, distinct: [VendorsScalarFieldEnum!], orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): Vendors
  findFirstVisits(cursor: VisitsWhereUniqueInput, distinct: [VisitsScalarFieldEnum!], orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): Visits
  findFirstWarehouse(cursor: WarehouseWhereUniqueInput, distinct: [WarehouseScalarFieldEnum!], orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): Warehouse
  findFirstWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): Webhooks
  findFirstWebsites(cursor: WebsitesWhereUniqueInput, distinct: [WebsitesScalarFieldEnum!], orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): Websites
  findFirstWishlists(cursor: WishlistsWhereUniqueInput, distinct: [WishlistsScalarFieldEnum!], orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): Wishlists
  findFirstWorkspaces(cursor: WorkspacesWhereUniqueInput, distinct: [WorkspacesScalarFieldEnum!], orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): Workspaces
  findFirstZones(cursor: ZonesWhereUniqueInput, distinct: [ZonesScalarFieldEnum!], orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): Zones
  findManyAccounts(cursor: AccountsWhereUniqueInput, distinct: [AccountsScalarFieldEnum!], orderBy: [AccountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AccountsWhereInput): [Accounts!]!
  findManyAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): [Agreements!]!
  findManyAnalytics(cursor: AnalyticsWhereUniqueInput, distinct: [AnalyticsScalarFieldEnum!], orderBy: [AnalyticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AnalyticsWhereInput): [Analytics!]!
  findManyArticles(cursor: ArticlesWhereUniqueInput, distinct: [ArticlesScalarFieldEnum!], orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): [Articles!]!
  findManyAttributes(cursor: AttributesWhereUniqueInput, distinct: [AttributesScalarFieldEnum!], orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): [Attributes!]!
  findManyBrands(cursor: BrandsWhereUniqueInput, distinct: [BrandsScalarFieldEnum!], orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): [Brands!]!
  findManyCart_price_rules(cursor: Cart_price_rulesWhereUniqueInput, distinct: [Cart_price_rulesScalarFieldEnum!], orderBy: [Cart_price_rulesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Cart_price_rulesWhereInput): [Cart_price_rules!]!
  findManyCases(cursor: CasesWhereUniqueInput, distinct: [CasesScalarFieldEnum!], orderBy: [CasesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CasesWhereInput): [Cases!]!
  findManyCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): [Categories!]!
  findManyChannels(cursor: ChannelsWhereUniqueInput, distinct: [ChannelsScalarFieldEnum!], orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): [Channels!]!
  findManyCities(cursor: CitiesWhereUniqueInput, distinct: [CitiesScalarFieldEnum!], orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): [Cities!]!
  findManyCollections(cursor: CollectionsWhereUniqueInput, distinct: [CollectionsScalarFieldEnum!], orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): [Collections!]!
  findManyComments(cursor: CommentsWhereUniqueInput, distinct: [CommentsScalarFieldEnum!], orderBy: [CommentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CommentsWhereInput): [Comments!]!
  findManyContracts(cursor: ContractsWhereUniqueInput, distinct: [ContractsScalarFieldEnum!], orderBy: [ContractsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ContractsWhereInput): [Contracts!]!
  findManyCountries(cursor: CountriesWhereUniqueInput, distinct: [CountriesScalarFieldEnum!], orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): [Countries!]!
  findManyCoupons(cursor: CouponsWhereUniqueInput, distinct: [CouponsScalarFieldEnum!], orderBy: [CouponsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CouponsWhereInput): [Coupons!]!
  findManyCredit_memos(cursor: Credit_memosWhereUniqueInput, distinct: [Credit_memosScalarFieldEnum!], orderBy: [Credit_memosOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Credit_memosWhereInput): [Credit_memos!]!
  findManyCurrencies(cursor: CurrenciesWhereUniqueInput, distinct: [CurrenciesScalarFieldEnum!], orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): [Currencies!]!
  findManyCurrency_rates(cursor: Currency_ratesWhereUniqueInput, distinct: [Currency_ratesScalarFieldEnum!], orderBy: [Currency_ratesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_ratesWhereInput): [Currency_rates!]!
  findManyCurrency_symbols(cursor: Currency_symbolsWhereUniqueInput, distinct: [Currency_symbolsScalarFieldEnum!], orderBy: [Currency_symbolsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Currency_symbolsWhereInput): [Currency_symbols!]!
  findManyCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): [Customers!]!
  findManyCustomizations(cursor: CustomizationsWhereUniqueInput, distinct: [CustomizationsScalarFieldEnum!], orderBy: [CustomizationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomizationsWhereInput): [Customizations!]!
  findManyDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): [Dashboards!]!
  findManyEmails(cursor: EmailsWhereUniqueInput, distinct: [EmailsScalarFieldEnum!], orderBy: [EmailsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EmailsWhereInput): [Emails!]!
  findManyEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): [Events!]!
  findManyFullfillments(cursor: FullfillmentsWhereUniqueInput, distinct: [FullfillmentsScalarFieldEnum!], orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): [Fullfillments!]!
  findManyGift_certificates(cursor: Gift_certificatesWhereUniqueInput, distinct: [Gift_certificatesScalarFieldEnum!], orderBy: [Gift_certificatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Gift_certificatesWhereInput): [Gift_certificates!]!
  findManyIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [Integrations!]!
  findManyInvitations(cursor: InvitationsWhereUniqueInput, distinct: [InvitationsScalarFieldEnum!], orderBy: [InvitationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvitationsWhereInput): [Invitations!]!
  findManyInvoices(cursor: InvoicesWhereUniqueInput, distinct: [InvoicesScalarFieldEnum!], orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): [Invoices!]!
  findManyLeads(cursor: LeadsWhereUniqueInput, distinct: [LeadsScalarFieldEnum!], orderBy: [LeadsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LeadsWhereInput): [Leads!]!
  findManyMessages(cursor: MessagesWhereUniqueInput, distinct: [MessagesScalarFieldEnum!], orderBy: [MessagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MessagesWhereInput): [Messages!]!
  findManyNewsletters(cursor: NewslettersWhereUniqueInput, distinct: [NewslettersScalarFieldEnum!], orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): [Newsletters!]!
  findManyOpportunities(cursor: OpportunitiesWhereUniqueInput, distinct: [OpportunitiesScalarFieldEnum!], orderBy: [OpportunitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OpportunitiesWhereInput): [Opportunities!]!
  findManyOrders(cursor: OrdersWhereUniqueInput, distinct: [OrdersScalarFieldEnum!], orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): [Orders!]!
  findManyPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): [Pages!]!
  findManyPartners(cursor: PartnersWhereUniqueInput, distinct: [PartnersScalarFieldEnum!], orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): [Partners!]!
  findManyPayments(cursor: PaymentsWhereUniqueInput, distinct: [PaymentsScalarFieldEnum!], orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): [Payments!]!
  findManyPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): [Permissions!]!
  findManyPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): [Plugins!]!
  findManyPolls(cursor: PollsWhereUniqueInput, distinct: [PollsScalarFieldEnum!], orderBy: [PollsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PollsWhereInput): [Polls!]!
  findManyProduct_types(cursor: Product_typesWhereUniqueInput, distinct: [Product_typesScalarFieldEnum!], orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): [Product_types!]!
  findManyProducts(cursor: ProductsWhereUniqueInput, distinct: [ProductsScalarFieldEnum!], orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): [Products!]!
  findManyProjects(cursor: ProjectsWhereUniqueInput, distinct: [ProjectsScalarFieldEnum!], orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): [Projects!]!
  findManyProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): [Providers!]!
  findManyQuotes(cursor: QuotesWhereUniqueInput, distinct: [QuotesScalarFieldEnum!], orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): [Quotes!]!
  findManyReports(cursor: ReportsWhereUniqueInput, distinct: [ReportsScalarFieldEnum!], orderBy: [ReportsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReportsWhereInput): [Reports!]!
  findManyReturns(cursor: ReturnsWhereUniqueInput, distinct: [ReturnsScalarFieldEnum!], orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): [Returns!]!
  findManyReviews(cursor: ReviewsWhereUniqueInput, distinct: [ReviewsScalarFieldEnum!], orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): [Reviews!]!
  findManyRewards(cursor: RewardsWhereUniqueInput, distinct: [RewardsScalarFieldEnum!], orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): [Rewards!]!
  findManyRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): [Roles!]!
  findManySegments(cursor: SegmentsWhereUniqueInput, distinct: [SegmentsScalarFieldEnum!], orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): [Segments!]!
  findManySettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): [Settings!]!
  findManyShipments(cursor: ShipmentsWhereUniqueInput, distinct: [ShipmentsScalarFieldEnum!], orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): [Shipments!]!
  findManySpecial_discounts(cursor: Special_discountsWhereUniqueInput, distinct: [Special_discountsScalarFieldEnum!], orderBy: [Special_discountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Special_discountsWhereInput): [Special_discounts!]!
  findManyStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): [States!]!
  findManyStatistics(cursor: StatisticsWhereUniqueInput, distinct: [StatisticsScalarFieldEnum!], orderBy: [StatisticsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatisticsWhereInput): [Statistics!]!
  findManyStocks(cursor: StocksWhereUniqueInput, distinct: [StocksScalarFieldEnum!], orderBy: [StocksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StocksWhereInput): [Stocks!]!
  findManySurveys(cursor: SurveysWhereUniqueInput, distinct: [SurveysScalarFieldEnum!], orderBy: [SurveysOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SurveysWhereInput): [Surveys!]!
  findManyTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): [Tags!]!
  findManyTargets(cursor: TargetsWhereUniqueInput, distinct: [TargetsScalarFieldEnum!], orderBy: [TargetsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TargetsWhereInput): [Targets!]!
  findManyTemplates(cursor: TemplatesWhereUniqueInput, distinct: [TemplatesScalarFieldEnum!], orderBy: [TemplatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TemplatesWhereInput): [Templates!]!
  findManyThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): [Themes!]!
  findManyTrainings(cursor: TrainingsWhereUniqueInput, distinct: [TrainingsScalarFieldEnum!], orderBy: [TrainingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TrainingsWhereInput): [Trainings!]!
  findManyTransactions(cursor: TransactionsWhereUniqueInput, distinct: [TransactionsScalarFieldEnum!], orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): [Transactions!]!
  findManyUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): [Users!]!
  findManyVendors(cursor: VendorsWhereUniqueInput, distinct: [VendorsScalarFieldEnum!], orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): [Vendors!]!
  findManyVisits(cursor: VisitsWhereUniqueInput, distinct: [VisitsScalarFieldEnum!], orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): [Visits!]!
  findManyWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): [Webhooks!]!
  findManyWebsites(cursor: WebsitesWhereUniqueInput, distinct: [WebsitesScalarFieldEnum!], orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): [Websites!]!
  findManyWishlists(cursor: WishlistsWhereUniqueInput, distinct: [WishlistsScalarFieldEnum!], orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): [Wishlists!]!
  findManyWorkspaces(cursor: WorkspacesWhereUniqueInput, distinct: [WorkspacesScalarFieldEnum!], orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): [Workspaces!]!
  findManyZones(cursor: ZonesWhereUniqueInput, distinct: [ZonesScalarFieldEnum!], orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): [Zones!]!
  findUniqueAccounts(where: AccountsWhereUniqueInput!): Accounts
  findUniqueAgreements(where: AgreementsWhereUniqueInput!): Agreements
  findUniqueAnalytics(where: AnalyticsWhereUniqueInput!): Analytics
  findUniqueArticles(where: ArticlesWhereUniqueInput!): Articles
  findUniqueAttributes(where: AttributesWhereUniqueInput!): Attributes
  findUniqueBrands(where: BrandsWhereUniqueInput!): Brands
  findUniqueCart_price_rules(where: Cart_price_rulesWhereUniqueInput!): Cart_price_rules
  findUniqueCases(where: CasesWhereUniqueInput!): Cases
  findUniqueCategories(where: CategoriesWhereUniqueInput!): Categories
  findUniqueChannels(where: ChannelsWhereUniqueInput!): Channels
  findUniqueCities(where: CitiesWhereUniqueInput!): Cities
  findUniqueCollections(where: CollectionsWhereUniqueInput!): Collections
  findUniqueComments(where: CommentsWhereUniqueInput!): Comments
  findUniqueContracts(where: ContractsWhereUniqueInput!): Contracts
  findUniqueCountries(where: CountriesWhereUniqueInput!): Countries
  findUniqueCoupons(where: CouponsWhereUniqueInput!): Coupons
  findUniqueCredit_memos(where: Credit_memosWhereUniqueInput!): Credit_memos
  findUniqueCurrencies(where: CurrenciesWhereUniqueInput!): Currencies
  findUniqueCurrency_rates(where: Currency_ratesWhereUniqueInput!): Currency_rates
  findUniqueCurrency_symbols(where: Currency_symbolsWhereUniqueInput!): Currency_symbols
  findUniqueCustomers(where: CustomersWhereUniqueInput!): Customers
  findUniqueCustomizations(where: CustomizationsWhereUniqueInput!): Customizations
  findUniqueDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  findUniqueEmails(where: EmailsWhereUniqueInput!): Emails
  findUniqueEvents(where: EventsWhereUniqueInput!): Events
  findUniqueFullfillments(where: FullfillmentsWhereUniqueInput!): Fullfillments
  findUniqueGift_certificates(where: Gift_certificatesWhereUniqueInput!): Gift_certificates
  findUniqueIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  findUniqueInvitations(where: InvitationsWhereUniqueInput!): Invitations
  findUniqueInvoices(where: InvoicesWhereUniqueInput!): Invoices
  findUniqueLeads(where: LeadsWhereUniqueInput!): Leads
  findUniqueMessages(where: MessagesWhereUniqueInput!): Messages
  findUniqueNewsletters(where: NewslettersWhereUniqueInput!): Newsletters
  findUniqueOpportunities(where: OpportunitiesWhereUniqueInput!): Opportunities
  findUniqueOrders(where: OrdersWhereUniqueInput!): Orders
  findUniquePages(where: PagesWhereUniqueInput!): Pages
  findUniquePartners(where: PartnersWhereUniqueInput!): Partners
  findUniquePayments(where: PaymentsWhereUniqueInput!): Payments
  findUniquePermissions(where: PermissionsWhereUniqueInput!): Permissions
  findUniquePlugins(where: PluginsWhereUniqueInput!): Plugins
  findUniquePolls(where: PollsWhereUniqueInput!): Polls
  findUniqueProduct_types(where: Product_typesWhereUniqueInput!): Product_types
  findUniqueProducts(where: ProductsWhereUniqueInput!): Products
  findUniqueProjects(where: ProjectsWhereUniqueInput!): Projects
  findUniqueProviders(where: ProvidersWhereUniqueInput!): Providers
  findUniqueQuotes(where: QuotesWhereUniqueInput!): Quotes
  findUniqueReports(where: ReportsWhereUniqueInput!): Reports
  findUniqueReturns(where: ReturnsWhereUniqueInput!): Returns
  findUniqueReviews(where: ReviewsWhereUniqueInput!): Reviews
  findUniqueRewards(where: RewardsWhereUniqueInput!): Rewards
  findUniqueRoles(where: RolesWhereUniqueInput!): Roles
  findUniqueSegments(where: SegmentsWhereUniqueInput!): Segments
  findUniqueSettings(where: SettingsWhereUniqueInput!): Settings
  findUniqueShipments(where: ShipmentsWhereUniqueInput!): Shipments
  findUniqueSpecial_discounts(where: Special_discountsWhereUniqueInput!): Special_discounts
  findUniqueStates(where: StatesWhereUniqueInput!): States
  findUniqueStatistics(where: StatisticsWhereUniqueInput!): Statistics
  findUniqueStocks(where: StocksWhereUniqueInput!): Stocks
  findUniqueSurveys(where: SurveysWhereUniqueInput!): Surveys
  findUniqueTags(where: TagsWhereUniqueInput!): Tags
  findUniqueTargets(where: TargetsWhereUniqueInput!): Targets
  findUniqueTemplates(where: TemplatesWhereUniqueInput!): Templates
  findUniqueThemes(where: ThemesWhereUniqueInput!): Themes
  findUniqueTrainings(where: TrainingsWhereUniqueInput!): Trainings
  findUniqueTransactions(where: TransactionsWhereUniqueInput!): Transactions
  findUniqueUsers(where: UsersWhereUniqueInput!): Users
  findUniqueVendors(where: VendorsWhereUniqueInput!): Vendors
  findUniqueVisits(where: VisitsWhereUniqueInput!): Visits
  findUniqueWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  findUniqueWebsites(where: WebsitesWhereUniqueInput!): Websites
  findUniqueWishlists(where: WishlistsWhereUniqueInput!): Wishlists
  findUniqueWorkspaces(where: WorkspacesWhereUniqueInput!): Workspaces
  findUniqueZones(where: ZonesWhereUniqueInput!): Zones
  glossaries(cursor: GlossaryWhereUniqueInput, distinct: [GlossaryScalarFieldEnum!], orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): [Glossary!]!
  glossary(where: GlossaryWhereUniqueInput!): Glossary
  groupByAccounts(by: [AccountsScalarFieldEnum!]!, having: AccountsScalarWhereWithAggregatesInput, orderBy: [AccountsOrderByWithAggregationInput!], skip: Int, take: Int, where: AccountsWhereInput): [AccountsGroupBy!]!
  groupByAgreements(by: [AgreementsScalarFieldEnum!]!, having: AgreementsScalarWhereWithAggregatesInput, orderBy: [AgreementsOrderByWithAggregationInput!], skip: Int, take: Int, where: AgreementsWhereInput): [AgreementsGroupBy!]!
  groupByAnalytics(by: [AnalyticsScalarFieldEnum!]!, having: AnalyticsScalarWhereWithAggregatesInput, orderBy: [AnalyticsOrderByWithAggregationInput!], skip: Int, take: Int, where: AnalyticsWhereInput): [AnalyticsGroupBy!]!
  groupByApitoken(by: [ApitokenScalarFieldEnum!]!, having: ApitokenScalarWhereWithAggregatesInput, orderBy: [ApitokenOrderByWithAggregationInput!], skip: Int, take: Int, where: ApitokenWhereInput): [ApitokenGroupBy!]!
  groupByArticles(by: [ArticlesScalarFieldEnum!]!, having: ArticlesScalarWhereWithAggregatesInput, orderBy: [ArticlesOrderByWithAggregationInput!], skip: Int, take: Int, where: ArticlesWhereInput): [ArticlesGroupBy!]!
  groupByAttributes(by: [AttributesScalarFieldEnum!]!, having: AttributesScalarWhereWithAggregatesInput, orderBy: [AttributesOrderByWithAggregationInput!], skip: Int, take: Int, where: AttributesWhereInput): [AttributesGroupBy!]!
  groupByBrands(by: [BrandsScalarFieldEnum!]!, having: BrandsScalarWhereWithAggregatesInput, orderBy: [BrandsOrderByWithAggregationInput!], skip: Int, take: Int, where: BrandsWhereInput): [BrandsGroupBy!]!
  groupByCart_price_rules(by: [Cart_price_rulesScalarFieldEnum!]!, having: Cart_price_rulesScalarWhereWithAggregatesInput, orderBy: [Cart_price_rulesOrderByWithAggregationInput!], skip: Int, take: Int, where: Cart_price_rulesWhereInput): [Cart_price_rulesGroupBy!]!
  groupByCases(by: [CasesScalarFieldEnum!]!, having: CasesScalarWhereWithAggregatesInput, orderBy: [CasesOrderByWithAggregationInput!], skip: Int, take: Int, where: CasesWhereInput): [CasesGroupBy!]!
  groupByCatalog_price_rule(by: [Catalog_price_ruleScalarFieldEnum!]!, having: Catalog_price_ruleScalarWhereWithAggregatesInput, orderBy: [Catalog_price_ruleOrderByWithAggregationInput!], skip: Int, take: Int, where: Catalog_price_ruleWhereInput): [Catalog_price_ruleGroupBy!]!
  groupByCategories(by: [CategoriesScalarFieldEnum!]!, having: CategoriesScalarWhereWithAggregatesInput, orderBy: [CategoriesOrderByWithAggregationInput!], skip: Int, take: Int, where: CategoriesWhereInput): [CategoriesGroupBy!]!
  groupByChannels(by: [ChannelsScalarFieldEnum!]!, having: ChannelsScalarWhereWithAggregatesInput, orderBy: [ChannelsOrderByWithAggregationInput!], skip: Int, take: Int, where: ChannelsWhereInput): [ChannelsGroupBy!]!
  groupByChecklist(by: [ChecklistScalarFieldEnum!]!, having: ChecklistScalarWhereWithAggregatesInput, orderBy: [ChecklistOrderByWithAggregationInput!], skip: Int, take: Int, where: ChecklistWhereInput): [ChecklistGroupBy!]!
  groupByCities(by: [CitiesScalarFieldEnum!]!, having: CitiesScalarWhereWithAggregatesInput, orderBy: [CitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: CitiesWhereInput): [CitiesGroupBy!]!
  groupByCollections(by: [CollectionsScalarFieldEnum!]!, having: CollectionsScalarWhereWithAggregatesInput, orderBy: [CollectionsOrderByWithAggregationInput!], skip: Int, take: Int, where: CollectionsWhereInput): [CollectionsGroupBy!]!
  groupByComments(by: [CommentsScalarFieldEnum!]!, having: CommentsScalarWhereWithAggregatesInput, orderBy: [CommentsOrderByWithAggregationInput!], skip: Int, take: Int, where: CommentsWhereInput): [CommentsGroupBy!]!
  groupByContent_type(by: [Content_typeScalarFieldEnum!]!, having: Content_typeScalarWhereWithAggregatesInput, orderBy: [Content_typeOrderByWithAggregationInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_typeGroupBy!]!
  groupByContracts(by: [ContractsScalarFieldEnum!]!, having: ContractsScalarWhereWithAggregatesInput, orderBy: [ContractsOrderByWithAggregationInput!], skip: Int, take: Int, where: ContractsWhereInput): [ContractsGroupBy!]!
  groupByCountries(by: [CountriesScalarFieldEnum!]!, having: CountriesScalarWhereWithAggregatesInput, orderBy: [CountriesOrderByWithAggregationInput!], skip: Int, take: Int, where: CountriesWhereInput): [CountriesGroupBy!]!
  groupByCoupons(by: [CouponsScalarFieldEnum!]!, having: CouponsScalarWhereWithAggregatesInput, orderBy: [CouponsOrderByWithAggregationInput!], skip: Int, take: Int, where: CouponsWhereInput): [CouponsGroupBy!]!
  groupByCredit_memos(by: [Credit_memosScalarFieldEnum!]!, having: Credit_memosScalarWhereWithAggregatesInput, orderBy: [Credit_memosOrderByWithAggregationInput!], skip: Int, take: Int, where: Credit_memosWhereInput): [Credit_memosGroupBy!]!
  groupByCurrencies(by: [CurrenciesScalarFieldEnum!]!, having: CurrenciesScalarWhereWithAggregatesInput, orderBy: [CurrenciesOrderByWithAggregationInput!], skip: Int, take: Int, where: CurrenciesWhereInput): [CurrenciesGroupBy!]!
  groupByCurrency_rates(by: [Currency_ratesScalarFieldEnum!]!, having: Currency_ratesScalarWhereWithAggregatesInput, orderBy: [Currency_ratesOrderByWithAggregationInput!], skip: Int, take: Int, where: Currency_ratesWhereInput): [Currency_ratesGroupBy!]!
  groupByCurrency_symbols(by: [Currency_symbolsScalarFieldEnum!]!, having: Currency_symbolsScalarWhereWithAggregatesInput, orderBy: [Currency_symbolsOrderByWithAggregationInput!], skip: Int, take: Int, where: Currency_symbolsWhereInput): [Currency_symbolsGroupBy!]!
  groupByCustomer_group(by: [Customer_groupScalarFieldEnum!]!, having: Customer_groupScalarWhereWithAggregatesInput, orderBy: [Customer_groupOrderByWithAggregationInput!], skip: Int, take: Int, where: Customer_groupWhereInput): [Customer_groupGroupBy!]!
  groupByCustomers(by: [CustomersScalarFieldEnum!]!, having: CustomersScalarWhereWithAggregatesInput, orderBy: [CustomersOrderByWithAggregationInput!], skip: Int, take: Int, where: CustomersWhereInput): [CustomersGroupBy!]!
  groupByCustomizations(by: [CustomizationsScalarFieldEnum!]!, having: CustomizationsScalarWhereWithAggregatesInput, orderBy: [CustomizationsOrderByWithAggregationInput!], skip: Int, take: Int, where: CustomizationsWhereInput): [CustomizationsGroupBy!]!
  groupByDashboards(by: [DashboardsScalarFieldEnum!]!, having: DashboardsScalarWhereWithAggregatesInput, orderBy: [DashboardsOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardsWhereInput): [DashboardsGroupBy!]!
  groupByDeepdive(by: [DeepdiveScalarFieldEnum!]!, having: DeepdiveScalarWhereWithAggregatesInput, orderBy: [DeepdiveOrderByWithAggregationInput!], skip: Int, take: Int, where: DeepdiveWhereInput): [DeepdiveGroupBy!]!
  groupByDigiboard(by: [DigiboardScalarFieldEnum!]!, having: DigiboardScalarWhereWithAggregatesInput, orderBy: [DigiboardOrderByWithAggregationInput!], skip: Int, take: Int, where: DigiboardWhereInput): [DigiboardGroupBy!]!
  groupByEmails(by: [EmailsScalarFieldEnum!]!, having: EmailsScalarWhereWithAggregatesInput, orderBy: [EmailsOrderByWithAggregationInput!], skip: Int, take: Int, where: EmailsWhereInput): [EmailsGroupBy!]!
  groupByEndofshift(by: [EndofshiftScalarFieldEnum!]!, having: EndofshiftScalarWhereWithAggregatesInput, orderBy: [EndofshiftOrderByWithAggregationInput!], skip: Int, take: Int, where: EndofshiftWhereInput): [EndofshiftGroupBy!]!
  groupByEvents(by: [EventsScalarFieldEnum!]!, having: EventsScalarWhereWithAggregatesInput, orderBy: [EventsOrderByWithAggregationInput!], skip: Int, take: Int, where: EventsWhereInput): [EventsGroupBy!]!
  groupByFullfillments(by: [FullfillmentsScalarFieldEnum!]!, having: FullfillmentsScalarWhereWithAggregatesInput, orderBy: [FullfillmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): [FullfillmentsGroupBy!]!
  groupByGift_certificates(by: [Gift_certificatesScalarFieldEnum!]!, having: Gift_certificatesScalarWhereWithAggregatesInput, orderBy: [Gift_certificatesOrderByWithAggregationInput!], skip: Int, take: Int, where: Gift_certificatesWhereInput): [Gift_certificatesGroupBy!]!
  groupByGlossary(by: [GlossaryScalarFieldEnum!]!, having: GlossaryScalarWhereWithAggregatesInput, orderBy: [GlossaryOrderByWithAggregationInput!], skip: Int, take: Int, where: GlossaryWhereInput): [GlossaryGroupBy!]!
  groupByImportm(by: [ImportmScalarFieldEnum!]!, having: ImportmScalarWhereWithAggregatesInput, orderBy: [ImportmOrderByWithAggregationInput!], skip: Int, take: Int, where: ImportmWhereInput): [ImportmGroupBy!]!
  groupByIntegrations(by: [IntegrationsScalarFieldEnum!]!, having: IntegrationsScalarWhereWithAggregatesInput, orderBy: [IntegrationsOrderByWithAggregationInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [IntegrationsGroupBy!]!
  groupByInternalization(by: [InternalizationScalarFieldEnum!]!, having: InternalizationScalarWhereWithAggregatesInput, orderBy: [InternalizationOrderByWithAggregationInput!], skip: Int, take: Int, where: InternalizationWhereInput): [InternalizationGroupBy!]!
  groupByInvitations(by: [InvitationsScalarFieldEnum!]!, having: InvitationsScalarWhereWithAggregatesInput, orderBy: [InvitationsOrderByWithAggregationInput!], skip: Int, take: Int, where: InvitationsWhereInput): [InvitationsGroupBy!]!
  groupByInvoices(by: [InvoicesScalarFieldEnum!]!, having: InvoicesScalarWhereWithAggregatesInput, orderBy: [InvoicesOrderByWithAggregationInput!], skip: Int, take: Int, where: InvoicesWhereInput): [InvoicesGroupBy!]!
  groupByLeads(by: [LeadsScalarFieldEnum!]!, having: LeadsScalarWhereWithAggregatesInput, orderBy: [LeadsOrderByWithAggregationInput!], skip: Int, take: Int, where: LeadsWhereInput): [LeadsGroupBy!]!
  groupByManufacturer(by: [ManufacturerScalarFieldEnum!]!, having: ManufacturerScalarWhereWithAggregatesInput, orderBy: [ManufacturerOrderByWithAggregationInput!], skip: Int, take: Int, where: ManufacturerWhereInput): [ManufacturerGroupBy!]!
  groupByMediamanager(by: [MediamanagerScalarFieldEnum!]!, having: MediamanagerScalarWhereWithAggregatesInput, orderBy: [MediamanagerOrderByWithAggregationInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [MediamanagerGroupBy!]!
  groupByMeeting(by: [MeetingScalarFieldEnum!]!, having: MeetingScalarWhereWithAggregatesInput, orderBy: [MeetingOrderByWithAggregationInput!], skip: Int, take: Int, where: MeetingWhereInput): [MeetingGroupBy!]!
  groupByMessages(by: [MessagesScalarFieldEnum!]!, having: MessagesScalarWhereWithAggregatesInput, orderBy: [MessagesOrderByWithAggregationInput!], skip: Int, take: Int, where: MessagesWhereInput): [MessagesGroupBy!]!
  groupByNewsletters(by: [NewslettersScalarFieldEnum!]!, having: NewslettersScalarWhereWithAggregatesInput, orderBy: [NewslettersOrderByWithAggregationInput!], skip: Int, take: Int, where: NewslettersWhereInput): [NewslettersGroupBy!]!
  groupByOoto(by: [OotoScalarFieldEnum!]!, having: OotoScalarWhereWithAggregatesInput, orderBy: [OotoOrderByWithAggregationInput!], skip: Int, take: Int, where: OotoWhereInput): [OotoGroupBy!]!
  groupByOpportunities(by: [OpportunitiesScalarFieldEnum!]!, having: OpportunitiesScalarWhereWithAggregatesInput, orderBy: [OpportunitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: OpportunitiesWhereInput): [OpportunitiesGroupBy!]!
  groupByOrders(by: [OrdersScalarFieldEnum!]!, having: OrdersScalarWhereWithAggregatesInput, orderBy: [OrdersOrderByWithAggregationInput!], skip: Int, take: Int, where: OrdersWhereInput): [OrdersGroupBy!]!
  groupByPages(by: [PagesScalarFieldEnum!]!, having: PagesScalarWhereWithAggregatesInput, orderBy: [PagesOrderByWithAggregationInput!], skip: Int, take: Int, where: PagesWhereInput): [PagesGroupBy!]!
  groupByPartners(by: [PartnersScalarFieldEnum!]!, having: PartnersScalarWhereWithAggregatesInput, orderBy: [PartnersOrderByWithAggregationInput!], skip: Int, take: Int, where: PartnersWhereInput): [PartnersGroupBy!]!
  groupByPayments(by: [PaymentsScalarFieldEnum!]!, having: PaymentsScalarWhereWithAggregatesInput, orderBy: [PaymentsOrderByWithAggregationInput!], skip: Int, take: Int, where: PaymentsWhereInput): [PaymentsGroupBy!]!
  groupByPermissions(by: [PermissionsScalarFieldEnum!]!, having: PermissionsScalarWhereWithAggregatesInput, orderBy: [PermissionsOrderByWithAggregationInput!], skip: Int, take: Int, where: PermissionsWhereInput): [PermissionsGroupBy!]!
  groupByPlugins(by: [PluginsScalarFieldEnum!]!, having: PluginsScalarWhereWithAggregatesInput, orderBy: [PluginsOrderByWithAggregationInput!], skip: Int, take: Int, where: PluginsWhereInput): [PluginsGroupBy!]!
  groupByPolls(by: [PollsScalarFieldEnum!]!, having: PollsScalarWhereWithAggregatesInput, orderBy: [PollsOrderByWithAggregationInput!], skip: Int, take: Int, where: PollsWhereInput): [PollsGroupBy!]!
  groupByProduct_types(by: [Product_typesScalarFieldEnum!]!, having: Product_typesScalarWhereWithAggregatesInput, orderBy: [Product_typesOrderByWithAggregationInput!], skip: Int, take: Int, where: Product_typesWhereInput): [Product_typesGroupBy!]!
  groupByProducts(by: [ProductsScalarFieldEnum!]!, having: ProductsScalarWhereWithAggregatesInput, orderBy: [ProductsOrderByWithAggregationInput!], skip: Int, take: Int, where: ProductsWhereInput): [ProductsGroupBy!]!
  groupByProjects(by: [ProjectsScalarFieldEnum!]!, having: ProjectsScalarWhereWithAggregatesInput, orderBy: [ProjectsOrderByWithAggregationInput!], skip: Int, take: Int, where: ProjectsWhereInput): [ProjectsGroupBy!]!
  groupByProviders(by: [ProvidersScalarFieldEnum!]!, having: ProvidersScalarWhereWithAggregatesInput, orderBy: [ProvidersOrderByWithAggregationInput!], skip: Int, take: Int, where: ProvidersWhereInput): [ProvidersGroupBy!]!
  groupByQuotes(by: [QuotesScalarFieldEnum!]!, having: QuotesScalarWhereWithAggregatesInput, orderBy: [QuotesOrderByWithAggregationInput!], skip: Int, take: Int, where: QuotesWhereInput): [QuotesGroupBy!]!
  groupByRating(by: [RatingScalarFieldEnum!]!, having: RatingScalarWhereWithAggregatesInput, orderBy: [RatingOrderByWithAggregationInput!], skip: Int, take: Int, where: RatingWhereInput): [RatingGroupBy!]!
  groupByReports(by: [ReportsScalarFieldEnum!]!, having: ReportsScalarWhereWithAggregatesInput, orderBy: [ReportsOrderByWithAggregationInput!], skip: Int, take: Int, where: ReportsWhereInput): [ReportsGroupBy!]!
  groupByReturns(by: [ReturnsScalarFieldEnum!]!, having: ReturnsScalarWhereWithAggregatesInput, orderBy: [ReturnsOrderByWithAggregationInput!], skip: Int, take: Int, where: ReturnsWhereInput): [ReturnsGroupBy!]!
  groupByReviews(by: [ReviewsScalarFieldEnum!]!, having: ReviewsScalarWhereWithAggregatesInput, orderBy: [ReviewsOrderByWithAggregationInput!], skip: Int, take: Int, where: ReviewsWhereInput): [ReviewsGroupBy!]!
  groupByRewards(by: [RewardsScalarFieldEnum!]!, having: RewardsScalarWhereWithAggregatesInput, orderBy: [RewardsOrderByWithAggregationInput!], skip: Int, take: Int, where: RewardsWhereInput): [RewardsGroupBy!]!
  groupByRoles(by: [RolesScalarFieldEnum!]!, having: RolesScalarWhereWithAggregatesInput, orderBy: [RolesOrderByWithAggregationInput!], skip: Int, take: Int, where: RolesWhereInput): [RolesGroupBy!]!
  groupByScheduler(by: [SchedulerScalarFieldEnum!]!, having: SchedulerScalarWhereWithAggregatesInput, orderBy: [SchedulerOrderByWithAggregationInput!], skip: Int, take: Int, where: SchedulerWhereInput): [SchedulerGroupBy!]!
  groupBySegments(by: [SegmentsScalarFieldEnum!]!, having: SegmentsScalarWhereWithAggregatesInput, orderBy: [SegmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: SegmentsWhereInput): [SegmentsGroupBy!]!
  groupBySettings(by: [SettingsScalarFieldEnum!]!, having: SettingsScalarWhereWithAggregatesInput, orderBy: [SettingsOrderByWithAggregationInput!], skip: Int, take: Int, where: SettingsWhereInput): [SettingsGroupBy!]!
  groupByShipments(by: [ShipmentsScalarFieldEnum!]!, having: ShipmentsScalarWhereWithAggregatesInput, orderBy: [ShipmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: ShipmentsWhereInput): [ShipmentsGroupBy!]!
  groupBySpecial_discounts(by: [Special_discountsScalarFieldEnum!]!, having: Special_discountsScalarWhereWithAggregatesInput, orderBy: [Special_discountsOrderByWithAggregationInput!], skip: Int, take: Int, where: Special_discountsWhereInput): [Special_discountsGroupBy!]!
  groupByStates(by: [StatesScalarFieldEnum!]!, having: StatesScalarWhereWithAggregatesInput, orderBy: [StatesOrderByWithAggregationInput!], skip: Int, take: Int, where: StatesWhereInput): [StatesGroupBy!]!
  groupByStatistics(by: [StatisticsScalarFieldEnum!]!, having: StatisticsScalarWhereWithAggregatesInput, orderBy: [StatisticsOrderByWithAggregationInput!], skip: Int, take: Int, where: StatisticsWhereInput): [StatisticsGroupBy!]!
  groupByStocks(by: [StocksScalarFieldEnum!]!, having: StocksScalarWhereWithAggregatesInput, orderBy: [StocksOrderByWithAggregationInput!], skip: Int, take: Int, where: StocksWhereInput): [StocksGroupBy!]!
  groupBySurveys(by: [SurveysScalarFieldEnum!]!, having: SurveysScalarWhereWithAggregatesInput, orderBy: [SurveysOrderByWithAggregationInput!], skip: Int, take: Int, where: SurveysWhereInput): [SurveysGroupBy!]!
  groupByTags(by: [TagsScalarFieldEnum!]!, having: TagsScalarWhereWithAggregatesInput, orderBy: [TagsOrderByWithAggregationInput!], skip: Int, take: Int, where: TagsWhereInput): [TagsGroupBy!]!
  groupByTargets(by: [TargetsScalarFieldEnum!]!, having: TargetsScalarWhereWithAggregatesInput, orderBy: [TargetsOrderByWithAggregationInput!], skip: Int, take: Int, where: TargetsWhereInput): [TargetsGroupBy!]!
  groupByTax_category(by: [Tax_categoryScalarFieldEnum!]!, having: Tax_categoryScalarWhereWithAggregatesInput, orderBy: [Tax_categoryOrderByWithAggregationInput!], skip: Int, take: Int, where: Tax_categoryWhereInput): [Tax_categoryGroupBy!]!
  groupByTax_rate(by: [Tax_rateScalarFieldEnum!]!, having: Tax_rateScalarWhereWithAggregatesInput, orderBy: [Tax_rateOrderByWithAggregationInput!], skip: Int, take: Int, where: Tax_rateWhereInput): [Tax_rateGroupBy!]!
  groupByTax_rule(by: [Tax_ruleScalarFieldEnum!]!, having: Tax_ruleScalarWhereWithAggregatesInput, orderBy: [Tax_ruleOrderByWithAggregationInput!], skip: Int, take: Int, where: Tax_ruleWhereInput): [Tax_ruleGroupBy!]!
  groupByTemplates(by: [TemplatesScalarFieldEnum!]!, having: TemplatesScalarWhereWithAggregatesInput, orderBy: [TemplatesOrderByWithAggregationInput!], skip: Int, take: Int, where: TemplatesWhereInput): [TemplatesGroupBy!]!
  groupByThemes(by: [ThemesScalarFieldEnum!]!, having: ThemesScalarWhereWithAggregatesInput, orderBy: [ThemesOrderByWithAggregationInput!], skip: Int, take: Int, where: ThemesWhereInput): [ThemesGroupBy!]!
  groupByTicketing(by: [TicketingScalarFieldEnum!]!, having: TicketingScalarWhereWithAggregatesInput, orderBy: [TicketingOrderByWithAggregationInput!], skip: Int, take: Int, where: TicketingWhereInput): [TicketingGroupBy!]!
  groupByTrainings(by: [TrainingsScalarFieldEnum!]!, having: TrainingsScalarWhereWithAggregatesInput, orderBy: [TrainingsOrderByWithAggregationInput!], skip: Int, take: Int, where: TrainingsWhereInput): [TrainingsGroupBy!]!
  groupByTransactions(by: [TransactionsScalarFieldEnum!]!, having: TransactionsScalarWhereWithAggregatesInput, orderBy: [TransactionsOrderByWithAggregationInput!], skip: Int, take: Int, where: TransactionsWhereInput): [TransactionsGroupBy!]!
  groupByUpload_file(by: [Upload_fileScalarFieldEnum!]!, having: Upload_fileScalarWhereWithAggregatesInput, orderBy: [Upload_fileOrderByWithAggregationInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_fileGroupBy!]!
  groupByUsers(by: [UsersScalarFieldEnum!]!, having: UsersScalarWhereWithAggregatesInput, orderBy: [UsersOrderByWithAggregationInput!], skip: Int, take: Int, where: UsersWhereInput): [UsersGroupBy!]!
  groupByVendors(by: [VendorsScalarFieldEnum!]!, having: VendorsScalarWhereWithAggregatesInput, orderBy: [VendorsOrderByWithAggregationInput!], skip: Int, take: Int, where: VendorsWhereInput): [VendorsGroupBy!]!
  groupByVisits(by: [VisitsScalarFieldEnum!]!, having: VisitsScalarWhereWithAggregatesInput, orderBy: [VisitsOrderByWithAggregationInput!], skip: Int, take: Int, where: VisitsWhereInput): [VisitsGroupBy!]!
  groupByWarehouse(by: [WarehouseScalarFieldEnum!]!, having: WarehouseScalarWhereWithAggregatesInput, orderBy: [WarehouseOrderByWithAggregationInput!], skip: Int, take: Int, where: WarehouseWhereInput): [WarehouseGroupBy!]!
  groupByWebhooks(by: [WebhooksScalarFieldEnum!]!, having: WebhooksScalarWhereWithAggregatesInput, orderBy: [WebhooksOrderByWithAggregationInput!], skip: Int, take: Int, where: WebhooksWhereInput): [WebhooksGroupBy!]!
  groupByWebsites(by: [WebsitesScalarFieldEnum!]!, having: WebsitesScalarWhereWithAggregatesInput, orderBy: [WebsitesOrderByWithAggregationInput!], skip: Int, take: Int, where: WebsitesWhereInput): [WebsitesGroupBy!]!
  groupByWishlists(by: [WishlistsScalarFieldEnum!]!, having: WishlistsScalarWhereWithAggregatesInput, orderBy: [WishlistsOrderByWithAggregationInput!], skip: Int, take: Int, where: WishlistsWhereInput): [WishlistsGroupBy!]!
  groupByWorkspaces(by: [WorkspacesScalarFieldEnum!]!, having: WorkspacesScalarWhereWithAggregatesInput, orderBy: [WorkspacesOrderByWithAggregationInput!], skip: Int, take: Int, where: WorkspacesWhereInput): [WorkspacesGroupBy!]!
  groupByZones(by: [ZonesScalarFieldEnum!]!, having: ZonesScalarWhereWithAggregatesInput, orderBy: [ZonesOrderByWithAggregationInput!], skip: Int, take: Int, where: ZonesWhereInput): [ZonesGroupBy!]!
  importm(where: ImportmWhereUniqueInput!): Importm
  importms(cursor: ImportmWhereUniqueInput, distinct: [ImportmScalarFieldEnum!], orderBy: [ImportmOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ImportmWhereInput): [Importm!]!
  internalization(where: InternalizationWhereUniqueInput!): Internalization
  internalizations(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): [Internalization!]!
  manufacturer(where: ManufacturerWhereUniqueInput!): Manufacturer
  manufacturers(cursor: ManufacturerWhereUniqueInput, distinct: [ManufacturerScalarFieldEnum!], orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): [Manufacturer!]!
  mediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  mediamanagers(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [Mediamanager!]!
  meeting(where: MeetingWhereUniqueInput!): Meeting
  meetings(cursor: MeetingWhereUniqueInput, distinct: [MeetingScalarFieldEnum!], orderBy: [MeetingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MeetingWhereInput): [Meeting!]!
  ooto(where: OotoWhereUniqueInput!): Ooto
  ootos(cursor: OotoWhereUniqueInput, distinct: [OotoScalarFieldEnum!], orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): [Ooto!]!
  rating(where: RatingWhereUniqueInput!): Rating
  ratings(cursor: RatingWhereUniqueInput, distinct: [RatingScalarFieldEnum!], orderBy: [RatingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RatingWhereInput): [Rating!]!
  scheduler(where: SchedulerWhereUniqueInput!): Scheduler
  schedulers(cursor: SchedulerWhereUniqueInput, distinct: [SchedulerScalarFieldEnum!], orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): [Scheduler!]!
  tax_categories(cursor: Tax_categoryWhereUniqueInput, distinct: [Tax_categoryScalarFieldEnum!], orderBy: [Tax_categoryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_categoryWhereInput): [Tax_category!]!
  tax_category(where: Tax_categoryWhereUniqueInput!): Tax_category
  tax_rate(where: Tax_rateWhereUniqueInput!): Tax_rate
  tax_rates(cursor: Tax_rateWhereUniqueInput, distinct: [Tax_rateScalarFieldEnum!], orderBy: [Tax_rateOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_rateWhereInput): [Tax_rate!]!
  tax_rule(where: Tax_ruleWhereUniqueInput!): Tax_rule
  tax_rules(cursor: Tax_ruleWhereUniqueInput, distinct: [Tax_ruleScalarFieldEnum!], orderBy: [Tax_ruleOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Tax_ruleWhereInput): [Tax_rule!]!
  ticketing(where: TicketingWhereUniqueInput!): Ticketing
  ticketings(cursor: TicketingWhereUniqueInput, distinct: [TicketingScalarFieldEnum!], orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): [Ticketing!]!
  upload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  upload_files(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_file!]!
  warehouse(where: WarehouseWhereUniqueInput!): Warehouse
  warehouses(cursor: WarehouseWhereUniqueInput, distinct: [WarehouseScalarFieldEnum!], orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): [Warehouse!]!
}

enum QueryMode {
  default
  insensitive
}

type Quotes {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int!
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesAvgAggregate {
  cust_id: Float
  id: Float
  order_id: Float
  prod_id: Float
}

input QuotesAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_id: SortOrder
  prod_id: SortOrder
}

type QuotesCountAggregate {
  _all: Int!
  account: Int!
  approval_issues: Int!
  approval_status: Int!
  assigned_to: Int!
  billing_city: Int!
  billing_country: Int!
  billing_postal: Int!
  billing_state: Int!
  billing_street: Int!
  categories: Int!
  contact: Int!
  created_at: Int!
  currency: Int!
  cust_id: Int!
  customers: Int!
  customers_customersToquotes: Int!
  discount: Int!
  grand_total: Int!
  id: Int!
  invoice_status: Int!
  line_item_discount: Int!
  line_item_group_total: Int!
  line_item_name: Int!
  line_item_subtotal: Int!
  line_item_tax: Int!
  line_item_total: Int!
  name: Int!
  order_id: Int!
  orders: Int!
  payment_terms: Int!
  prod_id: Int!
  products_productsToquotes: Int!
  quote_stage: Int!
  shipping: Int!
  shipping_city: Int!
  shipping_country: Int!
  shipping_postal: Int!
  shipping_state: Int!
  shipping_street: Int!
  shipping_tax: Int!
  subtotal: Int!
  tax: Int!
  total: Int!
  valid_until: Int!
}

input QuotesCountOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

input QuotesCreateInput {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesCreateManyInput {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesGroupBy {
  _avg: QuotesAvgAggregate
  _count: QuotesCountAggregate
  _max: QuotesMaxAggregate
  _min: QuotesMinAggregate
  _sum: QuotesSumAggregate
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int!
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesMaxAggregate {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String
  order_id: Int
  orders: String
  payment_terms: String
  prod_id: BigInt
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesMaxOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

type QuotesMinAggregate {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String
  order_id: Int
  orders: String
  payment_terms: String
  prod_id: BigInt
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesMinOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

enum QuotesOrderByRelevanceFieldEnum {
  account
  approval_issues
  approval_status
  assigned_to
  billing_city
  billing_country
  billing_postal
  billing_state
  billing_street
  categories
  contact
  currency
  customers
  customers_customersToquotes
  discount
  grand_total
  invoice_status
  line_item_discount
  line_item_group_total
  line_item_name
  line_item_subtotal
  line_item_tax
  line_item_total
  name
  orders
  payment_terms
  products_productsToquotes
  quote_stage
  shipping
  shipping_city
  shipping_country
  shipping_postal
  shipping_state
  shipping_street
  shipping_tax
  subtotal
  tax
  total
  valid_until
}

input QuotesOrderByRelevanceInput {
  fields: [QuotesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input QuotesOrderByWithAggregationInput {
  _avg: QuotesAvgOrderByAggregateInput
  _count: QuotesCountOrderByAggregateInput
  _max: QuotesMaxOrderByAggregateInput
  _min: QuotesMinOrderByAggregateInput
  _sum: QuotesSumOrderByAggregateInput
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

input QuotesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: QuotesOrderByRelevanceInput
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

enum QuotesScalarFieldEnum {
  account
  approval_issues
  approval_status
  assigned_to
  billing_city
  billing_country
  billing_postal
  billing_state
  billing_street
  categories
  contact
  created_at
  currency
  cust_id
  customers
  customers_customersToquotes
  discount
  grand_total
  id
  invoice_status
  line_item_discount
  line_item_group_total
  line_item_name
  line_item_subtotal
  line_item_tax
  line_item_total
  name
  order_id
  orders
  payment_terms
  prod_id
  products_productsToquotes
  quote_stage
  shipping
  shipping_city
  shipping_country
  shipping_postal
  shipping_state
  shipping_street
  shipping_tax
  subtotal
  tax
  total
  valid_until
}

input QuotesScalarWhereWithAggregatesInput {
  AND: [QuotesScalarWhereWithAggregatesInput!]
  NOT: [QuotesScalarWhereWithAggregatesInput!]
  OR: [QuotesScalarWhereWithAggregatesInput!]
  account: StringNullableWithAggregatesFilter
  approval_issues: StringNullableWithAggregatesFilter
  approval_status: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  billing_city: StringNullableWithAggregatesFilter
  billing_country: StringNullableWithAggregatesFilter
  billing_postal: StringNullableWithAggregatesFilter
  billing_state: StringNullableWithAggregatesFilter
  billing_street: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  contact: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  customers_customersToquotes: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  grand_total: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  invoice_status: StringNullableWithAggregatesFilter
  line_item_discount: StringNullableWithAggregatesFilter
  line_item_group_total: StringNullableWithAggregatesFilter
  line_item_name: StringNullableWithAggregatesFilter
  line_item_subtotal: StringNullableWithAggregatesFilter
  line_item_tax: StringNullableWithAggregatesFilter
  line_item_total: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  order_id: IntWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  payment_terms: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products_productsToquotes: StringNullableWithAggregatesFilter
  quote_stage: StringNullableWithAggregatesFilter
  shipping: StringNullableWithAggregatesFilter
  shipping_city: StringNullableWithAggregatesFilter
  shipping_country: StringNullableWithAggregatesFilter
  shipping_postal: StringNullableWithAggregatesFilter
  shipping_state: StringNullableWithAggregatesFilter
  shipping_street: StringNullableWithAggregatesFilter
  shipping_tax: StringNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
  tax: StringNullableWithAggregatesFilter
  total: StringNullableWithAggregatesFilter
  valid_until: StringNullableWithAggregatesFilter
}

type QuotesSumAggregate {
  cust_id: Int
  id: Int
  order_id: Int
  prod_id: BigInt
}

input QuotesSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_id: SortOrder
  prod_id: SortOrder
}

input QuotesUpdateInput {
  account: NullableStringFieldUpdateOperationsInput
  approval_issues: NullableStringFieldUpdateOperationsInput
  approval_status: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  billing_city: NullableStringFieldUpdateOperationsInput
  billing_country: NullableStringFieldUpdateOperationsInput
  billing_postal: NullableStringFieldUpdateOperationsInput
  billing_state: NullableStringFieldUpdateOperationsInput
  billing_street: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  customers_customersToquotes: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  invoice_status: NullableStringFieldUpdateOperationsInput
  line_item_discount: NullableStringFieldUpdateOperationsInput
  line_item_group_total: NullableStringFieldUpdateOperationsInput
  line_item_name: NullableStringFieldUpdateOperationsInput
  line_item_subtotal: NullableStringFieldUpdateOperationsInput
  line_item_tax: NullableStringFieldUpdateOperationsInput
  line_item_total: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  payment_terms: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products_productsToquotes: NullableStringFieldUpdateOperationsInput
  quote_stage: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_city: NullableStringFieldUpdateOperationsInput
  shipping_country: NullableStringFieldUpdateOperationsInput
  shipping_postal: NullableStringFieldUpdateOperationsInput
  shipping_state: NullableStringFieldUpdateOperationsInput
  shipping_street: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
  valid_until: NullableStringFieldUpdateOperationsInput
}

input QuotesUpdateManyMutationInput {
  account: NullableStringFieldUpdateOperationsInput
  approval_issues: NullableStringFieldUpdateOperationsInput
  approval_status: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  billing_city: NullableStringFieldUpdateOperationsInput
  billing_country: NullableStringFieldUpdateOperationsInput
  billing_postal: NullableStringFieldUpdateOperationsInput
  billing_state: NullableStringFieldUpdateOperationsInput
  billing_street: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  customers_customersToquotes: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  invoice_status: NullableStringFieldUpdateOperationsInput
  line_item_discount: NullableStringFieldUpdateOperationsInput
  line_item_group_total: NullableStringFieldUpdateOperationsInput
  line_item_name: NullableStringFieldUpdateOperationsInput
  line_item_subtotal: NullableStringFieldUpdateOperationsInput
  line_item_tax: NullableStringFieldUpdateOperationsInput
  line_item_total: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  payment_terms: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products_productsToquotes: NullableStringFieldUpdateOperationsInput
  quote_stage: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_city: NullableStringFieldUpdateOperationsInput
  shipping_country: NullableStringFieldUpdateOperationsInput
  shipping_postal: NullableStringFieldUpdateOperationsInput
  shipping_state: NullableStringFieldUpdateOperationsInput
  shipping_street: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
  valid_until: NullableStringFieldUpdateOperationsInput
}

input QuotesWhereInput {
  AND: [QuotesWhereInput!]
  NOT: [QuotesWhereInput!]
  OR: [QuotesWhereInput!]
  account: StringNullableFilter
  approval_issues: StringNullableFilter
  approval_status: StringNullableFilter
  assigned_to: StringNullableFilter
  billing_city: StringNullableFilter
  billing_country: StringNullableFilter
  billing_postal: StringNullableFilter
  billing_state: StringNullableFilter
  billing_street: StringNullableFilter
  categories: StringNullableFilter
  contact: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  customers_customersToquotes: StringNullableFilter
  discount: StringNullableFilter
  grand_total: StringNullableFilter
  id: IntFilter
  invoice_status: StringNullableFilter
  line_item_discount: StringNullableFilter
  line_item_group_total: StringNullableFilter
  line_item_name: StringNullableFilter
  line_item_subtotal: StringNullableFilter
  line_item_tax: StringNullableFilter
  line_item_total: StringNullableFilter
  name: StringFilter
  order_id: IntFilter
  orders: StringNullableFilter
  payment_terms: StringNullableFilter
  prod_id: BigIntFilter
  products_productsToquotes: StringNullableFilter
  quote_stage: StringNullableFilter
  shipping: StringNullableFilter
  shipping_city: StringNullableFilter
  shipping_country: StringNullableFilter
  shipping_postal: StringNullableFilter
  shipping_state: StringNullableFilter
  shipping_street: StringNullableFilter
  shipping_tax: StringNullableFilter
  subtotal: StringNullableFilter
  tax: StringNullableFilter
  total: StringNullableFilter
  valid_until: StringNullableFilter
}

input QuotesWhereUniqueInput {
  id: Int
}

type Rating {
  active: Boolean
  default_store_view: String
  default_value: String
  id: Int!
  prod_id: BigInt!
  products: String
  rating_visibility: String
  sort_order: Decimal
}

type RatingAvgAggregate {
  id: Float
  prod_id: Float
  sort_order: Decimal
}

input RatingAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
  sort_order: SortOrder
}

type RatingCountAggregate {
  _all: Int!
  active: Int!
  default_store_view: Int!
  default_value: Int!
  id: Int!
  prod_id: Int!
  products: Int!
  rating_visibility: Int!
  sort_order: Int!
}

input RatingCountOrderByAggregateInput {
  active: SortOrder
  default_store_view: SortOrder
  default_value: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rating_visibility: SortOrder
  sort_order: SortOrder
}

input RatingCreateInput {
  active: Boolean
  default_store_view: String
  default_value: String
  prod_id: BigInt!
  products: String
  rating_visibility: String
  sort_order: Decimal
}

input RatingCreateManyInput {
  active: Boolean
  default_store_view: String
  default_value: String
  id: Int
  prod_id: BigInt!
  products: String
  rating_visibility: String
  sort_order: Decimal
}

type RatingGroupBy {
  _avg: RatingAvgAggregate
  _count: RatingCountAggregate
  _max: RatingMaxAggregate
  _min: RatingMinAggregate
  _sum: RatingSumAggregate
  active: Boolean
  default_store_view: String
  default_value: String
  id: Int!
  prod_id: BigInt!
  products: String
  rating_visibility: String
  sort_order: Decimal
}

type RatingMaxAggregate {
  active: Boolean
  default_store_view: String
  default_value: String
  id: Int
  prod_id: BigInt
  products: String
  rating_visibility: String
  sort_order: Decimal
}

input RatingMaxOrderByAggregateInput {
  active: SortOrder
  default_store_view: SortOrder
  default_value: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rating_visibility: SortOrder
  sort_order: SortOrder
}

type RatingMinAggregate {
  active: Boolean
  default_store_view: String
  default_value: String
  id: Int
  prod_id: BigInt
  products: String
  rating_visibility: String
  sort_order: Decimal
}

input RatingMinOrderByAggregateInput {
  active: SortOrder
  default_store_view: SortOrder
  default_value: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rating_visibility: SortOrder
  sort_order: SortOrder
}

enum RatingOrderByRelevanceFieldEnum {
  default_store_view
  default_value
  products
  rating_visibility
}

input RatingOrderByRelevanceInput {
  fields: [RatingOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RatingOrderByWithAggregationInput {
  _avg: RatingAvgOrderByAggregateInput
  _count: RatingCountOrderByAggregateInput
  _max: RatingMaxOrderByAggregateInput
  _min: RatingMinOrderByAggregateInput
  _sum: RatingSumOrderByAggregateInput
  active: SortOrder
  default_store_view: SortOrder
  default_value: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rating_visibility: SortOrder
  sort_order: SortOrder
}

input RatingOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RatingOrderByRelevanceInput
  active: SortOrder
  default_store_view: SortOrder
  default_value: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rating_visibility: SortOrder
  sort_order: SortOrder
}

enum RatingScalarFieldEnum {
  active
  default_store_view
  default_value
  id
  prod_id
  products
  rating_visibility
  sort_order
}

input RatingScalarWhereWithAggregatesInput {
  AND: [RatingScalarWhereWithAggregatesInput!]
  NOT: [RatingScalarWhereWithAggregatesInput!]
  OR: [RatingScalarWhereWithAggregatesInput!]
  active: BoolNullableWithAggregatesFilter
  default_store_view: StringNullableWithAggregatesFilter
  default_value: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  rating_visibility: StringNullableWithAggregatesFilter
  sort_order: DecimalNullableWithAggregatesFilter
}

type RatingSumAggregate {
  id: Int
  prod_id: BigInt
  sort_order: Decimal
}

input RatingSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
  sort_order: SortOrder
}

input RatingUpdateInput {
  active: NullableBoolFieldUpdateOperationsInput
  default_store_view: NullableStringFieldUpdateOperationsInput
  default_value: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rating_visibility: NullableStringFieldUpdateOperationsInput
  sort_order: NullableDecimalFieldUpdateOperationsInput
}

input RatingUpdateManyMutationInput {
  active: NullableBoolFieldUpdateOperationsInput
  default_store_view: NullableStringFieldUpdateOperationsInput
  default_value: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rating_visibility: NullableStringFieldUpdateOperationsInput
  sort_order: NullableDecimalFieldUpdateOperationsInput
}

input RatingWhereInput {
  AND: [RatingWhereInput!]
  NOT: [RatingWhereInput!]
  OR: [RatingWhereInput!]
  active: BoolNullableFilter
  default_store_view: StringNullableFilter
  default_value: StringNullableFilter
  id: IntFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  rating_visibility: StringNullableFilter
  sort_order: DecimalNullableFilter
}

input RatingWhereUniqueInput {
  id: Int
}

type Reports {
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  id: Int!
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

type ReportsAvgAggregate {
  id: Float
  quantity: Decimal
}

input ReportsAvgOrderByAggregateInput {
  id: SortOrder
  quantity: SortOrder
}

type ReportsCountAggregate {
  _all: Int!
  applied_coupon: Int!
  created: Int!
  customer: Int!
  email: Int!
  id: Int!
  ip_address: Int!
  products: Int!
  quantity: Int!
  subtotal: Int!
  updated: Int!
}

input ReportsCountOrderByAggregateInput {
  applied_coupon: SortOrder
  created: SortOrder
  customer: SortOrder
  email: SortOrder
  id: SortOrder
  ip_address: SortOrder
  products: SortOrder
  quantity: SortOrder
  subtotal: SortOrder
  updated: SortOrder
}

input ReportsCreateInput {
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

input ReportsCreateManyInput {
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  id: Int
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

type ReportsGroupBy {
  _avg: ReportsAvgAggregate
  _count: ReportsCountAggregate
  _max: ReportsMaxAggregate
  _min: ReportsMinAggregate
  _sum: ReportsSumAggregate
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  id: Int!
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

type ReportsMaxAggregate {
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  id: Int
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

input ReportsMaxOrderByAggregateInput {
  applied_coupon: SortOrder
  created: SortOrder
  customer: SortOrder
  email: SortOrder
  id: SortOrder
  ip_address: SortOrder
  products: SortOrder
  quantity: SortOrder
  subtotal: SortOrder
  updated: SortOrder
}

type ReportsMinAggregate {
  applied_coupon: String
  created: DateTime
  customer: String
  email: String
  id: Int
  ip_address: String
  products: String
  quantity: Decimal
  subtotal: String
  updated: DateTime
}

input ReportsMinOrderByAggregateInput {
  applied_coupon: SortOrder
  created: SortOrder
  customer: SortOrder
  email: SortOrder
  id: SortOrder
  ip_address: SortOrder
  products: SortOrder
  quantity: SortOrder
  subtotal: SortOrder
  updated: SortOrder
}

enum ReportsOrderByRelevanceFieldEnum {
  applied_coupon
  customer
  email
  ip_address
  products
  subtotal
}

input ReportsOrderByRelevanceInput {
  fields: [ReportsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ReportsOrderByWithAggregationInput {
  _avg: ReportsAvgOrderByAggregateInput
  _count: ReportsCountOrderByAggregateInput
  _max: ReportsMaxOrderByAggregateInput
  _min: ReportsMinOrderByAggregateInput
  _sum: ReportsSumOrderByAggregateInput
  applied_coupon: SortOrder
  created: SortOrder
  customer: SortOrder
  email: SortOrder
  id: SortOrder
  ip_address: SortOrder
  products: SortOrder
  quantity: SortOrder
  subtotal: SortOrder
  updated: SortOrder
}

input ReportsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ReportsOrderByRelevanceInput
  applied_coupon: SortOrder
  created: SortOrder
  customer: SortOrder
  email: SortOrder
  id: SortOrder
  ip_address: SortOrder
  products: SortOrder
  quantity: SortOrder
  subtotal: SortOrder
  updated: SortOrder
}

enum ReportsScalarFieldEnum {
  applied_coupon
  created
  customer
  email
  id
  ip_address
  products
  quantity
  subtotal
  updated
}

input ReportsScalarWhereWithAggregatesInput {
  AND: [ReportsScalarWhereWithAggregatesInput!]
  NOT: [ReportsScalarWhereWithAggregatesInput!]
  OR: [ReportsScalarWhereWithAggregatesInput!]
  applied_coupon: StringNullableWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  customer: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  ip_address: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quantity: DecimalNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
  updated: DateTimeNullableWithAggregatesFilter
}

type ReportsSumAggregate {
  id: Int
  quantity: Decimal
}

input ReportsSumOrderByAggregateInput {
  id: SortOrder
  quantity: SortOrder
}

input ReportsUpdateInput {
  applied_coupon: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  ip_address: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableDecimalFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
}

input ReportsUpdateManyMutationInput {
  applied_coupon: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  ip_address: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableDecimalFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
}

input ReportsWhereInput {
  AND: [ReportsWhereInput!]
  NOT: [ReportsWhereInput!]
  OR: [ReportsWhereInput!]
  applied_coupon: StringNullableFilter
  created: DateTimeNullableFilter
  customer: StringNullableFilter
  email: StringNullableFilter
  id: IntFilter
  ip_address: StringNullableFilter
  products: StringNullableFilter
  quantity: DecimalNullableFilter
  subtotal: StringNullableFilter
  updated: DateTimeNullableFilter
}

input ReportsWhereUniqueInput {
  id: Int
}

type Returns {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt!
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsAvgAggregate {
  id: Float
}

input ReturnsAvgOrderByAggregateInput {
  id: SortOrder
}

type ReturnsCountAggregate {
  _all: Int!
  case_id: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  height: Int!
  howShipped: Int!
  id: Int!
  liquidationReason: Int!
  location: Int!
  media: Int!
  name: Int!
  products: Int!
  return_prefix: Int!
  shipTo: Int!
  shippingDescription: Int!
  shippingNumber: Int!
  status: Int!
  type: Int!
  validity: Int!
  weight: Int!
}

input ReturnsCountOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

input ReturnsCreateInput {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsCreateManyInput {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsGroupBy {
  _avg: ReturnsAvgAggregate
  _count: ReturnsCountAggregate
  _max: ReturnsMaxAggregate
  _min: ReturnsMinAggregate
  _sum: ReturnsSumAggregate
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt!
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsMaxAggregate {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsMaxOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

type ReturnsMinAggregate {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsMinOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

enum ReturnsOrderByRelevanceFieldEnum {
  case_id
  customers
  description
  height
  howShipped
  liquidationReason
  location
  media
  name
  products
  return_prefix
  shipTo
  shippingDescription
  shippingNumber
  status
  type
  validity
  weight
}

input ReturnsOrderByRelevanceInput {
  fields: [ReturnsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ReturnsOrderByWithAggregationInput {
  _avg: ReturnsAvgOrderByAggregateInput
  _count: ReturnsCountOrderByAggregateInput
  _max: ReturnsMaxOrderByAggregateInput
  _min: ReturnsMinOrderByAggregateInput
  _sum: ReturnsSumOrderByAggregateInput
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

input ReturnsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ReturnsOrderByRelevanceInput
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

enum ReturnsScalarFieldEnum {
  case_id
  created_at
  customers
  description
  height
  howShipped
  id
  liquidationReason
  location
  media
  name
  products
  return_prefix
  shipTo
  shippingDescription
  shippingNumber
  status
  type
  validity
  weight
}

input ReturnsScalarWhereWithAggregatesInput {
  AND: [ReturnsScalarWhereWithAggregatesInput!]
  NOT: [ReturnsScalarWhereWithAggregatesInput!]
  OR: [ReturnsScalarWhereWithAggregatesInput!]
  case_id: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  height: StringNullableWithAggregatesFilter
  howShipped: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  liquidationReason: StringNullableWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  return_prefix: StringNullableWithAggregatesFilter
  shipTo: StringNullableWithAggregatesFilter
  shippingDescription: StringNullableWithAggregatesFilter
  shippingNumber: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  validity: StringNullableWithAggregatesFilter
  weight: StringNullableWithAggregatesFilter
}

type ReturnsSumAggregate {
  id: BigInt
}

input ReturnsSumOrderByAggregateInput {
  id: SortOrder
}

input ReturnsUpdateInput {
  case_id: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  howShipped: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  liquidationReason: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  return_prefix: NullableStringFieldUpdateOperationsInput
  shipTo: NullableStringFieldUpdateOperationsInput
  shippingDescription: NullableStringFieldUpdateOperationsInput
  shippingNumber: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  validity: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
}

input ReturnsUpdateManyMutationInput {
  case_id: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  howShipped: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  liquidationReason: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  return_prefix: NullableStringFieldUpdateOperationsInput
  shipTo: NullableStringFieldUpdateOperationsInput
  shippingDescription: NullableStringFieldUpdateOperationsInput
  shippingNumber: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  validity: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
}

input ReturnsWhereInput {
  AND: [ReturnsWhereInput!]
  NOT: [ReturnsWhereInput!]
  OR: [ReturnsWhereInput!]
  case_id: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  height: StringNullableFilter
  howShipped: StringNullableFilter
  id: BigIntFilter
  liquidationReason: StringNullableFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  products: StringNullableFilter
  return_prefix: StringNullableFilter
  shipTo: StringNullableFilter
  shippingDescription: StringNullableFilter
  shippingNumber: StringNullableFilter
  status: StringNullableFilter
  type: StringNullableFilter
  validity: StringNullableFilter
  weight: StringNullableFilter
}

input ReturnsWhereUniqueInput {
  id: BigInt
}

type Reviews {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int!
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsAvgAggregate {
  comment_id: Float
  id: Float
  shop_id: Float
}

input ReviewsAvgOrderByAggregateInput {
  comment_id: SortOrder
  id: SortOrder
  shop_id: SortOrder
}

type ReviewsCountAggregate {
  _all: Int!
  comment_id: Int!
  content: Int!
  created_at: Int!
  first_name: Int!
  id: Int!
  last_name: Int!
  shop_id: Int!
  websites: Int!
}

input ReviewsCountOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

input ReviewsCreateInput {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  last_name: String
  shop_id: Int!
  websites: String
}

input ReviewsCreateManyInput {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsGroupBy {
  _avg: ReviewsAvgAggregate
  _count: ReviewsCountAggregate
  _max: ReviewsMaxAggregate
  _min: ReviewsMinAggregate
  _sum: ReviewsSumAggregate
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int!
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsMaxAggregate {
  comment_id: Int
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int
  websites: String
}

input ReviewsMaxOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

type ReviewsMinAggregate {
  comment_id: Int
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int
  websites: String
}

input ReviewsMinOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

enum ReviewsOrderByRelevanceFieldEnum {
  content
  first_name
  last_name
  websites
}

input ReviewsOrderByRelevanceInput {
  fields: [ReviewsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ReviewsOrderByWithAggregationInput {
  _avg: ReviewsAvgOrderByAggregateInput
  _count: ReviewsCountOrderByAggregateInput
  _max: ReviewsMaxOrderByAggregateInput
  _min: ReviewsMinOrderByAggregateInput
  _sum: ReviewsSumOrderByAggregateInput
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

input ReviewsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ReviewsOrderByRelevanceInput
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

enum ReviewsScalarFieldEnum {
  comment_id
  content
  created_at
  first_name
  id
  last_name
  shop_id
  websites
}

input ReviewsScalarWhereWithAggregatesInput {
  AND: [ReviewsScalarWhereWithAggregatesInput!]
  NOT: [ReviewsScalarWhereWithAggregatesInput!]
  OR: [ReviewsScalarWhereWithAggregatesInput!]
  comment_id: IntWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  first_name: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  shop_id: IntWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
}

type ReviewsSumAggregate {
  comment_id: Int
  id: Int
  shop_id: Int
}

input ReviewsSumOrderByAggregateInput {
  comment_id: SortOrder
  id: SortOrder
  shop_id: SortOrder
}

input ReviewsUpdateInput {
  comment_id: IntFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  shop_id: IntFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input ReviewsUpdateManyMutationInput {
  comment_id: IntFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  shop_id: IntFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input ReviewsWhereInput {
  AND: [ReviewsWhereInput!]
  NOT: [ReviewsWhereInput!]
  OR: [ReviewsWhereInput!]
  comment_id: IntFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  first_name: StringNullableFilter
  id: IntFilter
  last_name: StringNullableFilter
  shop_id: IntFilter
  websites: StringNullableFilter
}

input ReviewsWhereUniqueInput {
  id: Int
}

type Rewards {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int!
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsAvgAggregate {
  id: Float
}

input RewardsAvgOrderByAggregateInput {
  id: SortOrder
}

type RewardsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  coupons: Int!
  created_at: Int!
  customers: Int!
  expiration: Int!
  id: Int!
  level: Int!
  name: Int!
  products: Int!
  slug: Int!
  users: Int!
}

input RewardsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

input RewardsCreateInput {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

input RewardsCreateManyInput {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsGroupBy {
  _avg: RewardsAvgAggregate
  _count: RewardsCountAggregate
  _max: RewardsMaxAggregate
  _min: RewardsMinAggregate
  _sum: RewardsSumAggregate
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int!
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsMaxAggregate {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String
  products: String
  slug: String
  users: String
}

input RewardsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

type RewardsMinAggregate {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String
  products: String
  slug: String
  users: String
}

input RewardsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

enum RewardsOrderByRelevanceFieldEnum {
  articles
  categories
  coupons
  customers
  expiration
  level
  name
  products
  slug
  users
}

input RewardsOrderByRelevanceInput {
  fields: [RewardsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RewardsOrderByWithAggregationInput {
  _avg: RewardsAvgOrderByAggregateInput
  _count: RewardsCountOrderByAggregateInput
  _max: RewardsMaxOrderByAggregateInput
  _min: RewardsMinOrderByAggregateInput
  _sum: RewardsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

input RewardsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RewardsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

enum RewardsScalarFieldEnum {
  articles
  categories
  coupons
  created_at
  customers
  expiration
  id
  level
  name
  products
  slug
  users
}

input RewardsScalarWhereWithAggregatesInput {
  AND: [RewardsScalarWhereWithAggregatesInput!]
  NOT: [RewardsScalarWhereWithAggregatesInput!]
  OR: [RewardsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  expiration: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  slug: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type RewardsSumAggregate {
  id: Int
}

input RewardsSumOrderByAggregateInput {
  id: SortOrder
}

input RewardsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input RewardsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input RewardsWhereInput {
  AND: [RewardsWhereInput!]
  NOT: [RewardsWhereInput!]
  OR: [RewardsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  expiration: StringNullableFilter
  id: IntFilter
  level: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  slug: StringNullableFilter
  users: StringNullableFilter
}

input RewardsWhereUniqueInput {
  id: Int
}

type Roles {
  content: String
  created_at: DateTime
  id: Int!
  role_name: String!
}

type RolesAvgAggregate {
  id: Float
}

input RolesAvgOrderByAggregateInput {
  id: SortOrder
}

type RolesCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  id: Int!
  role_name: Int!
}

input RolesCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

input RolesCreateInput {
  content: String
  created_at: DateTime
  role_name: String!
}

input RolesCreateManyInput {
  content: String
  created_at: DateTime
  id: Int
  role_name: String!
}

type RolesGroupBy {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
  content: String
  created_at: DateTime
  id: Int!
  role_name: String!
}

type RolesMaxAggregate {
  content: String
  created_at: DateTime
  id: Int
  role_name: String
}

input RolesMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

type RolesMinAggregate {
  content: String
  created_at: DateTime
  id: Int
  role_name: String
}

input RolesMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

enum RolesOrderByRelevanceFieldEnum {
  content
  role_name
}

input RolesOrderByRelevanceInput {
  fields: [RolesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RolesOrderByWithAggregationInput {
  _avg: RolesAvgOrderByAggregateInput
  _count: RolesCountOrderByAggregateInput
  _max: RolesMaxOrderByAggregateInput
  _min: RolesMinOrderByAggregateInput
  _sum: RolesSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

input RolesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RolesOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

enum RolesScalarFieldEnum {
  content
  created_at
  id
  role_name
}

input RolesScalarWhereWithAggregatesInput {
  AND: [RolesScalarWhereWithAggregatesInput!]
  NOT: [RolesScalarWhereWithAggregatesInput!]
  OR: [RolesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  role_name: StringWithAggregatesFilter
}

type RolesSumAggregate {
  id: Int
}

input RolesSumOrderByAggregateInput {
  id: SortOrder
}

input RolesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
}

input RolesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
}

input RolesWhereInput {
  AND: [RolesWhereInput!]
  NOT: [RolesWhereInput!]
  OR: [RolesWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: IntFilter
  role_name: StringFilter
}

input RolesWhereUniqueInput {
  id: Int
}

type Scheduler {
  created_at: DateTime
  end_date: String
  id: BigInt!
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

type SchedulerAvgAggregate {
  id: Float
}

input SchedulerAvgOrderByAggregateInput {
  id: SortOrder
}

type SchedulerCountAggregate {
  _all: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  level: Int!
  login: Int!
  notes: Int!
  start_date: Int!
  whid: Int!
}

input SchedulerCountOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  level: SortOrder
  login: SortOrder
  notes: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input SchedulerCreateInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

input SchedulerCreateManyInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

type SchedulerGroupBy {
  _avg: SchedulerAvgAggregate
  _count: SchedulerCountAggregate
  _max: SchedulerMaxAggregate
  _min: SchedulerMinAggregate
  _sum: SchedulerSumAggregate
  created_at: DateTime
  end_date: String
  id: BigInt!
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

type SchedulerMaxAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

input SchedulerMaxOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  level: SortOrder
  login: SortOrder
  notes: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

type SchedulerMinAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  level: String
  login: String
  notes: String
  start_date: String
  whid: String
}

input SchedulerMinOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  level: SortOrder
  login: SortOrder
  notes: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum SchedulerOrderByRelevanceFieldEnum {
  end_date
  level
  login
  notes
  start_date
  whid
}

input SchedulerOrderByRelevanceInput {
  fields: [SchedulerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SchedulerOrderByWithAggregationInput {
  _avg: SchedulerAvgOrderByAggregateInput
  _count: SchedulerCountOrderByAggregateInput
  _max: SchedulerMaxOrderByAggregateInput
  _min: SchedulerMinOrderByAggregateInput
  _sum: SchedulerSumOrderByAggregateInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  level: SortOrder
  login: SortOrder
  notes: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input SchedulerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SchedulerOrderByRelevanceInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  level: SortOrder
  login: SortOrder
  notes: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum SchedulerScalarFieldEnum {
  created_at
  end_date
  id
  level
  login
  notes
  start_date
  whid
}

input SchedulerScalarWhereWithAggregatesInput {
  AND: [SchedulerScalarWhereWithAggregatesInput!]
  NOT: [SchedulerScalarWhereWithAggregatesInput!]
  OR: [SchedulerScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  notes: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type SchedulerSumAggregate {
  id: BigInt
}

input SchedulerSumOrderByAggregateInput {
  id: SortOrder
}

input SchedulerUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input SchedulerUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input SchedulerWhereInput {
  AND: [SchedulerWhereInput!]
  NOT: [SchedulerWhereInput!]
  OR: [SchedulerWhereInput!]
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  level: StringNullableFilter
  login: StringNullableFilter
  notes: StringNullableFilter
  start_date: StringNullableFilter
  whid: StringNullableFilter
}

input SchedulerWhereUniqueInput {
  id: BigInt
}

type Segments {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt!
  name: String
  status: String
  website: String
}

type SegmentsAvgAggregate {
  id: Float
}

input SegmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type SegmentsCountAggregate {
  _all: Int!
  apply_to: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  id: Int!
  name: Int!
  status: Int!
  website: Int!
}

input SegmentsCountOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

input SegmentsCreateInput {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsCreateManyInput {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

type SegmentsGroupBy {
  _avg: SegmentsAvgAggregate
  _count: SegmentsCountAggregate
  _max: SegmentsMaxAggregate
  _min: SegmentsMinAggregate
  _sum: SegmentsSumAggregate
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt!
  name: String
  status: String
  website: String
}

type SegmentsMaxAggregate {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsMaxOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

type SegmentsMinAggregate {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsMinOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

enum SegmentsOrderByRelevanceFieldEnum {
  apply_to
  customers
  description
  name
  status
  website
}

input SegmentsOrderByRelevanceInput {
  fields: [SegmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SegmentsOrderByWithAggregationInput {
  _avg: SegmentsAvgOrderByAggregateInput
  _count: SegmentsCountOrderByAggregateInput
  _max: SegmentsMaxOrderByAggregateInput
  _min: SegmentsMinOrderByAggregateInput
  _sum: SegmentsSumOrderByAggregateInput
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

input SegmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SegmentsOrderByRelevanceInput
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

enum SegmentsScalarFieldEnum {
  apply_to
  created_at
  customers
  description
  id
  name
  status
  website
}

input SegmentsScalarWhereWithAggregatesInput {
  AND: [SegmentsScalarWhereWithAggregatesInput!]
  NOT: [SegmentsScalarWhereWithAggregatesInput!]
  OR: [SegmentsScalarWhereWithAggregatesInput!]
  apply_to: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type SegmentsSumAggregate {
  id: BigInt
}

input SegmentsSumOrderByAggregateInput {
  id: SortOrder
}

input SegmentsUpdateInput {
  apply_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input SegmentsUpdateManyMutationInput {
  apply_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input SegmentsWhereInput {
  AND: [SegmentsWhereInput!]
  NOT: [SegmentsWhereInput!]
  OR: [SegmentsWhereInput!]
  apply_to: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  status: StringNullableFilter
  website: StringNullableFilter
}

input SegmentsWhereUniqueInput {
  id: BigInt
}

type Settings {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

type SettingsAvgAggregate {
  id: Float
}

input SettingsAvgOrderByAggregateInput {
  id: SortOrder
}

type SettingsCountAggregate {
  _all: Int!
  address: Int!
  address_two: Int!
  allow_countries: Int!
  allow_state: Int!
  allowed_currency: Int!
  awsS3: Int!
  base_currency: Int!
  city: Int!
  country: Int!
  created_at: Int!
  databaseUrl: Int!
  default_country: Int!
  default_currency: Int!
  disqusKey: Int!
  european_union_countries: Int!
  googleAnalytics: Int!
  googleDrive: Int!
  id: Int!
  isPublic: Int!
  mailServer: Int!
  optional_zip: Int!
  region: Int!
  searchSetting: Int!
  sentryDsn: Int!
  siteName: Int!
  siteTagline: Int!
  siteWebsite: Int!
  state_required_for: Int!
  store_hours: Int!
  store_name: Int!
  store_phone: Int!
  top_destinations: Int!
  type: Int!
  vat_number: Int!
  youtubeVideos: Int!
  zipcode: Int!
}

input SettingsCountOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  disqusKey: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  googleDrive: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  youtubeVideos: SortOrder
  zipcode: SortOrder
}

input SettingsCreateInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

input SettingsCreateManyInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

type SettingsGroupBy {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

type SettingsMaxAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

input SettingsMaxOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  disqusKey: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  googleDrive: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  youtubeVideos: SortOrder
  zipcode: SortOrder
}

type SettingsMinAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  disqusKey: String
  european_union_countries: String
  googleAnalytics: String
  googleDrive: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  youtubeVideos: String
  zipcode: String
}

input SettingsMinOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  disqusKey: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  googleDrive: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  youtubeVideos: SortOrder
  zipcode: SortOrder
}

enum SettingsOrderByRelevanceFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  databaseUrl
  default_country
  default_currency
  disqusKey
  european_union_countries
  googleAnalytics
  googleDrive
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  youtubeVideos
  zipcode
}

input SettingsOrderByRelevanceInput {
  fields: [SettingsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SettingsOrderByWithAggregationInput {
  _avg: SettingsAvgOrderByAggregateInput
  _count: SettingsCountOrderByAggregateInput
  _max: SettingsMaxOrderByAggregateInput
  _min: SettingsMinOrderByAggregateInput
  _sum: SettingsSumOrderByAggregateInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  disqusKey: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  googleDrive: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  youtubeVideos: SortOrder
  zipcode: SortOrder
}

input SettingsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SettingsOrderByRelevanceInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  disqusKey: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  googleDrive: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  youtubeVideos: SortOrder
  zipcode: SortOrder
}

enum SettingsScalarFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  created_at
  databaseUrl
  default_country
  default_currency
  disqusKey
  european_union_countries
  googleAnalytics
  googleDrive
  id
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  youtubeVideos
  zipcode
}

input SettingsScalarWhereWithAggregatesInput {
  AND: [SettingsScalarWhereWithAggregatesInput!]
  NOT: [SettingsScalarWhereWithAggregatesInput!]
  OR: [SettingsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  address_two: StringNullableWithAggregatesFilter
  allow_countries: StringNullableWithAggregatesFilter
  allow_state: StringNullableWithAggregatesFilter
  allowed_currency: StringNullableWithAggregatesFilter
  awsS3: StringNullableWithAggregatesFilter
  base_currency: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  databaseUrl: StringNullableWithAggregatesFilter
  default_country: StringNullableWithAggregatesFilter
  default_currency: StringNullableWithAggregatesFilter
  disqusKey: StringNullableWithAggregatesFilter
  european_union_countries: StringNullableWithAggregatesFilter
  googleAnalytics: StringNullableWithAggregatesFilter
  googleDrive: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  mailServer: StringNullableWithAggregatesFilter
  optional_zip: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  searchSetting: StringNullableWithAggregatesFilter
  sentryDsn: StringNullableWithAggregatesFilter
  siteName: StringNullableWithAggregatesFilter
  siteTagline: StringNullableWithAggregatesFilter
  siteWebsite: StringNullableWithAggregatesFilter
  state_required_for: StringNullableWithAggregatesFilter
  store_hours: StringNullableWithAggregatesFilter
  store_name: StringNullableWithAggregatesFilter
  store_phone: StringNullableWithAggregatesFilter
  top_destinations: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  vat_number: StringNullableWithAggregatesFilter
  youtubeVideos: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type SettingsSumAggregate {
  id: BigInt
}

input SettingsSumOrderByAggregateInput {
  id: SortOrder
}

input SettingsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  disqusKey: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  googleDrive: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  youtubeVideos: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  disqusKey: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  googleDrive: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  youtubeVideos: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  address: StringNullableFilter
  address_two: StringNullableFilter
  allow_countries: StringNullableFilter
  allow_state: StringNullableFilter
  allowed_currency: StringNullableFilter
  awsS3: StringNullableFilter
  base_currency: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  databaseUrl: StringNullableFilter
  default_country: StringNullableFilter
  default_currency: StringNullableFilter
  disqusKey: StringNullableFilter
  european_union_countries: StringNullableFilter
  googleAnalytics: StringNullableFilter
  googleDrive: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  mailServer: StringNullableFilter
  optional_zip: StringNullableFilter
  region: StringNullableFilter
  searchSetting: StringNullableFilter
  sentryDsn: StringNullableFilter
  siteName: StringNullableFilter
  siteTagline: StringNullableFilter
  siteWebsite: StringNullableFilter
  state_required_for: StringNullableFilter
  store_hours: StringNullableFilter
  store_name: StringNullableFilter
  store_phone: StringNullableFilter
  top_destinations: StringNullableFilter
  type: StringNullableFilter
  vat_number: StringNullableFilter
  youtubeVideos: StringNullableFilter
  zipcode: StringNullableFilter
}

input SettingsWhereUniqueInput {
  id: BigInt
}

type Shipments {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt!
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsAvgAggregate {
  id: Float
}

input ShipmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type ShipmentsCountAggregate {
  _all: Int!
  carrier_name: Int!
  client_id: Int!
  client_secret: Int!
  country: Int!
  id: Int!
  image: Int!
  product: Int!
  ship_date: Int!
  speed_grade: Int!
  tracking_url: Int!
  transit_time: Int!
  website: Int!
}

input ShipmentsCountOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

input ShipmentsCreateInput {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsCreateManyInput {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsGroupBy {
  _avg: ShipmentsAvgAggregate
  _count: ShipmentsCountAggregate
  _max: ShipmentsMaxAggregate
  _min: ShipmentsMinAggregate
  _sum: ShipmentsSumAggregate
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt!
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsMaxAggregate {
  carrier_name: String
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsMaxOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

type ShipmentsMinAggregate {
  carrier_name: String
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsMinOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

enum ShipmentsOrderByRelevanceFieldEnum {
  carrier_name
  client_id
  client_secret
  country
  image
  product
  speed_grade
  tracking_url
  transit_time
  website
}

input ShipmentsOrderByRelevanceInput {
  fields: [ShipmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ShipmentsOrderByWithAggregationInput {
  _avg: ShipmentsAvgOrderByAggregateInput
  _count: ShipmentsCountOrderByAggregateInput
  _max: ShipmentsMaxOrderByAggregateInput
  _min: ShipmentsMinOrderByAggregateInput
  _sum: ShipmentsSumOrderByAggregateInput
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

input ShipmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ShipmentsOrderByRelevanceInput
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

enum ShipmentsScalarFieldEnum {
  carrier_name
  client_id
  client_secret
  country
  id
  image
  product
  ship_date
  speed_grade
  tracking_url
  transit_time
  website
}

input ShipmentsScalarWhereWithAggregatesInput {
  AND: [ShipmentsScalarWhereWithAggregatesInput!]
  NOT: [ShipmentsScalarWhereWithAggregatesInput!]
  OR: [ShipmentsScalarWhereWithAggregatesInput!]
  carrier_name: StringWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  ship_date: DateTimeNullableWithAggregatesFilter
  speed_grade: StringNullableWithAggregatesFilter
  tracking_url: StringNullableWithAggregatesFilter
  transit_time: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type ShipmentsSumAggregate {
  id: BigInt
}

input ShipmentsSumOrderByAggregateInput {
  id: SortOrder
}

input ShipmentsUpdateInput {
  carrier_name: StringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  ship_date: NullableDateTimeFieldUpdateOperationsInput
  speed_grade: NullableStringFieldUpdateOperationsInput
  tracking_url: NullableStringFieldUpdateOperationsInput
  transit_time: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input ShipmentsUpdateManyMutationInput {
  carrier_name: StringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  ship_date: NullableDateTimeFieldUpdateOperationsInput
  speed_grade: NullableStringFieldUpdateOperationsInput
  tracking_url: NullableStringFieldUpdateOperationsInput
  transit_time: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input ShipmentsWhereInput {
  AND: [ShipmentsWhereInput!]
  NOT: [ShipmentsWhereInput!]
  OR: [ShipmentsWhereInput!]
  carrier_name: StringFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  country: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  product: StringNullableFilter
  ship_date: DateTimeNullableFilter
  speed_grade: StringNullableFilter
  tracking_url: StringNullableFilter
  transit_time: StringNullableFilter
  website: StringNullableFilter
}

input ShipmentsWhereUniqueInput {
  id: BigInt
}

enum SortOrder {
  asc
  desc
}

type Special_discounts {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  users: String
}

type Special_discountsAvgAggregate {
  discount: Decimal
  id: Float
}

input Special_discountsAvgOrderByAggregateInput {
  discount: SortOrder
  id: SortOrder
}

type Special_discountsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  coupons: Int!
  customers: Int!
  discount: Int!
  excerpt: Int!
  expiration: Int!
  id: Int!
  image: Int!
  name: Int!
  products: Int!
  published: Int!
  rewards: Int!
  users: Int!
}

input Special_discountsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  users: SortOrder
}

input Special_discountsCreateInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  users: String
}

input Special_discountsCreateManyInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  users: String
}

type Special_discountsGroupBy {
  _avg: Special_discountsAvgAggregate
  _count: Special_discountsCountAggregate
  _max: Special_discountsMaxAggregate
  _min: Special_discountsMinAggregate
  _sum: Special_discountsSumAggregate
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  rewards: String
  users: String
}

type Special_discountsMaxAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  rewards: String
  users: String
}

input Special_discountsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  users: SortOrder
}

type Special_discountsMinAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  discount: Decimal
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  rewards: String
  users: String
}

input Special_discountsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  users: SortOrder
}

enum Special_discountsOrderByRelevanceFieldEnum {
  articles
  categories
  coupons
  customers
  excerpt
  image
  name
  products
  rewards
  users
}

input Special_discountsOrderByRelevanceInput {
  fields: [Special_discountsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Special_discountsOrderByWithAggregationInput {
  _avg: Special_discountsAvgOrderByAggregateInput
  _count: Special_discountsCountOrderByAggregateInput
  _max: Special_discountsMaxOrderByAggregateInput
  _min: Special_discountsMinOrderByAggregateInput
  _sum: Special_discountsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  users: SortOrder
}

input Special_discountsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Special_discountsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  rewards: SortOrder
  users: SortOrder
}

enum Special_discountsScalarFieldEnum {
  articles
  categories
  coupons
  customers
  discount
  excerpt
  expiration
  id
  image
  name
  products
  published
  rewards
  users
}

input Special_discountsScalarWhereWithAggregatesInput {
  AND: [Special_discountsScalarWhereWithAggregatesInput!]
  NOT: [Special_discountsScalarWhereWithAggregatesInput!]
  OR: [Special_discountsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  discount: DecimalNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  expiration: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  rewards: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type Special_discountsSumAggregate {
  discount: Decimal
  id: Int
}

input Special_discountsSumOrderByAggregateInput {
  discount: SortOrder
  id: SortOrder
}

input Special_discountsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableDecimalFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input Special_discountsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableDecimalFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input Special_discountsWhereInput {
  AND: [Special_discountsWhereInput!]
  NOT: [Special_discountsWhereInput!]
  OR: [Special_discountsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  customers: StringNullableFilter
  discount: DecimalNullableFilter
  excerpt: StringNullableFilter
  expiration: DateTimeNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  published: DateTimeNullableFilter
  rewards: StringNullableFilter
  users: StringNullableFilter
}

input Special_discountsWhereUniqueInput {
  id: Int
}

type States {
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  trainings: String
}

type StatesAvgAggregate {
  id: Float
}

input StatesAvgOrderByAggregateInput {
  id: SortOrder
}

type StatesCountAggregate {
  _all: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  trainings: Int!
}

input StatesCountOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

input StatesCreateInput {
  country: String
  description: String
  image: String
  name: String!
  trainings: String
}

input StatesCreateManyInput {
  country: String
  description: String
  id: Int
  image: String
  name: String!
  trainings: String
}

type StatesGroupBy {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  trainings: String
}

type StatesMaxAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  trainings: String
}

input StatesMaxOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

type StatesMinAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  trainings: String
}

input StatesMinOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

enum StatesOrderByRelevanceFieldEnum {
  country
  description
  image
  name
  trainings
}

input StatesOrderByRelevanceInput {
  fields: [StatesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input StatesOrderByWithAggregationInput {
  _avg: StatesAvgOrderByAggregateInput
  _count: StatesCountOrderByAggregateInput
  _max: StatesMaxOrderByAggregateInput
  _min: StatesMinOrderByAggregateInput
  _sum: StatesSumOrderByAggregateInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

input StatesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: StatesOrderByRelevanceInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

enum StatesScalarFieldEnum {
  country
  description
  id
  image
  name
  trainings
}

input StatesScalarWhereWithAggregatesInput {
  AND: [StatesScalarWhereWithAggregatesInput!]
  NOT: [StatesScalarWhereWithAggregatesInput!]
  OR: [StatesScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
}

type StatesSumAggregate {
  id: Int
}

input StatesSumOrderByAggregateInput {
  id: SortOrder
}

input StatesUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input StatesUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input StatesWhereInput {
  AND: [StatesWhereInput!]
  NOT: [StatesWhereInput!]
  OR: [StatesWhereInput!]
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  trainings: StringNullableFilter
}

input StatesWhereUniqueInput {
  id: Int
}

type Statistics {
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

type StatisticsAvgAggregate {
  id: Float
}

input StatisticsAvgOrderByAggregateInput {
  id: SortOrder
}

type StatisticsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  coupons: Int!
  customers: Int!
  description: Int!
  excerpt: Int!
  expiration: Int!
  id: Int!
  image: Int!
  name: Int!
  products: Int!
  published: Int!
  reports: Int!
  rewards: Int!
  special_offers: Int!
  users: Int!
}

input StatisticsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  reports: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  users: SortOrder
}

input StatisticsCreateInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  image: String
  name: String!
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

input StatisticsCreateManyInput {
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String!
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

type StatisticsGroupBy {
  _avg: StatisticsAvgAggregate
  _count: StatisticsCountAggregate
  _max: StatisticsMaxAggregate
  _min: StatisticsMinAggregate
  _sum: StatisticsSumAggregate
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  id: Int!
  image: String
  name: String!
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

type StatisticsMaxAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

input StatisticsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  reports: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  users: SortOrder
}

type StatisticsMinAggregate {
  articles: String
  categories: String
  coupons: String
  customers: String
  description: String
  excerpt: String
  expiration: DateTime
  id: Int
  image: String
  name: String
  products: String
  published: DateTime
  reports: String
  rewards: String
  special_offers: String
  users: String
}

input StatisticsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  reports: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  users: SortOrder
}

enum StatisticsOrderByRelevanceFieldEnum {
  articles
  categories
  coupons
  customers
  description
  excerpt
  image
  name
  products
  reports
  rewards
  special_offers
  users
}

input StatisticsOrderByRelevanceInput {
  fields: [StatisticsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input StatisticsOrderByWithAggregationInput {
  _avg: StatisticsAvgOrderByAggregateInput
  _count: StatisticsCountOrderByAggregateInput
  _max: StatisticsMaxOrderByAggregateInput
  _min: StatisticsMinOrderByAggregateInput
  _sum: StatisticsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  reports: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  users: SortOrder
}

input StatisticsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: StatisticsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  products: SortOrder
  published: SortOrder
  reports: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  users: SortOrder
}

enum StatisticsScalarFieldEnum {
  articles
  categories
  coupons
  customers
  description
  excerpt
  expiration
  id
  image
  name
  products
  published
  reports
  rewards
  special_offers
  users
}

input StatisticsScalarWhereWithAggregatesInput {
  AND: [StatisticsScalarWhereWithAggregatesInput!]
  NOT: [StatisticsScalarWhereWithAggregatesInput!]
  OR: [StatisticsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  expiration: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  rewards: StringNullableWithAggregatesFilter
  special_offers: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type StatisticsSumAggregate {
  id: Int
}

input StatisticsSumOrderByAggregateInput {
  id: SortOrder
}

input StatisticsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input StatisticsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableDateTimeFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input StatisticsWhereInput {
  AND: [StatisticsWhereInput!]
  NOT: [StatisticsWhereInput!]
  OR: [StatisticsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  excerpt: StringNullableFilter
  expiration: DateTimeNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  published: DateTimeNullableFilter
  reports: StringNullableFilter
  rewards: StringNullableFilter
  special_offers: StringNullableFilter
  users: StringNullableFilter
}

input StatisticsWhereUniqueInput {
  id: Int
}

type Stocks {
  description: String
  enabled: Boolean
  id: Int!
  name: String!
  sources: String
  website: String
}

type StocksAvgAggregate {
  id: Float
}

input StocksAvgOrderByAggregateInput {
  id: SortOrder
}

type StocksCountAggregate {
  _all: Int!
  description: Int!
  enabled: Int!
  id: Int!
  name: Int!
  sources: Int!
  website: Int!
}

input StocksCountOrderByAggregateInput {
  description: SortOrder
  enabled: SortOrder
  id: SortOrder
  name: SortOrder
  sources: SortOrder
  website: SortOrder
}

input StocksCreateInput {
  description: String
  enabled: Boolean
  name: String!
  sources: String
  website: String
}

input StocksCreateManyInput {
  description: String
  enabled: Boolean
  id: Int
  name: String!
  sources: String
  website: String
}

type StocksGroupBy {
  _avg: StocksAvgAggregate
  _count: StocksCountAggregate
  _max: StocksMaxAggregate
  _min: StocksMinAggregate
  _sum: StocksSumAggregate
  description: String
  enabled: Boolean
  id: Int!
  name: String!
  sources: String
  website: String
}

type StocksMaxAggregate {
  description: String
  enabled: Boolean
  id: Int
  name: String
  sources: String
  website: String
}

input StocksMaxOrderByAggregateInput {
  description: SortOrder
  enabled: SortOrder
  id: SortOrder
  name: SortOrder
  sources: SortOrder
  website: SortOrder
}

type StocksMinAggregate {
  description: String
  enabled: Boolean
  id: Int
  name: String
  sources: String
  website: String
}

input StocksMinOrderByAggregateInput {
  description: SortOrder
  enabled: SortOrder
  id: SortOrder
  name: SortOrder
  sources: SortOrder
  website: SortOrder
}

enum StocksOrderByRelevanceFieldEnum {
  description
  name
  sources
  website
}

input StocksOrderByRelevanceInput {
  fields: [StocksOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input StocksOrderByWithAggregationInput {
  _avg: StocksAvgOrderByAggregateInput
  _count: StocksCountOrderByAggregateInput
  _max: StocksMaxOrderByAggregateInput
  _min: StocksMinOrderByAggregateInput
  _sum: StocksSumOrderByAggregateInput
  description: SortOrder
  enabled: SortOrder
  id: SortOrder
  name: SortOrder
  sources: SortOrder
  website: SortOrder
}

input StocksOrderByWithRelationAndSearchRelevanceInput {
  _relevance: StocksOrderByRelevanceInput
  description: SortOrder
  enabled: SortOrder
  id: SortOrder
  name: SortOrder
  sources: SortOrder
  website: SortOrder
}

enum StocksScalarFieldEnum {
  description
  enabled
  id
  name
  sources
  website
}

input StocksScalarWhereWithAggregatesInput {
  AND: [StocksScalarWhereWithAggregatesInput!]
  NOT: [StocksScalarWhereWithAggregatesInput!]
  OR: [StocksScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  enabled: BoolNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  sources: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type StocksSumAggregate {
  id: Int
}

input StocksSumOrderByAggregateInput {
  id: SortOrder
}

input StocksUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  enabled: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sources: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input StocksUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  enabled: NullableBoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sources: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input StocksWhereInput {
  AND: [StocksWhereInput!]
  NOT: [StocksWhereInput!]
  OR: [StocksWhereInput!]
  description: StringNullableFilter
  enabled: BoolNullableFilter
  id: IntFilter
  name: StringFilter
  sources: StringNullableFilter
  website: StringNullableFilter
}

input StocksWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

type Surveys {
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt!
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

type SurveysAvgAggregate {
  id: Float
}

input SurveysAvgOrderByAggregateInput {
  id: SortOrder
}

type SurveysCountAggregate {
  _all: Int!
  answer: Int!
  assigned_to: Int!
  created_at: Int!
  description: Int!
  dissatisfied_text: Int!
  id: Int!
  name: Int!
  neither_text: Int!
  question: Int!
  satisfied_text: Int!
  status: Int!
  submit_text: Int!
}

input SurveysCountOrderByAggregateInput {
  answer: SortOrder
  assigned_to: SortOrder
  created_at: SortOrder
  description: SortOrder
  dissatisfied_text: SortOrder
  id: SortOrder
  name: SortOrder
  neither_text: SortOrder
  question: SortOrder
  satisfied_text: SortOrder
  status: SortOrder
  submit_text: SortOrder
}

input SurveysCreateInput {
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

input SurveysCreateManyInput {
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

type SurveysGroupBy {
  _avg: SurveysAvgAggregate
  _count: SurveysCountAggregate
  _max: SurveysMaxAggregate
  _min: SurveysMinAggregate
  _sum: SurveysSumAggregate
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt!
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

type SurveysMaxAggregate {
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

input SurveysMaxOrderByAggregateInput {
  answer: SortOrder
  assigned_to: SortOrder
  created_at: SortOrder
  description: SortOrder
  dissatisfied_text: SortOrder
  id: SortOrder
  name: SortOrder
  neither_text: SortOrder
  question: SortOrder
  satisfied_text: SortOrder
  status: SortOrder
  submit_text: SortOrder
}

type SurveysMinAggregate {
  answer: String
  assigned_to: String
  created_at: DateTime
  description: String
  dissatisfied_text: String
  id: BigInt
  name: String
  neither_text: String
  question: String
  satisfied_text: String
  status: String
  submit_text: String
}

input SurveysMinOrderByAggregateInput {
  answer: SortOrder
  assigned_to: SortOrder
  created_at: SortOrder
  description: SortOrder
  dissatisfied_text: SortOrder
  id: SortOrder
  name: SortOrder
  neither_text: SortOrder
  question: SortOrder
  satisfied_text: SortOrder
  status: SortOrder
  submit_text: SortOrder
}

enum SurveysOrderByRelevanceFieldEnum {
  answer
  assigned_to
  description
  dissatisfied_text
  name
  neither_text
  question
  satisfied_text
  status
  submit_text
}

input SurveysOrderByRelevanceInput {
  fields: [SurveysOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SurveysOrderByWithAggregationInput {
  _avg: SurveysAvgOrderByAggregateInput
  _count: SurveysCountOrderByAggregateInput
  _max: SurveysMaxOrderByAggregateInput
  _min: SurveysMinOrderByAggregateInput
  _sum: SurveysSumOrderByAggregateInput
  answer: SortOrder
  assigned_to: SortOrder
  created_at: SortOrder
  description: SortOrder
  dissatisfied_text: SortOrder
  id: SortOrder
  name: SortOrder
  neither_text: SortOrder
  question: SortOrder
  satisfied_text: SortOrder
  status: SortOrder
  submit_text: SortOrder
}

input SurveysOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SurveysOrderByRelevanceInput
  answer: SortOrder
  assigned_to: SortOrder
  created_at: SortOrder
  description: SortOrder
  dissatisfied_text: SortOrder
  id: SortOrder
  name: SortOrder
  neither_text: SortOrder
  question: SortOrder
  satisfied_text: SortOrder
  status: SortOrder
  submit_text: SortOrder
}

enum SurveysScalarFieldEnum {
  answer
  assigned_to
  created_at
  description
  dissatisfied_text
  id
  name
  neither_text
  question
  satisfied_text
  status
  submit_text
}

input SurveysScalarWhereWithAggregatesInput {
  AND: [SurveysScalarWhereWithAggregatesInput!]
  NOT: [SurveysScalarWhereWithAggregatesInput!]
  OR: [SurveysScalarWhereWithAggregatesInput!]
  answer: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  dissatisfied_text: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  neither_text: StringNullableWithAggregatesFilter
  question: StringNullableWithAggregatesFilter
  satisfied_text: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  submit_text: StringNullableWithAggregatesFilter
}

type SurveysSumAggregate {
  id: BigInt
}

input SurveysSumOrderByAggregateInput {
  id: SortOrder
}

input SurveysUpdateInput {
  answer: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dissatisfied_text: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  neither_text: NullableStringFieldUpdateOperationsInput
  question: NullableStringFieldUpdateOperationsInput
  satisfied_text: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  submit_text: NullableStringFieldUpdateOperationsInput
}

input SurveysUpdateManyMutationInput {
  answer: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dissatisfied_text: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  neither_text: NullableStringFieldUpdateOperationsInput
  question: NullableStringFieldUpdateOperationsInput
  satisfied_text: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  submit_text: NullableStringFieldUpdateOperationsInput
}

input SurveysWhereInput {
  AND: [SurveysWhereInput!]
  NOT: [SurveysWhereInput!]
  OR: [SurveysWhereInput!]
  answer: StringNullableFilter
  assigned_to: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  dissatisfied_text: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  neither_text: StringNullableFilter
  question: StringNullableFilter
  satisfied_text: StringNullableFilter
  status: StringNullableFilter
  submit_text: StringNullableFilter
}

input SurveysWhereUniqueInput {
  id: BigInt
}

type Tags {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsAvgAggregate {
  id: Float
}

input TagsAvgOrderByAggregateInput {
  id: SortOrder
}

type TagsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  customers: Int!
  excerpt: Int!
  id: Int!
  name: Int!
  products: Int!
  users: Int!
}

input TagsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsCreateInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  name: String!
  products: String
  users: String
}

input TagsCreateManyInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String!
  products: String
  users: String
}

type TagsGroupBy {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsMaxAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

type TagsMinAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsOrderByRelevanceFieldEnum {
  articles
  categories
  customers
  excerpt
  name
  products
  users
}

input TagsOrderByRelevanceInput {
  fields: [TagsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TagsOrderByWithAggregationInput {
  _avg: TagsAvgOrderByAggregateInput
  _count: TagsCountOrderByAggregateInput
  _max: TagsMaxOrderByAggregateInput
  _min: TagsMinOrderByAggregateInput
  _sum: TagsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TagsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsScalarFieldEnum {
  articles
  categories
  customers
  excerpt
  id
  name
  products
  users
}

input TagsScalarWhereWithAggregatesInput {
  AND: [TagsScalarWhereWithAggregatesInput!]
  NOT: [TagsScalarWhereWithAggregatesInput!]
  OR: [TagsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type TagsSumAggregate {
  id: Int
}

input TagsSumOrderByAggregateInput {
  id: SortOrder
}

input TagsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsWhereInput {
  AND: [TagsWhereInput!]
  NOT: [TagsWhereInput!]
  OR: [TagsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  customers: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  name: StringFilter
  products: StringNullableFilter
  users: StringNullableFilter
}

input TagsWhereUniqueInput {
  id: Int
}

type Targets {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt!
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

type TargetsAvgAggregate {
  id: Float
}

input TargetsAvgOrderByAggregateInput {
  id: SortOrder
}

type TargetsCountAggregate {
  Prefix: Int!
  _all: Int!
  account_name: Int!
  address: Int!
  alt_address: Int!
  alt_city: Int!
  alt_country: Int!
  alt_postalcode: Int!
  alt_state: Int!
  city: Int!
  country: Int!
  created_at: Int!
  customer_name: Int!
  department: Int!
  description: Int!
  donotcall: Int!
  email: Int!
  email_opt_out: Int!
  fax: Int!
  first_name: Int!
  id: Int!
  job_title: Int!
  last_name: Int!
  mobile: Int!
  office_phone: Int!
  postalcode: Int!
  state: Int!
  website: Int!
}

input TargetsCountOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  donotcall: SortOrder
  email: SortOrder
  email_opt_out: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  website: SortOrder
}

input TargetsCreateInput {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

input TargetsCreateManyInput {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

type TargetsGroupBy {
  Prefix: String
  _avg: TargetsAvgAggregate
  _count: TargetsCountAggregate
  _max: TargetsMaxAggregate
  _min: TargetsMinAggregate
  _sum: TargetsSumAggregate
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt!
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

type TargetsMaxAggregate {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

input TargetsMaxOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  donotcall: SortOrder
  email: SortOrder
  email_opt_out: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  website: SortOrder
}

type TargetsMinAggregate {
  Prefix: String
  account_name: String
  address: String
  alt_address: String
  alt_city: String
  alt_country: String
  alt_postalcode: String
  alt_state: String
  city: String
  country: String
  created_at: DateTime
  customer_name: String
  department: String
  description: String
  donotcall: String
  email: String
  email_opt_out: String
  fax: String
  first_name: String
  id: BigInt
  job_title: String
  last_name: String
  mobile: String
  office_phone: String
  postalcode: String
  state: String
  website: String
}

input TargetsMinOrderByAggregateInput {
  Prefix: SortOrder
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  donotcall: SortOrder
  email: SortOrder
  email_opt_out: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  website: SortOrder
}

enum TargetsOrderByRelevanceFieldEnum {
  Prefix
  account_name
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  city
  country
  customer_name
  department
  description
  donotcall
  email
  email_opt_out
  fax
  first_name
  job_title
  last_name
  mobile
  office_phone
  postalcode
  state
  website
}

input TargetsOrderByRelevanceInput {
  fields: [TargetsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TargetsOrderByWithAggregationInput {
  Prefix: SortOrder
  _avg: TargetsAvgOrderByAggregateInput
  _count: TargetsCountOrderByAggregateInput
  _max: TargetsMaxOrderByAggregateInput
  _min: TargetsMinOrderByAggregateInput
  _sum: TargetsSumOrderByAggregateInput
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  donotcall: SortOrder
  email: SortOrder
  email_opt_out: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  website: SortOrder
}

input TargetsOrderByWithRelationAndSearchRelevanceInput {
  Prefix: SortOrder
  _relevance: TargetsOrderByRelevanceInput
  account_name: SortOrder
  address: SortOrder
  alt_address: SortOrder
  alt_city: SortOrder
  alt_country: SortOrder
  alt_postalcode: SortOrder
  alt_state: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  customer_name: SortOrder
  department: SortOrder
  description: SortOrder
  donotcall: SortOrder
  email: SortOrder
  email_opt_out: SortOrder
  fax: SortOrder
  first_name: SortOrder
  id: SortOrder
  job_title: SortOrder
  last_name: SortOrder
  mobile: SortOrder
  office_phone: SortOrder
  postalcode: SortOrder
  state: SortOrder
  website: SortOrder
}

enum TargetsScalarFieldEnum {
  Prefix
  account_name
  address
  alt_address
  alt_city
  alt_country
  alt_postalcode
  alt_state
  city
  country
  created_at
  customer_name
  department
  description
  donotcall
  email
  email_opt_out
  fax
  first_name
  id
  job_title
  last_name
  mobile
  office_phone
  postalcode
  state
  website
}

input TargetsScalarWhereWithAggregatesInput {
  AND: [TargetsScalarWhereWithAggregatesInput!]
  NOT: [TargetsScalarWhereWithAggregatesInput!]
  OR: [TargetsScalarWhereWithAggregatesInput!]
  Prefix: StringNullableWithAggregatesFilter
  account_name: StringNullableWithAggregatesFilter
  address: StringNullableWithAggregatesFilter
  alt_address: StringNullableWithAggregatesFilter
  alt_city: StringNullableWithAggregatesFilter
  alt_country: StringNullableWithAggregatesFilter
  alt_postalcode: StringNullableWithAggregatesFilter
  alt_state: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customer_name: StringNullableWithAggregatesFilter
  department: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  donotcall: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  email_opt_out: StringNullableWithAggregatesFilter
  fax: StringNullableWithAggregatesFilter
  first_name: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  job_title: StringNullableWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  mobile: StringNullableWithAggregatesFilter
  office_phone: StringNullableWithAggregatesFilter
  postalcode: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type TargetsSumAggregate {
  id: BigInt
}

input TargetsSumOrderByAggregateInput {
  id: SortOrder
}

input TargetsUpdateInput {
  Prefix: NullableStringFieldUpdateOperationsInput
  account_name: NullableStringFieldUpdateOperationsInput
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  donotcall: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  email_opt_out: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  job_title: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mobile: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input TargetsUpdateManyMutationInput {
  Prefix: NullableStringFieldUpdateOperationsInput
  account_name: NullableStringFieldUpdateOperationsInput
  address: NullableStringFieldUpdateOperationsInput
  alt_address: NullableStringFieldUpdateOperationsInput
  alt_city: NullableStringFieldUpdateOperationsInput
  alt_country: NullableStringFieldUpdateOperationsInput
  alt_postalcode: NullableStringFieldUpdateOperationsInput
  alt_state: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  donotcall: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  email_opt_out: NullableStringFieldUpdateOperationsInput
  fax: NullableStringFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  job_title: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mobile: NullableStringFieldUpdateOperationsInput
  office_phone: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input TargetsWhereInput {
  AND: [TargetsWhereInput!]
  NOT: [TargetsWhereInput!]
  OR: [TargetsWhereInput!]
  Prefix: StringNullableFilter
  account_name: StringNullableFilter
  address: StringNullableFilter
  alt_address: StringNullableFilter
  alt_city: StringNullableFilter
  alt_country: StringNullableFilter
  alt_postalcode: StringNullableFilter
  alt_state: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  customer_name: StringNullableFilter
  department: StringNullableFilter
  description: StringNullableFilter
  donotcall: StringNullableFilter
  email: StringNullableFilter
  email_opt_out: StringNullableFilter
  fax: StringNullableFilter
  first_name: StringNullableFilter
  id: BigIntFilter
  job_title: StringNullableFilter
  last_name: StringNullableFilter
  mobile: StringNullableFilter
  office_phone: StringNullableFilter
  postalcode: StringNullableFilter
  state: StringNullableFilter
  website: StringNullableFilter
}

input TargetsWhereUniqueInput {
  id: BigInt
}

type Tax_category {
  created_at: DateTime
  default: String
  id: BigInt!
  name: String
}

type Tax_categoryAvgAggregate {
  id: Float
}

input Tax_categoryAvgOrderByAggregateInput {
  id: SortOrder
}

type Tax_categoryCountAggregate {
  _all: Int!
  created_at: Int!
  default: Int!
  id: Int!
  name: Int!
}

input Tax_categoryCountOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  id: SortOrder
  name: SortOrder
}

input Tax_categoryCreateInput {
  created_at: DateTime
  default: String
  id: BigInt
  name: String
}

input Tax_categoryCreateManyInput {
  created_at: DateTime
  default: String
  id: BigInt
  name: String
}

type Tax_categoryGroupBy {
  _avg: Tax_categoryAvgAggregate
  _count: Tax_categoryCountAggregate
  _max: Tax_categoryMaxAggregate
  _min: Tax_categoryMinAggregate
  _sum: Tax_categorySumAggregate
  created_at: DateTime
  default: String
  id: BigInt!
  name: String
}

type Tax_categoryMaxAggregate {
  created_at: DateTime
  default: String
  id: BigInt
  name: String
}

input Tax_categoryMaxOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  id: SortOrder
  name: SortOrder
}

type Tax_categoryMinAggregate {
  created_at: DateTime
  default: String
  id: BigInt
  name: String
}

input Tax_categoryMinOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  id: SortOrder
  name: SortOrder
}

enum Tax_categoryOrderByRelevanceFieldEnum {
  default
  name
}

input Tax_categoryOrderByRelevanceInput {
  fields: [Tax_categoryOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Tax_categoryOrderByWithAggregationInput {
  _avg: Tax_categoryAvgOrderByAggregateInput
  _count: Tax_categoryCountOrderByAggregateInput
  _max: Tax_categoryMaxOrderByAggregateInput
  _min: Tax_categoryMinOrderByAggregateInput
  _sum: Tax_categorySumOrderByAggregateInput
  created_at: SortOrder
  default: SortOrder
  id: SortOrder
  name: SortOrder
}

input Tax_categoryOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Tax_categoryOrderByRelevanceInput
  created_at: SortOrder
  default: SortOrder
  id: SortOrder
  name: SortOrder
}

enum Tax_categoryScalarFieldEnum {
  created_at
  default
  id
  name
}

input Tax_categoryScalarWhereWithAggregatesInput {
  AND: [Tax_categoryScalarWhereWithAggregatesInput!]
  NOT: [Tax_categoryScalarWhereWithAggregatesInput!]
  OR: [Tax_categoryScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  default: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type Tax_categorySumAggregate {
  id: BigInt
}

input Tax_categorySumOrderByAggregateInput {
  id: SortOrder
}

input Tax_categoryUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input Tax_categoryUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input Tax_categoryWhereInput {
  AND: [Tax_categoryWhereInput!]
  NOT: [Tax_categoryWhereInput!]
  OR: [Tax_categoryWhereInput!]
  created_at: DateTimeNullableFilter
  default: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
}

input Tax_categoryWhereUniqueInput {
  id: BigInt
}

type Tax_rate {
  country: String
  default_store_view: String
  id: Int!
  postcode: String
  prod_id: BigInt!
  products: String
  rate_percent: String
  state: String
  tax_identifier: String!
  zip_post_is_range: Boolean
}

type Tax_rateAvgAggregate {
  id: Float
  prod_id: Float
}

input Tax_rateAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type Tax_rateCountAggregate {
  _all: Int!
  country: Int!
  default_store_view: Int!
  id: Int!
  postcode: Int!
  prod_id: Int!
  products: Int!
  rate_percent: Int!
  state: Int!
  tax_identifier: Int!
  zip_post_is_range: Int!
}

input Tax_rateCountOrderByAggregateInput {
  country: SortOrder
  default_store_view: SortOrder
  id: SortOrder
  postcode: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  tax_identifier: SortOrder
  zip_post_is_range: SortOrder
}

input Tax_rateCreateInput {
  country: String
  default_store_view: String
  postcode: String
  prod_id: BigInt!
  products: String
  rate_percent: String
  state: String
  tax_identifier: String!
  zip_post_is_range: Boolean
}

input Tax_rateCreateManyInput {
  country: String
  default_store_view: String
  id: Int
  postcode: String
  prod_id: BigInt!
  products: String
  rate_percent: String
  state: String
  tax_identifier: String!
  zip_post_is_range: Boolean
}

type Tax_rateGroupBy {
  _avg: Tax_rateAvgAggregate
  _count: Tax_rateCountAggregate
  _max: Tax_rateMaxAggregate
  _min: Tax_rateMinAggregate
  _sum: Tax_rateSumAggregate
  country: String
  default_store_view: String
  id: Int!
  postcode: String
  prod_id: BigInt!
  products: String
  rate_percent: String
  state: String
  tax_identifier: String!
  zip_post_is_range: Boolean
}

type Tax_rateMaxAggregate {
  country: String
  default_store_view: String
  id: Int
  postcode: String
  prod_id: BigInt
  products: String
  rate_percent: String
  state: String
  tax_identifier: String
  zip_post_is_range: Boolean
}

input Tax_rateMaxOrderByAggregateInput {
  country: SortOrder
  default_store_view: SortOrder
  id: SortOrder
  postcode: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  tax_identifier: SortOrder
  zip_post_is_range: SortOrder
}

type Tax_rateMinAggregate {
  country: String
  default_store_view: String
  id: Int
  postcode: String
  prod_id: BigInt
  products: String
  rate_percent: String
  state: String
  tax_identifier: String
  zip_post_is_range: Boolean
}

input Tax_rateMinOrderByAggregateInput {
  country: SortOrder
  default_store_view: SortOrder
  id: SortOrder
  postcode: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  tax_identifier: SortOrder
  zip_post_is_range: SortOrder
}

enum Tax_rateOrderByRelevanceFieldEnum {
  country
  default_store_view
  postcode
  products
  rate_percent
  state
  tax_identifier
}

input Tax_rateOrderByRelevanceInput {
  fields: [Tax_rateOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Tax_rateOrderByWithAggregationInput {
  _avg: Tax_rateAvgOrderByAggregateInput
  _count: Tax_rateCountOrderByAggregateInput
  _max: Tax_rateMaxOrderByAggregateInput
  _min: Tax_rateMinOrderByAggregateInput
  _sum: Tax_rateSumOrderByAggregateInput
  country: SortOrder
  default_store_view: SortOrder
  id: SortOrder
  postcode: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  tax_identifier: SortOrder
  zip_post_is_range: SortOrder
}

input Tax_rateOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Tax_rateOrderByRelevanceInput
  country: SortOrder
  default_store_view: SortOrder
  id: SortOrder
  postcode: SortOrder
  prod_id: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  tax_identifier: SortOrder
  zip_post_is_range: SortOrder
}

enum Tax_rateScalarFieldEnum {
  country
  default_store_view
  id
  postcode
  prod_id
  products
  rate_percent
  state
  tax_identifier
  zip_post_is_range
}

input Tax_rateScalarWhereWithAggregatesInput {
  AND: [Tax_rateScalarWhereWithAggregatesInput!]
  NOT: [Tax_rateScalarWhereWithAggregatesInput!]
  OR: [Tax_rateScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  default_store_view: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  postcode: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  rate_percent: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tax_identifier: StringWithAggregatesFilter
  zip_post_is_range: BoolNullableWithAggregatesFilter
}

type Tax_rateSumAggregate {
  id: Int
  prod_id: BigInt
}

input Tax_rateSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input Tax_rateUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  default_store_view: NullableStringFieldUpdateOperationsInput
  postcode: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rate_percent: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_identifier: StringFieldUpdateOperationsInput
  zip_post_is_range: NullableBoolFieldUpdateOperationsInput
}

input Tax_rateUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  default_store_view: NullableStringFieldUpdateOperationsInput
  postcode: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rate_percent: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_identifier: StringFieldUpdateOperationsInput
  zip_post_is_range: NullableBoolFieldUpdateOperationsInput
}

input Tax_rateWhereInput {
  AND: [Tax_rateWhereInput!]
  NOT: [Tax_rateWhereInput!]
  OR: [Tax_rateWhereInput!]
  country: StringNullableFilter
  default_store_view: StringNullableFilter
  id: IntFilter
  postcode: StringNullableFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  rate_percent: StringNullableFilter
  state: StringNullableFilter
  tax_identifier: StringFilter
  zip_post_is_range: BoolNullableFilter
}

input Tax_rateWhereUniqueInput {
  id: Int
}

type Tax_rule {
  id: Int!
  name: String!
  prod_id: BigInt!
  products: String
  tax_rate: String
}

type Tax_ruleAvgAggregate {
  id: Float
  prod_id: Float
}

input Tax_ruleAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type Tax_ruleCountAggregate {
  _all: Int!
  id: Int!
  name: Int!
  prod_id: Int!
  products: Int!
  tax_rate: Int!
}

input Tax_ruleCountOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  tax_rate: SortOrder
}

input Tax_ruleCreateInput {
  name: String!
  prod_id: BigInt!
  products: String
  tax_rate: String
}

input Tax_ruleCreateManyInput {
  id: Int
  name: String!
  prod_id: BigInt!
  products: String
  tax_rate: String
}

type Tax_ruleGroupBy {
  _avg: Tax_ruleAvgAggregate
  _count: Tax_ruleCountAggregate
  _max: Tax_ruleMaxAggregate
  _min: Tax_ruleMinAggregate
  _sum: Tax_ruleSumAggregate
  id: Int!
  name: String!
  prod_id: BigInt!
  products: String
  tax_rate: String
}

type Tax_ruleMaxAggregate {
  id: Int
  name: String
  prod_id: BigInt
  products: String
  tax_rate: String
}

input Tax_ruleMaxOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  tax_rate: SortOrder
}

type Tax_ruleMinAggregate {
  id: Int
  name: String
  prod_id: BigInt
  products: String
  tax_rate: String
}

input Tax_ruleMinOrderByAggregateInput {
  id: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  tax_rate: SortOrder
}

enum Tax_ruleOrderByRelevanceFieldEnum {
  name
  products
  tax_rate
}

input Tax_ruleOrderByRelevanceInput {
  fields: [Tax_ruleOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Tax_ruleOrderByWithAggregationInput {
  _avg: Tax_ruleAvgOrderByAggregateInput
  _count: Tax_ruleCountOrderByAggregateInput
  _max: Tax_ruleMaxOrderByAggregateInput
  _min: Tax_ruleMinOrderByAggregateInput
  _sum: Tax_ruleSumOrderByAggregateInput
  id: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  tax_rate: SortOrder
}

input Tax_ruleOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Tax_ruleOrderByRelevanceInput
  id: SortOrder
  name: SortOrder
  prod_id: SortOrder
  products: SortOrder
  tax_rate: SortOrder
}

enum Tax_ruleScalarFieldEnum {
  id
  name
  prod_id
  products
  tax_rate
}

input Tax_ruleScalarWhereWithAggregatesInput {
  AND: [Tax_ruleScalarWhereWithAggregatesInput!]
  NOT: [Tax_ruleScalarWhereWithAggregatesInput!]
  OR: [Tax_ruleScalarWhereWithAggregatesInput!]
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  tax_rate: StringNullableWithAggregatesFilter
}

type Tax_ruleSumAggregate {
  id: Int
  prod_id: BigInt
}

input Tax_ruleSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input Tax_ruleUpdateInput {
  name: StringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
}

input Tax_ruleUpdateManyMutationInput {
  name: StringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
}

input Tax_ruleWhereInput {
  AND: [Tax_ruleWhereInput!]
  NOT: [Tax_ruleWhereInput!]
  OR: [Tax_ruleWhereInput!]
  id: IntFilter
  name: StringFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  tax_rate: StringNullableFilter
}

input Tax_ruleWhereUniqueInput {
  id: Int
}

type Templates {
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt!
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

type TemplatesAvgAggregate {
  id: Float
}

input TemplatesAvgOrderByAggregateInput {
  id: SortOrder
}

type TemplatesCountAggregate {
  _all: Int!
  active: Int!
  assigned_to: Int!
  content: Int!
  created_at: Int!
  footer: Int!
  header: Int!
  id: Int!
  margin_bottom: Int!
  margin_footer: Int!
  margin_header: Int!
  margin_left: Int!
  margin_right: Int!
  margin_top: Int!
  name: Int!
  orientation: Int!
  page_size: Int!
  type: Int!
}

input TemplatesCountOrderByAggregateInput {
  active: SortOrder
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  footer: SortOrder
  header: SortOrder
  id: SortOrder
  margin_bottom: SortOrder
  margin_footer: SortOrder
  margin_header: SortOrder
  margin_left: SortOrder
  margin_right: SortOrder
  margin_top: SortOrder
  name: SortOrder
  orientation: SortOrder
  page_size: SortOrder
  type: SortOrder
}

input TemplatesCreateInput {
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

input TemplatesCreateManyInput {
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

type TemplatesGroupBy {
  _avg: TemplatesAvgAggregate
  _count: TemplatesCountAggregate
  _max: TemplatesMaxAggregate
  _min: TemplatesMinAggregate
  _sum: TemplatesSumAggregate
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt!
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

type TemplatesMaxAggregate {
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

input TemplatesMaxOrderByAggregateInput {
  active: SortOrder
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  footer: SortOrder
  header: SortOrder
  id: SortOrder
  margin_bottom: SortOrder
  margin_footer: SortOrder
  margin_header: SortOrder
  margin_left: SortOrder
  margin_right: SortOrder
  margin_top: SortOrder
  name: SortOrder
  orientation: SortOrder
  page_size: SortOrder
  type: SortOrder
}

type TemplatesMinAggregate {
  active: String
  assigned_to: String
  content: String
  created_at: DateTime
  footer: String
  header: String
  id: BigInt
  margin_bottom: String
  margin_footer: String
  margin_header: String
  margin_left: String
  margin_right: String
  margin_top: String
  name: String
  orientation: String
  page_size: String
  type: String
}

input TemplatesMinOrderByAggregateInput {
  active: SortOrder
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  footer: SortOrder
  header: SortOrder
  id: SortOrder
  margin_bottom: SortOrder
  margin_footer: SortOrder
  margin_header: SortOrder
  margin_left: SortOrder
  margin_right: SortOrder
  margin_top: SortOrder
  name: SortOrder
  orientation: SortOrder
  page_size: SortOrder
  type: SortOrder
}

enum TemplatesOrderByRelevanceFieldEnum {
  active
  assigned_to
  content
  footer
  header
  margin_bottom
  margin_footer
  margin_header
  margin_left
  margin_right
  margin_top
  name
  orientation
  page_size
  type
}

input TemplatesOrderByRelevanceInput {
  fields: [TemplatesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TemplatesOrderByWithAggregationInput {
  _avg: TemplatesAvgOrderByAggregateInput
  _count: TemplatesCountOrderByAggregateInput
  _max: TemplatesMaxOrderByAggregateInput
  _min: TemplatesMinOrderByAggregateInput
  _sum: TemplatesSumOrderByAggregateInput
  active: SortOrder
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  footer: SortOrder
  header: SortOrder
  id: SortOrder
  margin_bottom: SortOrder
  margin_footer: SortOrder
  margin_header: SortOrder
  margin_left: SortOrder
  margin_right: SortOrder
  margin_top: SortOrder
  name: SortOrder
  orientation: SortOrder
  page_size: SortOrder
  type: SortOrder
}

input TemplatesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TemplatesOrderByRelevanceInput
  active: SortOrder
  assigned_to: SortOrder
  content: SortOrder
  created_at: SortOrder
  footer: SortOrder
  header: SortOrder
  id: SortOrder
  margin_bottom: SortOrder
  margin_footer: SortOrder
  margin_header: SortOrder
  margin_left: SortOrder
  margin_right: SortOrder
  margin_top: SortOrder
  name: SortOrder
  orientation: SortOrder
  page_size: SortOrder
  type: SortOrder
}

enum TemplatesScalarFieldEnum {
  active
  assigned_to
  content
  created_at
  footer
  header
  id
  margin_bottom
  margin_footer
  margin_header
  margin_left
  margin_right
  margin_top
  name
  orientation
  page_size
  type
}

input TemplatesScalarWhereWithAggregatesInput {
  AND: [TemplatesScalarWhereWithAggregatesInput!]
  NOT: [TemplatesScalarWhereWithAggregatesInput!]
  OR: [TemplatesScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  footer: StringNullableWithAggregatesFilter
  header: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  margin_bottom: StringNullableWithAggregatesFilter
  margin_footer: StringNullableWithAggregatesFilter
  margin_header: StringNullableWithAggregatesFilter
  margin_left: StringNullableWithAggregatesFilter
  margin_right: StringNullableWithAggregatesFilter
  margin_top: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  orientation: StringNullableWithAggregatesFilter
  page_size: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
}

type TemplatesSumAggregate {
  id: BigInt
}

input TemplatesSumOrderByAggregateInput {
  id: SortOrder
}

input TemplatesUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  footer: NullableStringFieldUpdateOperationsInput
  header: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  margin_bottom: NullableStringFieldUpdateOperationsInput
  margin_footer: NullableStringFieldUpdateOperationsInput
  margin_header: NullableStringFieldUpdateOperationsInput
  margin_left: NullableStringFieldUpdateOperationsInput
  margin_right: NullableStringFieldUpdateOperationsInput
  margin_top: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  orientation: NullableStringFieldUpdateOperationsInput
  page_size: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input TemplatesUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  footer: NullableStringFieldUpdateOperationsInput
  header: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  margin_bottom: NullableStringFieldUpdateOperationsInput
  margin_footer: NullableStringFieldUpdateOperationsInput
  margin_header: NullableStringFieldUpdateOperationsInput
  margin_left: NullableStringFieldUpdateOperationsInput
  margin_right: NullableStringFieldUpdateOperationsInput
  margin_top: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  orientation: NullableStringFieldUpdateOperationsInput
  page_size: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input TemplatesWhereInput {
  AND: [TemplatesWhereInput!]
  NOT: [TemplatesWhereInput!]
  OR: [TemplatesWhereInput!]
  active: StringNullableFilter
  assigned_to: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  footer: StringNullableFilter
  header: StringNullableFilter
  id: BigIntFilter
  margin_bottom: StringNullableFilter
  margin_footer: StringNullableFilter
  margin_header: StringNullableFilter
  margin_left: StringNullableFilter
  margin_right: StringNullableFilter
  margin_top: StringNullableFilter
  name: StringNullableFilter
  orientation: StringNullableFilter
  page_size: StringNullableFilter
  type: StringNullableFilter
}

input TemplatesWhereUniqueInput {
  id: BigInt
}

type Themes {
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesAvgAggregate {
  id: Float
  website_id: Float
}

input ThemesAvgOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

type ThemesCountAggregate {
  _all: Int!
  action: Int!
  id: Int!
  parent_theme: Int!
  theme_path: Int!
  title: Int!
  website_id: Int!
  websites: Int!
}

input ThemesCountOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesCreateInput {
  action: String
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

input ThemesCreateManyInput {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesGroupBy {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesMaxAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMaxOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

type ThemesMinAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMinOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesOrderByRelevanceFieldEnum {
  action
  parent_theme
  theme_path
  title
  websites
}

input ThemesOrderByRelevanceInput {
  fields: [ThemesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ThemesOrderByWithAggregationInput {
  _avg: ThemesAvgOrderByAggregateInput
  _count: ThemesCountOrderByAggregateInput
  _max: ThemesMaxOrderByAggregateInput
  _min: ThemesMinOrderByAggregateInput
  _sum: ThemesSumOrderByAggregateInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ThemesOrderByRelevanceInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesScalarFieldEnum {
  action
  id
  parent_theme
  theme_path
  title
  website_id
  websites
}

input ThemesScalarWhereWithAggregatesInput {
  AND: [ThemesScalarWhereWithAggregatesInput!]
  NOT: [ThemesScalarWhereWithAggregatesInput!]
  OR: [ThemesScalarWhereWithAggregatesInput!]
  action: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  parent_theme: StringNullableWithAggregatesFilter
  theme_path: StringNullableWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
  website_id: BigIntWithAggregatesFilter
  websites: StringWithAggregatesFilter
}

type ThemesSumAggregate {
  id: Int
  website_id: BigInt
}

input ThemesSumOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

input ThemesUpdateInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesUpdateManyMutationInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesWhereInput {
  AND: [ThemesWhereInput!]
  NOT: [ThemesWhereInput!]
  OR: [ThemesWhereInput!]
  action: StringNullableFilter
  id: IntFilter
  parent_theme: StringNullableFilter
  theme_path: StringNullableFilter
  title: StringNullableFilter
  website_id: BigIntFilter
  websites: StringFilter
}

input ThemesWhereUniqueInput {
  id: Int
}

type Ticketing {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt!
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingAvgAggregate {
  id: Float
}

input TicketingAvgOrderByAggregateInput {
  id: SortOrder
}

type TicketingCountAggregate {
  _all: Int!
  account_name: Int!
  assigned_to: Int!
  comment: Int!
  content: Int!
  created_at: Int!
  date: Int!
  date_modified: Int!
  department: Int!
  id: Int!
  level: Int!
  location: Int!
  media: Int!
  name: Int!
  priority: Int!
  products: Int!
  projects: Int!
  projects_projectsToticketing: Int!
  requester: Int!
  requester_email: Int!
  resolution: Int!
  severity: Int!
  status: Int!
  team: Int!
  ticket_type: Int!
}

input TicketingCountOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

input TicketingCreateInput {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingCreateManyInput {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingGroupBy {
  _avg: TicketingAvgAggregate
  _count: TicketingCountAggregate
  _max: TicketingMaxAggregate
  _min: TicketingMinAggregate
  _sum: TicketingSumAggregate
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt!
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingMaxAggregate {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingMaxOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

type TicketingMinAggregate {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingMinOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

enum TicketingOrderByRelevanceFieldEnum {
  account_name
  assigned_to
  comment
  content
  date
  department
  level
  location
  media
  name
  priority
  products
  projects
  projects_projectsToticketing
  requester
  requester_email
  resolution
  severity
  status
  team
  ticket_type
}

input TicketingOrderByRelevanceInput {
  fields: [TicketingOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TicketingOrderByWithAggregationInput {
  _avg: TicketingAvgOrderByAggregateInput
  _count: TicketingCountOrderByAggregateInput
  _max: TicketingMaxOrderByAggregateInput
  _min: TicketingMinOrderByAggregateInput
  _sum: TicketingSumOrderByAggregateInput
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

input TicketingOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TicketingOrderByRelevanceInput
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

enum TicketingScalarFieldEnum {
  account_name
  assigned_to
  comment
  content
  created_at
  date
  date_modified
  department
  id
  level
  location
  media
  name
  priority
  products
  projects
  projects_projectsToticketing
  requester
  requester_email
  resolution
  severity
  status
  team
  ticket_type
}

input TicketingScalarWhereWithAggregatesInput {
  AND: [TicketingScalarWhereWithAggregatesInput!]
  NOT: [TicketingScalarWhereWithAggregatesInput!]
  OR: [TicketingScalarWhereWithAggregatesInput!]
  account_name: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  comment: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  date: StringNullableWithAggregatesFilter
  date_modified: DateTimeNullableWithAggregatesFilter
  department: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  projects_projectsToticketing: StringNullableWithAggregatesFilter
  requester: StringNullableWithAggregatesFilter
  requester_email: StringNullableWithAggregatesFilter
  resolution: StringNullableWithAggregatesFilter
  severity: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  team: StringNullableWithAggregatesFilter
  ticket_type: StringNullableWithAggregatesFilter
}

type TicketingSumAggregate {
  id: BigInt
}

input TicketingSumOrderByAggregateInput {
  id: SortOrder
}

input TicketingUpdateInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date: NullableStringFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  projects_projectsToticketing: NullableStringFieldUpdateOperationsInput
  requester: NullableStringFieldUpdateOperationsInput
  requester_email: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  severity: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_type: NullableStringFieldUpdateOperationsInput
}

input TicketingUpdateManyMutationInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date: NullableStringFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  projects_projectsToticketing: NullableStringFieldUpdateOperationsInput
  requester: NullableStringFieldUpdateOperationsInput
  requester_email: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  severity: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_type: NullableStringFieldUpdateOperationsInput
}

input TicketingWhereInput {
  AND: [TicketingWhereInput!]
  NOT: [TicketingWhereInput!]
  OR: [TicketingWhereInput!]
  account_name: StringNullableFilter
  assigned_to: StringNullableFilter
  comment: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  date: StringNullableFilter
  date_modified: DateTimeNullableFilter
  department: StringNullableFilter
  id: BigIntFilter
  level: StringNullableFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  priority: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  projects_projectsToticketing: StringNullableFilter
  requester: StringNullableFilter
  requester_email: StringNullableFilter
  resolution: StringNullableFilter
  severity: StringNullableFilter
  status: StringNullableFilter
  team: StringNullableFilter
  ticket_type: StringNullableFilter
}

input TicketingWhereUniqueInput {
  id: BigInt
}

type Trainings {
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt!
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

type TrainingsAvgAggregate {
  checklists: Float
  comment: Float
  country: Float
  id: Float
  products: Float
  state: Float
}

input TrainingsAvgOrderByAggregateInput {
  checklists: SortOrder
  comment: SortOrder
  country: SortOrder
  id: SortOrder
  products: SortOrder
  state: SortOrder
}

type TrainingsCountAggregate {
  _all: Int!
  address: Int!
  analytics: Int!
  announcement: Int!
  assignments: Int!
  assignmentsDueDate: Int!
  badges: Int!
  checklists: Int!
  city: Int!
  comment: Int!
  competency: Int!
  content: Int!
  countries: Int!
  country: Int!
  course: Int!
  created_at: Int!
  digiboards: Int!
  faqs: Int!
  fieldTrips: Int!
  grade: Int!
  id: Int!
  isCompleted: Int!
  isPublic: Int!
  lab: Int!
  languages: Int!
  link: Int!
  media: Int!
  meetups: Int!
  name: Int!
  origanalityReport: Int!
  postal: Int!
  products: Int!
  resource: Int!
  school: Int!
  speakers: Int!
  state: Int!
  states: Int!
  steps: Int!
  student: Int!
  subject: Int!
  teacher: Int!
  type: Int!
  updated: Int!
}

input TrainingsCountOrderByAggregateInput {
  address: SortOrder
  analytics: SortOrder
  announcement: SortOrder
  assignments: SortOrder
  assignmentsDueDate: SortOrder
  badges: SortOrder
  checklists: SortOrder
  city: SortOrder
  comment: SortOrder
  competency: SortOrder
  content: SortOrder
  countries: SortOrder
  country: SortOrder
  course: SortOrder
  created_at: SortOrder
  digiboards: SortOrder
  faqs: SortOrder
  fieldTrips: SortOrder
  grade: SortOrder
  id: SortOrder
  isCompleted: SortOrder
  isPublic: SortOrder
  lab: SortOrder
  languages: SortOrder
  link: SortOrder
  media: SortOrder
  meetups: SortOrder
  name: SortOrder
  origanalityReport: SortOrder
  postal: SortOrder
  products: SortOrder
  resource: SortOrder
  school: SortOrder
  speakers: SortOrder
  state: SortOrder
  states: SortOrder
  steps: SortOrder
  student: SortOrder
  subject: SortOrder
  teacher: SortOrder
  type: SortOrder
  updated: SortOrder
}

input TrainingsCreateInput {
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

input TrainingsCreateManyInput {
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

type TrainingsGroupBy {
  _avg: TrainingsAvgAggregate
  _count: TrainingsCountAggregate
  _max: TrainingsMaxAggregate
  _min: TrainingsMinAggregate
  _sum: TrainingsSumAggregate
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt!
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

type TrainingsMaxAggregate {
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

input TrainingsMaxOrderByAggregateInput {
  address: SortOrder
  analytics: SortOrder
  announcement: SortOrder
  assignments: SortOrder
  assignmentsDueDate: SortOrder
  badges: SortOrder
  checklists: SortOrder
  city: SortOrder
  comment: SortOrder
  competency: SortOrder
  content: SortOrder
  countries: SortOrder
  country: SortOrder
  course: SortOrder
  created_at: SortOrder
  digiboards: SortOrder
  faqs: SortOrder
  fieldTrips: SortOrder
  grade: SortOrder
  id: SortOrder
  isCompleted: SortOrder
  isPublic: SortOrder
  lab: SortOrder
  languages: SortOrder
  link: SortOrder
  media: SortOrder
  meetups: SortOrder
  name: SortOrder
  origanalityReport: SortOrder
  postal: SortOrder
  products: SortOrder
  resource: SortOrder
  school: SortOrder
  speakers: SortOrder
  state: SortOrder
  states: SortOrder
  steps: SortOrder
  student: SortOrder
  subject: SortOrder
  teacher: SortOrder
  type: SortOrder
  updated: SortOrder
}

type TrainingsMinAggregate {
  address: String
  analytics: String
  announcement: String
  assignments: String
  assignmentsDueDate: String
  badges: String
  checklists: BigInt
  city: String
  comment: Int
  competency: String
  content: String
  countries: String
  country: Int
  course: String
  created_at: DateTime
  digiboards: String
  faqs: String
  fieldTrips: String
  grade: String
  id: BigInt
  isCompleted: String
  isPublic: String
  lab: String
  languages: String
  link: String
  media: String
  meetups: String
  name: String
  origanalityReport: String
  postal: String
  products: BigInt
  resource: String
  school: String
  speakers: String
  state: Int
  states: String
  steps: String
  student: String
  subject: String
  teacher: String
  type: String
  updated: DateTime
}

input TrainingsMinOrderByAggregateInput {
  address: SortOrder
  analytics: SortOrder
  announcement: SortOrder
  assignments: SortOrder
  assignmentsDueDate: SortOrder
  badges: SortOrder
  checklists: SortOrder
  city: SortOrder
  comment: SortOrder
  competency: SortOrder
  content: SortOrder
  countries: SortOrder
  country: SortOrder
  course: SortOrder
  created_at: SortOrder
  digiboards: SortOrder
  faqs: SortOrder
  fieldTrips: SortOrder
  grade: SortOrder
  id: SortOrder
  isCompleted: SortOrder
  isPublic: SortOrder
  lab: SortOrder
  languages: SortOrder
  link: SortOrder
  media: SortOrder
  meetups: SortOrder
  name: SortOrder
  origanalityReport: SortOrder
  postal: SortOrder
  products: SortOrder
  resource: SortOrder
  school: SortOrder
  speakers: SortOrder
  state: SortOrder
  states: SortOrder
  steps: SortOrder
  student: SortOrder
  subject: SortOrder
  teacher: SortOrder
  type: SortOrder
  updated: SortOrder
}

enum TrainingsOrderByRelevanceFieldEnum {
  address
  analytics
  announcement
  assignments
  assignmentsDueDate
  badges
  city
  competency
  content
  countries
  course
  digiboards
  faqs
  fieldTrips
  grade
  isCompleted
  isPublic
  lab
  languages
  link
  media
  meetups
  name
  origanalityReport
  postal
  resource
  school
  speakers
  states
  steps
  student
  subject
  teacher
  type
}

input TrainingsOrderByRelevanceInput {
  fields: [TrainingsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TrainingsOrderByWithAggregationInput {
  _avg: TrainingsAvgOrderByAggregateInput
  _count: TrainingsCountOrderByAggregateInput
  _max: TrainingsMaxOrderByAggregateInput
  _min: TrainingsMinOrderByAggregateInput
  _sum: TrainingsSumOrderByAggregateInput
  address: SortOrder
  analytics: SortOrder
  announcement: SortOrder
  assignments: SortOrder
  assignmentsDueDate: SortOrder
  badges: SortOrder
  checklists: SortOrder
  city: SortOrder
  comment: SortOrder
  competency: SortOrder
  content: SortOrder
  countries: SortOrder
  country: SortOrder
  course: SortOrder
  created_at: SortOrder
  digiboards: SortOrder
  faqs: SortOrder
  fieldTrips: SortOrder
  grade: SortOrder
  id: SortOrder
  isCompleted: SortOrder
  isPublic: SortOrder
  lab: SortOrder
  languages: SortOrder
  link: SortOrder
  media: SortOrder
  meetups: SortOrder
  name: SortOrder
  origanalityReport: SortOrder
  postal: SortOrder
  products: SortOrder
  resource: SortOrder
  school: SortOrder
  speakers: SortOrder
  state: SortOrder
  states: SortOrder
  steps: SortOrder
  student: SortOrder
  subject: SortOrder
  teacher: SortOrder
  type: SortOrder
  updated: SortOrder
}

input TrainingsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TrainingsOrderByRelevanceInput
  address: SortOrder
  analytics: SortOrder
  announcement: SortOrder
  assignments: SortOrder
  assignmentsDueDate: SortOrder
  badges: SortOrder
  checklists: SortOrder
  city: SortOrder
  comment: SortOrder
  competency: SortOrder
  content: SortOrder
  countries: SortOrder
  country: SortOrder
  course: SortOrder
  created_at: SortOrder
  digiboards: SortOrder
  faqs: SortOrder
  fieldTrips: SortOrder
  grade: SortOrder
  id: SortOrder
  isCompleted: SortOrder
  isPublic: SortOrder
  lab: SortOrder
  languages: SortOrder
  link: SortOrder
  media: SortOrder
  meetups: SortOrder
  name: SortOrder
  origanalityReport: SortOrder
  postal: SortOrder
  products: SortOrder
  resource: SortOrder
  school: SortOrder
  speakers: SortOrder
  state: SortOrder
  states: SortOrder
  steps: SortOrder
  student: SortOrder
  subject: SortOrder
  teacher: SortOrder
  type: SortOrder
  updated: SortOrder
}

enum TrainingsScalarFieldEnum {
  address
  analytics
  announcement
  assignments
  assignmentsDueDate
  badges
  checklists
  city
  comment
  competency
  content
  countries
  country
  course
  created_at
  digiboards
  faqs
  fieldTrips
  grade
  id
  isCompleted
  isPublic
  lab
  languages
  link
  media
  meetups
  name
  origanalityReport
  postal
  products
  resource
  school
  speakers
  state
  states
  steps
  student
  subject
  teacher
  type
  updated
}

input TrainingsScalarWhereWithAggregatesInput {
  AND: [TrainingsScalarWhereWithAggregatesInput!]
  NOT: [TrainingsScalarWhereWithAggregatesInput!]
  OR: [TrainingsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  analytics: StringNullableWithAggregatesFilter
  announcement: StringNullableWithAggregatesFilter
  assignments: StringNullableWithAggregatesFilter
  assignmentsDueDate: StringNullableWithAggregatesFilter
  badges: StringNullableWithAggregatesFilter
  checklists: BigIntNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  comment: IntNullableWithAggregatesFilter
  competency: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  countries: StringNullableWithAggregatesFilter
  country: IntNullableWithAggregatesFilter
  course: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  digiboards: StringNullableWithAggregatesFilter
  faqs: StringNullableWithAggregatesFilter
  fieldTrips: StringNullableWithAggregatesFilter
  grade: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isCompleted: StringNullableWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  lab: StringNullableWithAggregatesFilter
  languages: StringNullableWithAggregatesFilter
  link: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  meetups: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  origanalityReport: StringNullableWithAggregatesFilter
  postal: StringNullableWithAggregatesFilter
  products: BigIntNullableWithAggregatesFilter
  resource: StringNullableWithAggregatesFilter
  school: StringNullableWithAggregatesFilter
  speakers: StringNullableWithAggregatesFilter
  state: IntNullableWithAggregatesFilter
  states: StringNullableWithAggregatesFilter
  steps: StringNullableWithAggregatesFilter
  student: StringNullableWithAggregatesFilter
  subject: StringNullableWithAggregatesFilter
  teacher: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated: DateTimeNullableWithAggregatesFilter
}

type TrainingsSumAggregate {
  checklists: BigInt
  comment: Int
  country: Int
  id: BigInt
  products: BigInt
  state: Int
}

input TrainingsSumOrderByAggregateInput {
  checklists: SortOrder
  comment: SortOrder
  country: SortOrder
  id: SortOrder
  products: SortOrder
  state: SortOrder
}

input TrainingsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  analytics: NullableStringFieldUpdateOperationsInput
  announcement: NullableStringFieldUpdateOperationsInput
  assignments: NullableStringFieldUpdateOperationsInput
  assignmentsDueDate: NullableStringFieldUpdateOperationsInput
  badges: NullableStringFieldUpdateOperationsInput
  checklists: NullableBigIntFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  comment: NullableIntFieldUpdateOperationsInput
  competency: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  countries: NullableStringFieldUpdateOperationsInput
  country: NullableIntFieldUpdateOperationsInput
  course: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  digiboards: NullableStringFieldUpdateOperationsInput
  faqs: NullableStringFieldUpdateOperationsInput
  fieldTrips: NullableStringFieldUpdateOperationsInput
  grade: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isCompleted: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  lab: NullableStringFieldUpdateOperationsInput
  languages: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  meetups: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  origanalityReport: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  school: NullableStringFieldUpdateOperationsInput
  speakers: NullableStringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  states: NullableStringFieldUpdateOperationsInput
  steps: NullableStringFieldUpdateOperationsInput
  student: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  teacher: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
}

input TrainingsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  analytics: NullableStringFieldUpdateOperationsInput
  announcement: NullableStringFieldUpdateOperationsInput
  assignments: NullableStringFieldUpdateOperationsInput
  assignmentsDueDate: NullableStringFieldUpdateOperationsInput
  badges: NullableStringFieldUpdateOperationsInput
  checklists: NullableBigIntFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  comment: NullableIntFieldUpdateOperationsInput
  competency: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  countries: NullableStringFieldUpdateOperationsInput
  country: NullableIntFieldUpdateOperationsInput
  course: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  digiboards: NullableStringFieldUpdateOperationsInput
  faqs: NullableStringFieldUpdateOperationsInput
  fieldTrips: NullableStringFieldUpdateOperationsInput
  grade: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isCompleted: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  lab: NullableStringFieldUpdateOperationsInput
  languages: NullableStringFieldUpdateOperationsInput
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  meetups: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  origanalityReport: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  school: NullableStringFieldUpdateOperationsInput
  speakers: NullableStringFieldUpdateOperationsInput
  state: NullableIntFieldUpdateOperationsInput
  states: NullableStringFieldUpdateOperationsInput
  steps: NullableStringFieldUpdateOperationsInput
  student: NullableStringFieldUpdateOperationsInput
  subject: NullableStringFieldUpdateOperationsInput
  teacher: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
}

input TrainingsWhereInput {
  AND: [TrainingsWhereInput!]
  NOT: [TrainingsWhereInput!]
  OR: [TrainingsWhereInput!]
  address: StringNullableFilter
  analytics: StringNullableFilter
  announcement: StringNullableFilter
  assignments: StringNullableFilter
  assignmentsDueDate: StringNullableFilter
  badges: StringNullableFilter
  checklists: BigIntNullableFilter
  city: StringNullableFilter
  comment: IntNullableFilter
  competency: StringNullableFilter
  content: StringNullableFilter
  countries: StringNullableFilter
  country: IntNullableFilter
  course: StringNullableFilter
  created_at: DateTimeNullableFilter
  digiboards: StringNullableFilter
  faqs: StringNullableFilter
  fieldTrips: StringNullableFilter
  grade: StringNullableFilter
  id: BigIntFilter
  isCompleted: StringNullableFilter
  isPublic: StringNullableFilter
  lab: StringNullableFilter
  languages: StringNullableFilter
  link: StringNullableFilter
  media: StringNullableFilter
  meetups: StringNullableFilter
  name: StringNullableFilter
  origanalityReport: StringNullableFilter
  postal: StringNullableFilter
  products: BigIntNullableFilter
  resource: StringNullableFilter
  school: StringNullableFilter
  speakers: StringNullableFilter
  state: IntNullableFilter
  states: StringNullableFilter
  steps: StringNullableFilter
  student: StringNullableFilter
  subject: StringNullableFilter
  teacher: StringNullableFilter
  type: StringNullableFilter
  updated: DateTimeNullableFilter
}

input TrainingsWhereUniqueInput {
  id: BigInt
}

type Transactions {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int!
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsAvgAggregate {
  id: Float
  order_id: Float
  parent_transaction_id: Float
  payment_method: Float
  transaction_id: Float
}

input TransactionsAvgOrderByAggregateInput {
  id: SortOrder
  order_id: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

type TransactionsCountAggregate {
  _all: Int!
  closed: Int!
  created: Int!
  customer_payment: Int!
  id: Int!
  order_id: Int!
  orders: Int!
  parent_transaction_id: Int!
  payment_method: Int!
  transaction_id: Int!
}

input TransactionsCountOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsCreateInput {
  closed: String
  created: DateTime
  customer_payment: String
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

input TransactionsCreateManyInput {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsGroupBy {
  _avg: TransactionsAvgAggregate
  _count: TransactionsCountAggregate
  _max: TransactionsMaxAggregate
  _min: TransactionsMinAggregate
  _sum: TransactionsSumAggregate
  closed: String
  created: DateTime
  customer_payment: String
  id: Int!
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsMaxAggregate {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int
  orders: String
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsMaxOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

type TransactionsMinAggregate {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int
  orders: String
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsMinOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

enum TransactionsOrderByRelevanceFieldEnum {
  closed
  customer_payment
  orders
}

input TransactionsOrderByRelevanceInput {
  fields: [TransactionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TransactionsOrderByWithAggregationInput {
  _avg: TransactionsAvgOrderByAggregateInput
  _count: TransactionsCountOrderByAggregateInput
  _max: TransactionsMaxOrderByAggregateInput
  _min: TransactionsMinOrderByAggregateInput
  _sum: TransactionsSumOrderByAggregateInput
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TransactionsOrderByRelevanceInput
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

enum TransactionsScalarFieldEnum {
  closed
  created
  customer_payment
  id
  order_id
  orders
  parent_transaction_id
  payment_method
  transaction_id
}

input TransactionsScalarWhereWithAggregatesInput {
  AND: [TransactionsScalarWhereWithAggregatesInput!]
  NOT: [TransactionsScalarWhereWithAggregatesInput!]
  OR: [TransactionsScalarWhereWithAggregatesInput!]
  closed: StringNullableWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  customer_payment: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  order_id: IntWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  parent_transaction_id: IntWithAggregatesFilter
  payment_method: BigIntWithAggregatesFilter
  transaction_id: IntWithAggregatesFilter
}

type TransactionsSumAggregate {
  id: Int
  order_id: Int
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsSumOrderByAggregateInput {
  id: SortOrder
  order_id: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsUpdateInput {
  closed: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  parent_transaction_id: IntFieldUpdateOperationsInput
  payment_method: BigIntFieldUpdateOperationsInput
  transaction_id: IntFieldUpdateOperationsInput
}

input TransactionsUpdateManyMutationInput {
  closed: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  parent_transaction_id: IntFieldUpdateOperationsInput
  payment_method: BigIntFieldUpdateOperationsInput
  transaction_id: IntFieldUpdateOperationsInput
}

input TransactionsWhereInput {
  AND: [TransactionsWhereInput!]
  NOT: [TransactionsWhereInput!]
  OR: [TransactionsWhereInput!]
  closed: StringNullableFilter
  created: DateTimeNullableFilter
  customer_payment: StringNullableFilter
  id: IntFilter
  order_id: IntFilter
  orders: StringNullableFilter
  parent_transaction_id: IntFilter
  payment_method: BigIntFilter
  transaction_id: IntFilter
}

input TransactionsWhereUniqueInput {
  id: Int
}

type Upload_file {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileAvgAggregate {
  created_by: Float
  height: Float
  id: Float
  size: Decimal
  updated_by: Float
  width: Float
}

input Upload_fileAvgOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

type Upload_fileCountAggregate {
  _all: Int!
  alternativeText: Int!
  caption: Int!
  created_at: Int!
  created_by: Int!
  ext: Int!
  formats: Int!
  hash: Int!
  height: Int!
  id: Int!
  mime: Int!
  name: Int!
  previewUrl: Int!
  provider: Int!
  provider_metadata: Int!
  size: Int!
  updated_at: Int!
  updated_by: Int!
  url: Int!
  width: Int!
}

input Upload_fileCountOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileCreateInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

input Upload_fileCreateManyInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileGroupBy {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileMaxAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMaxOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

type Upload_fileMinAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMinOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileOrderByRelevanceFieldEnum {
  alternativeText
  caption
  ext
  hash
  mime
  name
  previewUrl
  provider
  url
}

input Upload_fileOrderByRelevanceInput {
  fields: [Upload_fileOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Upload_fileOrderByWithAggregationInput {
  _avg: Upload_fileAvgOrderByAggregateInput
  _count: Upload_fileCountOrderByAggregateInput
  _max: Upload_fileMaxOrderByAggregateInput
  _min: Upload_fileMinOrderByAggregateInput
  _sum: Upload_fileSumOrderByAggregateInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Upload_fileOrderByRelevanceInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileScalarFieldEnum {
  alternativeText
  caption
  created_at
  created_by
  ext
  formats
  hash
  height
  id
  mime
  name
  previewUrl
  provider
  provider_metadata
  size
  updated_at
  updated_by
  url
  width
}

input Upload_fileScalarWhereWithAggregatesInput {
  AND: [Upload_fileScalarWhereWithAggregatesInput!]
  NOT: [Upload_fileScalarWhereWithAggregatesInput!]
  OR: [Upload_fileScalarWhereWithAggregatesInput!]
  alternativeText: StringNullableWithAggregatesFilter
  caption: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  created_by: IntNullableWithAggregatesFilter
  ext: StringNullableWithAggregatesFilter
  formats: JsonNullableWithAggregatesFilter
  hash: StringWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  mime: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  previewUrl: StringNullableWithAggregatesFilter
  provider: StringWithAggregatesFilter
  provider_metadata: JsonNullableWithAggregatesFilter
  size: DecimalWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
  updated_by: IntNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
  width: IntNullableWithAggregatesFilter
}

type Upload_fileSumAggregate {
  created_by: Int
  height: Int
  id: Int
  size: Decimal
  updated_by: Int
  width: Int
}

input Upload_fileSumOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

input Upload_fileUpdateInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileUpdateManyMutationInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileWhereInput {
  AND: [Upload_fileWhereInput!]
  NOT: [Upload_fileWhereInput!]
  OR: [Upload_fileWhereInput!]
  alternativeText: StringNullableFilter
  caption: StringNullableFilter
  created_at: DateTimeNullableFilter
  created_by: IntNullableFilter
  ext: StringNullableFilter
  formats: JsonNullableFilter
  hash: StringFilter
  height: IntNullableFilter
  id: IntFilter
  mime: StringFilter
  name: StringFilter
  previewUrl: StringNullableFilter
  provider: StringFilter
  provider_metadata: JsonNullableFilter
  size: DecimalFilter
  updated_at: DateTimeNullableFilter
  updated_by: IntNullableFilter
  url: StringFilter
  width: IntNullableFilter
}

input Upload_fileWhereUniqueInput {
  id: Int
}

type Users {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt!
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersAvgAggregate {
  id: Float
}

input UsersAvgOrderByAggregateInput {
  id: SortOrder
}

type UsersCountAggregate {
  _all: Int!
  created_at: Int!
  email: Int!
  emails: Int!
  first_name: Int!
  id: Int!
  interface_locale: Int!
  last_name: Int!
  mediamanager: Int!
  messages: Int!
  password: Int!
  permissions: Int!
  projects: Int!
  username: Int!
  value: Int!
  workspaces: Int!
}

input UsersCountOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

input UsersCreateInput {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

input UsersCreateManyInput {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersGroupBy {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt!
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersMaxAggregate {
  created_at: DateTime
  email: String
  emails: String
  first_name: String
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String
  permissions: String
  projects: String
  username: String
  value: String
  workspaces: String
}

input UsersMaxOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

type UsersMinAggregate {
  created_at: DateTime
  email: String
  emails: String
  first_name: String
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String
  permissions: String
  projects: String
  username: String
  value: String
  workspaces: String
}

input UsersMinOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

enum UsersOrderByRelevanceFieldEnum {
  email
  emails
  first_name
  interface_locale
  last_name
  mediamanager
  messages
  password
  permissions
  projects
  username
  value
  workspaces
}

input UsersOrderByRelevanceInput {
  fields: [UsersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input UsersOrderByWithAggregationInput {
  _avg: UsersAvgOrderByAggregateInput
  _count: UsersCountOrderByAggregateInput
  _max: UsersMaxOrderByAggregateInput
  _min: UsersMinOrderByAggregateInput
  _sum: UsersSumOrderByAggregateInput
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

input UsersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: UsersOrderByRelevanceInput
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

enum UsersScalarFieldEnum {
  created_at
  email
  emails
  first_name
  id
  interface_locale
  last_name
  mediamanager
  messages
  password
  permissions
  projects
  username
  value
  workspaces
}

input UsersScalarWhereWithAggregatesInput {
  AND: [UsersScalarWhereWithAggregatesInput!]
  NOT: [UsersScalarWhereWithAggregatesInput!]
  OR: [UsersScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  emails: StringNullableWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  interface_locale: StringNullableWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  messages: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
  permissions: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  username: StringWithAggregatesFilter
  value: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type UsersSumAggregate {
  id: BigInt
}

input UsersSumOrderByAggregateInput {
  id: SortOrder
}

input UsersUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  interface_locale: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input UsersUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  interface_locale: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  created_at: DateTimeNullableFilter
  email: StringFilter
  emails: StringNullableFilter
  first_name: StringFilter
  id: BigIntFilter
  interface_locale: StringNullableFilter
  last_name: StringNullableFilter
  mediamanager: StringNullableFilter
  messages: StringNullableFilter
  password: StringFilter
  permissions: StringNullableFilter
  projects: StringNullableFilter
  username: StringFilter
  value: StringNullableFilter
  workspaces: StringNullableFilter
}

input UsersWhereUniqueInput {
  id: BigInt
}

type Vendors {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int!
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsAvgAggregate {
  id: Float
}

input VendorsAvgOrderByAggregateInput {
  id: SortOrder
}

type VendorsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  comments: Int!
  country: Int!
  coupons: Int!
  customers: Int!
  description: Int!
  gift_certificates: Int!
  id: Int!
  image: Int!
  invoices: Int!
  name: Int!
  physical_store: Int!
  polls: Int!
  products: Int!
  quotes: Int!
  rating: Int!
  reports: Int!
  reviews: Int!
  reward_points: Int!
  special_discounts: Int!
  statistics: Int!
  stocks: Int!
  tags: Int!
  type: Int!
  users: Int!
  website: Int!
  workspaces: Int!
}

input VendorsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

input VendorsCreateInput {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsCreateManyInput {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsGroupBy {
  _avg: VendorsAvgAggregate
  _count: VendorsCountAggregate
  _max: VendorsMaxAggregate
  _min: VendorsMinAggregate
  _sum: VendorsSumAggregate
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int!
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsMaxAggregate {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

type VendorsMinAggregate {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

enum VendorsOrderByRelevanceFieldEnum {
  articles
  categories
  comments
  country
  coupons
  customers
  description
  gift_certificates
  image
  invoices
  name
  physical_store
  polls
  products
  quotes
  rating
  reports
  reviews
  reward_points
  special_discounts
  statistics
  stocks
  tags
  type
  users
  website
  workspaces
}

input VendorsOrderByRelevanceInput {
  fields: [VendorsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input VendorsOrderByWithAggregationInput {
  _avg: VendorsAvgOrderByAggregateInput
  _count: VendorsCountOrderByAggregateInput
  _max: VendorsMaxOrderByAggregateInput
  _min: VendorsMinOrderByAggregateInput
  _sum: VendorsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

input VendorsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: VendorsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

enum VendorsScalarFieldEnum {
  articles
  categories
  comments
  country
  coupons
  customers
  description
  gift_certificates
  id
  image
  invoices
  name
  physical_store
  polls
  products
  quotes
  rating
  reports
  reviews
  reward_points
  special_discounts
  statistics
  stocks
  tags
  type
  users
  website
  workspaces
}

input VendorsScalarWhereWithAggregatesInput {
  AND: [VendorsScalarWhereWithAggregatesInput!]
  NOT: [VendorsScalarWhereWithAggregatesInput!]
  OR: [VendorsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  gift_certificates: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  invoices: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  physical_store: StringNullableWithAggregatesFilter
  polls: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  rating: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  reviews: StringNullableWithAggregatesFilter
  reward_points: StringNullableWithAggregatesFilter
  special_discounts: StringNullableWithAggregatesFilter
  statistics: StringNullableWithAggregatesFilter
  stocks: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type VendorsSumAggregate {
  id: Int
}

input VendorsSumOrderByAggregateInput {
  id: SortOrder
}

input VendorsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gift_certificates: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invoices: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  physical_store: NullableStringFieldUpdateOperationsInput
  polls: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  reviews: NullableStringFieldUpdateOperationsInput
  reward_points: NullableStringFieldUpdateOperationsInput
  special_discounts: NullableStringFieldUpdateOperationsInput
  statistics: NullableStringFieldUpdateOperationsInput
  stocks: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input VendorsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gift_certificates: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invoices: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  physical_store: NullableStringFieldUpdateOperationsInput
  polls: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  reviews: NullableStringFieldUpdateOperationsInput
  reward_points: NullableStringFieldUpdateOperationsInput
  special_discounts: NullableStringFieldUpdateOperationsInput
  statistics: NullableStringFieldUpdateOperationsInput
  stocks: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input VendorsWhereInput {
  AND: [VendorsWhereInput!]
  NOT: [VendorsWhereInput!]
  OR: [VendorsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  comments: StringNullableFilter
  country: StringNullableFilter
  coupons: StringNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  gift_certificates: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  invoices: StringNullableFilter
  name: StringFilter
  physical_store: StringNullableFilter
  polls: StringNullableFilter
  products: StringNullableFilter
  quotes: StringNullableFilter
  rating: StringNullableFilter
  reports: StringNullableFilter
  reviews: StringNullableFilter
  reward_points: StringNullableFilter
  special_discounts: StringNullableFilter
  statistics: StringNullableFilter
  stocks: StringNullableFilter
  tags: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
  website: StringNullableFilter
  workspaces: StringNullableFilter
}

input VendorsWhereUniqueInput {
  id: Int
}

type Visits {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt!
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsAvgAggregate {
  id: Float
}

input VisitsAvgOrderByAggregateInput {
  id: SortOrder
}

type VisitsCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  emergency: Int!
  end_date: Int!
  id: Int!
  location: Int!
  meeting: Int!
  reason: Int!
  start_date: Int!
  task: Int!
  username: Int!
}

input VisitsCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

input VisitsCreateInput {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsCreateManyInput {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsGroupBy {
  _avg: VisitsAvgAggregate
  _count: VisitsCountAggregate
  _max: VisitsMaxAggregate
  _min: VisitsMinAggregate
  _sum: VisitsSumAggregate
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt!
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsMaxAggregate {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

type VisitsMinAggregate {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

enum VisitsOrderByRelevanceFieldEnum {
  content
  emergency
  end_date
  location
  meeting
  reason
  start_date
  task
  username
}

input VisitsOrderByRelevanceInput {
  fields: [VisitsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input VisitsOrderByWithAggregationInput {
  _avg: VisitsAvgOrderByAggregateInput
  _count: VisitsCountOrderByAggregateInput
  _max: VisitsMaxOrderByAggregateInput
  _min: VisitsMinOrderByAggregateInput
  _sum: VisitsSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

input VisitsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: VisitsOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

enum VisitsScalarFieldEnum {
  content
  created_at
  emergency
  end_date
  id
  location
  meeting
  reason
  start_date
  task
  username
}

input VisitsScalarWhereWithAggregatesInput {
  AND: [VisitsScalarWhereWithAggregatesInput!]
  NOT: [VisitsScalarWhereWithAggregatesInput!]
  OR: [VisitsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  emergency: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  meeting: StringNullableWithAggregatesFilter
  reason: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  task: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
}

type VisitsSumAggregate {
  id: BigInt
}

input VisitsSumOrderByAggregateInput {
  id: SortOrder
}

input VisitsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  emergency: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  meeting: NullableStringFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input VisitsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  emergency: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  meeting: NullableStringFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input VisitsWhereInput {
  AND: [VisitsWhereInput!]
  NOT: [VisitsWhereInput!]
  OR: [VisitsWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  emergency: StringNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  meeting: StringNullableFilter
  reason: StringNullableFilter
  start_date: StringNullableFilter
  task: StringNullableFilter
  username: StringNullableFilter
}

input VisitsWhereUniqueInput {
  id: BigInt
}

type Warehouse {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseAvgAggregate {
  id: Float
}

input WarehouseAvgOrderByAggregateInput {
  id: SortOrder
}

type WarehouseCountAggregate {
  _all: Int!
  category: Int!
  city: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  image: Int!
  isPublic: Int!
  name: Int!
  postal: Int!
  products: Int!
  state: Int!
  status: Int!
}

input WarehouseCountOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

input WarehouseCreateInput {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseCreateManyInput {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseGroupBy {
  _avg: WarehouseAvgAggregate
  _count: WarehouseCountAggregate
  _max: WarehouseMaxAggregate
  _min: WarehouseMinAggregate
  _sum: WarehouseSumAggregate
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseMaxAggregate {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseMaxOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

type WarehouseMinAggregate {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseMinOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

enum WarehouseOrderByRelevanceFieldEnum {
  category
  city
  country
  description
  image
  isPublic
  name
  postal
  products
  state
  status
}

input WarehouseOrderByRelevanceInput {
  fields: [WarehouseOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WarehouseOrderByWithAggregationInput {
  _avg: WarehouseAvgOrderByAggregateInput
  _count: WarehouseCountOrderByAggregateInput
  _max: WarehouseMaxOrderByAggregateInput
  _min: WarehouseMinOrderByAggregateInput
  _sum: WarehouseSumOrderByAggregateInput
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

input WarehouseOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WarehouseOrderByRelevanceInput
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

enum WarehouseScalarFieldEnum {
  category
  city
  country
  created_at
  description
  id
  image
  isPublic
  name
  postal
  products
  state
  status
}

input WarehouseScalarWhereWithAggregatesInput {
  AND: [WarehouseScalarWhereWithAggregatesInput!]
  NOT: [WarehouseScalarWhereWithAggregatesInput!]
  OR: [WarehouseScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  postal: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
}

type WarehouseSumAggregate {
  id: BigInt
}

input WarehouseSumOrderByAggregateInput {
  id: SortOrder
}

input WarehouseUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input WarehouseUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input WarehouseWhereInput {
  AND: [WarehouseWhereInput!]
  NOT: [WarehouseWhereInput!]
  OR: [WarehouseWhereInput!]
  category: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  isPublic: StringNullableFilter
  name: StringNullableFilter
  postal: StringNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
  status: StringNullableFilter
}

input WarehouseWhereUniqueInput {
  id: BigInt
}

type Webhooks {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksAvgAggregate {
  id: Float
}

input WebhooksAvgOrderByAggregateInput {
  id: SortOrder
}

type WebhooksCountAggregate {
  _all: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  headers: Int!
  id: Int!
  name: Int!
  publish: Int!
  retrieve: Int!
  unpublish: Int!
  update: Int!
  url: Int!
}

input WebhooksCountOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksCreateInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

input WebhooksCreateManyInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksGroupBy {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksMaxAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMaxOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

type WebhooksMinAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMinOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksOrderByRelevanceFieldEnum {
  create
  delete
  headers
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksOrderByRelevanceInput {
  fields: [WebhooksOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WebhooksOrderByWithAggregationInput {
  _avg: WebhooksAvgOrderByAggregateInput
  _count: WebhooksCountOrderByAggregateInput
  _max: WebhooksMaxOrderByAggregateInput
  _min: WebhooksMinOrderByAggregateInput
  _sum: WebhooksSumOrderByAggregateInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WebhooksOrderByRelevanceInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksScalarFieldEnum {
  create
  created_at
  delete
  headers
  id
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksScalarWhereWithAggregatesInput {
  AND: [WebhooksScalarWhereWithAggregatesInput!]
  NOT: [WebhooksScalarWhereWithAggregatesInput!]
  OR: [WebhooksScalarWhereWithAggregatesInput!]
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  headers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  publish: StringNullableWithAggregatesFilter
  retrieve: StringNullableWithAggregatesFilter
  unpublish: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
}

type WebhooksSumAggregate {
  id: BigInt
}

input WebhooksSumOrderByAggregateInput {
  id: SortOrder
}

input WebhooksUpdateInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksUpdateManyMutationInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksWhereInput {
  AND: [WebhooksWhereInput!]
  NOT: [WebhooksWhereInput!]
  OR: [WebhooksWhereInput!]
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  headers: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  publish: StringNullableFilter
  retrieve: StringNullableFilter
  unpublish: StringNullableFilter
  update: StringNullableFilter
  url: StringFilter
}

input WebhooksWhereUniqueInput {
  id: BigInt
}

type Websites {
  category: String
  created_at: DateTime
  id: BigInt!
  name: String
  shop: String
  store: String
  themes: String!
  url: String
}

type WebsitesAvgAggregate {
  id: Float
}

input WebsitesAvgOrderByAggregateInput {
  id: SortOrder
}

type WebsitesCountAggregate {
  _all: Int!
  category: Int!
  created_at: Int!
  id: Int!
  name: Int!
  shop: Int!
  store: Int!
  themes: Int!
  url: Int!
}

input WebsitesCountOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

input WebsitesCreateInput {
  category: String
  created_at: DateTime
  id: BigInt
  name: String
  shop: String
  store: String
  themes: String!
  url: String
}

input WebsitesCreateManyInput {
  category: String
  created_at: DateTime
  id: BigInt
  name: String
  shop: String
  store: String
  themes: String!
  url: String
}

type WebsitesGroupBy {
  _avg: WebsitesAvgAggregate
  _count: WebsitesCountAggregate
  _max: WebsitesMaxAggregate
  _min: WebsitesMinAggregate
  _sum: WebsitesSumAggregate
  category: String
  created_at: DateTime
  id: BigInt!
  name: String
  shop: String
  store: String
  themes: String!
  url: String
}

type WebsitesMaxAggregate {
  category: String
  created_at: DateTime
  id: BigInt
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

input WebsitesMaxOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

type WebsitesMinAggregate {
  category: String
  created_at: DateTime
  id: BigInt
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

input WebsitesMinOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

enum WebsitesOrderByRelevanceFieldEnum {
  category
  name
  shop
  store
  themes
  url
}

input WebsitesOrderByRelevanceInput {
  fields: [WebsitesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WebsitesOrderByWithAggregationInput {
  _avg: WebsitesAvgOrderByAggregateInput
  _count: WebsitesCountOrderByAggregateInput
  _max: WebsitesMaxOrderByAggregateInput
  _min: WebsitesMinOrderByAggregateInput
  _sum: WebsitesSumOrderByAggregateInput
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

input WebsitesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WebsitesOrderByRelevanceInput
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

enum WebsitesScalarFieldEnum {
  category
  created_at
  id
  name
  shop
  store
  themes
  url
}

input WebsitesScalarWhereWithAggregatesInput {
  AND: [WebsitesScalarWhereWithAggregatesInput!]
  NOT: [WebsitesScalarWhereWithAggregatesInput!]
  OR: [WebsitesScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  shop: StringNullableWithAggregatesFilter
  store: StringNullableWithAggregatesFilter
  themes: StringWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type WebsitesSumAggregate {
  id: BigInt
}

input WebsitesSumOrderByAggregateInput {
  id: SortOrder
}

input WebsitesUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  shop: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  themes: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input WebsitesUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  shop: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  themes: StringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input WebsitesWhereInput {
  AND: [WebsitesWhereInput!]
  NOT: [WebsitesWhereInput!]
  OR: [WebsitesWhereInput!]
  category: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  shop: StringNullableFilter
  store: StringNullableFilter
  themes: StringFilter
  url: StringNullableFilter
}

input WebsitesWhereUniqueInput {
  id: BigInt
}

type Wishlists {
  created_at: DateTime
  customers: String
  id: BigInt!
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsAvgAggregate {
  id: Float
}

input WishlistsAvgOrderByAggregateInput {
  id: SortOrder
}

type WishlistsCountAggregate {
  _all: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  name: Int!
  occassions: Int!
  products: Int!
  quantity: Int!
  visibility: Int!
}

input WishlistsCountOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

input WishlistsCreateInput {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsCreateManyInput {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsGroupBy {
  _avg: WishlistsAvgAggregate
  _count: WishlistsCountAggregate
  _max: WishlistsMaxAggregate
  _min: WishlistsMinAggregate
  _sum: WishlistsSumAggregate
  created_at: DateTime
  customers: String
  id: BigInt!
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsMaxAggregate {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsMaxOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

type WishlistsMinAggregate {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsMinOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

enum WishlistsOrderByRelevanceFieldEnum {
  customers
  name
  occassions
  products
  quantity
  visibility
}

input WishlistsOrderByRelevanceInput {
  fields: [WishlistsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WishlistsOrderByWithAggregationInput {
  _avg: WishlistsAvgOrderByAggregateInput
  _count: WishlistsCountOrderByAggregateInput
  _max: WishlistsMaxOrderByAggregateInput
  _min: WishlistsMinOrderByAggregateInput
  _sum: WishlistsSumOrderByAggregateInput
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

input WishlistsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WishlistsOrderByRelevanceInput
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

enum WishlistsScalarFieldEnum {
  created_at
  customers
  id
  name
  occassions
  products
  quantity
  visibility
}

input WishlistsScalarWhereWithAggregatesInput {
  AND: [WishlistsScalarWhereWithAggregatesInput!]
  NOT: [WishlistsScalarWhereWithAggregatesInput!]
  OR: [WishlistsScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  occassions: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quantity: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
}

type WishlistsSumAggregate {
  id: BigInt
}

input WishlistsSumOrderByAggregateInput {
  id: SortOrder
}

input WishlistsUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
}

input WishlistsUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
}

input WishlistsWhereInput {
  AND: [WishlistsWhereInput!]
  NOT: [WishlistsWhereInput!]
  OR: [WishlistsWhereInput!]
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  occassions: StringNullableFilter
  products: StringNullableFilter
  quantity: StringNullableFilter
  visibility: StringNullableFilter
}

input WishlistsWhereUniqueInput {
  id: BigInt
}

type Workspaces {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt!
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesAvgAggregate {
  brands: Float
  category: Float
  customers: Float
  id: Float
  products: Float
  projects: Float
  shops: Float
  tasks: Float
  users: Float
}

input WorkspacesAvgOrderByAggregateInput {
  brands: SortOrder
  category: SortOrder
  customers: SortOrder
  id: SortOrder
  products: SortOrder
  projects: SortOrder
  shops: SortOrder
  tasks: SortOrder
  users: SortOrder
}

type WorkspacesCountAggregate {
  _all: Int!
  author: Int!
  brands: Int!
  brands_brandsToworkspaces: Int!
  categories: Int!
  category: Int!
  code: Int!
  created_at: Int!
  customers: Int!
  customers_customersToworkspaces: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  name: Int!
  products: Int!
  products_productsToworkspaces: Int!
  projects: Int!
  projects_projectsToworkspaces: Int!
  shops: Int!
  shops_shopsToworkspaces: Int!
  tasks: Int!
  tasks_tasksToworkspaces: Int!
  users: Int!
  users_usersToworkspaces: Int!
}

input WorkspacesCountOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

input WorkspacesCreateInput {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesCreateManyInput {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesGroupBy {
  _avg: WorkspacesAvgAggregate
  _count: WorkspacesCountAggregate
  _max: WorkspacesMaxAggregate
  _min: WorkspacesMinAggregate
  _sum: WorkspacesSumAggregate
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt!
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesMaxAggregate {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesMaxOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

type WorkspacesMinAggregate {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesMinOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

enum WorkspacesOrderByRelevanceFieldEnum {
  author
  brands_brandsToworkspaces
  categories
  code
  customers_customersToworkspaces
  description
  media
  name
  products_productsToworkspaces
  projects_projectsToworkspaces
  shops_shopsToworkspaces
  tasks_tasksToworkspaces
  users_usersToworkspaces
}

input WorkspacesOrderByRelevanceInput {
  fields: [WorkspacesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WorkspacesOrderByWithAggregationInput {
  _avg: WorkspacesAvgOrderByAggregateInput
  _count: WorkspacesCountOrderByAggregateInput
  _max: WorkspacesMaxOrderByAggregateInput
  _min: WorkspacesMinOrderByAggregateInput
  _sum: WorkspacesSumOrderByAggregateInput
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

input WorkspacesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WorkspacesOrderByRelevanceInput
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

enum WorkspacesScalarFieldEnum {
  author
  brands
  brands_brandsToworkspaces
  categories
  category
  code
  created_at
  customers
  customers_customersToworkspaces
  description
  id
  isPublic
  media
  name
  products
  products_productsToworkspaces
  projects
  projects_projectsToworkspaces
  shops
  shops_shopsToworkspaces
  tasks
  tasks_tasksToworkspaces
  users
  users_usersToworkspaces
}

input WorkspacesScalarWhereWithAggregatesInput {
  AND: [WorkspacesScalarWhereWithAggregatesInput!]
  NOT: [WorkspacesScalarWhereWithAggregatesInput!]
  OR: [WorkspacesScalarWhereWithAggregatesInput!]
  author: StringNullableWithAggregatesFilter
  brands: BigIntNullableWithAggregatesFilter
  brands_brandsToworkspaces: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  category: IntNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: IntNullableWithAggregatesFilter
  customers_customersToworkspaces: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: BoolNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: BigIntNullableWithAggregatesFilter
  products_productsToworkspaces: StringNullableWithAggregatesFilter
  projects: BigIntNullableWithAggregatesFilter
  projects_projectsToworkspaces: StringNullableWithAggregatesFilter
  shops: IntNullableWithAggregatesFilter
  shops_shopsToworkspaces: StringNullableWithAggregatesFilter
  tasks: BigIntNullableWithAggregatesFilter
  tasks_tasksToworkspaces: StringNullableWithAggregatesFilter
  users: IntNullableWithAggregatesFilter
  users_usersToworkspaces: StringNullableWithAggregatesFilter
}

type WorkspacesSumAggregate {
  brands: BigInt
  category: Int
  customers: Int
  id: BigInt
  products: BigInt
  projects: BigInt
  shops: Int
  tasks: BigInt
  users: Int
}

input WorkspacesSumOrderByAggregateInput {
  brands: SortOrder
  category: SortOrder
  customers: SortOrder
  id: SortOrder
  products: SortOrder
  projects: SortOrder
  shops: SortOrder
  tasks: SortOrder
  users: SortOrder
}

input WorkspacesUpdateInput {
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsToworkspaces: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  category: NullableIntFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableIntFieldUpdateOperationsInput
  customers_customersToworkspaces: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableBoolFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_productsToworkspaces: NullableStringFieldUpdateOperationsInput
  projects: NullableBigIntFieldUpdateOperationsInput
  projects_projectsToworkspaces: NullableStringFieldUpdateOperationsInput
  shops: NullableIntFieldUpdateOperationsInput
  shops_shopsToworkspaces: NullableStringFieldUpdateOperationsInput
  tasks: NullableBigIntFieldUpdateOperationsInput
  tasks_tasksToworkspaces: NullableStringFieldUpdateOperationsInput
  users: NullableIntFieldUpdateOperationsInput
  users_usersToworkspaces: NullableStringFieldUpdateOperationsInput
}

input WorkspacesUpdateManyMutationInput {
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsToworkspaces: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  category: NullableIntFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableIntFieldUpdateOperationsInput
  customers_customersToworkspaces: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableBoolFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_productsToworkspaces: NullableStringFieldUpdateOperationsInput
  projects: NullableBigIntFieldUpdateOperationsInput
  projects_projectsToworkspaces: NullableStringFieldUpdateOperationsInput
  shops: NullableIntFieldUpdateOperationsInput
  shops_shopsToworkspaces: NullableStringFieldUpdateOperationsInput
  tasks: NullableBigIntFieldUpdateOperationsInput
  tasks_tasksToworkspaces: NullableStringFieldUpdateOperationsInput
  users: NullableIntFieldUpdateOperationsInput
  users_usersToworkspaces: NullableStringFieldUpdateOperationsInput
}

input WorkspacesWhereInput {
  AND: [WorkspacesWhereInput!]
  NOT: [WorkspacesWhereInput!]
  OR: [WorkspacesWhereInput!]
  author: StringNullableFilter
  brands: BigIntNullableFilter
  brands_brandsToworkspaces: StringNullableFilter
  categories: StringNullableFilter
  category: IntNullableFilter
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: IntNullableFilter
  customers_customersToworkspaces: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: BoolNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  products: BigIntNullableFilter
  products_productsToworkspaces: StringNullableFilter
  projects: BigIntNullableFilter
  projects_projectsToworkspaces: StringNullableFilter
  shops: IntNullableFilter
  shops_shopsToworkspaces: StringNullableFilter
  tasks: BigIntNullableFilter
  tasks_tasksToworkspaces: StringNullableFilter
  users: IntNullableFilter
  users_usersToworkspaces: StringNullableFilter
}

input WorkspacesWhereUniqueInput {
  id: BigInt
}

type Zones {
  code: String
  country: String
  created_at: DateTime
  id: BigInt!
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesAvgAggregate {
  id: Float
}

input ZonesAvgOrderByAggregateInput {
  id: SortOrder
}

type ZonesCountAggregate {
  _all: Int!
  code: Int!
  country: Int!
  created_at: Int!
  id: Int!
  name: Int!
  scope: Int!
  type: Int!
  updated_at: Int!
}

input ZonesCountOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input ZonesCreateInput {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesCreateManyInput {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesGroupBy {
  _avg: ZonesAvgAggregate
  _count: ZonesCountAggregate
  _max: ZonesMaxAggregate
  _min: ZonesMinAggregate
  _sum: ZonesSumAggregate
  code: String
  country: String
  created_at: DateTime
  id: BigInt!
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesMaxAggregate {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesMaxOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

type ZonesMinAggregate {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesMinOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum ZonesOrderByRelevanceFieldEnum {
  code
  country
  name
  scope
  type
}

input ZonesOrderByRelevanceInput {
  fields: [ZonesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ZonesOrderByWithAggregationInput {
  _avg: ZonesAvgOrderByAggregateInput
  _count: ZonesCountOrderByAggregateInput
  _max: ZonesMaxOrderByAggregateInput
  _min: ZonesMinOrderByAggregateInput
  _sum: ZonesSumOrderByAggregateInput
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input ZonesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ZonesOrderByRelevanceInput
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum ZonesScalarFieldEnum {
  code
  country
  created_at
  id
  name
  scope
  type
  updated_at
}

input ZonesScalarWhereWithAggregatesInput {
  AND: [ZonesScalarWhereWithAggregatesInput!]
  NOT: [ZonesScalarWhereWithAggregatesInput!]
  OR: [ZonesScalarWhereWithAggregatesInput!]
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  scope: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
}

type ZonesSumAggregate {
  id: BigInt
}

input ZonesSumOrderByAggregateInput {
  id: SortOrder
}

input ZonesUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input ZonesUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input ZonesWhereInput {
  AND: [ZonesWhereInput!]
  NOT: [ZonesWhereInput!]
  OR: [ZonesWhereInput!]
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  scope: StringNullableFilter
  type: StringNullableFilter
  updated_at: DateTimeNullableFilter
}

input ZonesWhereUniqueInput {
  id: BigInt
}

input credit_memosCredit_memoIdCompoundUniqueInput {
  credit_memo: String!
  id: BigInt!
}
