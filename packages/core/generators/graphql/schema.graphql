## NOTE: This schema was generated by Graphback and should not be changed manually

"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type AffectedRowsOutput {
  count: Int!
}

type AggregateAgreements {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
}

type AggregateApitoken {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
}

type AggregateArticles {
  _avg: ArticlesAvgAggregate
  _count: ArticlesCountAggregate
  _max: ArticlesMaxAggregate
  _min: ArticlesMinAggregate
  _sum: ArticlesSumAggregate
}

type AggregateAttributes {
  _avg: AttributesAvgAggregate
  _count: AttributesCountAggregate
  _max: AttributesMaxAggregate
  _min: AttributesMinAggregate
  _sum: AttributesSumAggregate
}

type AggregateBrands {
  _avg: BrandsAvgAggregate
  _count: BrandsCountAggregate
  _max: BrandsMaxAggregate
  _min: BrandsMinAggregate
  _sum: BrandsSumAggregate
}

type AggregateCategories {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
}

type AggregateChannels {
  _avg: ChannelsAvgAggregate
  _count: ChannelsCountAggregate
  _max: ChannelsMaxAggregate
  _min: ChannelsMinAggregate
  _sum: ChannelsSumAggregate
}

type AggregateChecklist {
  _avg: ChecklistAvgAggregate
  _count: ChecklistCountAggregate
  _max: ChecklistMaxAggregate
  _min: ChecklistMinAggregate
  _sum: ChecklistSumAggregate
}

type AggregateCities {
  _avg: CitiesAvgAggregate
  _count: CitiesCountAggregate
  _max: CitiesMaxAggregate
  _min: CitiesMinAggregate
  _sum: CitiesSumAggregate
}

type AggregateCollections {
  _avg: CollectionsAvgAggregate
  _count: CollectionsCountAggregate
  _max: CollectionsMaxAggregate
  _min: CollectionsMinAggregate
  _sum: CollectionsSumAggregate
}

type AggregateContent_type {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
}

type AggregateCountries {
  _avg: CountriesAvgAggregate
  _count: CountriesCountAggregate
  _max: CountriesMaxAggregate
  _min: CountriesMinAggregate
  _sum: CountriesSumAggregate
}

type AggregateCurrencies {
  _avg: CurrenciesAvgAggregate
  _count: CurrenciesCountAggregate
  _max: CurrenciesMaxAggregate
  _min: CurrenciesMinAggregate
  _sum: CurrenciesSumAggregate
}

type AggregateCustomers {
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
}

type AggregateDashboards {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
}

type AggregateDeepdive {
  _avg: DeepdiveAvgAggregate
  _count: DeepdiveCountAggregate
  _max: DeepdiveMaxAggregate
  _min: DeepdiveMinAggregate
  _sum: DeepdiveSumAggregate
}

type AggregateDiscounts {
  _avg: DiscountsAvgAggregate
  _count: DiscountsCountAggregate
  _max: DiscountsMaxAggregate
  _min: DiscountsMinAggregate
  _sum: DiscountsSumAggregate
}

type AggregateEndofshift {
  _avg: EndofshiftAvgAggregate
  _count: EndofshiftCountAggregate
  _max: EndofshiftMaxAggregate
  _min: EndofshiftMinAggregate
  _sum: EndofshiftSumAggregate
}

type AggregateEvents {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
}

type AggregateFullfillments {
  _avg: FullfillmentsAvgAggregate
  _count: FullfillmentsCountAggregate
  _max: FullfillmentsMaxAggregate
  _min: FullfillmentsMinAggregate
  _sum: FullfillmentsSumAggregate
}

type AggregateGlossary {
  _avg: GlossaryAvgAggregate
  _count: GlossaryCountAggregate
  _max: GlossaryMaxAggregate
  _min: GlossaryMinAggregate
  _sum: GlossarySumAggregate
}

type AggregateIntegrations {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
}

type AggregateInternalization {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
}

type AggregateInvoices {
  _avg: InvoicesAvgAggregate
  _count: InvoicesCountAggregate
  _max: InvoicesMaxAggregate
  _min: InvoicesMinAggregate
  _sum: InvoicesSumAggregate
}

type AggregateLogIn {
  _avg: LogInAvgAggregate
  _count: LogInCountAggregate
  _max: LogInMaxAggregate
  _min: LogInMinAggregate
  _sum: LogInSumAggregate
}

type AggregateManufacturer {
  _avg: ManufacturerAvgAggregate
  _count: ManufacturerCountAggregate
  _max: ManufacturerMaxAggregate
  _min: ManufacturerMinAggregate
  _sum: ManufacturerSumAggregate
}

type AggregateMediamanager {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
}

type AggregateNewsletters {
  _avg: NewslettersAvgAggregate
  _count: NewslettersCountAggregate
  _max: NewslettersMaxAggregate
  _min: NewslettersMinAggregate
  _sum: NewslettersSumAggregate
}

type AggregateOoto {
  _avg: OotoAvgAggregate
  _count: OotoCountAggregate
  _max: OotoMaxAggregate
  _min: OotoMinAggregate
  _sum: OotoSumAggregate
}

type AggregateOrders {
  _avg: OrdersAvgAggregate
  _count: OrdersCountAggregate
  _max: OrdersMaxAggregate
  _min: OrdersMinAggregate
  _sum: OrdersSumAggregate
}

type AggregatePages {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
}

type AggregatePartners {
  _avg: PartnersAvgAggregate
  _count: PartnersCountAggregate
  _max: PartnersMaxAggregate
  _min: PartnersMinAggregate
  _sum: PartnersSumAggregate
}

type AggregatePayments {
  _avg: PaymentsAvgAggregate
  _count: PaymentsCountAggregate
  _max: PaymentsMaxAggregate
  _min: PaymentsMinAggregate
  _sum: PaymentsSumAggregate
}

type AggregatePermissions {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
}

type AggregatePlugins {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
}

type AggregateProduct_types {
  _avg: Product_typesAvgAggregate
  _count: Product_typesCountAggregate
  _max: Product_typesMaxAggregate
  _min: Product_typesMinAggregate
  _sum: Product_typesSumAggregate
}

type AggregateProducts {
  _avg: ProductsAvgAggregate
  _count: ProductsCountAggregate
  _max: ProductsMaxAggregate
  _min: ProductsMinAggregate
  _sum: ProductsSumAggregate
}

type AggregateProjects {
  _avg: ProjectsAvgAggregate
  _count: ProjectsCountAggregate
  _max: ProjectsMaxAggregate
  _min: ProjectsMinAggregate
  _sum: ProjectsSumAggregate
}

type AggregateProviders {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
}

type AggregateQuotes {
  _avg: QuotesAvgAggregate
  _count: QuotesCountAggregate
  _max: QuotesMaxAggregate
  _min: QuotesMinAggregate
  _sum: QuotesSumAggregate
}

type AggregateReturns {
  _avg: ReturnsAvgAggregate
  _count: ReturnsCountAggregate
  _max: ReturnsMaxAggregate
  _min: ReturnsMinAggregate
  _sum: ReturnsSumAggregate
}

type AggregateReviews {
  _avg: ReviewsAvgAggregate
  _count: ReviewsCountAggregate
  _max: ReviewsMaxAggregate
  _min: ReviewsMinAggregate
  _sum: ReviewsSumAggregate
}

type AggregateRewards {
  _avg: RewardsAvgAggregate
  _count: RewardsCountAggregate
  _max: RewardsMaxAggregate
  _min: RewardsMinAggregate
  _sum: RewardsSumAggregate
}

type AggregateRoles {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
}

type AggregateScheduler {
  _avg: SchedulerAvgAggregate
  _count: SchedulerCountAggregate
  _max: SchedulerMaxAggregate
  _min: SchedulerMinAggregate
  _sum: SchedulerSumAggregate
}

type AggregateSegments {
  _avg: SegmentsAvgAggregate
  _count: SegmentsCountAggregate
  _max: SegmentsMaxAggregate
  _min: SegmentsMinAggregate
  _sum: SegmentsSumAggregate
}

type AggregateSettings {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
}

type AggregateShipments {
  _avg: ShipmentsAvgAggregate
  _count: ShipmentsCountAggregate
  _max: ShipmentsMaxAggregate
  _min: ShipmentsMinAggregate
  _sum: ShipmentsSumAggregate
}

type AggregateStates {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
}

type AggregateTags {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
}

type AggregateTaxes {
  _avg: TaxesAvgAggregate
  _count: TaxesCountAggregate
  _max: TaxesMaxAggregate
  _min: TaxesMinAggregate
  _sum: TaxesSumAggregate
}

type AggregateThemes {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
}

type AggregateTicketing {
  _avg: TicketingAvgAggregate
  _count: TicketingCountAggregate
  _max: TicketingMaxAggregate
  _min: TicketingMinAggregate
  _sum: TicketingSumAggregate
}

type AggregateTransactions {
  _avg: TransactionsAvgAggregate
  _count: TransactionsCountAggregate
  _max: TransactionsMaxAggregate
  _min: TransactionsMinAggregate
  _sum: TransactionsSumAggregate
}

type AggregateUpload_file {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
}

type AggregateUsers {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
}

type AggregateVendors {
  _avg: VendorsAvgAggregate
  _count: VendorsCountAggregate
  _max: VendorsMaxAggregate
  _min: VendorsMinAggregate
  _sum: VendorsSumAggregate
}

type AggregateVisits {
  _avg: VisitsAvgAggregate
  _count: VisitsCountAggregate
  _max: VisitsMaxAggregate
  _min: VisitsMinAggregate
  _sum: VisitsSumAggregate
}

type AggregateWarehouse {
  _avg: WarehouseAvgAggregate
  _count: WarehouseCountAggregate
  _max: WarehouseMaxAggregate
  _min: WarehouseMinAggregate
  _sum: WarehouseSumAggregate
}

type AggregateWebhooks {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
}

type AggregateWebsites {
  _avg: WebsitesAvgAggregate
  _count: WebsitesCountAggregate
  _max: WebsitesMaxAggregate
  _min: WebsitesMinAggregate
  _sum: WebsitesSumAggregate
}

type AggregateWishlists {
  _avg: WishlistsAvgAggregate
  _count: WishlistsCountAggregate
  _max: WishlistsMaxAggregate
  _min: WishlistsMinAggregate
  _sum: WishlistsSumAggregate
}

type AggregateWorkspaces {
  _avg: WorkspacesAvgAggregate
  _count: WorkspacesCountAggregate
  _max: WorkspacesMaxAggregate
  _min: WorkspacesMinAggregate
  _sum: WorkspacesSumAggregate
}

type AggregateZones {
  _avg: ZonesAvgAggregate
  _count: ZonesCountAggregate
  _max: ZonesMaxAggregate
  _min: ZonesMinAggregate
  _sum: ZonesSumAggregate
}

type Agreements {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt!
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsAvgAggregate {
  id: Float
}

input AgreementsAvgOrderByAggregateInput {
  id: SortOrder
}

type AgreementsCountAggregate {
  _all: Int!
  content: Int!
  created: Int!
  excerpt: Int!
  id: Int!
  image: Int!
  mediamanager: Int!
  name: Int!
  reference_id: Int!
  shop_id: Int!
  type: Int!
  updated: Int!
  user_id: Int!
}

input AgreementsCountOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

input AgreementsCreateInput {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsCreateManyInput {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsGroupBy {
  _avg: AgreementsAvgAggregate
  _count: AgreementsCountAggregate
  _max: AgreementsMaxAggregate
  _min: AgreementsMinAggregate
  _sum: AgreementsSumAggregate
  content: String
  created: DateTime
  excerpt: String
  id: BigInt!
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

type AgreementsMaxAggregate {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsMaxOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

type AgreementsMinAggregate {
  content: String
  created: DateTime
  excerpt: String
  id: BigInt
  image: String
  mediamanager: String
  name: String
  reference_id: String
  shop_id: String
  type: String
  updated: DateTime
  user_id: String
}

input AgreementsMinOrderByAggregateInput {
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

enum AgreementsOrderByRelevanceFieldEnum {
  content
  excerpt
  image
  mediamanager
  name
  reference_id
  shop_id
  type
  user_id
}

input AgreementsOrderByRelevanceInput {
  fields: [AgreementsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AgreementsOrderByWithAggregationInput {
  _avg: AgreementsAvgOrderByAggregateInput
  _count: AgreementsCountOrderByAggregateInput
  _max: AgreementsMaxOrderByAggregateInput
  _min: AgreementsMinOrderByAggregateInput
  _sum: AgreementsSumOrderByAggregateInput
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

input AgreementsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AgreementsOrderByRelevanceInput
  content: SortOrder
  created: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  reference_id: SortOrder
  shop_id: SortOrder
  type: SortOrder
  updated: SortOrder
  user_id: SortOrder
}

enum AgreementsScalarFieldEnum {
  content
  created
  excerpt
  id
  image
  mediamanager
  name
  reference_id
  shop_id
  type
  updated
  user_id
}

input AgreementsScalarWhereWithAggregatesInput {
  AND: [AgreementsScalarWhereWithAggregatesInput!]
  NOT: [AgreementsScalarWhereWithAggregatesInput!]
  OR: [AgreementsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  reference_id: StringNullableWithAggregatesFilter
  shop_id: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated: DateTimeNullableWithAggregatesFilter
  user_id: StringNullableWithAggregatesFilter
}

type AgreementsSumAggregate {
  id: BigInt
}

input AgreementsSumOrderByAggregateInput {
  id: SortOrder
}

input AgreementsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  reference_id: NullableStringFieldUpdateOperationsInput
  shop_id: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
  user_id: NullableStringFieldUpdateOperationsInput
}

input AgreementsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  reference_id: NullableStringFieldUpdateOperationsInput
  shop_id: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated: NullableDateTimeFieldUpdateOperationsInput
  user_id: NullableStringFieldUpdateOperationsInput
}

input AgreementsWhereInput {
  AND: [AgreementsWhereInput!]
  NOT: [AgreementsWhereInput!]
  OR: [AgreementsWhereInput!]
  content: StringNullableFilter
  created: DateTimeNullableFilter
  excerpt: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  mediamanager: StringNullableFilter
  name: StringNullableFilter
  reference_id: StringNullableFilter
  shop_id: StringNullableFilter
  type: StringNullableFilter
  updated: DateTimeNullableFilter
  user_id: StringNullableFilter
}

input AgreementsWhereUniqueInput {
  id: BigInt
}

type Apitoken {
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenAvgAggregate {
  id: Float
  token: Float
}

input ApitokenAvgOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

type ApitokenCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  id: Int!
  name: Int!
  token: Int!
  token_type: Int!
}

input ApitokenCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenCreateInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

input ApitokenCreateManyInput {
  created_at: DateTime
  description: String
  id: BigInt
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenGroupBy {
  _avg: ApitokenAvgAggregate
  _count: ApitokenCountAggregate
  _max: ApitokenMaxAggregate
  _min: ApitokenMinAggregate
  _sum: ApitokenSumAggregate
  created_at: DateTime
  description: String
  id: BigInt!
  name: String!
  token: BigInt!
  token_type: String
}

type ApitokenMaxAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

type ApitokenMinAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  name: String
  token: BigInt
  token_type: String
}

input ApitokenMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenOrderByRelevanceFieldEnum {
  description
  name
  token_type
}

input ApitokenOrderByRelevanceInput {
  fields: [ApitokenOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ApitokenOrderByWithAggregationInput {
  _avg: ApitokenAvgOrderByAggregateInput
  _count: ApitokenCountOrderByAggregateInput
  _max: ApitokenMaxOrderByAggregateInput
  _min: ApitokenMinOrderByAggregateInput
  _sum: ApitokenSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

input ApitokenOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ApitokenOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  token: SortOrder
  token_type: SortOrder
}

enum ApitokenScalarFieldEnum {
  created_at
  description
  id
  name
  token
  token_type
}

input ApitokenScalarWhereWithAggregatesInput {
  AND: [ApitokenScalarWhereWithAggregatesInput!]
  NOT: [ApitokenScalarWhereWithAggregatesInput!]
  OR: [ApitokenScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  token: BigIntWithAggregatesFilter
  token_type: StringNullableWithAggregatesFilter
}

type ApitokenSumAggregate {
  id: BigInt
  token: BigInt
}

input ApitokenSumOrderByAggregateInput {
  id: SortOrder
  token: SortOrder
}

input ApitokenUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  token: BigIntFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
}

input ApitokenWhereInput {
  AND: [ApitokenWhereInput!]
  NOT: [ApitokenWhereInput!]
  OR: [ApitokenWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  token: BigIntFilter
  token_type: StringNullableFilter
}

input ApitokenWhereUniqueInput {
  id: BigInt
  name: String
  token: BigInt
}

type Articles {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int!
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesAvgAggregate {
  id: Float
}

input ArticlesAvgOrderByAggregateInput {
  id: SortOrder
}

type ArticlesCountAggregate {
  _all: Int!
  categories: Int!
  content: Int!
  cust_id: Int!
  customers: Int!
  excerpt: Int!
  id: Int!
  image: Int!
  isPublic: Int!
  meta_description: Int!
  meta_name: Int!
  meta_url: Int!
  name: Int!
  published: Int!
  tags: Int!
  type: Int!
  users: Int!
}

input ArticlesCountOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

input ArticlesCreateInput {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesCreateManyInput {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesGroupBy {
  _avg: ArticlesAvgAggregate
  _count: ArticlesCountAggregate
  _max: ArticlesMaxAggregate
  _min: ArticlesMinAggregate
  _sum: ArticlesSumAggregate
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int!
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

type ArticlesMaxAggregate {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesMaxOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

type ArticlesMinAggregate {
  categories: String
  content: String
  cust_id: String
  customers: String
  excerpt: String
  id: Int
  image: String
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  name: String
  published: String
  tags: String
  type: String
  users: String
}

input ArticlesMinOrderByAggregateInput {
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

enum ArticlesOrderByRelevanceFieldEnum {
  categories
  content
  cust_id
  customers
  excerpt
  image
  isPublic
  meta_description
  meta_name
  meta_url
  name
  published
  tags
  type
  users
}

input ArticlesOrderByRelevanceInput {
  fields: [ArticlesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ArticlesOrderByWithAggregationInput {
  _avg: ArticlesAvgOrderByAggregateInput
  _count: ArticlesCountOrderByAggregateInput
  _max: ArticlesMaxOrderByAggregateInput
  _min: ArticlesMinOrderByAggregateInput
  _sum: ArticlesSumOrderByAggregateInput
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

input ArticlesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ArticlesOrderByRelevanceInput
  categories: SortOrder
  content: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  name: SortOrder
  published: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
}

enum ArticlesScalarFieldEnum {
  categories
  content
  cust_id
  customers
  excerpt
  id
  image
  isPublic
  meta_description
  meta_name
  meta_url
  name
  published
  tags
  type
  users
}

input ArticlesScalarWhereWithAggregatesInput {
  AND: [ArticlesScalarWhereWithAggregatesInput!]
  NOT: [ArticlesScalarWhereWithAggregatesInput!]
  OR: [ArticlesScalarWhereWithAggregatesInput!]
  categories: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  cust_id: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_name: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type ArticlesSumAggregate {
  id: Int
}

input ArticlesSumOrderByAggregateInput {
  id: SortOrder
}

input ArticlesUpdateInput {
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  cust_id: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input ArticlesUpdateManyMutationInput {
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  cust_id: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input ArticlesWhereInput {
  AND: [ArticlesWhereInput!]
  NOT: [ArticlesWhereInput!]
  OR: [ArticlesWhereInput!]
  categories: StringNullableFilter
  content: StringNullableFilter
  cust_id: StringNullableFilter
  customers: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  isPublic: StringNullableFilter
  meta_description: StringNullableFilter
  meta_name: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringNullableFilter
  published: StringNullableFilter
  tags: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
}

input ArticlesWhereUniqueInput {
  id: Int
}

type Attributes {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int!
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesAvgAggregate {
  id: Float
  prod_id: Float
}

input AttributesAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type AttributesCountAggregate {
  _all: Int!
  allow_html_tags_storefront: Int!
  attribute_class: Int!
  attribute_code: Int!
  attribute_value: Int!
  column_options: Int!
  default_label: Int!
  faceted_navigation: Int!
  filter_options: Int!
  id: Int!
  isPublic: Int!
  layered_navigation: Int!
  meta_description: Int!
  meta_name: Int!
  meta_url: Int!
  position: Int!
  prod_id: Int!
  product_attribute_set: Int!
  products: Int!
  promo_rule_conditions: Int!
  search_results_layered_navigation: Int!
  use_search: Int!
  used_product_listing: Int!
  used_sorting_product_listing: Int!
  visible_catalog_pages_storefront: Int!
}

input AttributesCountOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

input AttributesCreateInput {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesCreateManyInput {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesGroupBy {
  _avg: AttributesAvgAggregate
  _count: AttributesCountAggregate
  _max: AttributesMaxAggregate
  _min: AttributesMinAggregate
  _sum: AttributesSumAggregate
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int!
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt!
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

type AttributesMaxAggregate {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesMaxOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

type AttributesMinAggregate {
  allow_html_tags_storefront: Boolean
  attribute_class: String
  attribute_code: String
  attribute_value: String
  column_options: String
  default_label: String
  faceted_navigation: Boolean
  filter_options: String
  id: Int
  isPublic: String
  layered_navigation: Boolean
  meta_description: String
  meta_name: Boolean
  meta_url: String
  position: String
  prod_id: BigInt
  product_attribute_set: String
  products: String
  promo_rule_conditions: Boolean
  search_results_layered_navigation: Boolean
  use_search: String
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  visible_catalog_pages_storefront: Boolean
}

input AttributesMinOrderByAggregateInput {
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

enum AttributesOrderByRelevanceFieldEnum {
  attribute_class
  attribute_code
  attribute_value
  column_options
  default_label
  filter_options
  isPublic
  meta_description
  meta_url
  position
  product_attribute_set
  products
  use_search
}

input AttributesOrderByRelevanceInput {
  fields: [AttributesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input AttributesOrderByWithAggregationInput {
  _avg: AttributesAvgOrderByAggregateInput
  _count: AttributesCountOrderByAggregateInput
  _max: AttributesMaxOrderByAggregateInput
  _min: AttributesMinOrderByAggregateInput
  _sum: AttributesSumOrderByAggregateInput
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

input AttributesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: AttributesOrderByRelevanceInput
  allow_html_tags_storefront: SortOrder
  attribute_class: SortOrder
  attribute_code: SortOrder
  attribute_value: SortOrder
  column_options: SortOrder
  default_label: SortOrder
  faceted_navigation: SortOrder
  filter_options: SortOrder
  id: SortOrder
  isPublic: SortOrder
  layered_navigation: SortOrder
  meta_description: SortOrder
  meta_name: SortOrder
  meta_url: SortOrder
  position: SortOrder
  prod_id: SortOrder
  product_attribute_set: SortOrder
  products: SortOrder
  promo_rule_conditions: SortOrder
  search_results_layered_navigation: SortOrder
  use_search: SortOrder
  used_product_listing: SortOrder
  used_sorting_product_listing: SortOrder
  visible_catalog_pages_storefront: SortOrder
}

enum AttributesScalarFieldEnum {
  allow_html_tags_storefront
  attribute_class
  attribute_code
  attribute_value
  column_options
  default_label
  faceted_navigation
  filter_options
  id
  isPublic
  layered_navigation
  meta_description
  meta_name
  meta_url
  position
  prod_id
  product_attribute_set
  products
  promo_rule_conditions
  search_results_layered_navigation
  use_search
  used_product_listing
  used_sorting_product_listing
  visible_catalog_pages_storefront
}

input AttributesScalarWhereWithAggregatesInput {
  AND: [AttributesScalarWhereWithAggregatesInput!]
  NOT: [AttributesScalarWhereWithAggregatesInput!]
  OR: [AttributesScalarWhereWithAggregatesInput!]
  allow_html_tags_storefront: BoolNullableWithAggregatesFilter
  attribute_class: StringNullableWithAggregatesFilter
  attribute_code: StringNullableWithAggregatesFilter
  attribute_value: StringNullableWithAggregatesFilter
  column_options: StringNullableWithAggregatesFilter
  default_label: StringNullableWithAggregatesFilter
  faceted_navigation: BoolNullableWithAggregatesFilter
  filter_options: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  layered_navigation: BoolNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_name: BoolNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  position: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  product_attribute_set: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  promo_rule_conditions: BoolNullableWithAggregatesFilter
  search_results_layered_navigation: BoolNullableWithAggregatesFilter
  use_search: StringNullableWithAggregatesFilter
  used_product_listing: BoolNullableWithAggregatesFilter
  used_sorting_product_listing: BoolNullableWithAggregatesFilter
  visible_catalog_pages_storefront: BoolNullableWithAggregatesFilter
}

type AttributesSumAggregate {
  id: Int
  prod_id: BigInt
}

input AttributesSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input AttributesUpdateInput {
  allow_html_tags_storefront: NullableBoolFieldUpdateOperationsInput
  attribute_class: NullableStringFieldUpdateOperationsInput
  attribute_code: NullableStringFieldUpdateOperationsInput
  attribute_value: NullableStringFieldUpdateOperationsInput
  column_options: NullableStringFieldUpdateOperationsInput
  default_label: NullableStringFieldUpdateOperationsInput
  faceted_navigation: NullableBoolFieldUpdateOperationsInput
  filter_options: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  layered_navigation: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableBoolFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_attribute_set: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  promo_rule_conditions: NullableBoolFieldUpdateOperationsInput
  search_results_layered_navigation: NullableBoolFieldUpdateOperationsInput
  use_search: NullableStringFieldUpdateOperationsInput
  used_product_listing: NullableBoolFieldUpdateOperationsInput
  used_sorting_product_listing: NullableBoolFieldUpdateOperationsInput
  visible_catalog_pages_storefront: NullableBoolFieldUpdateOperationsInput
}

input AttributesUpdateManyMutationInput {
  allow_html_tags_storefront: NullableBoolFieldUpdateOperationsInput
  attribute_class: NullableStringFieldUpdateOperationsInput
  attribute_code: NullableStringFieldUpdateOperationsInput
  attribute_value: NullableStringFieldUpdateOperationsInput
  column_options: NullableStringFieldUpdateOperationsInput
  default_label: NullableStringFieldUpdateOperationsInput
  faceted_navigation: NullableBoolFieldUpdateOperationsInput
  filter_options: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  layered_navigation: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_name: NullableBoolFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_attribute_set: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  promo_rule_conditions: NullableBoolFieldUpdateOperationsInput
  search_results_layered_navigation: NullableBoolFieldUpdateOperationsInput
  use_search: NullableStringFieldUpdateOperationsInput
  used_product_listing: NullableBoolFieldUpdateOperationsInput
  used_sorting_product_listing: NullableBoolFieldUpdateOperationsInput
  visible_catalog_pages_storefront: NullableBoolFieldUpdateOperationsInput
}

input AttributesWhereInput {
  AND: [AttributesWhereInput!]
  NOT: [AttributesWhereInput!]
  OR: [AttributesWhereInput!]
  allow_html_tags_storefront: BoolNullableFilter
  attribute_class: StringNullableFilter
  attribute_code: StringNullableFilter
  attribute_value: StringNullableFilter
  column_options: StringNullableFilter
  default_label: StringNullableFilter
  faceted_navigation: BoolNullableFilter
  filter_options: StringNullableFilter
  id: IntFilter
  isPublic: StringNullableFilter
  layered_navigation: BoolNullableFilter
  meta_description: StringNullableFilter
  meta_name: BoolNullableFilter
  meta_url: StringNullableFilter
  position: StringNullableFilter
  prod_id: BigIntFilter
  product_attribute_set: StringNullableFilter
  products: StringNullableFilter
  promo_rule_conditions: BoolNullableFilter
  search_results_layered_navigation: BoolNullableFilter
  use_search: StringNullableFilter
  used_product_listing: BoolNullableFilter
  used_sorting_product_listing: BoolNullableFilter
  visible_catalog_pages_storefront: BoolNullableFilter
}

input AttributesWhereUniqueInput {
  id: Int
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input BigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input BigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input BigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input BigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input BigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

type Brands {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsAvgAggregate {
  id: Float
  product: Float
}

input BrandsAvgOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

type BrandsCountAggregate {
  _all: Int!
  city: Int!
  code: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  mediamanager: Int!
  name: Int!
  product: Int!
  products: Int!
  state: Int!
  workspaces: Int!
}

input BrandsCountOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

input BrandsCreateInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsCreateManyInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsGroupBy {
  _avg: BrandsAvgAggregate
  _count: BrandsCountAggregate
  _max: BrandsMaxAggregate
  _min: BrandsMinAggregate
  _sum: BrandsSumAggregate
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

type BrandsMaxAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsMaxOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

type BrandsMinAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  mediamanager: String
  name: String
  product: BigInt
  products: String
  state: String
  workspaces: String
}

input BrandsMinOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

enum BrandsOrderByRelevanceFieldEnum {
  city
  code
  country
  description
  isPublic
  media
  mediamanager
  name
  products
  state
  workspaces
}

input BrandsOrderByRelevanceInput {
  fields: [BrandsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input BrandsOrderByWithAggregationInput {
  _avg: BrandsAvgOrderByAggregateInput
  _count: BrandsCountOrderByAggregateInput
  _max: BrandsMaxOrderByAggregateInput
  _min: BrandsMinOrderByAggregateInput
  _sum: BrandsSumOrderByAggregateInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

input BrandsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: BrandsOrderByRelevanceInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  mediamanager: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
  workspaces: SortOrder
}

enum BrandsScalarFieldEnum {
  city
  code
  country
  created_at
  description
  id
  isPublic
  media
  mediamanager
  name
  product
  products
  state
  workspaces
}

input BrandsScalarWhereWithAggregatesInput {
  AND: [BrandsScalarWhereWithAggregatesInput!]
  NOT: [BrandsScalarWhereWithAggregatesInput!]
  OR: [BrandsScalarWhereWithAggregatesInput!]
  city: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: BigIntNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type BrandsSumAggregate {
  id: BigInt
  product: BigInt
}

input BrandsSumOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

input BrandsUpdateInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input BrandsUpdateManyMutationInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input BrandsWhereInput {
  AND: [BrandsWhereInput!]
  NOT: [BrandsWhereInput!]
  OR: [BrandsWhereInput!]
  city: StringNullableFilter
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  media: StringNullableFilter
  mediamanager: StringNullableFilter
  name: StringNullableFilter
  product: BigIntNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
  workspaces: StringNullableFilter
}

input BrandsWhereUniqueInput {
  id: BigInt
}

type Categories {
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesAvgAggregate {
  id: Float
}

input CategoriesAvgOrderByAggregateInput {
  id: SortOrder
}

type CategoriesCountAggregate {
  _all: Int!
  content: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  meta_url: Int!
  name: Int!
  product: Int!
  status: Int!
  thumbnail: Int!
  visibility: Int!
  websites: Int!
  workspaces: Int!
}

input CategoriesCountOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesCreateInput {
  content: String
  country: String
  description: String
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesCreateManyInput {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesGroupBy {
  _avg: CategoriesAvgAggregate
  _count: CategoriesCountAggregate
  _max: CategoriesMaxAggregate
  _min: CategoriesMinAggregate
  _sum: CategoriesSumAggregate
  content: String
  country: String
  description: String
  id: Int!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

type CategoriesMaxAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMaxOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

type CategoriesMinAggregate {
  content: String
  country: String
  description: String
  id: Int
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  product: String
  status: Boolean
  thumbnail: String
  visibility: String
  websites: String
  workspaces: String
}

input CategoriesMinOrderByAggregateInput {
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesOrderByRelevanceFieldEnum {
  content
  country
  description
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesOrderByRelevanceInput {
  fields: [CategoriesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CategoriesOrderByWithAggregationInput {
  _avg: CategoriesAvgOrderByAggregateInput
  _count: CategoriesCountOrderByAggregateInput
  _max: CategoriesMaxOrderByAggregateInput
  _min: CategoriesMinOrderByAggregateInput
  _sum: CategoriesSumOrderByAggregateInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

input CategoriesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CategoriesOrderByRelevanceInput
  content: SortOrder
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  product: SortOrder
  status: SortOrder
  thumbnail: SortOrder
  visibility: SortOrder
  websites: SortOrder
  workspaces: SortOrder
}

enum CategoriesScalarFieldEnum {
  content
  country
  description
  id
  image
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  product
  status
  thumbnail
  visibility
  websites
  workspaces
}

input CategoriesScalarWhereWithAggregatesInput {
  AND: [CategoriesScalarWhereWithAggregatesInput!]
  NOT: [CategoriesScalarWhereWithAggregatesInput!]
  OR: [CategoriesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type CategoriesSumAggregate {
  id: Int
}

input CategoriesSumOrderByAggregateInput {
  id: SortOrder
}

input CategoriesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input CategoriesWhereInput {
  AND: [CategoriesWhereInput!]
  NOT: [CategoriesWhereInput!]
  OR: [CategoriesWhereInput!]
  content: StringNullableFilter
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringFilter
  product: StringNullableFilter
  status: BoolNullableFilter
  thumbnail: StringNullableFilter
  visibility: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
}

input CategoriesWhereUniqueInput {
  id: Int
}

type Channels {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt!
  include_tax: String
  name: String
}

type ChannelsAvgAggregate {
  id: Float
}

input ChannelsAvgOrderByAggregateInput {
  id: SortOrder
}

type ChannelsCountAggregate {
  _all: Int!
  client_id: Int!
  client_secret: Int!
  code: Int!
  created_at: Int!
  currency: Int!
  default_lang: Int!
  default_shipping: Int!
  default_zone: Int!
  id: Int!
  include_tax: Int!
  name: Int!
}

input ChannelsCountOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

input ChannelsCreateInput {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsCreateManyInput {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

type ChannelsGroupBy {
  _avg: ChannelsAvgAggregate
  _count: ChannelsCountAggregate
  _max: ChannelsMaxAggregate
  _min: ChannelsMinAggregate
  _sum: ChannelsSumAggregate
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt!
  include_tax: String
  name: String
}

type ChannelsMaxAggregate {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsMaxOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

type ChannelsMinAggregate {
  client_id: String
  client_secret: String
  code: String
  created_at: DateTime
  currency: String
  default_lang: String
  default_shipping: String
  default_zone: String
  id: BigInt
  include_tax: String
  name: String
}

input ChannelsMinOrderByAggregateInput {
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

enum ChannelsOrderByRelevanceFieldEnum {
  client_id
  client_secret
  code
  currency
  default_lang
  default_shipping
  default_zone
  include_tax
  name
}

input ChannelsOrderByRelevanceInput {
  fields: [ChannelsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ChannelsOrderByWithAggregationInput {
  _avg: ChannelsAvgOrderByAggregateInput
  _count: ChannelsCountOrderByAggregateInput
  _max: ChannelsMaxOrderByAggregateInput
  _min: ChannelsMinOrderByAggregateInput
  _sum: ChannelsSumOrderByAggregateInput
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

input ChannelsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ChannelsOrderByRelevanceInput
  client_id: SortOrder
  client_secret: SortOrder
  code: SortOrder
  created_at: SortOrder
  currency: SortOrder
  default_lang: SortOrder
  default_shipping: SortOrder
  default_zone: SortOrder
  id: SortOrder
  include_tax: SortOrder
  name: SortOrder
}

enum ChannelsScalarFieldEnum {
  client_id
  client_secret
  code
  created_at
  currency
  default_lang
  default_shipping
  default_zone
  id
  include_tax
  name
}

input ChannelsScalarWhereWithAggregatesInput {
  AND: [ChannelsScalarWhereWithAggregatesInput!]
  NOT: [ChannelsScalarWhereWithAggregatesInput!]
  OR: [ChannelsScalarWhereWithAggregatesInput!]
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  default_lang: StringNullableWithAggregatesFilter
  default_shipping: StringNullableWithAggregatesFilter
  default_zone: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  include_tax: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type ChannelsSumAggregate {
  id: BigInt
}

input ChannelsSumOrderByAggregateInput {
  id: SortOrder
}

input ChannelsUpdateInput {
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  default_lang: NullableStringFieldUpdateOperationsInput
  default_shipping: NullableStringFieldUpdateOperationsInput
  default_zone: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  include_tax: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ChannelsUpdateManyMutationInput {
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  default_lang: NullableStringFieldUpdateOperationsInput
  default_shipping: NullableStringFieldUpdateOperationsInput
  default_zone: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  include_tax: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input ChannelsWhereInput {
  AND: [ChannelsWhereInput!]
  NOT: [ChannelsWhereInput!]
  OR: [ChannelsWhereInput!]
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  default_lang: StringNullableFilter
  default_shipping: StringNullableFilter
  default_zone: StringNullableFilter
  id: BigIntFilter
  include_tax: StringNullableFilter
  name: StringNullableFilter
}

input ChannelsWhereUniqueInput {
  id: BigInt
}

type Checklist {
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistAvgAggregate {
  id: Float
}

input ChecklistAvgOrderByAggregateInput {
  id: SortOrder
}

type ChecklistCountAggregate {
  _all: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  location: Int!
  manager: Int!
  media: Int!
  prod_id: Int!
  project: Int!
  region: Int!
  regional_manager: Int!
  task: Int!
  ticket: Int!
  trainings: Int!
  type: Int!
  username: Int!
}

input ChecklistCountOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

input ChecklistCreateInput {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistCreateManyInput {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistGroupBy {
  _avg: ChecklistAvgAggregate
  _count: ChecklistCountAggregate
  _max: ChecklistMaxAggregate
  _min: ChecklistMinAggregate
  _sum: ChecklistSumAggregate
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

type ChecklistMaxAggregate {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistMaxOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

type ChecklistMinAggregate {
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  location: String
  manager: String
  media: String
  prod_id: String
  project: String
  region: String
  regional_manager: String
  task: String
  ticket: String
  trainings: String
  type: String
  username: String
}

input ChecklistMinOrderByAggregateInput {
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

enum ChecklistOrderByRelevanceFieldEnum {
  country
  description
  location
  manager
  media
  prod_id
  project
  region
  regional_manager
  task
  ticket
  trainings
  type
  username
}

input ChecklistOrderByRelevanceInput {
  fields: [ChecklistOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ChecklistOrderByWithAggregationInput {
  _avg: ChecklistAvgOrderByAggregateInput
  _count: ChecklistCountOrderByAggregateInput
  _max: ChecklistMaxOrderByAggregateInput
  _min: ChecklistMinOrderByAggregateInput
  _sum: ChecklistSumOrderByAggregateInput
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

input ChecklistOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ChecklistOrderByRelevanceInput
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  location: SortOrder
  manager: SortOrder
  media: SortOrder
  prod_id: SortOrder
  project: SortOrder
  region: SortOrder
  regional_manager: SortOrder
  task: SortOrder
  ticket: SortOrder
  trainings: SortOrder
  type: SortOrder
  username: SortOrder
}

enum ChecklistScalarFieldEnum {
  country
  created_at
  description
  id
  location
  manager
  media
  prod_id
  project
  region
  regional_manager
  task
  ticket
  trainings
  type
  username
}

input ChecklistScalarWhereWithAggregatesInput {
  AND: [ChecklistScalarWhereWithAggregatesInput!]
  NOT: [ChecklistScalarWhereWithAggregatesInput!]
  OR: [ChecklistScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  manager: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  prod_id: StringNullableWithAggregatesFilter
  project: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  regional_manager: StringNullableWithAggregatesFilter
  task: StringNullableWithAggregatesFilter
  ticket: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
}

type ChecklistSumAggregate {
  id: BigInt
}

input ChecklistSumOrderByAggregateInput {
  id: SortOrder
}

input ChecklistUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  manager: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  prod_id: NullableStringFieldUpdateOperationsInput
  project: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  regional_manager: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  ticket: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input ChecklistUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  manager: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  prod_id: NullableStringFieldUpdateOperationsInput
  project: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  regional_manager: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  ticket: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input ChecklistWhereInput {
  AND: [ChecklistWhereInput!]
  NOT: [ChecklistWhereInput!]
  OR: [ChecklistWhereInput!]
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  manager: StringNullableFilter
  media: StringNullableFilter
  prod_id: StringNullableFilter
  project: StringNullableFilter
  region: StringNullableFilter
  regional_manager: StringNullableFilter
  task: StringNullableFilter
  ticket: StringNullableFilter
  trainings: StringNullableFilter
  type: StringNullableFilter
  username: StringNullableFilter
}

input ChecklistWhereUniqueInput {
  id: BigInt
}

type Cities {
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesAvgAggregate {
  id: Float
}

input CitiesAvgOrderByAggregateInput {
  id: SortOrder
}

type CitiesCountAggregate {
  _all: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  postalCode: Int!
  state: Int!
}

input CitiesCountOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

input CitiesCreateInput {
  country: String
  description: String
  image: String
  name: String!
  postalCode: String
  state: String
}

input CitiesCreateManyInput {
  country: String
  description: String
  id: Int
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesGroupBy {
  _avg: CitiesAvgAggregate
  _count: CitiesCountAggregate
  _max: CitiesMaxAggregate
  _min: CitiesMinAggregate
  _sum: CitiesSumAggregate
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  postalCode: String
  state: String
}

type CitiesMaxAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  postalCode: String
  state: String
}

input CitiesMaxOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

type CitiesMinAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  postalCode: String
  state: String
}

input CitiesMinOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

enum CitiesOrderByRelevanceFieldEnum {
  country
  description
  image
  name
  postalCode
  state
}

input CitiesOrderByRelevanceInput {
  fields: [CitiesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CitiesOrderByWithAggregationInput {
  _avg: CitiesAvgOrderByAggregateInput
  _count: CitiesCountOrderByAggregateInput
  _max: CitiesMaxOrderByAggregateInput
  _min: CitiesMinOrderByAggregateInput
  _sum: CitiesSumOrderByAggregateInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

input CitiesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CitiesOrderByRelevanceInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  postalCode: SortOrder
  state: SortOrder
}

enum CitiesScalarFieldEnum {
  country
  description
  id
  image
  name
  postalCode
  state
}

input CitiesScalarWhereWithAggregatesInput {
  AND: [CitiesScalarWhereWithAggregatesInput!]
  NOT: [CitiesScalarWhereWithAggregatesInput!]
  OR: [CitiesScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  postalCode: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type CitiesSumAggregate {
  id: Int
}

input CitiesSumOrderByAggregateInput {
  id: SortOrder
}

input CitiesUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input CitiesUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postalCode: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input CitiesWhereInput {
  AND: [CitiesWhereInput!]
  NOT: [CitiesWhereInput!]
  OR: [CitiesWhereInput!]
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  postalCode: StringNullableFilter
  state: StringNullableFilter
}

input CitiesWhereUniqueInput {
  id: Int
}

type Collections {
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsAvgAggregate {
  id: Float
}

input CollectionsAvgOrderByAggregateInput {
  id: SortOrder
}

type CollectionsCountAggregate {
  _all: Int!
  created_at: Int!
  description: Int!
  id: Int!
  image: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  name: Int!
  product: Int!
}

input CollectionsCountOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

input CollectionsCreateInput {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsCreateManyInput {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsGroupBy {
  _avg: CollectionsAvgAggregate
  _count: CollectionsCountAggregate
  _max: CollectionsMaxAggregate
  _min: CollectionsMinAggregate
  _sum: CollectionsSumAggregate
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

type CollectionsMaxAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsMaxOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

type CollectionsMinAggregate {
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  name: String
  product: String
}

input CollectionsMinOrderByAggregateInput {
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

enum CollectionsOrderByRelevanceFieldEnum {
  description
  image
  meta_description
  meta_keywords
  meta_title
  name
  product
}

input CollectionsOrderByRelevanceInput {
  fields: [CollectionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CollectionsOrderByWithAggregationInput {
  _avg: CollectionsAvgOrderByAggregateInput
  _count: CollectionsCountOrderByAggregateInput
  _max: CollectionsMaxOrderByAggregateInput
  _min: CollectionsMinOrderByAggregateInput
  _sum: CollectionsSumOrderByAggregateInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

input CollectionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CollectionsOrderByRelevanceInput
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  name: SortOrder
  product: SortOrder
}

enum CollectionsScalarFieldEnum {
  created_at
  description
  id
  image
  meta_description
  meta_keywords
  meta_title
  name
  product
}

input CollectionsScalarWhereWithAggregatesInput {
  AND: [CollectionsScalarWhereWithAggregatesInput!]
  NOT: [CollectionsScalarWhereWithAggregatesInput!]
  OR: [CollectionsScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
}

type CollectionsSumAggregate {
  id: BigInt
}

input CollectionsSumOrderByAggregateInput {
  id: SortOrder
}

input CollectionsUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
}

input CollectionsUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
}

input CollectionsWhereInput {
  AND: [CollectionsWhereInput!]
  NOT: [CollectionsWhereInput!]
  OR: [CollectionsWhereInput!]
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  name: StringNullableFilter
  product: StringNullableFilter
}

input CollectionsWhereUniqueInput {
  id: BigInt
}

type Content_type {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeAvgAggregate {
  id: Float
  number: Decimal
}

input Content_typeAvgOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

type Content_typeCountAggregate {
  _all: Int!
  boolean: Int!
  created_at: Int!
  database_name: Int!
  date: Int!
  email: Int!
  id: Int!
  json: Int!
  link: Int!
  media: Int!
  number: Int!
  password: Int!
  rich_text: Int!
  text: Int!
  time: Int!
  timestamp: Int!
  uid: Int!
}

input Content_typeCountOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeCreateInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeCreateManyInput {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeGroupBy {
  _avg: Content_typeAvgAggregate
  _count: Content_typeCountAggregate
  _max: Content_typeMaxAggregate
  _min: Content_typeMinAggregate
  _sum: Content_typeSumAggregate
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt!
  json: JSON
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

type Content_typeMaxAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMaxOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

type Content_typeMinAggregate {
  boolean: Boolean
  created_at: DateTime
  database_name: String
  date: DateTime
  email: String
  id: BigInt
  link: String
  media: String
  number: Decimal
  password: String
  rich_text: String
  text: String
  time: DateTime
  timestamp: DateTime
  uid: String
}

input Content_typeMinOrderByAggregateInput {
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeOrderByRelevanceFieldEnum {
  database_name
  email
  link
  media
  password
  rich_text
  text
  uid
}

input Content_typeOrderByRelevanceInput {
  fields: [Content_typeOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Content_typeOrderByWithAggregationInput {
  _avg: Content_typeAvgOrderByAggregateInput
  _count: Content_typeCountOrderByAggregateInput
  _max: Content_typeMaxOrderByAggregateInput
  _min: Content_typeMinOrderByAggregateInput
  _sum: Content_typeSumOrderByAggregateInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

input Content_typeOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Content_typeOrderByRelevanceInput
  boolean: SortOrder
  created_at: SortOrder
  database_name: SortOrder
  date: SortOrder
  email: SortOrder
  id: SortOrder
  json: SortOrder
  link: SortOrder
  media: SortOrder
  number: SortOrder
  password: SortOrder
  rich_text: SortOrder
  text: SortOrder
  time: SortOrder
  timestamp: SortOrder
  uid: SortOrder
}

enum Content_typeScalarFieldEnum {
  boolean
  created_at
  database_name
  date
  email
  id
  json
  link
  media
  number
  password
  rich_text
  text
  time
  timestamp
  uid
}

input Content_typeScalarWhereWithAggregatesInput {
  AND: [Content_typeScalarWhereWithAggregatesInput!]
  NOT: [Content_typeScalarWhereWithAggregatesInput!]
  OR: [Content_typeScalarWhereWithAggregatesInput!]
  boolean: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  database_name: StringNullableWithAggregatesFilter
  date: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  json: JsonNullableWithAggregatesFilter
  link: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  number: DecimalNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  rich_text: StringNullableWithAggregatesFilter
  text: StringNullableWithAggregatesFilter
  time: DateTimeNullableWithAggregatesFilter
  timestamp: DateTimeNullableWithAggregatesFilter
  uid: StringNullableWithAggregatesFilter
}

type Content_typeSumAggregate {
  id: BigInt
  number: Decimal
}

input Content_typeSumOrderByAggregateInput {
  id: SortOrder
  number: SortOrder
}

input Content_typeUpdateInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeUpdateManyMutationInput {
  boolean: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  database_name: NullableStringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  json: JSON
  link: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  number: NullableDecimalFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  rich_text: NullableStringFieldUpdateOperationsInput
  text: NullableStringFieldUpdateOperationsInput
  time: NullableDateTimeFieldUpdateOperationsInput
  timestamp: NullableDateTimeFieldUpdateOperationsInput
  uid: NullableStringFieldUpdateOperationsInput
}

input Content_typeWhereInput {
  AND: [Content_typeWhereInput!]
  NOT: [Content_typeWhereInput!]
  OR: [Content_typeWhereInput!]
  boolean: BoolNullableFilter
  created_at: DateTimeNullableFilter
  database_name: StringNullableFilter
  date: DateTimeNullableFilter
  email: StringNullableFilter
  id: BigIntFilter
  json: JsonNullableFilter
  link: StringNullableFilter
  media: StringNullableFilter
  number: DecimalNullableFilter
  password: StringNullableFilter
  rich_text: StringNullableFilter
  text: StringNullableFilter
  time: DateTimeNullableFilter
  timestamp: DateTimeNullableFilter
  uid: StringNullableFilter
}

input Content_typeWhereUniqueInput {
  id: BigInt
}

type Countries {
  description: String
  id: Int!
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesAvgAggregate {
  id: Float
}

input CountriesAvgOrderByAggregateInput {
  id: SortOrder
}

type CountriesCountAggregate {
  _all: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  region: Int!
  trainings: Int!
}

input CountriesCountOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

input CountriesCreateInput {
  description: String
  image: String
  name: String!
  region: String
  trainings: String
}

input CountriesCreateManyInput {
  description: String
  id: Int
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesGroupBy {
  _avg: CountriesAvgAggregate
  _count: CountriesCountAggregate
  _max: CountriesMaxAggregate
  _min: CountriesMinAggregate
  _sum: CountriesSumAggregate
  description: String
  id: Int!
  image: String
  name: String!
  region: String
  trainings: String
}

type CountriesMaxAggregate {
  description: String
  id: Int
  image: String
  name: String
  region: String
  trainings: String
}

input CountriesMaxOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

type CountriesMinAggregate {
  description: String
  id: Int
  image: String
  name: String
  region: String
  trainings: String
}

input CountriesMinOrderByAggregateInput {
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

enum CountriesOrderByRelevanceFieldEnum {
  description
  image
  name
  region
  trainings
}

input CountriesOrderByRelevanceInput {
  fields: [CountriesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CountriesOrderByWithAggregationInput {
  _avg: CountriesAvgOrderByAggregateInput
  _count: CountriesCountOrderByAggregateInput
  _max: CountriesMaxOrderByAggregateInput
  _min: CountriesMinOrderByAggregateInput
  _sum: CountriesSumOrderByAggregateInput
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

input CountriesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CountriesOrderByRelevanceInput
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  region: SortOrder
  trainings: SortOrder
}

enum CountriesScalarFieldEnum {
  description
  id
  image
  name
  region
  trainings
}

input CountriesScalarWhereWithAggregatesInput {
  AND: [CountriesScalarWhereWithAggregatesInput!]
  NOT: [CountriesScalarWhereWithAggregatesInput!]
  OR: [CountriesScalarWhereWithAggregatesInput!]
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
}

type CountriesSumAggregate {
  id: Int
}

input CountriesSumOrderByAggregateInput {
  id: SortOrder
}

input CountriesUpdateInput {
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CountriesUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input CountriesWhereInput {
  AND: [CountriesWhereInput!]
  NOT: [CountriesWhereInput!]
  OR: [CountriesWhereInput!]
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  region: StringNullableFilter
  trainings: StringNullableFilter
}

input CountriesWhereUniqueInput {
  id: Int
}

type Currencies {
  code: String
  created_at: DateTime
  id: BigInt!
  name: String
  region: String
  symbol: String
  useStandard: String
}

type CurrenciesAvgAggregate {
  id: Float
}

input CurrenciesAvgOrderByAggregateInput {
  id: SortOrder
}

type CurrenciesCountAggregate {
  _all: Int!
  code: Int!
  created_at: Int!
  id: Int!
  name: Int!
  region: Int!
  symbol: Int!
  useStandard: Int!
}

input CurrenciesCountOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  symbol: SortOrder
  useStandard: SortOrder
}

input CurrenciesCreateInput {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
  symbol: String
  useStandard: String
}

input CurrenciesCreateManyInput {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
  symbol: String
  useStandard: String
}

type CurrenciesGroupBy {
  _avg: CurrenciesAvgAggregate
  _count: CurrenciesCountAggregate
  _max: CurrenciesMaxAggregate
  _min: CurrenciesMinAggregate
  _sum: CurrenciesSumAggregate
  code: String
  created_at: DateTime
  id: BigInt!
  name: String
  region: String
  symbol: String
  useStandard: String
}

type CurrenciesMaxAggregate {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
  symbol: String
  useStandard: String
}

input CurrenciesMaxOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  symbol: SortOrder
  useStandard: SortOrder
}

type CurrenciesMinAggregate {
  code: String
  created_at: DateTime
  id: BigInt
  name: String
  region: String
  symbol: String
  useStandard: String
}

input CurrenciesMinOrderByAggregateInput {
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  symbol: SortOrder
  useStandard: SortOrder
}

enum CurrenciesOrderByRelevanceFieldEnum {
  code
  name
  region
  symbol
  useStandard
}

input CurrenciesOrderByRelevanceInput {
  fields: [CurrenciesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CurrenciesOrderByWithAggregationInput {
  _avg: CurrenciesAvgOrderByAggregateInput
  _count: CurrenciesCountOrderByAggregateInput
  _max: CurrenciesMaxOrderByAggregateInput
  _min: CurrenciesMinOrderByAggregateInput
  _sum: CurrenciesSumOrderByAggregateInput
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  symbol: SortOrder
  useStandard: SortOrder
}

input CurrenciesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: CurrenciesOrderByRelevanceInput
  code: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  symbol: SortOrder
  useStandard: SortOrder
}

enum CurrenciesScalarFieldEnum {
  code
  created_at
  id
  name
  region
  symbol
  useStandard
}

input CurrenciesScalarWhereWithAggregatesInput {
  AND: [CurrenciesScalarWhereWithAggregatesInput!]
  NOT: [CurrenciesScalarWhereWithAggregatesInput!]
  OR: [CurrenciesScalarWhereWithAggregatesInput!]
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  symbol: StringNullableWithAggregatesFilter
  useStandard: StringNullableWithAggregatesFilter
}

type CurrenciesSumAggregate {
  id: BigInt
}

input CurrenciesSumOrderByAggregateInput {
  id: SortOrder
}

input CurrenciesUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  symbol: NullableStringFieldUpdateOperationsInput
  useStandard: NullableStringFieldUpdateOperationsInput
}

input CurrenciesUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  symbol: NullableStringFieldUpdateOperationsInput
  useStandard: NullableStringFieldUpdateOperationsInput
}

input CurrenciesWhereInput {
  AND: [CurrenciesWhereInput!]
  NOT: [CurrenciesWhereInput!]
  OR: [CurrenciesWhereInput!]
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  region: StringNullableFilter
  symbol: StringNullableFilter
  useStandard: StringNullableFilter
}

input CurrenciesWhereUniqueInput {
  id: BigInt
}

type Customers {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersAvgAggregate {
  id: Float
}

input CustomersAvgOrderByAggregateInput {
  id: SortOrder
}

type CustomersCountAggregate {
  Address: Int!
  _all: Int!
  address_two: Int!
  comments: Int!
  confirmed_email: Int!
  country: Int!
  credit_memos: Int!
  customer_group: Int!
  customer_payment: Int!
  customer_since: Int!
  date_of_birth: Int!
  description: Int!
  email: Int!
  emails: Int!
  first_name: Int!
  gender: Int!
  id: Int!
  image: Int!
  last_name: Int!
  mediamanager: Int!
  messages: Int!
  middle_name: Int!
  name_prefix: Int!
  name_suffix: Int!
  newsletter_subscribers: Int!
  orders: Int!
  password: Int!
  payment_type: Int!
  phone: Int!
  product: Int!
  projects: Int!
  quotes: Int!
  returns: Int!
  short_description: Int!
  state: Int!
  tax_vat_number: Int!
  thumbnail: Int!
  username: Int!
  websites: Int!
  workspaces: Int!
  zipcode: Int!
}

input CustomersCountOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersCreateInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersCreateManyInput {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersGroupBy {
  Address: String
  _avg: CustomersAvgAggregate
  _count: CustomersCountAggregate
  _max: CustomersMaxAggregate
  _min: CustomersMinAggregate
  _sum: CustomersSumAggregate
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String!
  emails: String
  first_name: String!
  gender: String
  id: Int!
  image: String
  last_name: String!
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

type CustomersMaxAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMaxOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

type CustomersMinAggregate {
  Address: String
  address_two: String
  comments: String
  confirmed_email: String
  country: String
  credit_memos: String
  customer_group: String
  customer_payment: String
  customer_since: DateTime
  date_of_birth: String
  description: String
  email: String
  emails: String
  first_name: String
  gender: String
  id: Int
  image: String
  last_name: String
  mediamanager: String
  messages: String
  middle_name: String
  name_prefix: String
  name_suffix: String
  newsletter_subscribers: String
  orders: String
  password: String
  payment_type: String
  phone: String
  product: String
  projects: String
  quotes: String
  returns: String
  short_description: String
  state: String
  tax_vat_number: String
  thumbnail: String
  username: String
  websites: String
  workspaces: String
  zipcode: String
}

input CustomersMinOrderByAggregateInput {
  Address: SortOrder
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersOrderByRelevanceFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  date_of_birth
  description
  email
  emails
  first_name
  gender
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersOrderByRelevanceInput {
  fields: [CustomersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input CustomersOrderByWithAggregationInput {
  Address: SortOrder
  _avg: CustomersAvgOrderByAggregateInput
  _count: CustomersCountOrderByAggregateInput
  _max: CustomersMaxOrderByAggregateInput
  _min: CustomersMinOrderByAggregateInput
  _sum: CustomersSumOrderByAggregateInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

input CustomersOrderByWithRelationAndSearchRelevanceInput {
  Address: SortOrder
  _relevance: CustomersOrderByRelevanceInput
  address_two: SortOrder
  comments: SortOrder
  confirmed_email: SortOrder
  country: SortOrder
  credit_memos: SortOrder
  customer_group: SortOrder
  customer_payment: SortOrder
  customer_since: SortOrder
  date_of_birth: SortOrder
  description: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  middle_name: SortOrder
  name_prefix: SortOrder
  name_suffix: SortOrder
  newsletter_subscribers: SortOrder
  orders: SortOrder
  password: SortOrder
  payment_type: SortOrder
  phone: SortOrder
  product: SortOrder
  projects: SortOrder
  quotes: SortOrder
  returns: SortOrder
  short_description: SortOrder
  state: SortOrder
  tax_vat_number: SortOrder
  thumbnail: SortOrder
  username: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zipcode: SortOrder
}

enum CustomersScalarFieldEnum {
  Address
  address_two
  comments
  confirmed_email
  country
  credit_memos
  customer_group
  customer_payment
  customer_since
  date_of_birth
  description
  email
  emails
  first_name
  gender
  id
  image
  last_name
  mediamanager
  messages
  middle_name
  name_prefix
  name_suffix
  newsletter_subscribers
  orders
  password
  payment_type
  phone
  product
  projects
  quotes
  returns
  short_description
  state
  tax_vat_number
  thumbnail
  username
  websites
  workspaces
  zipcode
}

input CustomersScalarWhereWithAggregatesInput {
  AND: [CustomersScalarWhereWithAggregatesInput!]
  Address: StringNullableWithAggregatesFilter
  NOT: [CustomersScalarWhereWithAggregatesInput!]
  OR: [CustomersScalarWhereWithAggregatesInput!]
  address_two: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  confirmed_email: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  credit_memos: StringNullableWithAggregatesFilter
  customer_group: StringNullableWithAggregatesFilter
  customer_payment: StringNullableWithAggregatesFilter
  customer_since: DateTimeNullableWithAggregatesFilter
  date_of_birth: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  emails: StringNullableWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  gender: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  last_name: StringWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  messages: StringNullableWithAggregatesFilter
  middle_name: StringNullableWithAggregatesFilter
  name_prefix: StringNullableWithAggregatesFilter
  name_suffix: StringNullableWithAggregatesFilter
  newsletter_subscribers: StringNullableWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  payment_type: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  returns: StringNullableWithAggregatesFilter
  short_description: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tax_vat_number: StringNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type CustomersSumAggregate {
  id: Int
}

input CustomersSumOrderByAggregateInput {
  id: SortOrder
}

input CustomersUpdateInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersUpdateManyMutationInput {
  Address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  confirmed_email: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  customer_since: NullableDateTimeFieldUpdateOperationsInput
  date_of_birth: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  gender: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  last_name: StringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  middle_name: NullableStringFieldUpdateOperationsInput
  name_prefix: NullableStringFieldUpdateOperationsInput
  name_suffix: NullableStringFieldUpdateOperationsInput
  newsletter_subscribers: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  payment_type: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tax_vat_number: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input CustomersWhereInput {
  AND: [CustomersWhereInput!]
  Address: StringNullableFilter
  NOT: [CustomersWhereInput!]
  OR: [CustomersWhereInput!]
  address_two: StringNullableFilter
  comments: StringNullableFilter
  confirmed_email: StringNullableFilter
  country: StringNullableFilter
  credit_memos: StringNullableFilter
  customer_group: StringNullableFilter
  customer_payment: StringNullableFilter
  customer_since: DateTimeNullableFilter
  date_of_birth: StringNullableFilter
  description: StringNullableFilter
  email: StringFilter
  emails: StringNullableFilter
  first_name: StringFilter
  gender: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  last_name: StringFilter
  mediamanager: StringNullableFilter
  messages: StringNullableFilter
  middle_name: StringNullableFilter
  name_prefix: StringNullableFilter
  name_suffix: StringNullableFilter
  newsletter_subscribers: StringNullableFilter
  orders: StringNullableFilter
  password: StringNullableFilter
  payment_type: StringNullableFilter
  phone: StringNullableFilter
  product: StringNullableFilter
  projects: StringNullableFilter
  quotes: StringNullableFilter
  returns: StringNullableFilter
  short_description: StringNullableFilter
  state: StringNullableFilter
  tax_vat_number: StringNullableFilter
  thumbnail: StringNullableFilter
  username: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
  zipcode: StringNullableFilter
}

input CustomersWhereUniqueInput {
  id: Int
}

type Dashboards {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsAvgAggregate {
  id: Float
}

input DashboardsAvgOrderByAggregateInput {
  id: SortOrder
}

type DashboardsCountAggregate {
  _all: Int!
  articles: Int!
  category: Int!
  checklists: Int!
  client_id: Int!
  client_secret: Int!
  content: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  logo: Int!
  media: Int!
  name: Int!
  privacy: Int!
  products: Int!
  projects: Int!
  published: Int!
  reports: Int!
  sales: Int!
  tasks: Int!
  tickets: Int!
  url: Int!
  users: Int!
  visits: Int!
}

input DashboardsCountOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsCreateInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsCreateManyInput {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsGroupBy {
  _avg: DashboardsAvgAggregate
  _count: DashboardsCountAggregate
  _max: DashboardsMaxAggregate
  _min: DashboardsMinAggregate
  _sum: DashboardsSumAggregate
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt!
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

type DashboardsMaxAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMaxOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

type DashboardsMinAggregate {
  articles: String
  category: String
  checklists: String
  client_id: String
  client_secret: String
  content: String
  created_at: DateTime
  customers: String
  id: BigInt
  logo: String
  media: String
  name: String
  privacy: String
  products: String
  projects: String
  published: String
  reports: String
  sales: String
  tasks: String
  tickets: String
  url: String
  users: String
  visits: String
}

input DashboardsMinOrderByAggregateInput {
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsOrderByRelevanceFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  customers
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsOrderByRelevanceInput {
  fields: [DashboardsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DashboardsOrderByWithAggregationInput {
  _avg: DashboardsAvgOrderByAggregateInput
  _count: DashboardsCountOrderByAggregateInput
  _max: DashboardsMaxOrderByAggregateInput
  _min: DashboardsMinOrderByAggregateInput
  _sum: DashboardsSumOrderByAggregateInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

input DashboardsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DashboardsOrderByRelevanceInput
  articles: SortOrder
  category: SortOrder
  checklists: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  content: SortOrder
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  logo: SortOrder
  media: SortOrder
  name: SortOrder
  privacy: SortOrder
  products: SortOrder
  projects: SortOrder
  published: SortOrder
  reports: SortOrder
  sales: SortOrder
  tasks: SortOrder
  tickets: SortOrder
  url: SortOrder
  users: SortOrder
  visits: SortOrder
}

enum DashboardsScalarFieldEnum {
  articles
  category
  checklists
  client_id
  client_secret
  content
  created_at
  customers
  id
  logo
  media
  name
  privacy
  products
  projects
  published
  reports
  sales
  tasks
  tickets
  url
  users
  visits
}

input DashboardsScalarWhereWithAggregatesInput {
  AND: [DashboardsScalarWhereWithAggregatesInput!]
  NOT: [DashboardsScalarWhereWithAggregatesInput!]
  OR: [DashboardsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  category: StringNullableWithAggregatesFilter
  checklists: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  privacy: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  published: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  sales: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  visits: StringNullableWithAggregatesFilter
}

type DashboardsSumAggregate {
  id: BigInt
}

input DashboardsSumOrderByAggregateInput {
  id: SortOrder
}

input DashboardsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  category: NullableStringFieldUpdateOperationsInput
  checklists: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  privacy: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  published: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  sales: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  visits: NullableStringFieldUpdateOperationsInput
}

input DashboardsWhereInput {
  AND: [DashboardsWhereInput!]
  NOT: [DashboardsWhereInput!]
  OR: [DashboardsWhereInput!]
  articles: StringNullableFilter
  category: StringNullableFilter
  checklists: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  logo: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  privacy: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  published: StringNullableFilter
  reports: StringNullableFilter
  sales: StringNullableFilter
  tasks: StringNullableFilter
  tickets: StringNullableFilter
  url: StringNullableFilter
  users: StringNullableFilter
  visits: StringNullableFilter
}

input DashboardsWhereUniqueInput {
  id: BigInt
  name: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

"""
GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library.
"""
scalar Decimal

input DecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input DecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input DecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input DecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input DecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

type Deepdive {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt!
  login: String
  start_date: String
  whid: String
}

type DeepdiveAvgAggregate {
  id: Float
}

input DeepdiveAvgOrderByAggregateInput {
  id: SortOrder
}

type DeepdiveCountAggregate {
  _all: Int!
  attendees: Int!
  content: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  login: Int!
  start_date: Int!
  whid: Int!
}

input DeepdiveCountOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input DeepdiveCreateInput {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveCreateManyInput {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

type DeepdiveGroupBy {
  _avg: DeepdiveAvgAggregate
  _count: DeepdiveCountAggregate
  _max: DeepdiveMaxAggregate
  _min: DeepdiveMinAggregate
  _sum: DeepdiveSumAggregate
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt!
  login: String
  start_date: String
  whid: String
}

type DeepdiveMaxAggregate {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveMaxOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

type DeepdiveMinAggregate {
  attendees: String
  content: String
  created_at: DateTime
  end_date: String
  id: BigInt
  login: String
  start_date: String
  whid: String
}

input DeepdiveMinOrderByAggregateInput {
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum DeepdiveOrderByRelevanceFieldEnum {
  attendees
  content
  end_date
  login
  start_date
  whid
}

input DeepdiveOrderByRelevanceInput {
  fields: [DeepdiveOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DeepdiveOrderByWithAggregationInput {
  _avg: DeepdiveAvgOrderByAggregateInput
  _count: DeepdiveCountOrderByAggregateInput
  _max: DeepdiveMaxOrderByAggregateInput
  _min: DeepdiveMinOrderByAggregateInput
  _sum: DeepdiveSumOrderByAggregateInput
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input DeepdiveOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DeepdiveOrderByRelevanceInput
  attendees: SortOrder
  content: SortOrder
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  login: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum DeepdiveScalarFieldEnum {
  attendees
  content
  created_at
  end_date
  id
  login
  start_date
  whid
}

input DeepdiveScalarWhereWithAggregatesInput {
  AND: [DeepdiveScalarWhereWithAggregatesInput!]
  NOT: [DeepdiveScalarWhereWithAggregatesInput!]
  OR: [DeepdiveScalarWhereWithAggregatesInput!]
  attendees: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type DeepdiveSumAggregate {
  id: BigInt
}

input DeepdiveSumOrderByAggregateInput {
  id: SortOrder
}

input DeepdiveUpdateInput {
  attendees: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input DeepdiveUpdateManyMutationInput {
  attendees: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input DeepdiveWhereInput {
  AND: [DeepdiveWhereInput!]
  NOT: [DeepdiveWhereInput!]
  OR: [DeepdiveWhereInput!]
  attendees: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  login: StringNullableFilter
  start_date: StringNullableFilter
  whid: StringNullableFilter
}

input DeepdiveWhereUniqueInput {
  id: BigInt
}

type Discounts {
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

type DiscountsAvgAggregate {
  id: Float
}

input DiscountsAvgOrderByAggregateInput {
  id: SortOrder
}

type DiscountsCountAggregate {
  _all: Int!
  articles: Int!
  billToName: Int!
  categories: Int!
  coupons: Int!
  creditMemo: Int!
  customers: Int!
  discount: Int!
  excerpt: Int!
  expiration: Int!
  id: Int!
  image: Int!
  name: Int!
  orderNumber: Int!
  products: Int!
  published: Int!
  refunded: Int!
  rewards: Int!
  special_offers: Int!
  status: Int!
  type: Int!
  users: Int!
}

input DiscountsCountOrderByAggregateInput {
  articles: SortOrder
  billToName: SortOrder
  categories: SortOrder
  coupons: SortOrder
  creditMemo: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  orderNumber: SortOrder
  products: SortOrder
  published: SortOrder
  refunded: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  status: SortOrder
  type: SortOrder
  users: SortOrder
}

input DiscountsCreateInput {
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

input DiscountsCreateManyInput {
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String!
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

type DiscountsGroupBy {
  _avg: DiscountsAvgAggregate
  _count: DiscountsCountAggregate
  _max: DiscountsMaxAggregate
  _min: DiscountsMinAggregate
  _sum: DiscountsSumAggregate
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt!
  image: String
  name: String!
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

type DiscountsMaxAggregate {
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

input DiscountsMaxOrderByAggregateInput {
  articles: SortOrder
  billToName: SortOrder
  categories: SortOrder
  coupons: SortOrder
  creditMemo: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  orderNumber: SortOrder
  products: SortOrder
  published: SortOrder
  refunded: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  status: SortOrder
  type: SortOrder
  users: SortOrder
}

type DiscountsMinAggregate {
  articles: String
  billToName: String
  categories: String
  coupons: String
  creditMemo: String
  customers: String
  discount: String
  excerpt: String
  expiration: String
  id: BigInt
  image: String
  name: String
  orderNumber: String
  products: String
  published: DateTime
  refunded: String
  rewards: String
  special_offers: String
  status: String
  type: String
  users: String
}

input DiscountsMinOrderByAggregateInput {
  articles: SortOrder
  billToName: SortOrder
  categories: SortOrder
  coupons: SortOrder
  creditMemo: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  orderNumber: SortOrder
  products: SortOrder
  published: SortOrder
  refunded: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  status: SortOrder
  type: SortOrder
  users: SortOrder
}

enum DiscountsOrderByRelevanceFieldEnum {
  articles
  billToName
  categories
  coupons
  creditMemo
  customers
  discount
  excerpt
  expiration
  image
  name
  orderNumber
  products
  refunded
  rewards
  special_offers
  status
  type
  users
}

input DiscountsOrderByRelevanceInput {
  fields: [DiscountsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input DiscountsOrderByWithAggregationInput {
  _avg: DiscountsAvgOrderByAggregateInput
  _count: DiscountsCountOrderByAggregateInput
  _max: DiscountsMaxOrderByAggregateInput
  _min: DiscountsMinOrderByAggregateInput
  _sum: DiscountsSumOrderByAggregateInput
  articles: SortOrder
  billToName: SortOrder
  categories: SortOrder
  coupons: SortOrder
  creditMemo: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  orderNumber: SortOrder
  products: SortOrder
  published: SortOrder
  refunded: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  status: SortOrder
  type: SortOrder
  users: SortOrder
}

input DiscountsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: DiscountsOrderByRelevanceInput
  articles: SortOrder
  billToName: SortOrder
  categories: SortOrder
  coupons: SortOrder
  creditMemo: SortOrder
  customers: SortOrder
  discount: SortOrder
  excerpt: SortOrder
  expiration: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  orderNumber: SortOrder
  products: SortOrder
  published: SortOrder
  refunded: SortOrder
  rewards: SortOrder
  special_offers: SortOrder
  status: SortOrder
  type: SortOrder
  users: SortOrder
}

enum DiscountsScalarFieldEnum {
  articles
  billToName
  categories
  coupons
  creditMemo
  customers
  discount
  excerpt
  expiration
  id
  image
  name
  orderNumber
  products
  published
  refunded
  rewards
  special_offers
  status
  type
  users
}

input DiscountsScalarWhereWithAggregatesInput {
  AND: [DiscountsScalarWhereWithAggregatesInput!]
  NOT: [DiscountsScalarWhereWithAggregatesInput!]
  OR: [DiscountsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  billToName: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  creditMemo: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  expiration: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  orderNumber: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
  refunded: StringNullableWithAggregatesFilter
  rewards: StringNullableWithAggregatesFilter
  special_offers: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type DiscountsSumAggregate {
  id: BigInt
}

input DiscountsSumOrderByAggregateInput {
  id: SortOrder
}

input DiscountsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  billToName: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  creditMemo: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderNumber: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  refunded: NullableStringFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input DiscountsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  billToName: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  creditMemo: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  orderNumber: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
  refunded: NullableStringFieldUpdateOperationsInput
  rewards: NullableStringFieldUpdateOperationsInput
  special_offers: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input DiscountsWhereInput {
  AND: [DiscountsWhereInput!]
  NOT: [DiscountsWhereInput!]
  OR: [DiscountsWhereInput!]
  articles: StringNullableFilter
  billToName: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  creditMemo: StringNullableFilter
  customers: StringNullableFilter
  discount: StringNullableFilter
  excerpt: StringNullableFilter
  expiration: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringFilter
  orderNumber: StringNullableFilter
  products: StringNullableFilter
  published: DateTimeNullableFilter
  refunded: StringNullableFilter
  rewards: StringNullableFilter
  special_offers: StringNullableFilter
  status: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
}

input DiscountsWhereUniqueInput {
  id: BigInt
}

type Endofshift {
  content: String
  created_at: DateTime
  id: BigInt!
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftAvgAggregate {
  id: Float
}

input EndofshiftAvgOrderByAggregateInput {
  id: SortOrder
}

type EndofshiftCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  id: Int!
  login: Int!
  mcms: Int!
  next_shift: Int!
  projects: Int!
  tickets: Int!
  whid: Int!
}

input EndofshiftCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

input EndofshiftCreateInput {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftCreateManyInput {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftGroupBy {
  _avg: EndofshiftAvgAggregate
  _count: EndofshiftCountAggregate
  _max: EndofshiftMaxAggregate
  _min: EndofshiftMinAggregate
  _sum: EndofshiftSumAggregate
  content: String
  created_at: DateTime
  id: BigInt!
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

type EndofshiftMaxAggregate {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

type EndofshiftMinAggregate {
  content: String
  created_at: DateTime
  id: BigInt
  login: String
  mcms: String
  next_shift: String
  projects: String
  tickets: String
  whid: String
}

input EndofshiftMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

enum EndofshiftOrderByRelevanceFieldEnum {
  content
  login
  mcms
  next_shift
  projects
  tickets
  whid
}

input EndofshiftOrderByRelevanceInput {
  fields: [EndofshiftOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input EndofshiftOrderByWithAggregationInput {
  _avg: EndofshiftAvgOrderByAggregateInput
  _count: EndofshiftCountOrderByAggregateInput
  _max: EndofshiftMaxOrderByAggregateInput
  _min: EndofshiftMinOrderByAggregateInput
  _sum: EndofshiftSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

input EndofshiftOrderByWithRelationAndSearchRelevanceInput {
  _relevance: EndofshiftOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  login: SortOrder
  mcms: SortOrder
  next_shift: SortOrder
  projects: SortOrder
  tickets: SortOrder
  whid: SortOrder
}

enum EndofshiftScalarFieldEnum {
  content
  created_at
  id
  login
  mcms
  next_shift
  projects
  tickets
  whid
}

input EndofshiftScalarWhereWithAggregatesInput {
  AND: [EndofshiftScalarWhereWithAggregatesInput!]
  NOT: [EndofshiftScalarWhereWithAggregatesInput!]
  OR: [EndofshiftScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  mcms: StringNullableWithAggregatesFilter
  next_shift: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type EndofshiftSumAggregate {
  id: BigInt
}

input EndofshiftSumOrderByAggregateInput {
  id: SortOrder
}

input EndofshiftUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  mcms: NullableStringFieldUpdateOperationsInput
  next_shift: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input EndofshiftUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  mcms: NullableStringFieldUpdateOperationsInput
  next_shift: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input EndofshiftWhereInput {
  AND: [EndofshiftWhereInput!]
  NOT: [EndofshiftWhereInput!]
  OR: [EndofshiftWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  login: StringNullableFilter
  mcms: StringNullableFilter
  next_shift: StringNullableFilter
  projects: StringNullableFilter
  tickets: StringNullableFilter
  whid: StringNullableFilter
}

input EndofshiftWhereUniqueInput {
  id: BigInt
}

type Events {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt!
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

type EventsAvgAggregate {
  id: Float
}

input EventsAvgOrderByAggregateInput {
  id: SortOrder
}

type EventsCountAggregate {
  _all: Int!
  category: Int!
  city: Int!
  content: Int!
  country: Int!
  created_at: Int!
  end: Int!
  id: Int!
  image: Int!
  invitationBillingAddress: Int!
  invitationCustomerName: Int!
  invitationEmail: Int!
  invitationGrandTotalPurchased: Int!
  invitationInvoiceDate: Int!
  invitationOrderNumber: Int!
  invitationPaymentMethod: Int!
  invitationShippingAddress: Int!
  invitationStatus: Int!
  media: Int!
  name: Int!
  postalcode: Int!
  start: Int!
  state: Int!
  tickets: Int!
  type: Int!
}

input EventsCountOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  invitationBillingAddress: SortOrder
  invitationCustomerName: SortOrder
  invitationEmail: SortOrder
  invitationGrandTotalPurchased: SortOrder
  invitationInvoiceDate: SortOrder
  invitationOrderNumber: SortOrder
  invitationPaymentMethod: SortOrder
  invitationShippingAddress: SortOrder
  invitationStatus: SortOrder
  media: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
  type: SortOrder
}

input EventsCreateInput {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

input EventsCreateManyInput {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

type EventsGroupBy {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt!
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

type EventsMaxAggregate {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

input EventsMaxOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  invitationBillingAddress: SortOrder
  invitationCustomerName: SortOrder
  invitationEmail: SortOrder
  invitationGrandTotalPurchased: SortOrder
  invitationInvoiceDate: SortOrder
  invitationOrderNumber: SortOrder
  invitationPaymentMethod: SortOrder
  invitationShippingAddress: SortOrder
  invitationStatus: SortOrder
  media: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
  type: SortOrder
}

type EventsMinAggregate {
  category: String
  city: String
  content: String
  country: String
  created_at: DateTime
  end: String
  id: BigInt
  image: String
  invitationBillingAddress: String
  invitationCustomerName: String
  invitationEmail: String
  invitationGrandTotalPurchased: String
  invitationInvoiceDate: String
  invitationOrderNumber: String
  invitationPaymentMethod: String
  invitationShippingAddress: String
  invitationStatus: String
  media: String
  name: String
  postalcode: String
  start: String
  state: String
  tickets: String
  type: String
}

input EventsMinOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  invitationBillingAddress: SortOrder
  invitationCustomerName: SortOrder
  invitationEmail: SortOrder
  invitationGrandTotalPurchased: SortOrder
  invitationInvoiceDate: SortOrder
  invitationOrderNumber: SortOrder
  invitationPaymentMethod: SortOrder
  invitationShippingAddress: SortOrder
  invitationStatus: SortOrder
  media: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
  type: SortOrder
}

enum EventsOrderByRelevanceFieldEnum {
  category
  city
  content
  country
  end
  image
  invitationBillingAddress
  invitationCustomerName
  invitationEmail
  invitationGrandTotalPurchased
  invitationInvoiceDate
  invitationOrderNumber
  invitationPaymentMethod
  invitationShippingAddress
  invitationStatus
  media
  name
  postalcode
  start
  state
  tickets
  type
}

input EventsOrderByRelevanceInput {
  fields: [EventsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input EventsOrderByWithAggregationInput {
  _avg: EventsAvgOrderByAggregateInput
  _count: EventsCountOrderByAggregateInput
  _max: EventsMaxOrderByAggregateInput
  _min: EventsMinOrderByAggregateInput
  _sum: EventsSumOrderByAggregateInput
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  invitationBillingAddress: SortOrder
  invitationCustomerName: SortOrder
  invitationEmail: SortOrder
  invitationGrandTotalPurchased: SortOrder
  invitationInvoiceDate: SortOrder
  invitationOrderNumber: SortOrder
  invitationPaymentMethod: SortOrder
  invitationShippingAddress: SortOrder
  invitationStatus: SortOrder
  media: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
  type: SortOrder
}

input EventsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: EventsOrderByRelevanceInput
  category: SortOrder
  city: SortOrder
  content: SortOrder
  country: SortOrder
  created_at: SortOrder
  end: SortOrder
  id: SortOrder
  image: SortOrder
  invitationBillingAddress: SortOrder
  invitationCustomerName: SortOrder
  invitationEmail: SortOrder
  invitationGrandTotalPurchased: SortOrder
  invitationInvoiceDate: SortOrder
  invitationOrderNumber: SortOrder
  invitationPaymentMethod: SortOrder
  invitationShippingAddress: SortOrder
  invitationStatus: SortOrder
  media: SortOrder
  name: SortOrder
  postalcode: SortOrder
  start: SortOrder
  state: SortOrder
  tickets: SortOrder
  type: SortOrder
}

enum EventsScalarFieldEnum {
  category
  city
  content
  country
  created_at
  end
  id
  image
  invitationBillingAddress
  invitationCustomerName
  invitationEmail
  invitationGrandTotalPurchased
  invitationInvoiceDate
  invitationOrderNumber
  invitationPaymentMethod
  invitationShippingAddress
  invitationStatus
  media
  name
  postalcode
  start
  state
  tickets
  type
}

input EventsScalarWhereWithAggregatesInput {
  AND: [EventsScalarWhereWithAggregatesInput!]
  NOT: [EventsScalarWhereWithAggregatesInput!]
  OR: [EventsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  end: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  invitationBillingAddress: StringNullableWithAggregatesFilter
  invitationCustomerName: StringNullableWithAggregatesFilter
  invitationEmail: StringNullableWithAggregatesFilter
  invitationGrandTotalPurchased: StringNullableWithAggregatesFilter
  invitationInvoiceDate: StringNullableWithAggregatesFilter
  invitationOrderNumber: StringNullableWithAggregatesFilter
  invitationPaymentMethod: StringNullableWithAggregatesFilter
  invitationShippingAddress: StringNullableWithAggregatesFilter
  invitationStatus: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  postalcode: StringNullableWithAggregatesFilter
  start: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  tickets: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
}

type EventsSumAggregate {
  id: BigInt
}

input EventsSumOrderByAggregateInput {
  id: SortOrder
}

input EventsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invitationBillingAddress: NullableStringFieldUpdateOperationsInput
  invitationCustomerName: NullableStringFieldUpdateOperationsInput
  invitationEmail: NullableStringFieldUpdateOperationsInput
  invitationGrandTotalPurchased: NullableStringFieldUpdateOperationsInput
  invitationInvoiceDate: NullableStringFieldUpdateOperationsInput
  invitationOrderNumber: NullableStringFieldUpdateOperationsInput
  invitationPaymentMethod: NullableStringFieldUpdateOperationsInput
  invitationShippingAddress: NullableStringFieldUpdateOperationsInput
  invitationStatus: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  start: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input EventsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invitationBillingAddress: NullableStringFieldUpdateOperationsInput
  invitationCustomerName: NullableStringFieldUpdateOperationsInput
  invitationEmail: NullableStringFieldUpdateOperationsInput
  invitationGrandTotalPurchased: NullableStringFieldUpdateOperationsInput
  invitationInvoiceDate: NullableStringFieldUpdateOperationsInput
  invitationOrderNumber: NullableStringFieldUpdateOperationsInput
  invitationPaymentMethod: NullableStringFieldUpdateOperationsInput
  invitationShippingAddress: NullableStringFieldUpdateOperationsInput
  invitationStatus: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postalcode: NullableStringFieldUpdateOperationsInput
  start: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  tickets: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
}

input EventsWhereInput {
  AND: [EventsWhereInput!]
  NOT: [EventsWhereInput!]
  OR: [EventsWhereInput!]
  category: StringNullableFilter
  city: StringNullableFilter
  content: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  end: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  invitationBillingAddress: StringNullableFilter
  invitationCustomerName: StringNullableFilter
  invitationEmail: StringNullableFilter
  invitationGrandTotalPurchased: StringNullableFilter
  invitationInvoiceDate: StringNullableFilter
  invitationOrderNumber: StringNullableFilter
  invitationPaymentMethod: StringNullableFilter
  invitationShippingAddress: StringNullableFilter
  invitationStatus: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  postalcode: StringNullableFilter
  start: StringNullableFilter
  state: StringNullableFilter
  tickets: StringNullableFilter
  type: StringNullableFilter
}

input EventsWhereUniqueInput {
  id: BigInt
}

type Fullfillments {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt!
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsAvgAggregate {
  id: Float
}

input FullfillmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type FullfillmentsCountAggregate {
  _all: Int!
  address: Int!
  address_two: Int!
  city: Int!
  company: Int!
  country: Int!
  country_area: Int!
  created_at: Int!
  id: Int!
  name: Int!
  phone: Int!
  pickup: Int!
  shipping_zones: Int!
  state: Int!
  stock: Int!
  zipcode: Int!
}

input FullfillmentsCountOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

input FullfillmentsCreateInput {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsCreateManyInput {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsGroupBy {
  _avg: FullfillmentsAvgAggregate
  _count: FullfillmentsCountAggregate
  _max: FullfillmentsMaxAggregate
  _min: FullfillmentsMinAggregate
  _sum: FullfillmentsSumAggregate
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt!
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

type FullfillmentsMaxAggregate {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsMaxOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

type FullfillmentsMinAggregate {
  address: String
  address_two: String
  city: String
  company: String
  country: String
  country_area: String
  created_at: DateTime
  id: BigInt
  name: String
  phone: String
  pickup: String
  shipping_zones: String
  state: String
  stock: String
  zipcode: String
}

input FullfillmentsMinOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

enum FullfillmentsOrderByRelevanceFieldEnum {
  address
  address_two
  city
  company
  country
  country_area
  name
  phone
  pickup
  shipping_zones
  state
  stock
  zipcode
}

input FullfillmentsOrderByRelevanceInput {
  fields: [FullfillmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input FullfillmentsOrderByWithAggregationInput {
  _avg: FullfillmentsAvgOrderByAggregateInput
  _count: FullfillmentsCountOrderByAggregateInput
  _max: FullfillmentsMaxOrderByAggregateInput
  _min: FullfillmentsMinOrderByAggregateInput
  _sum: FullfillmentsSumOrderByAggregateInput
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

input FullfillmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: FullfillmentsOrderByRelevanceInput
  address: SortOrder
  address_two: SortOrder
  city: SortOrder
  company: SortOrder
  country: SortOrder
  country_area: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  phone: SortOrder
  pickup: SortOrder
  shipping_zones: SortOrder
  state: SortOrder
  stock: SortOrder
  zipcode: SortOrder
}

enum FullfillmentsScalarFieldEnum {
  address
  address_two
  city
  company
  country
  country_area
  created_at
  id
  name
  phone
  pickup
  shipping_zones
  state
  stock
  zipcode
}

input FullfillmentsScalarWhereWithAggregatesInput {
  AND: [FullfillmentsScalarWhereWithAggregatesInput!]
  NOT: [FullfillmentsScalarWhereWithAggregatesInput!]
  OR: [FullfillmentsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  address_two: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  company: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  country_area: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  phone: StringNullableWithAggregatesFilter
  pickup: StringNullableWithAggregatesFilter
  shipping_zones: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  stock: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type FullfillmentsSumAggregate {
  id: BigInt
}

input FullfillmentsSumOrderByAggregateInput {
  id: SortOrder
}

input FullfillmentsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  country_area: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  pickup: NullableStringFieldUpdateOperationsInput
  shipping_zones: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  stock: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input FullfillmentsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  country_area: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  pickup: NullableStringFieldUpdateOperationsInput
  shipping_zones: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  stock: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input FullfillmentsWhereInput {
  AND: [FullfillmentsWhereInput!]
  NOT: [FullfillmentsWhereInput!]
  OR: [FullfillmentsWhereInput!]
  address: StringNullableFilter
  address_two: StringNullableFilter
  city: StringNullableFilter
  company: StringNullableFilter
  country: StringNullableFilter
  country_area: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  phone: StringNullableFilter
  pickup: StringNullableFilter
  shipping_zones: StringNullableFilter
  state: StringNullableFilter
  stock: StringNullableFilter
  zipcode: StringNullableFilter
}

input FullfillmentsWhereUniqueInput {
  id: BigInt
}

type Glossary {
  content: String
  id: Int!
  image: String
  name: String!
  published: DateTime
}

type GlossaryAvgAggregate {
  id: Float
}

input GlossaryAvgOrderByAggregateInput {
  id: SortOrder
}

type GlossaryCountAggregate {
  _all: Int!
  content: Int!
  id: Int!
  image: Int!
  name: Int!
  published: Int!
}

input GlossaryCountOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

input GlossaryCreateInput {
  content: String
  image: String
  name: String!
  published: DateTime
}

input GlossaryCreateManyInput {
  content: String
  id: Int
  image: String
  name: String!
  published: DateTime
}

type GlossaryGroupBy {
  _avg: GlossaryAvgAggregate
  _count: GlossaryCountAggregate
  _max: GlossaryMaxAggregate
  _min: GlossaryMinAggregate
  _sum: GlossarySumAggregate
  content: String
  id: Int!
  image: String
  name: String!
  published: DateTime
}

type GlossaryMaxAggregate {
  content: String
  id: Int
  image: String
  name: String
  published: DateTime
}

input GlossaryMaxOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

type GlossaryMinAggregate {
  content: String
  id: Int
  image: String
  name: String
  published: DateTime
}

input GlossaryMinOrderByAggregateInput {
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

enum GlossaryOrderByRelevanceFieldEnum {
  content
  image
  name
}

input GlossaryOrderByRelevanceInput {
  fields: [GlossaryOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input GlossaryOrderByWithAggregationInput {
  _avg: GlossaryAvgOrderByAggregateInput
  _count: GlossaryCountOrderByAggregateInput
  _max: GlossaryMaxOrderByAggregateInput
  _min: GlossaryMinOrderByAggregateInput
  _sum: GlossarySumOrderByAggregateInput
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

input GlossaryOrderByWithRelationAndSearchRelevanceInput {
  _relevance: GlossaryOrderByRelevanceInput
  content: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  published: SortOrder
}

enum GlossaryScalarFieldEnum {
  content
  id
  image
  name
  published
}

input GlossaryScalarWhereWithAggregatesInput {
  AND: [GlossaryScalarWhereWithAggregatesInput!]
  NOT: [GlossaryScalarWhereWithAggregatesInput!]
  OR: [GlossaryScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  published: DateTimeNullableWithAggregatesFilter
}

type GlossarySumAggregate {
  id: Int
}

input GlossarySumOrderByAggregateInput {
  id: SortOrder
}

input GlossaryUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
}

input GlossaryUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  published: NullableDateTimeFieldUpdateOperationsInput
}

input GlossaryWhereInput {
  AND: [GlossaryWhereInput!]
  NOT: [GlossaryWhereInput!]
  OR: [GlossaryWhereInput!]
  content: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  published: DateTimeNullableFilter
}

input GlossaryWhereUniqueInput {
  id: Int
}

type Integrations {
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsAvgAggregate {
  id: Float
}

input IntegrationsAvgOrderByAggregateInput {
  id: SortOrder
}

type IntegrationsCountAggregate {
  _all: Int!
  category: Int!
  content: Int!
  created_at: Int!
  id: Int!
  location: Int!
  media: Int!
  name: Int!
}

input IntegrationsCountOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsCreateInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsCreateManyInput {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

type IntegrationsGroupBy {
  _avg: IntegrationsAvgAggregate
  _count: IntegrationsCountAggregate
  _max: IntegrationsMaxAggregate
  _min: IntegrationsMinAggregate
  _sum: IntegrationsSumAggregate
  category: String
  content: String
  created_at: DateTime
  id: BigInt!
  location: String
  media: String
  name: String
}

type IntegrationsMaxAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMaxOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

type IntegrationsMinAggregate {
  category: String
  content: String
  created_at: DateTime
  id: BigInt
  location: String
  media: String
  name: String
}

input IntegrationsMinOrderByAggregateInput {
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsOrderByRelevanceFieldEnum {
  category
  content
  location
  media
  name
}

input IntegrationsOrderByRelevanceInput {
  fields: [IntegrationsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input IntegrationsOrderByWithAggregationInput {
  _avg: IntegrationsAvgOrderByAggregateInput
  _count: IntegrationsCountOrderByAggregateInput
  _max: IntegrationsMaxOrderByAggregateInput
  _min: IntegrationsMinOrderByAggregateInput
  _sum: IntegrationsSumOrderByAggregateInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

input IntegrationsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: IntegrationsOrderByRelevanceInput
  category: SortOrder
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
}

enum IntegrationsScalarFieldEnum {
  category
  content
  created_at
  id
  location
  media
  name
}

input IntegrationsScalarWhereWithAggregatesInput {
  AND: [IntegrationsScalarWhereWithAggregatesInput!]
  NOT: [IntegrationsScalarWhereWithAggregatesInput!]
  OR: [IntegrationsScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
}

type IntegrationsSumAggregate {
  id: BigInt
}

input IntegrationsSumOrderByAggregateInput {
  id: SortOrder
}

input IntegrationsUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
}

input IntegrationsWhereInput {
  AND: [IntegrationsWhereInput!]
  NOT: [IntegrationsWhereInput!]
  OR: [IntegrationsWhereInput!]
  category: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
}

input IntegrationsWhereUniqueInput {
  id: BigInt
}

type Internalization {
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationAvgAggregate {
  id: Float
}

input InternalizationAvgOrderByAggregateInput {
  id: SortOrder
}

type InternalizationCountAggregate {
  _all: Int!
  created_at: Int!
  default: Int!
  description: Int!
  id: Int!
  name: Int!
  region: Int!
  website: Int!
}

input InternalizationCountOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationCreateInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationCreateManyInput {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

type InternalizationGroupBy {
  _avg: InternalizationAvgAggregate
  _count: InternalizationCountAggregate
  _max: InternalizationMaxAggregate
  _min: InternalizationMinAggregate
  _sum: InternalizationSumAggregate
  created_at: DateTime
  default: String
  description: String
  id: BigInt!
  name: String
  region: String
  website: String
}

type InternalizationMaxAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMaxOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

type InternalizationMinAggregate {
  created_at: DateTime
  default: String
  description: String
  id: BigInt
  name: String
  region: String
  website: String
}

input InternalizationMinOrderByAggregateInput {
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationOrderByRelevanceFieldEnum {
  default
  description
  name
  region
  website
}

input InternalizationOrderByRelevanceInput {
  fields: [InternalizationOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InternalizationOrderByWithAggregationInput {
  _avg: InternalizationAvgOrderByAggregateInput
  _count: InternalizationCountOrderByAggregateInput
  _max: InternalizationMaxOrderByAggregateInput
  _min: InternalizationMinOrderByAggregateInput
  _sum: InternalizationSumOrderByAggregateInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

input InternalizationOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InternalizationOrderByRelevanceInput
  created_at: SortOrder
  default: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  region: SortOrder
  website: SortOrder
}

enum InternalizationScalarFieldEnum {
  created_at
  default
  description
  id
  name
  region
  website
}

input InternalizationScalarWhereWithAggregatesInput {
  AND: [InternalizationScalarWhereWithAggregatesInput!]
  NOT: [InternalizationScalarWhereWithAggregatesInput!]
  OR: [InternalizationScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  default: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type InternalizationSumAggregate {
  id: BigInt
}

input InternalizationSumOrderByAggregateInput {
  id: SortOrder
}

input InternalizationUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  default: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input InternalizationWhereInput {
  AND: [InternalizationWhereInput!]
  NOT: [InternalizationWhereInput!]
  OR: [InternalizationWhereInput!]
  created_at: DateTimeNullableFilter
  default: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  region: StringNullableFilter
  website: StringNullableFilter
}

input InternalizationWhereUniqueInput {
  id: BigInt
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Invoices {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt!
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesAvgAggregate {
  id: Float
  invoice: Float
  order_number: Float
}

input InvoicesAvgOrderByAggregateInput {
  id: SortOrder
  invoice: SortOrder
  order_number: SortOrder
}

type InvoicesCountAggregate {
  _all: Int!
  bill_to_name: Int!
  billing_address: Int!
  customer_group: Int!
  customer_name: Int!
  email: Int!
  grand_total_base: Int!
  grand_total_purchased: Int!
  id: Int!
  invoice: Int!
  invoice_date: Int!
  order_number: Int!
  payment_method: Int!
  shipping_address: Int!
  shipping_and_handling: Int!
  shipping_information: Int!
  status: Int!
  subtotal: Int!
}

input InvoicesCountOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

input InvoicesCreateInput {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesCreateManyInput {
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesGroupBy {
  _avg: InvoicesAvgAggregate
  _count: InvoicesCountAggregate
  _max: InvoicesMaxAggregate
  _min: InvoicesMinAggregate
  _sum: InvoicesSumAggregate
  bill_to_name: String!
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt!
  invoice: Int!
  invoice_date: DateTime
  order_number: BigInt!
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

type InvoicesMaxAggregate {
  bill_to_name: String
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int
  invoice_date: DateTime
  order_number: BigInt
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesMaxOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

type InvoicesMinAggregate {
  bill_to_name: String
  billing_address: String
  customer_group: String
  customer_name: String
  email: String
  grand_total_base: String
  grand_total_purchased: String
  id: BigInt
  invoice: Int
  invoice_date: DateTime
  order_number: BigInt
  payment_method: String
  shipping_address: String
  shipping_and_handling: String
  shipping_information: String
  status: String
  subtotal: String
}

input InvoicesMinOrderByAggregateInput {
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

enum InvoicesOrderByRelevanceFieldEnum {
  bill_to_name
  billing_address
  customer_group
  customer_name
  email
  grand_total_base
  grand_total_purchased
  payment_method
  shipping_address
  shipping_and_handling
  shipping_information
  status
  subtotal
}

input InvoicesOrderByRelevanceInput {
  fields: [InvoicesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input InvoicesOrderByWithAggregationInput {
  _avg: InvoicesAvgOrderByAggregateInput
  _count: InvoicesCountOrderByAggregateInput
  _max: InvoicesMaxOrderByAggregateInput
  _min: InvoicesMinOrderByAggregateInput
  _sum: InvoicesSumOrderByAggregateInput
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

input InvoicesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: InvoicesOrderByRelevanceInput
  bill_to_name: SortOrder
  billing_address: SortOrder
  customer_group: SortOrder
  customer_name: SortOrder
  email: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  invoice: SortOrder
  invoice_date: SortOrder
  order_number: SortOrder
  payment_method: SortOrder
  shipping_address: SortOrder
  shipping_and_handling: SortOrder
  shipping_information: SortOrder
  status: SortOrder
  subtotal: SortOrder
}

enum InvoicesScalarFieldEnum {
  bill_to_name
  billing_address
  customer_group
  customer_name
  email
  grand_total_base
  grand_total_purchased
  id
  invoice
  invoice_date
  order_number
  payment_method
  shipping_address
  shipping_and_handling
  shipping_information
  status
  subtotal
}

input InvoicesScalarWhereWithAggregatesInput {
  AND: [InvoicesScalarWhereWithAggregatesInput!]
  NOT: [InvoicesScalarWhereWithAggregatesInput!]
  OR: [InvoicesScalarWhereWithAggregatesInput!]
  bill_to_name: StringWithAggregatesFilter
  billing_address: StringNullableWithAggregatesFilter
  customer_group: StringNullableWithAggregatesFilter
  customer_name: StringNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  grand_total_base: StringNullableWithAggregatesFilter
  grand_total_purchased: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  invoice: IntWithAggregatesFilter
  invoice_date: DateTimeNullableWithAggregatesFilter
  order_number: BigIntWithAggregatesFilter
  payment_method: StringNullableWithAggregatesFilter
  shipping_address: StringNullableWithAggregatesFilter
  shipping_and_handling: StringNullableWithAggregatesFilter
  shipping_information: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
}

type InvoicesSumAggregate {
  id: BigInt
  invoice: Int
  order_number: BigInt
}

input InvoicesSumOrderByAggregateInput {
  id: SortOrder
  invoice: SortOrder
  order_number: SortOrder
}

input InvoicesUpdateInput {
  bill_to_name: StringFieldUpdateOperationsInput
  billing_address: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableStringFieldUpdateOperationsInput
  grand_total_purchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoice: IntFieldUpdateOperationsInput
  invoice_date: NullableDateTimeFieldUpdateOperationsInput
  order_number: BigIntFieldUpdateOperationsInput
  payment_method: NullableStringFieldUpdateOperationsInput
  shipping_address: NullableStringFieldUpdateOperationsInput
  shipping_and_handling: NullableStringFieldUpdateOperationsInput
  shipping_information: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
}

input InvoicesUpdateManyMutationInput {
  bill_to_name: StringFieldUpdateOperationsInput
  billing_address: NullableStringFieldUpdateOperationsInput
  customer_group: NullableStringFieldUpdateOperationsInput
  customer_name: NullableStringFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableStringFieldUpdateOperationsInput
  grand_total_purchased: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  invoice: IntFieldUpdateOperationsInput
  invoice_date: NullableDateTimeFieldUpdateOperationsInput
  order_number: BigIntFieldUpdateOperationsInput
  payment_method: NullableStringFieldUpdateOperationsInput
  shipping_address: NullableStringFieldUpdateOperationsInput
  shipping_and_handling: NullableStringFieldUpdateOperationsInput
  shipping_information: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
}

input InvoicesWhereInput {
  AND: [InvoicesWhereInput!]
  NOT: [InvoicesWhereInput!]
  OR: [InvoicesWhereInput!]
  bill_to_name: StringFilter
  billing_address: StringNullableFilter
  customer_group: StringNullableFilter
  customer_name: StringNullableFilter
  email: StringNullableFilter
  grand_total_base: StringNullableFilter
  grand_total_purchased: StringNullableFilter
  id: BigIntFilter
  invoice: IntFilter
  invoice_date: DateTimeNullableFilter
  order_number: BigIntFilter
  payment_method: StringNullableFilter
  shipping_address: StringNullableFilter
  shipping_and_handling: StringNullableFilter
  shipping_information: StringNullableFilter
  status: StringNullableFilter
  subtotal: StringNullableFilter
}

input InvoicesWhereUniqueInput {
  id: BigInt
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf") @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input JsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type LogIn {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt!
  password: String
  token: String
  username: String
  users: String
}

type LogInAvgAggregate {
  id: Float
}

input LogInAvgOrderByAggregateInput {
  id: SortOrder
}

type LogInCountAggregate {
  _all: Int!
  created_at: Int!
  email: Int!
  expiresIn: Int!
  id: Int!
  password: Int!
  token: Int!
  username: Int!
  users: Int!
}

input LogInCountOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

input LogInCreateInput {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInCreateManyInput {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

type LogInGroupBy {
  _avg: LogInAvgAggregate
  _count: LogInCountAggregate
  _max: LogInMaxAggregate
  _min: LogInMinAggregate
  _sum: LogInSumAggregate
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt!
  password: String
  token: String
  username: String
  users: String
}

type LogInMaxAggregate {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInMaxOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

type LogInMinAggregate {
  created_at: DateTime
  email: String
  expiresIn: String
  id: BigInt
  password: String
  token: String
  username: String
  users: String
}

input LogInMinOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

enum LogInOrderByRelevanceFieldEnum {
  email
  expiresIn
  password
  token
  username
  users
}

input LogInOrderByRelevanceInput {
  fields: [LogInOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input LogInOrderByWithAggregationInput {
  _avg: LogInAvgOrderByAggregateInput
  _count: LogInCountOrderByAggregateInput
  _max: LogInMaxOrderByAggregateInput
  _min: LogInMinOrderByAggregateInput
  _sum: LogInSumOrderByAggregateInput
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

input LogInOrderByWithRelationAndSearchRelevanceInput {
  _relevance: LogInOrderByRelevanceInput
  created_at: SortOrder
  email: SortOrder
  expiresIn: SortOrder
  id: SortOrder
  password: SortOrder
  token: SortOrder
  username: SortOrder
  users: SortOrder
}

enum LogInScalarFieldEnum {
  created_at
  email
  expiresIn
  id
  password
  token
  username
  users
}

input LogInScalarWhereWithAggregatesInput {
  AND: [LogInScalarWhereWithAggregatesInput!]
  NOT: [LogInScalarWhereWithAggregatesInput!]
  OR: [LogInScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringNullableWithAggregatesFilter
  expiresIn: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  password: StringNullableWithAggregatesFilter
  token: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type LogInSumAggregate {
  id: BigInt
}

input LogInSumOrderByAggregateInput {
  id: SortOrder
}

input LogInUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expiresIn: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  token: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input LogInUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  expiresIn: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  token: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input LogInWhereInput {
  AND: [LogInWhereInput!]
  NOT: [LogInWhereInput!]
  OR: [LogInWhereInput!]
  created_at: DateTimeNullableFilter
  email: StringNullableFilter
  expiresIn: StringNullableFilter
  id: BigIntFilter
  password: StringNullableFilter
  token: StringNullableFilter
  username: StringNullableFilter
  users: StringNullableFilter
}

input LogInWhereUniqueInput {
  id: BigInt
}

type Manufacturer {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerAvgAggregate {
  id: Float
  product: Float
}

input ManufacturerAvgOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

type ManufacturerCountAggregate {
  _all: Int!
  city: Int!
  code: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  name: Int!
  product: Int!
  products: Int!
  state: Int!
}

input ManufacturerCountOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

input ManufacturerCreateInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerCreateManyInput {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerGroupBy {
  _avg: ManufacturerAvgAggregate
  _count: ManufacturerCountAggregate
  _max: ManufacturerMaxAggregate
  _min: ManufacturerMinAggregate
  _sum: ManufacturerSumAggregate
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

type ManufacturerMaxAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerMaxOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

type ManufacturerMinAggregate {
  city: String
  code: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  isPublic: String
  media: String
  name: String
  product: BigInt
  products: String
  state: String
}

input ManufacturerMinOrderByAggregateInput {
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

enum ManufacturerOrderByRelevanceFieldEnum {
  city
  code
  country
  description
  isPublic
  media
  name
  products
  state
}

input ManufacturerOrderByRelevanceInput {
  fields: [ManufacturerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ManufacturerOrderByWithAggregationInput {
  _avg: ManufacturerAvgOrderByAggregateInput
  _count: ManufacturerCountOrderByAggregateInput
  _max: ManufacturerMaxOrderByAggregateInput
  _min: ManufacturerMinOrderByAggregateInput
  _sum: ManufacturerSumOrderByAggregateInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

input ManufacturerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ManufacturerOrderByRelevanceInput
  city: SortOrder
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  product: SortOrder
  products: SortOrder
  state: SortOrder
}

enum ManufacturerScalarFieldEnum {
  city
  code
  country
  created_at
  description
  id
  isPublic
  media
  name
  product
  products
  state
}

input ManufacturerScalarWhereWithAggregatesInput {
  AND: [ManufacturerScalarWhereWithAggregatesInput!]
  NOT: [ManufacturerScalarWhereWithAggregatesInput!]
  OR: [ManufacturerScalarWhereWithAggregatesInput!]
  city: StringNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  product: BigIntNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type ManufacturerSumAggregate {
  id: BigInt
  product: BigInt
}

input ManufacturerSumOrderByAggregateInput {
  id: SortOrder
  product: SortOrder
}

input ManufacturerUpdateInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input ManufacturerUpdateManyMutationInput {
  city: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  product: NullableBigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input ManufacturerWhereInput {
  AND: [ManufacturerWhereInput!]
  NOT: [ManufacturerWhereInput!]
  OR: [ManufacturerWhereInput!]
  city: StringNullableFilter
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  product: BigIntNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
}

input ManufacturerWhereUniqueInput {
  id: BigInt
}

type Mediamanager {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerAvgAggregate {
  id: Float
}

input MediamanagerAvgOrderByAggregateInput {
  id: SortOrder
}

type MediamanagerCountAggregate {
  _all: Int!
  agreements: Int!
  agreements_agreementsTomediamanager: Int!
  albums: Int!
  author: Int!
  brands: Int!
  brands_brandsTomediamanager: Int!
  comment: Int!
  comments: Int!
  content_type: Int!
  copyright: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  dimensions: Int!
  expiration_date: Int!
  id: Int!
  keywords: Int!
  media: Int!
  members: Int!
  name: Int!
  products: Int!
  products_mediamanagerToproducts: Int!
  status: Int!
  tags: Int!
  task_description: Int!
  task_name: Int!
  task_type: Int!
  tasks: Int!
  users: Int!
  versions: Int!
  watermark_description: Int!
  watermark_media: Int!
  watermark_name: Int!
  workspace: Int!
}

input MediamanagerCountOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerCreateInput {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerCreateManyInput {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerGroupBy {
  _avg: MediamanagerAvgAggregate
  _count: MediamanagerCountAggregate
  _max: MediamanagerMaxAggregate
  _min: MediamanagerMinAggregate
  _sum: MediamanagerSumAggregate
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int!
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

type MediamanagerMaxAggregate {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMaxOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

type MediamanagerMinAggregate {
  agreements: String
  agreements_agreementsTomediamanager: String
  albums: String
  author: String
  brands: String
  brands_brandsTomediamanager: String
  comment: String
  comments: String
  content_type: String
  copyright: String
  created_at: DateTime
  customers: String
  description: String
  dimensions: String
  expiration_date: String
  id: Int
  keywords: String
  media: String
  members: String
  name: String
  products: String
  products_mediamanagerToproducts: String
  status: String
  tags: String
  task_description: String
  task_name: String
  task_type: String
  tasks: String
  users: String
  versions: String
  watermark_description: String
  watermark_media: String
  watermark_name: String
  workspace: String
}

input MediamanagerMinOrderByAggregateInput {
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerOrderByRelevanceFieldEnum {
  agreements
  agreements_agreementsTomediamanager
  albums
  author
  brands
  brands_brandsTomediamanager
  comment
  comments
  content_type
  copyright
  customers
  description
  dimensions
  expiration_date
  keywords
  media
  members
  name
  products
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_name
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerOrderByRelevanceInput {
  fields: [MediamanagerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input MediamanagerOrderByWithAggregationInput {
  _avg: MediamanagerAvgOrderByAggregateInput
  _count: MediamanagerCountOrderByAggregateInput
  _max: MediamanagerMaxOrderByAggregateInput
  _min: MediamanagerMinOrderByAggregateInput
  _sum: MediamanagerSumOrderByAggregateInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

input MediamanagerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: MediamanagerOrderByRelevanceInput
  agreements: SortOrder
  agreements_agreementsTomediamanager: SortOrder
  albums: SortOrder
  author: SortOrder
  brands: SortOrder
  brands_brandsTomediamanager: SortOrder
  comment: SortOrder
  comments: SortOrder
  content_type: SortOrder
  copyright: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  dimensions: SortOrder
  expiration_date: SortOrder
  id: SortOrder
  keywords: SortOrder
  media: SortOrder
  members: SortOrder
  name: SortOrder
  products: SortOrder
  products_mediamanagerToproducts: SortOrder
  status: SortOrder
  tags: SortOrder
  task_description: SortOrder
  task_name: SortOrder
  task_type: SortOrder
  tasks: SortOrder
  users: SortOrder
  versions: SortOrder
  watermark_description: SortOrder
  watermark_media: SortOrder
  watermark_name: SortOrder
  workspace: SortOrder
}

enum MediamanagerScalarFieldEnum {
  agreements
  agreements_agreementsTomediamanager
  albums
  author
  brands
  brands_brandsTomediamanager
  comment
  comments
  content_type
  copyright
  created_at
  customers
  description
  dimensions
  expiration_date
  id
  keywords
  media
  members
  name
  products
  products_mediamanagerToproducts
  status
  tags
  task_description
  task_name
  task_type
  tasks
  users
  versions
  watermark_description
  watermark_media
  watermark_name
  workspace
}

input MediamanagerScalarWhereWithAggregatesInput {
  AND: [MediamanagerScalarWhereWithAggregatesInput!]
  NOT: [MediamanagerScalarWhereWithAggregatesInput!]
  OR: [MediamanagerScalarWhereWithAggregatesInput!]
  agreements: StringNullableWithAggregatesFilter
  agreements_agreementsTomediamanager: StringNullableWithAggregatesFilter
  albums: StringNullableWithAggregatesFilter
  author: StringNullableWithAggregatesFilter
  brands: StringNullableWithAggregatesFilter
  brands_brandsTomediamanager: StringNullableWithAggregatesFilter
  comment: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  content_type: StringNullableWithAggregatesFilter
  copyright: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  dimensions: StringNullableWithAggregatesFilter
  expiration_date: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  keywords: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  members: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  products_mediamanagerToproducts: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  task_description: StringNullableWithAggregatesFilter
  task_name: StringNullableWithAggregatesFilter
  task_type: StringNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  versions: StringNullableWithAggregatesFilter
  watermark_description: StringNullableWithAggregatesFilter
  watermark_media: StringNullableWithAggregatesFilter
  watermark_name: StringNullableWithAggregatesFilter
  workspace: StringNullableWithAggregatesFilter
}

type MediamanagerSumAggregate {
  id: Int
}

input MediamanagerSumOrderByAggregateInput {
  id: SortOrder
}

input MediamanagerUpdateInput {
  agreements: NullableStringFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableStringFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerUpdateManyMutationInput {
  agreements: NullableStringFieldUpdateOperationsInput
  agreements_agreementsTomediamanager: NullableStringFieldUpdateOperationsInput
  albums: NullableStringFieldUpdateOperationsInput
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  brands_brandsTomediamanager: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  content_type: NullableStringFieldUpdateOperationsInput
  copyright: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dimensions: NullableStringFieldUpdateOperationsInput
  expiration_date: NullableStringFieldUpdateOperationsInput
  keywords: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  members: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  products_mediamanagerToproducts: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_description: NullableStringFieldUpdateOperationsInput
  task_name: NullableStringFieldUpdateOperationsInput
  task_type: NullableStringFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  versions: NullableStringFieldUpdateOperationsInput
  watermark_description: NullableStringFieldUpdateOperationsInput
  watermark_media: NullableStringFieldUpdateOperationsInput
  watermark_name: NullableStringFieldUpdateOperationsInput
  workspace: NullableStringFieldUpdateOperationsInput
}

input MediamanagerWhereInput {
  AND: [MediamanagerWhereInput!]
  NOT: [MediamanagerWhereInput!]
  OR: [MediamanagerWhereInput!]
  agreements: StringNullableFilter
  agreements_agreementsTomediamanager: StringNullableFilter
  albums: StringNullableFilter
  author: StringNullableFilter
  brands: StringNullableFilter
  brands_brandsTomediamanager: StringNullableFilter
  comment: StringNullableFilter
  comments: StringNullableFilter
  content_type: StringNullableFilter
  copyright: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  dimensions: StringNullableFilter
  expiration_date: StringNullableFilter
  id: IntFilter
  keywords: StringNullableFilter
  media: StringNullableFilter
  members: StringNullableFilter
  name: StringNullableFilter
  products: StringNullableFilter
  products_mediamanagerToproducts: StringNullableFilter
  status: StringNullableFilter
  tags: StringNullableFilter
  task_description: StringNullableFilter
  task_name: StringNullableFilter
  task_type: StringNullableFilter
  tasks: StringNullableFilter
  users: StringNullableFilter
  versions: StringNullableFilter
  watermark_description: StringNullableFilter
  watermark_media: StringNullableFilter
  watermark_name: StringNullableFilter
  workspace: StringNullableFilter
}

input MediamanagerWhereUniqueInput {
  id: Int
}

type Mutation {
  createManyAgreements(data: [AgreementsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyApitoken(data: [ApitokenCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyArticles(data: [ArticlesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyAttributes(data: [AttributesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyBrands(data: [BrandsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCategories(data: [CategoriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyChannels(data: [ChannelsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyChecklist(data: [ChecklistCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCities(data: [CitiesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCollections(data: [CollectionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContent_type(data: [Content_typeCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCountries(data: [CountriesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCurrencies(data: [CurrenciesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyCustomers(data: [CustomersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDashboards(data: [DashboardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDeepdive(data: [DeepdiveCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyDiscounts(data: [DiscountsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyEndofshift(data: [EndofshiftCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyEvents(data: [EventsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyFullfillments(data: [FullfillmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyGlossary(data: [GlossaryCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyIntegrations(data: [IntegrationsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInternalization(data: [InternalizationCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyInvoices(data: [InvoicesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyLogIn(data: [LogInCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyManufacturer(data: [ManufacturerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyMediamanager(data: [MediamanagerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyNewsletters(data: [NewslettersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOoto(data: [OotoCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyOrders(data: [OrdersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPages(data: [PagesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPartners(data: [PartnersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPayments(data: [PaymentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPermissions(data: [PermissionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyPlugins(data: [PluginsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProduct_types(data: [Product_typesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProducts(data: [ProductsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProjects(data: [ProjectsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyProviders(data: [ProvidersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyQuotes(data: [QuotesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReturns(data: [ReturnsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyReviews(data: [ReviewsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRewards(data: [RewardsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyRoles(data: [RolesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyScheduler(data: [SchedulerCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySegments(data: [SegmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySettings(data: [SettingsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyShipments(data: [ShipmentsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyStates(data: [StatesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTags(data: [TagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTaxes(data: [TaxesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyThemes(data: [ThemesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTicketing(data: [TicketingCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyTransactions(data: [TransactionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUpload_file(data: [Upload_fileCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyVendors(data: [VendorsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyVisits(data: [VisitsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWarehouse(data: [WarehouseCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWebhooks(data: [WebhooksCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWebsites(data: [WebsitesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWishlists(data: [WishlistsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyWorkspaces(data: [WorkspacesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyZones(data: [ZonesCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneAgreements(data: AgreementsCreateInput!): Agreements!
  createOneApitoken(data: ApitokenCreateInput!): Apitoken!
  createOneArticles(data: ArticlesCreateInput!): Articles!
  createOneAttributes(data: AttributesCreateInput!): Attributes!
  createOneBrands(data: BrandsCreateInput!): Brands!
  createOneCategories(data: CategoriesCreateInput!): Categories!
  createOneChannels(data: ChannelsCreateInput!): Channels!
  createOneChecklist(data: ChecklistCreateInput!): Checklist!
  createOneCities(data: CitiesCreateInput!): Cities!
  createOneCollections(data: CollectionsCreateInput!): Collections!
  createOneContent_type(data: Content_typeCreateInput!): Content_type!
  createOneCountries(data: CountriesCreateInput!): Countries!
  createOneCurrencies(data: CurrenciesCreateInput!): Currencies!
  createOneCustomers(data: CustomersCreateInput!): Customers!
  createOneDashboards(data: DashboardsCreateInput!): Dashboards!
  createOneDeepdive(data: DeepdiveCreateInput!): Deepdive!
  createOneDiscounts(data: DiscountsCreateInput!): Discounts!
  createOneEndofshift(data: EndofshiftCreateInput!): Endofshift!
  createOneEvents(data: EventsCreateInput!): Events!
  createOneFullfillments(data: FullfillmentsCreateInput!): Fullfillments!
  createOneGlossary(data: GlossaryCreateInput!): Glossary!
  createOneIntegrations(data: IntegrationsCreateInput!): Integrations!
  createOneInternalization(data: InternalizationCreateInput!): Internalization!
  createOneInvoices(data: InvoicesCreateInput!): Invoices!
  createOneLogIn(data: LogInCreateInput!): LogIn!
  createOneManufacturer(data: ManufacturerCreateInput!): Manufacturer!
  createOneMediamanager(data: MediamanagerCreateInput!): Mediamanager!
  createOneNewsletters(data: NewslettersCreateInput!): Newsletters!
  createOneOoto(data: OotoCreateInput!): Ooto!
  createOneOrders(data: OrdersCreateInput!): Orders!
  createOnePages(data: PagesCreateInput!): Pages!
  createOnePartners(data: PartnersCreateInput!): Partners!
  createOnePayments(data: PaymentsCreateInput!): Payments!
  createOnePermissions(data: PermissionsCreateInput!): Permissions!
  createOnePlugins(data: PluginsCreateInput!): Plugins!
  createOneProduct_types(data: Product_typesCreateInput!): Product_types!
  createOneProducts(data: ProductsCreateInput!): Products!
  createOneProjects(data: ProjectsCreateInput!): Projects!
  createOneProviders(data: ProvidersCreateInput!): Providers!
  createOneQuotes(data: QuotesCreateInput!): Quotes!
  createOneReturns(data: ReturnsCreateInput!): Returns!
  createOneReviews(data: ReviewsCreateInput!): Reviews!
  createOneRewards(data: RewardsCreateInput!): Rewards!
  createOneRoles(data: RolesCreateInput!): Roles!
  createOneScheduler(data: SchedulerCreateInput!): Scheduler!
  createOneSegments(data: SegmentsCreateInput!): Segments!
  createOneSettings(data: SettingsCreateInput!): Settings!
  createOneShipments(data: ShipmentsCreateInput!): Shipments!
  createOneStates(data: StatesCreateInput!): States!
  createOneTags(data: TagsCreateInput!): Tags!
  createOneTaxes(data: TaxesCreateInput!): Taxes!
  createOneThemes(data: ThemesCreateInput!): Themes!
  createOneTicketing(data: TicketingCreateInput!): Ticketing!
  createOneTransactions(data: TransactionsCreateInput!): Transactions!
  createOneUpload_file(data: Upload_fileCreateInput!): Upload_file!
  createOneUsers(data: UsersCreateInput!): Users!
  createOneVendors(data: VendorsCreateInput!): Vendors!
  createOneVisits(data: VisitsCreateInput!): Visits!
  createOneWarehouse(data: WarehouseCreateInput!): Warehouse!
  createOneWebhooks(data: WebhooksCreateInput!): Webhooks!
  createOneWebsites(data: WebsitesCreateInput!): Websites!
  createOneWishlists(data: WishlistsCreateInput!): Wishlists!
  createOneWorkspaces(data: WorkspacesCreateInput!): Workspaces!
  createOneZones(data: ZonesCreateInput!): Zones!
  deleteManyAgreements(where: AgreementsWhereInput): AffectedRowsOutput!
  deleteManyApitoken(where: ApitokenWhereInput): AffectedRowsOutput!
  deleteManyArticles(where: ArticlesWhereInput): AffectedRowsOutput!
  deleteManyAttributes(where: AttributesWhereInput): AffectedRowsOutput!
  deleteManyBrands(where: BrandsWhereInput): AffectedRowsOutput!
  deleteManyCategories(where: CategoriesWhereInput): AffectedRowsOutput!
  deleteManyChannels(where: ChannelsWhereInput): AffectedRowsOutput!
  deleteManyChecklist(where: ChecklistWhereInput): AffectedRowsOutput!
  deleteManyCities(where: CitiesWhereInput): AffectedRowsOutput!
  deleteManyCollections(where: CollectionsWhereInput): AffectedRowsOutput!
  deleteManyContent_type(where: Content_typeWhereInput): AffectedRowsOutput!
  deleteManyCountries(where: CountriesWhereInput): AffectedRowsOutput!
  deleteManyCurrencies(where: CurrenciesWhereInput): AffectedRowsOutput!
  deleteManyCustomers(where: CustomersWhereInput): AffectedRowsOutput!
  deleteManyDashboards(where: DashboardsWhereInput): AffectedRowsOutput!
  deleteManyDeepdive(where: DeepdiveWhereInput): AffectedRowsOutput!
  deleteManyDiscounts(where: DiscountsWhereInput): AffectedRowsOutput!
  deleteManyEndofshift(where: EndofshiftWhereInput): AffectedRowsOutput!
  deleteManyEvents(where: EventsWhereInput): AffectedRowsOutput!
  deleteManyFullfillments(where: FullfillmentsWhereInput): AffectedRowsOutput!
  deleteManyGlossary(where: GlossaryWhereInput): AffectedRowsOutput!
  deleteManyIntegrations(where: IntegrationsWhereInput): AffectedRowsOutput!
  deleteManyInternalization(where: InternalizationWhereInput): AffectedRowsOutput!
  deleteManyInvoices(where: InvoicesWhereInput): AffectedRowsOutput!
  deleteManyLogIn(where: LogInWhereInput): AffectedRowsOutput!
  deleteManyManufacturer(where: ManufacturerWhereInput): AffectedRowsOutput!
  deleteManyMediamanager(where: MediamanagerWhereInput): AffectedRowsOutput!
  deleteManyNewsletters(where: NewslettersWhereInput): AffectedRowsOutput!
  deleteManyOoto(where: OotoWhereInput): AffectedRowsOutput!
  deleteManyOrders(where: OrdersWhereInput): AffectedRowsOutput!
  deleteManyPages(where: PagesWhereInput): AffectedRowsOutput!
  deleteManyPartners(where: PartnersWhereInput): AffectedRowsOutput!
  deleteManyPayments(where: PaymentsWhereInput): AffectedRowsOutput!
  deleteManyPermissions(where: PermissionsWhereInput): AffectedRowsOutput!
  deleteManyPlugins(where: PluginsWhereInput): AffectedRowsOutput!
  deleteManyProduct_types(where: Product_typesWhereInput): AffectedRowsOutput!
  deleteManyProducts(where: ProductsWhereInput): AffectedRowsOutput!
  deleteManyProjects(where: ProjectsWhereInput): AffectedRowsOutput!
  deleteManyProviders(where: ProvidersWhereInput): AffectedRowsOutput!
  deleteManyQuotes(where: QuotesWhereInput): AffectedRowsOutput!
  deleteManyReturns(where: ReturnsWhereInput): AffectedRowsOutput!
  deleteManyReviews(where: ReviewsWhereInput): AffectedRowsOutput!
  deleteManyRewards(where: RewardsWhereInput): AffectedRowsOutput!
  deleteManyRoles(where: RolesWhereInput): AffectedRowsOutput!
  deleteManyScheduler(where: SchedulerWhereInput): AffectedRowsOutput!
  deleteManySegments(where: SegmentsWhereInput): AffectedRowsOutput!
  deleteManySettings(where: SettingsWhereInput): AffectedRowsOutput!
  deleteManyShipments(where: ShipmentsWhereInput): AffectedRowsOutput!
  deleteManyStates(where: StatesWhereInput): AffectedRowsOutput!
  deleteManyTags(where: TagsWhereInput): AffectedRowsOutput!
  deleteManyTaxes(where: TaxesWhereInput): AffectedRowsOutput!
  deleteManyThemes(where: ThemesWhereInput): AffectedRowsOutput!
  deleteManyTicketing(where: TicketingWhereInput): AffectedRowsOutput!
  deleteManyTransactions(where: TransactionsWhereInput): AffectedRowsOutput!
  deleteManyUpload_file(where: Upload_fileWhereInput): AffectedRowsOutput!
  deleteManyUsers(where: UsersWhereInput): AffectedRowsOutput!
  deleteManyVendors(where: VendorsWhereInput): AffectedRowsOutput!
  deleteManyVisits(where: VisitsWhereInput): AffectedRowsOutput!
  deleteManyWarehouse(where: WarehouseWhereInput): AffectedRowsOutput!
  deleteManyWebhooks(where: WebhooksWhereInput): AffectedRowsOutput!
  deleteManyWebsites(where: WebsitesWhereInput): AffectedRowsOutput!
  deleteManyWishlists(where: WishlistsWhereInput): AffectedRowsOutput!
  deleteManyWorkspaces(where: WorkspacesWhereInput): AffectedRowsOutput!
  deleteManyZones(where: ZonesWhereInput): AffectedRowsOutput!
  deleteOneAgreements(where: AgreementsWhereUniqueInput!): Agreements
  deleteOneApitoken(where: ApitokenWhereUniqueInput!): Apitoken
  deleteOneArticles(where: ArticlesWhereUniqueInput!): Articles
  deleteOneAttributes(where: AttributesWhereUniqueInput!): Attributes
  deleteOneBrands(where: BrandsWhereUniqueInput!): Brands
  deleteOneCategories(where: CategoriesWhereUniqueInput!): Categories
  deleteOneChannels(where: ChannelsWhereUniqueInput!): Channels
  deleteOneChecklist(where: ChecklistWhereUniqueInput!): Checklist
  deleteOneCities(where: CitiesWhereUniqueInput!): Cities
  deleteOneCollections(where: CollectionsWhereUniqueInput!): Collections
  deleteOneContent_type(where: Content_typeWhereUniqueInput!): Content_type
  deleteOneCountries(where: CountriesWhereUniqueInput!): Countries
  deleteOneCurrencies(where: CurrenciesWhereUniqueInput!): Currencies
  deleteOneCustomers(where: CustomersWhereUniqueInput!): Customers
  deleteOneDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  deleteOneDeepdive(where: DeepdiveWhereUniqueInput!): Deepdive
  deleteOneDiscounts(where: DiscountsWhereUniqueInput!): Discounts
  deleteOneEndofshift(where: EndofshiftWhereUniqueInput!): Endofshift
  deleteOneEvents(where: EventsWhereUniqueInput!): Events
  deleteOneFullfillments(where: FullfillmentsWhereUniqueInput!): Fullfillments
  deleteOneGlossary(where: GlossaryWhereUniqueInput!): Glossary
  deleteOneIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  deleteOneInternalization(where: InternalizationWhereUniqueInput!): Internalization
  deleteOneInvoices(where: InvoicesWhereUniqueInput!): Invoices
  deleteOneLogIn(where: LogInWhereUniqueInput!): LogIn
  deleteOneManufacturer(where: ManufacturerWhereUniqueInput!): Manufacturer
  deleteOneMediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  deleteOneNewsletters(where: NewslettersWhereUniqueInput!): Newsletters
  deleteOneOoto(where: OotoWhereUniqueInput!): Ooto
  deleteOneOrders(where: OrdersWhereUniqueInput!): Orders
  deleteOnePages(where: PagesWhereUniqueInput!): Pages
  deleteOnePartners(where: PartnersWhereUniqueInput!): Partners
  deleteOnePayments(where: PaymentsWhereUniqueInput!): Payments
  deleteOnePermissions(where: PermissionsWhereUniqueInput!): Permissions
  deleteOnePlugins(where: PluginsWhereUniqueInput!): Plugins
  deleteOneProduct_types(where: Product_typesWhereUniqueInput!): Product_types
  deleteOneProducts(where: ProductsWhereUniqueInput!): Products
  deleteOneProjects(where: ProjectsWhereUniqueInput!): Projects
  deleteOneProviders(where: ProvidersWhereUniqueInput!): Providers
  deleteOneQuotes(where: QuotesWhereUniqueInput!): Quotes
  deleteOneReturns(where: ReturnsWhereUniqueInput!): Returns
  deleteOneReviews(where: ReviewsWhereUniqueInput!): Reviews
  deleteOneRewards(where: RewardsWhereUniqueInput!): Rewards
  deleteOneRoles(where: RolesWhereUniqueInput!): Roles
  deleteOneScheduler(where: SchedulerWhereUniqueInput!): Scheduler
  deleteOneSegments(where: SegmentsWhereUniqueInput!): Segments
  deleteOneSettings(where: SettingsWhereUniqueInput!): Settings
  deleteOneShipments(where: ShipmentsWhereUniqueInput!): Shipments
  deleteOneStates(where: StatesWhereUniqueInput!): States
  deleteOneTags(where: TagsWhereUniqueInput!): Tags
  deleteOneTaxes(where: TaxesWhereUniqueInput!): Taxes
  deleteOneThemes(where: ThemesWhereUniqueInput!): Themes
  deleteOneTicketing(where: TicketingWhereUniqueInput!): Ticketing
  deleteOneTransactions(where: TransactionsWhereUniqueInput!): Transactions
  deleteOneUpload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  deleteOneUsers(where: UsersWhereUniqueInput!): Users
  deleteOneVendors(where: VendorsWhereUniqueInput!): Vendors
  deleteOneVisits(where: VisitsWhereUniqueInput!): Visits
  deleteOneWarehouse(where: WarehouseWhereUniqueInput!): Warehouse
  deleteOneWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  deleteOneWebsites(where: WebsitesWhereUniqueInput!): Websites
  deleteOneWishlists(where: WishlistsWhereUniqueInput!): Wishlists
  deleteOneWorkspaces(where: WorkspacesWhereUniqueInput!): Workspaces
  deleteOneZones(where: ZonesWhereUniqueInput!): Zones
  updateManyAgreements(data: AgreementsUpdateManyMutationInput!, where: AgreementsWhereInput): AffectedRowsOutput!
  updateManyApitoken(data: ApitokenUpdateManyMutationInput!, where: ApitokenWhereInput): AffectedRowsOutput!
  updateManyArticles(data: ArticlesUpdateManyMutationInput!, where: ArticlesWhereInput): AffectedRowsOutput!
  updateManyAttributes(data: AttributesUpdateManyMutationInput!, where: AttributesWhereInput): AffectedRowsOutput!
  updateManyBrands(data: BrandsUpdateManyMutationInput!, where: BrandsWhereInput): AffectedRowsOutput!
  updateManyCategories(data: CategoriesUpdateManyMutationInput!, where: CategoriesWhereInput): AffectedRowsOutput!
  updateManyChannels(data: ChannelsUpdateManyMutationInput!, where: ChannelsWhereInput): AffectedRowsOutput!
  updateManyChecklist(data: ChecklistUpdateManyMutationInput!, where: ChecklistWhereInput): AffectedRowsOutput!
  updateManyCities(data: CitiesUpdateManyMutationInput!, where: CitiesWhereInput): AffectedRowsOutput!
  updateManyCollections(data: CollectionsUpdateManyMutationInput!, where: CollectionsWhereInput): AffectedRowsOutput!
  updateManyContent_type(data: Content_typeUpdateManyMutationInput!, where: Content_typeWhereInput): AffectedRowsOutput!
  updateManyCountries(data: CountriesUpdateManyMutationInput!, where: CountriesWhereInput): AffectedRowsOutput!
  updateManyCurrencies(data: CurrenciesUpdateManyMutationInput!, where: CurrenciesWhereInput): AffectedRowsOutput!
  updateManyCustomers(data: CustomersUpdateManyMutationInput!, where: CustomersWhereInput): AffectedRowsOutput!
  updateManyDashboards(data: DashboardsUpdateManyMutationInput!, where: DashboardsWhereInput): AffectedRowsOutput!
  updateManyDeepdive(data: DeepdiveUpdateManyMutationInput!, where: DeepdiveWhereInput): AffectedRowsOutput!
  updateManyDiscounts(data: DiscountsUpdateManyMutationInput!, where: DiscountsWhereInput): AffectedRowsOutput!
  updateManyEndofshift(data: EndofshiftUpdateManyMutationInput!, where: EndofshiftWhereInput): AffectedRowsOutput!
  updateManyEvents(data: EventsUpdateManyMutationInput!, where: EventsWhereInput): AffectedRowsOutput!
  updateManyFullfillments(data: FullfillmentsUpdateManyMutationInput!, where: FullfillmentsWhereInput): AffectedRowsOutput!
  updateManyGlossary(data: GlossaryUpdateManyMutationInput!, where: GlossaryWhereInput): AffectedRowsOutput!
  updateManyIntegrations(data: IntegrationsUpdateManyMutationInput!, where: IntegrationsWhereInput): AffectedRowsOutput!
  updateManyInternalization(data: InternalizationUpdateManyMutationInput!, where: InternalizationWhereInput): AffectedRowsOutput!
  updateManyInvoices(data: InvoicesUpdateManyMutationInput!, where: InvoicesWhereInput): AffectedRowsOutput!
  updateManyLogIn(data: LogInUpdateManyMutationInput!, where: LogInWhereInput): AffectedRowsOutput!
  updateManyManufacturer(data: ManufacturerUpdateManyMutationInput!, where: ManufacturerWhereInput): AffectedRowsOutput!
  updateManyMediamanager(data: MediamanagerUpdateManyMutationInput!, where: MediamanagerWhereInput): AffectedRowsOutput!
  updateManyNewsletters(data: NewslettersUpdateManyMutationInput!, where: NewslettersWhereInput): AffectedRowsOutput!
  updateManyOoto(data: OotoUpdateManyMutationInput!, where: OotoWhereInput): AffectedRowsOutput!
  updateManyOrders(data: OrdersUpdateManyMutationInput!, where: OrdersWhereInput): AffectedRowsOutput!
  updateManyPages(data: PagesUpdateManyMutationInput!, where: PagesWhereInput): AffectedRowsOutput!
  updateManyPartners(data: PartnersUpdateManyMutationInput!, where: PartnersWhereInput): AffectedRowsOutput!
  updateManyPayments(data: PaymentsUpdateManyMutationInput!, where: PaymentsWhereInput): AffectedRowsOutput!
  updateManyPermissions(data: PermissionsUpdateManyMutationInput!, where: PermissionsWhereInput): AffectedRowsOutput!
  updateManyPlugins(data: PluginsUpdateManyMutationInput!, where: PluginsWhereInput): AffectedRowsOutput!
  updateManyProduct_types(data: Product_typesUpdateManyMutationInput!, where: Product_typesWhereInput): AffectedRowsOutput!
  updateManyProducts(data: ProductsUpdateManyMutationInput!, where: ProductsWhereInput): AffectedRowsOutput!
  updateManyProjects(data: ProjectsUpdateManyMutationInput!, where: ProjectsWhereInput): AffectedRowsOutput!
  updateManyProviders(data: ProvidersUpdateManyMutationInput!, where: ProvidersWhereInput): AffectedRowsOutput!
  updateManyQuotes(data: QuotesUpdateManyMutationInput!, where: QuotesWhereInput): AffectedRowsOutput!
  updateManyReturns(data: ReturnsUpdateManyMutationInput!, where: ReturnsWhereInput): AffectedRowsOutput!
  updateManyReviews(data: ReviewsUpdateManyMutationInput!, where: ReviewsWhereInput): AffectedRowsOutput!
  updateManyRewards(data: RewardsUpdateManyMutationInput!, where: RewardsWhereInput): AffectedRowsOutput!
  updateManyRoles(data: RolesUpdateManyMutationInput!, where: RolesWhereInput): AffectedRowsOutput!
  updateManyScheduler(data: SchedulerUpdateManyMutationInput!, where: SchedulerWhereInput): AffectedRowsOutput!
  updateManySegments(data: SegmentsUpdateManyMutationInput!, where: SegmentsWhereInput): AffectedRowsOutput!
  updateManySettings(data: SettingsUpdateManyMutationInput!, where: SettingsWhereInput): AffectedRowsOutput!
  updateManyShipments(data: ShipmentsUpdateManyMutationInput!, where: ShipmentsWhereInput): AffectedRowsOutput!
  updateManyStates(data: StatesUpdateManyMutationInput!, where: StatesWhereInput): AffectedRowsOutput!
  updateManyTags(data: TagsUpdateManyMutationInput!, where: TagsWhereInput): AffectedRowsOutput!
  updateManyTaxes(data: TaxesUpdateManyMutationInput!, where: TaxesWhereInput): AffectedRowsOutput!
  updateManyThemes(data: ThemesUpdateManyMutationInput!, where: ThemesWhereInput): AffectedRowsOutput!
  updateManyTicketing(data: TicketingUpdateManyMutationInput!, where: TicketingWhereInput): AffectedRowsOutput!
  updateManyTransactions(data: TransactionsUpdateManyMutationInput!, where: TransactionsWhereInput): AffectedRowsOutput!
  updateManyUpload_file(data: Upload_fileUpdateManyMutationInput!, where: Upload_fileWhereInput): AffectedRowsOutput!
  updateManyUsers(data: UsersUpdateManyMutationInput!, where: UsersWhereInput): AffectedRowsOutput!
  updateManyVendors(data: VendorsUpdateManyMutationInput!, where: VendorsWhereInput): AffectedRowsOutput!
  updateManyVisits(data: VisitsUpdateManyMutationInput!, where: VisitsWhereInput): AffectedRowsOutput!
  updateManyWarehouse(data: WarehouseUpdateManyMutationInput!, where: WarehouseWhereInput): AffectedRowsOutput!
  updateManyWebhooks(data: WebhooksUpdateManyMutationInput!, where: WebhooksWhereInput): AffectedRowsOutput!
  updateManyWebsites(data: WebsitesUpdateManyMutationInput!, where: WebsitesWhereInput): AffectedRowsOutput!
  updateManyWishlists(data: WishlistsUpdateManyMutationInput!, where: WishlistsWhereInput): AffectedRowsOutput!
  updateManyWorkspaces(data: WorkspacesUpdateManyMutationInput!, where: WorkspacesWhereInput): AffectedRowsOutput!
  updateManyZones(data: ZonesUpdateManyMutationInput!, where: ZonesWhereInput): AffectedRowsOutput!
  updateOneAgreements(data: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements
  updateOneApitoken(data: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken
  updateOneArticles(data: ArticlesUpdateInput!, where: ArticlesWhereUniqueInput!): Articles
  updateOneAttributes(data: AttributesUpdateInput!, where: AttributesWhereUniqueInput!): Attributes
  updateOneBrands(data: BrandsUpdateInput!, where: BrandsWhereUniqueInput!): Brands
  updateOneCategories(data: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories
  updateOneChannels(data: ChannelsUpdateInput!, where: ChannelsWhereUniqueInput!): Channels
  updateOneChecklist(data: ChecklistUpdateInput!, where: ChecklistWhereUniqueInput!): Checklist
  updateOneCities(data: CitiesUpdateInput!, where: CitiesWhereUniqueInput!): Cities
  updateOneCollections(data: CollectionsUpdateInput!, where: CollectionsWhereUniqueInput!): Collections
  updateOneContent_type(data: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type
  updateOneCountries(data: CountriesUpdateInput!, where: CountriesWhereUniqueInput!): Countries
  updateOneCurrencies(data: CurrenciesUpdateInput!, where: CurrenciesWhereUniqueInput!): Currencies
  updateOneCustomers(data: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers
  updateOneDashboards(data: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards
  updateOneDeepdive(data: DeepdiveUpdateInput!, where: DeepdiveWhereUniqueInput!): Deepdive
  updateOneDiscounts(data: DiscountsUpdateInput!, where: DiscountsWhereUniqueInput!): Discounts
  updateOneEndofshift(data: EndofshiftUpdateInput!, where: EndofshiftWhereUniqueInput!): Endofshift
  updateOneEvents(data: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events
  updateOneFullfillments(data: FullfillmentsUpdateInput!, where: FullfillmentsWhereUniqueInput!): Fullfillments
  updateOneGlossary(data: GlossaryUpdateInput!, where: GlossaryWhereUniqueInput!): Glossary
  updateOneIntegrations(data: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations
  updateOneInternalization(data: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization
  updateOneInvoices(data: InvoicesUpdateInput!, where: InvoicesWhereUniqueInput!): Invoices
  updateOneLogIn(data: LogInUpdateInput!, where: LogInWhereUniqueInput!): LogIn
  updateOneManufacturer(data: ManufacturerUpdateInput!, where: ManufacturerWhereUniqueInput!): Manufacturer
  updateOneMediamanager(data: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager
  updateOneNewsletters(data: NewslettersUpdateInput!, where: NewslettersWhereUniqueInput!): Newsletters
  updateOneOoto(data: OotoUpdateInput!, where: OotoWhereUniqueInput!): Ooto
  updateOneOrders(data: OrdersUpdateInput!, where: OrdersWhereUniqueInput!): Orders
  updateOnePages(data: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages
  updateOnePartners(data: PartnersUpdateInput!, where: PartnersWhereUniqueInput!): Partners
  updateOnePayments(data: PaymentsUpdateInput!, where: PaymentsWhereUniqueInput!): Payments
  updateOnePermissions(data: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions
  updateOnePlugins(data: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins
  updateOneProduct_types(data: Product_typesUpdateInput!, where: Product_typesWhereUniqueInput!): Product_types
  updateOneProducts(data: ProductsUpdateInput!, where: ProductsWhereUniqueInput!): Products
  updateOneProjects(data: ProjectsUpdateInput!, where: ProjectsWhereUniqueInput!): Projects
  updateOneProviders(data: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers
  updateOneQuotes(data: QuotesUpdateInput!, where: QuotesWhereUniqueInput!): Quotes
  updateOneReturns(data: ReturnsUpdateInput!, where: ReturnsWhereUniqueInput!): Returns
  updateOneReviews(data: ReviewsUpdateInput!, where: ReviewsWhereUniqueInput!): Reviews
  updateOneRewards(data: RewardsUpdateInput!, where: RewardsWhereUniqueInput!): Rewards
  updateOneRoles(data: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles
  updateOneScheduler(data: SchedulerUpdateInput!, where: SchedulerWhereUniqueInput!): Scheduler
  updateOneSegments(data: SegmentsUpdateInput!, where: SegmentsWhereUniqueInput!): Segments
  updateOneSettings(data: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings
  updateOneShipments(data: ShipmentsUpdateInput!, where: ShipmentsWhereUniqueInput!): Shipments
  updateOneStates(data: StatesUpdateInput!, where: StatesWhereUniqueInput!): States
  updateOneTags(data: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags
  updateOneTaxes(data: TaxesUpdateInput!, where: TaxesWhereUniqueInput!): Taxes
  updateOneThemes(data: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes
  updateOneTicketing(data: TicketingUpdateInput!, where: TicketingWhereUniqueInput!): Ticketing
  updateOneTransactions(data: TransactionsUpdateInput!, where: TransactionsWhereUniqueInput!): Transactions
  updateOneUpload_file(data: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file
  updateOneUsers(data: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users
  updateOneVendors(data: VendorsUpdateInput!, where: VendorsWhereUniqueInput!): Vendors
  updateOneVisits(data: VisitsUpdateInput!, where: VisitsWhereUniqueInput!): Visits
  updateOneWarehouse(data: WarehouseUpdateInput!, where: WarehouseWhereUniqueInput!): Warehouse
  updateOneWebhooks(data: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks
  updateOneWebsites(data: WebsitesUpdateInput!, where: WebsitesWhereUniqueInput!): Websites
  updateOneWishlists(data: WishlistsUpdateInput!, where: WishlistsWhereUniqueInput!): Wishlists
  updateOneWorkspaces(data: WorkspacesUpdateInput!, where: WorkspacesWhereUniqueInput!): Workspaces
  updateOneZones(data: ZonesUpdateInput!, where: ZonesWhereUniqueInput!): Zones
  upsertOneAgreements(create: AgreementsCreateInput!, update: AgreementsUpdateInput!, where: AgreementsWhereUniqueInput!): Agreements!
  upsertOneApitoken(create: ApitokenCreateInput!, update: ApitokenUpdateInput!, where: ApitokenWhereUniqueInput!): Apitoken!
  upsertOneArticles(create: ArticlesCreateInput!, update: ArticlesUpdateInput!, where: ArticlesWhereUniqueInput!): Articles!
  upsertOneAttributes(create: AttributesCreateInput!, update: AttributesUpdateInput!, where: AttributesWhereUniqueInput!): Attributes!
  upsertOneBrands(create: BrandsCreateInput!, update: BrandsUpdateInput!, where: BrandsWhereUniqueInput!): Brands!
  upsertOneCategories(create: CategoriesCreateInput!, update: CategoriesUpdateInput!, where: CategoriesWhereUniqueInput!): Categories!
  upsertOneChannels(create: ChannelsCreateInput!, update: ChannelsUpdateInput!, where: ChannelsWhereUniqueInput!): Channels!
  upsertOneChecklist(create: ChecklistCreateInput!, update: ChecklistUpdateInput!, where: ChecklistWhereUniqueInput!): Checklist!
  upsertOneCities(create: CitiesCreateInput!, update: CitiesUpdateInput!, where: CitiesWhereUniqueInput!): Cities!
  upsertOneCollections(create: CollectionsCreateInput!, update: CollectionsUpdateInput!, where: CollectionsWhereUniqueInput!): Collections!
  upsertOneContent_type(create: Content_typeCreateInput!, update: Content_typeUpdateInput!, where: Content_typeWhereUniqueInput!): Content_type!
  upsertOneCountries(create: CountriesCreateInput!, update: CountriesUpdateInput!, where: CountriesWhereUniqueInput!): Countries!
  upsertOneCurrencies(create: CurrenciesCreateInput!, update: CurrenciesUpdateInput!, where: CurrenciesWhereUniqueInput!): Currencies!
  upsertOneCustomers(create: CustomersCreateInput!, update: CustomersUpdateInput!, where: CustomersWhereUniqueInput!): Customers!
  upsertOneDashboards(create: DashboardsCreateInput!, update: DashboardsUpdateInput!, where: DashboardsWhereUniqueInput!): Dashboards!
  upsertOneDeepdive(create: DeepdiveCreateInput!, update: DeepdiveUpdateInput!, where: DeepdiveWhereUniqueInput!): Deepdive!
  upsertOneDiscounts(create: DiscountsCreateInput!, update: DiscountsUpdateInput!, where: DiscountsWhereUniqueInput!): Discounts!
  upsertOneEndofshift(create: EndofshiftCreateInput!, update: EndofshiftUpdateInput!, where: EndofshiftWhereUniqueInput!): Endofshift!
  upsertOneEvents(create: EventsCreateInput!, update: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events!
  upsertOneFullfillments(create: FullfillmentsCreateInput!, update: FullfillmentsUpdateInput!, where: FullfillmentsWhereUniqueInput!): Fullfillments!
  upsertOneGlossary(create: GlossaryCreateInput!, update: GlossaryUpdateInput!, where: GlossaryWhereUniqueInput!): Glossary!
  upsertOneIntegrations(create: IntegrationsCreateInput!, update: IntegrationsUpdateInput!, where: IntegrationsWhereUniqueInput!): Integrations!
  upsertOneInternalization(create: InternalizationCreateInput!, update: InternalizationUpdateInput!, where: InternalizationWhereUniqueInput!): Internalization!
  upsertOneInvoices(create: InvoicesCreateInput!, update: InvoicesUpdateInput!, where: InvoicesWhereUniqueInput!): Invoices!
  upsertOneLogIn(create: LogInCreateInput!, update: LogInUpdateInput!, where: LogInWhereUniqueInput!): LogIn!
  upsertOneManufacturer(create: ManufacturerCreateInput!, update: ManufacturerUpdateInput!, where: ManufacturerWhereUniqueInput!): Manufacturer!
  upsertOneMediamanager(create: MediamanagerCreateInput!, update: MediamanagerUpdateInput!, where: MediamanagerWhereUniqueInput!): Mediamanager!
  upsertOneNewsletters(create: NewslettersCreateInput!, update: NewslettersUpdateInput!, where: NewslettersWhereUniqueInput!): Newsletters!
  upsertOneOoto(create: OotoCreateInput!, update: OotoUpdateInput!, where: OotoWhereUniqueInput!): Ooto!
  upsertOneOrders(create: OrdersCreateInput!, update: OrdersUpdateInput!, where: OrdersWhereUniqueInput!): Orders!
  upsertOnePages(create: PagesCreateInput!, update: PagesUpdateInput!, where: PagesWhereUniqueInput!): Pages!
  upsertOnePartners(create: PartnersCreateInput!, update: PartnersUpdateInput!, where: PartnersWhereUniqueInput!): Partners!
  upsertOnePayments(create: PaymentsCreateInput!, update: PaymentsUpdateInput!, where: PaymentsWhereUniqueInput!): Payments!
  upsertOnePermissions(create: PermissionsCreateInput!, update: PermissionsUpdateInput!, where: PermissionsWhereUniqueInput!): Permissions!
  upsertOnePlugins(create: PluginsCreateInput!, update: PluginsUpdateInput!, where: PluginsWhereUniqueInput!): Plugins!
  upsertOneProduct_types(create: Product_typesCreateInput!, update: Product_typesUpdateInput!, where: Product_typesWhereUniqueInput!): Product_types!
  upsertOneProducts(create: ProductsCreateInput!, update: ProductsUpdateInput!, where: ProductsWhereUniqueInput!): Products!
  upsertOneProjects(create: ProjectsCreateInput!, update: ProjectsUpdateInput!, where: ProjectsWhereUniqueInput!): Projects!
  upsertOneProviders(create: ProvidersCreateInput!, update: ProvidersUpdateInput!, where: ProvidersWhereUniqueInput!): Providers!
  upsertOneQuotes(create: QuotesCreateInput!, update: QuotesUpdateInput!, where: QuotesWhereUniqueInput!): Quotes!
  upsertOneReturns(create: ReturnsCreateInput!, update: ReturnsUpdateInput!, where: ReturnsWhereUniqueInput!): Returns!
  upsertOneReviews(create: ReviewsCreateInput!, update: ReviewsUpdateInput!, where: ReviewsWhereUniqueInput!): Reviews!
  upsertOneRewards(create: RewardsCreateInput!, update: RewardsUpdateInput!, where: RewardsWhereUniqueInput!): Rewards!
  upsertOneRoles(create: RolesCreateInput!, update: RolesUpdateInput!, where: RolesWhereUniqueInput!): Roles!
  upsertOneScheduler(create: SchedulerCreateInput!, update: SchedulerUpdateInput!, where: SchedulerWhereUniqueInput!): Scheduler!
  upsertOneSegments(create: SegmentsCreateInput!, update: SegmentsUpdateInput!, where: SegmentsWhereUniqueInput!): Segments!
  upsertOneSettings(create: SettingsCreateInput!, update: SettingsUpdateInput!, where: SettingsWhereUniqueInput!): Settings!
  upsertOneShipments(create: ShipmentsCreateInput!, update: ShipmentsUpdateInput!, where: ShipmentsWhereUniqueInput!): Shipments!
  upsertOneStates(create: StatesCreateInput!, update: StatesUpdateInput!, where: StatesWhereUniqueInput!): States!
  upsertOneTags(create: TagsCreateInput!, update: TagsUpdateInput!, where: TagsWhereUniqueInput!): Tags!
  upsertOneTaxes(create: TaxesCreateInput!, update: TaxesUpdateInput!, where: TaxesWhereUniqueInput!): Taxes!
  upsertOneThemes(create: ThemesCreateInput!, update: ThemesUpdateInput!, where: ThemesWhereUniqueInput!): Themes!
  upsertOneTicketing(create: TicketingCreateInput!, update: TicketingUpdateInput!, where: TicketingWhereUniqueInput!): Ticketing!
  upsertOneTransactions(create: TransactionsCreateInput!, update: TransactionsUpdateInput!, where: TransactionsWhereUniqueInput!): Transactions!
  upsertOneUpload_file(create: Upload_fileCreateInput!, update: Upload_fileUpdateInput!, where: Upload_fileWhereUniqueInput!): Upload_file!
  upsertOneUsers(create: UsersCreateInput!, update: UsersUpdateInput!, where: UsersWhereUniqueInput!): Users!
  upsertOneVendors(create: VendorsCreateInput!, update: VendorsUpdateInput!, where: VendorsWhereUniqueInput!): Vendors!
  upsertOneVisits(create: VisitsCreateInput!, update: VisitsUpdateInput!, where: VisitsWhereUniqueInput!): Visits!
  upsertOneWarehouse(create: WarehouseCreateInput!, update: WarehouseUpdateInput!, where: WarehouseWhereUniqueInput!): Warehouse!
  upsertOneWebhooks(create: WebhooksCreateInput!, update: WebhooksUpdateInput!, where: WebhooksWhereUniqueInput!): Webhooks!
  upsertOneWebsites(create: WebsitesCreateInput!, update: WebsitesUpdateInput!, where: WebsitesWhereUniqueInput!): Websites!
  upsertOneWishlists(create: WishlistsCreateInput!, update: WishlistsUpdateInput!, where: WishlistsWhereUniqueInput!): Wishlists!
  upsertOneWorkspaces(create: WorkspacesCreateInput!, update: WorkspacesUpdateInput!, where: WorkspacesWhereUniqueInput!): Workspaces!
  upsertOneZones(create: ZonesCreateInput!, update: ZonesUpdateInput!, where: ZonesWhereUniqueInput!): Zones!
}

input NestedBigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedDecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedJsonNullableFilter {
  array_contains: JSON
  array_ends_with: JSON
  array_starts_with: JSON
  equals: JSON
  gt: JSON
  gte: JSON
  lt: JSON
  lte: JSON
  not: JSON
  path: [String!]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

type Newsletters {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int!
  status: String
  store: String
  websites: String
}

type NewslettersAvgAggregate {
  cust_id: Float
  id: Float
}

input NewslettersAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

type NewslettersCountAggregate {
  _all: Int!
  created_at: Int!
  cust_id: Int!
  customer_first_name: Int!
  customer_last_name: Int!
  customers: Int!
  email: Int!
  id: Int!
  status: Int!
  store: Int!
  websites: Int!
}

input NewslettersCountOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

input NewslettersCreateInput {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  status: String
  store: String
  websites: String
}

input NewslettersCreateManyInput {
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int
  status: String
  store: String
  websites: String
}

type NewslettersGroupBy {
  _avg: NewslettersAvgAggregate
  _count: NewslettersCountAggregate
  _max: NewslettersMaxAggregate
  _min: NewslettersMinAggregate
  _sum: NewslettersSumAggregate
  created_at: DateTime
  cust_id: Int!
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String!
  id: Int!
  status: String
  store: String
  websites: String
}

type NewslettersMaxAggregate {
  created_at: DateTime
  cust_id: Int
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String
  id: Int
  status: String
  store: String
  websites: String
}

input NewslettersMaxOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

type NewslettersMinAggregate {
  created_at: DateTime
  cust_id: Int
  customer_first_name: String
  customer_last_name: String
  customers: String
  email: String
  id: Int
  status: String
  store: String
  websites: String
}

input NewslettersMinOrderByAggregateInput {
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

enum NewslettersOrderByRelevanceFieldEnum {
  customer_first_name
  customer_last_name
  customers
  email
  status
  store
  websites
}

input NewslettersOrderByRelevanceInput {
  fields: [NewslettersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input NewslettersOrderByWithAggregationInput {
  _avg: NewslettersAvgOrderByAggregateInput
  _count: NewslettersCountOrderByAggregateInput
  _max: NewslettersMaxOrderByAggregateInput
  _min: NewslettersMinOrderByAggregateInput
  _sum: NewslettersSumOrderByAggregateInput
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

input NewslettersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: NewslettersOrderByRelevanceInput
  created_at: SortOrder
  cust_id: SortOrder
  customer_first_name: SortOrder
  customer_last_name: SortOrder
  customers: SortOrder
  email: SortOrder
  id: SortOrder
  status: SortOrder
  store: SortOrder
  websites: SortOrder
}

enum NewslettersScalarFieldEnum {
  created_at
  cust_id
  customer_first_name
  customer_last_name
  customers
  email
  id
  status
  store
  websites
}

input NewslettersScalarWhereWithAggregatesInput {
  AND: [NewslettersScalarWhereWithAggregatesInput!]
  NOT: [NewslettersScalarWhereWithAggregatesInput!]
  OR: [NewslettersScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customer_first_name: StringNullableWithAggregatesFilter
  customer_last_name: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  store: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
}

type NewslettersSumAggregate {
  cust_id: Int
  id: Int
}

input NewslettersSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
}

input NewslettersUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customer_first_name: NullableStringFieldUpdateOperationsInput
  customer_last_name: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input NewslettersUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customer_first_name: NullableStringFieldUpdateOperationsInput
  customer_last_name: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input NewslettersWhereInput {
  AND: [NewslettersWhereInput!]
  NOT: [NewslettersWhereInput!]
  OR: [NewslettersWhereInput!]
  created_at: DateTimeNullableFilter
  cust_id: IntFilter
  customer_first_name: StringNullableFilter
  customer_last_name: StringNullableFilter
  customers: StringNullableFilter
  email: StringFilter
  id: IntFilter
  status: StringNullableFilter
  store: StringNullableFilter
  websites: StringNullableFilter
}

input NewslettersWhereUniqueInput {
  email: String
  id: Int
}

input NullableBigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableDecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Ooto {
  created_at: DateTime
  end_date: String
  id: BigInt!
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoAvgAggregate {
  id: Float
}

input OotoAvgOrderByAggregateInput {
  id: SortOrder
}

type OotoCountAggregate {
  _all: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  location: Int!
  login: Int!
  note: Int!
  start_date: Int!
  using_time: Int!
}

input OotoCountOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

input OotoCreateInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoCreateManyInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoGroupBy {
  _avg: OotoAvgAggregate
  _count: OotoCountAggregate
  _max: OotoMaxAggregate
  _min: OotoMinAggregate
  _sum: OotoSumAggregate
  created_at: DateTime
  end_date: String
  id: BigInt!
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

type OotoMaxAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoMaxOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

type OotoMinAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  location: String
  login: String
  note: String
  start_date: String
  using_time: String
}

input OotoMinOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

enum OotoOrderByRelevanceFieldEnum {
  end_date
  location
  login
  note
  start_date
  using_time
}

input OotoOrderByRelevanceInput {
  fields: [OotoOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input OotoOrderByWithAggregationInput {
  _avg: OotoAvgOrderByAggregateInput
  _count: OotoCountOrderByAggregateInput
  _max: OotoMaxOrderByAggregateInput
  _min: OotoMinOrderByAggregateInput
  _sum: OotoSumOrderByAggregateInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

input OotoOrderByWithRelationAndSearchRelevanceInput {
  _relevance: OotoOrderByRelevanceInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  login: SortOrder
  note: SortOrder
  start_date: SortOrder
  using_time: SortOrder
}

enum OotoScalarFieldEnum {
  created_at
  end_date
  id
  location
  login
  note
  start_date
  using_time
}

input OotoScalarWhereWithAggregatesInput {
  AND: [OotoScalarWhereWithAggregatesInput!]
  NOT: [OotoScalarWhereWithAggregatesInput!]
  OR: [OotoScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  note: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  using_time: StringNullableWithAggregatesFilter
}

type OotoSumAggregate {
  id: BigInt
}

input OotoSumOrderByAggregateInput {
  id: SortOrder
}

input OotoUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  using_time: NullableStringFieldUpdateOperationsInput
}

input OotoUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  using_time: NullableStringFieldUpdateOperationsInput
}

input OotoWhereInput {
  AND: [OotoWhereInput!]
  NOT: [OotoWhereInput!]
  OR: [OotoWhereInput!]
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  login: StringNullableFilter
  note: StringNullableFilter
  start_date: StringNullableFilter
  using_time: StringNullableFilter
}

input OotoWhereUniqueInput {
  id: BigInt
}

type Orders {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int!
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersAvgAggregate {
  cust_id: Float
  grand_total_base: Float
  grand_total_purchased: Float
  id: Float
  prod_id: Float
  purchase_point: Float
}

input OrdersAvgOrderByAggregateInput {
  cust_id: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  purchase_point: SortOrder
}

type OrdersCountAggregate {
  _all: Int!
  action: Int!
  allocated_sources: Int!
  bill_to_name: Int!
  braintree_transaction_source: Int!
  cust_id: Int!
  customers: Int!
  grand_total_base: Int!
  grand_total_purchased: Int!
  id: Int!
  prod_id: Int!
  products: Int!
  purchase_date: Int!
  purchase_point: Int!
  quotes: Int!
  ship_to_name: Int!
  status: Int!
  transactions: Int!
}

input OrdersCountOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

input OrdersCreateInput {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersCreateManyInput {
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersGroupBy {
  _avg: OrdersAvgAggregate
  _count: OrdersCountAggregate
  _max: OrdersMaxAggregate
  _min: OrdersMinAggregate
  _sum: OrdersSumAggregate
  action: Boolean
  allocated_sources: String
  bill_to_name: String!
  braintree_transaction_source: String
  cust_id: Int!
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int!
  prod_id: BigInt!
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

type OrdersMaxAggregate {
  action: Boolean
  allocated_sources: String
  bill_to_name: String
  braintree_transaction_source: String
  cust_id: Int
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersMaxOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

type OrdersMinAggregate {
  action: Boolean
  allocated_sources: String
  bill_to_name: String
  braintree_transaction_source: String
  cust_id: Int
  customers: String
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  products: String
  purchase_date: DateTime
  purchase_point: Int
  quotes: String
  ship_to_name: String
  status: Boolean
  transactions: String
}

input OrdersMinOrderByAggregateInput {
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

enum OrdersOrderByRelevanceFieldEnum {
  allocated_sources
  bill_to_name
  braintree_transaction_source
  customers
  products
  quotes
  ship_to_name
  transactions
}

input OrdersOrderByRelevanceInput {
  fields: [OrdersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input OrdersOrderByWithAggregationInput {
  _avg: OrdersAvgOrderByAggregateInput
  _count: OrdersCountOrderByAggregateInput
  _max: OrdersMaxOrderByAggregateInput
  _min: OrdersMinOrderByAggregateInput
  _sum: OrdersSumOrderByAggregateInput
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

input OrdersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: OrdersOrderByRelevanceInput
  action: SortOrder
  allocated_sources: SortOrder
  bill_to_name: SortOrder
  braintree_transaction_source: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  products: SortOrder
  purchase_date: SortOrder
  purchase_point: SortOrder
  quotes: SortOrder
  ship_to_name: SortOrder
  status: SortOrder
  transactions: SortOrder
}

enum OrdersScalarFieldEnum {
  action
  allocated_sources
  bill_to_name
  braintree_transaction_source
  cust_id
  customers
  grand_total_base
  grand_total_purchased
  id
  prod_id
  products
  purchase_date
  purchase_point
  quotes
  ship_to_name
  status
  transactions
}

input OrdersScalarWhereWithAggregatesInput {
  AND: [OrdersScalarWhereWithAggregatesInput!]
  NOT: [OrdersScalarWhereWithAggregatesInput!]
  OR: [OrdersScalarWhereWithAggregatesInput!]
  action: BoolNullableWithAggregatesFilter
  allocated_sources: StringNullableWithAggregatesFilter
  bill_to_name: StringWithAggregatesFilter
  braintree_transaction_source: StringNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  grand_total_base: IntNullableWithAggregatesFilter
  grand_total_purchased: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  purchase_date: DateTimeNullableWithAggregatesFilter
  purchase_point: IntNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  ship_to_name: StringNullableWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  transactions: StringNullableWithAggregatesFilter
}

type OrdersSumAggregate {
  cust_id: Int
  grand_total_base: Int
  grand_total_purchased: Int
  id: Int
  prod_id: BigInt
  purchase_point: Int
}

input OrdersSumOrderByAggregateInput {
  cust_id: SortOrder
  grand_total_base: SortOrder
  grand_total_purchased: SortOrder
  id: SortOrder
  prod_id: SortOrder
  purchase_point: SortOrder
}

input OrdersUpdateInput {
  action: NullableBoolFieldUpdateOperationsInput
  allocated_sources: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  braintree_transaction_source: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableIntFieldUpdateOperationsInput
  grand_total_purchased: NullableIntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  purchase_date: NullableDateTimeFieldUpdateOperationsInput
  purchase_point: NullableIntFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  ship_to_name: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  transactions: NullableStringFieldUpdateOperationsInput
}

input OrdersUpdateManyMutationInput {
  action: NullableBoolFieldUpdateOperationsInput
  allocated_sources: NullableStringFieldUpdateOperationsInput
  bill_to_name: StringFieldUpdateOperationsInput
  braintree_transaction_source: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  grand_total_base: NullableIntFieldUpdateOperationsInput
  grand_total_purchased: NullableIntFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  purchase_date: NullableDateTimeFieldUpdateOperationsInput
  purchase_point: NullableIntFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  ship_to_name: NullableStringFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  transactions: NullableStringFieldUpdateOperationsInput
}

input OrdersWhereInput {
  AND: [OrdersWhereInput!]
  NOT: [OrdersWhereInput!]
  OR: [OrdersWhereInput!]
  action: BoolNullableFilter
  allocated_sources: StringNullableFilter
  bill_to_name: StringFilter
  braintree_transaction_source: StringNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  grand_total_base: IntNullableFilter
  grand_total_purchased: IntNullableFilter
  id: IntFilter
  prod_id: BigIntFilter
  products: StringNullableFilter
  purchase_date: DateTimeNullableFilter
  purchase_point: IntNullableFilter
  quotes: StringNullableFilter
  ship_to_name: StringNullableFilter
  status: BoolNullableFilter
  transactions: StringNullableFilter
}

input OrdersWhereUniqueInput {
  id: Int
}

type Pages {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesAvgAggregate {
  id: Float
}

input PagesAvgOrderByAggregateInput {
  id: SortOrder
}

type PagesCountAggregate {
  _all: Int!
  content: Int!
  content_title: Int!
  enable_page: Int!
  id: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  title: Int!
  url_key: Int!
}

input PagesCountOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesCreateInput {
  content: String
  content_title: String
  enable_page: Boolean
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

input PagesCreateManyInput {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesGroupBy {
  _avg: PagesAvgAggregate
  _count: PagesCountAggregate
  _max: PagesMaxAggregate
  _min: PagesMinAggregate
  _sum: PagesSumAggregate
  content: String
  content_title: String
  enable_page: Boolean
  id: Int!
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String!
  url_key: String
}

type PagesMaxAggregate {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMaxOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

type PagesMinAggregate {
  content: String
  content_title: String
  enable_page: Boolean
  id: Int
  meta_description: String
  meta_keywords: String
  meta_title: String
  title: String
  url_key: String
}

input PagesMinOrderByAggregateInput {
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesOrderByRelevanceFieldEnum {
  content
  content_title
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesOrderByRelevanceInput {
  fields: [PagesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PagesOrderByWithAggregationInput {
  _avg: PagesAvgOrderByAggregateInput
  _count: PagesCountOrderByAggregateInput
  _max: PagesMaxOrderByAggregateInput
  _min: PagesMinOrderByAggregateInput
  _sum: PagesSumOrderByAggregateInput
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

input PagesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PagesOrderByRelevanceInput
  content: SortOrder
  content_title: SortOrder
  enable_page: SortOrder
  id: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  title: SortOrder
  url_key: SortOrder
}

enum PagesScalarFieldEnum {
  content
  content_title
  enable_page
  id
  meta_description
  meta_keywords
  meta_title
  title
  url_key
}

input PagesScalarWhereWithAggregatesInput {
  AND: [PagesScalarWhereWithAggregatesInput!]
  NOT: [PagesScalarWhereWithAggregatesInput!]
  OR: [PagesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  content_title: StringNullableWithAggregatesFilter
  enable_page: BoolNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  url_key: StringNullableWithAggregatesFilter
}

type PagesSumAggregate {
  id: Int
}

input PagesSumOrderByAggregateInput {
  id: SortOrder
}

input PagesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  content_title: NullableStringFieldUpdateOperationsInput
  enable_page: NullableBoolFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  url_key: NullableStringFieldUpdateOperationsInput
}

input PagesWhereInput {
  AND: [PagesWhereInput!]
  NOT: [PagesWhereInput!]
  OR: [PagesWhereInput!]
  content: StringNullableFilter
  content_title: StringNullableFilter
  enable_page: BoolNullableFilter
  id: IntFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  title: StringFilter
  url_key: StringNullableFilter
}

input PagesWhereUniqueInput {
  id: Int
}

type Partners {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt!
  isPublic: String
  name: String
  state: String
}

type PartnersAvgAggregate {
  id: Float
}

input PartnersAvgOrderByAggregateInput {
  id: SortOrder
}

type PartnersCountAggregate {
  _all: Int!
  address: Int!
  business_type: Int!
  city: Int!
  country: Int!
  created_at: Int!
  id: Int!
  isPublic: Int!
  name: Int!
  state: Int!
}

input PartnersCountOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

input PartnersCreateInput {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersCreateManyInput {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

type PartnersGroupBy {
  _avg: PartnersAvgAggregate
  _count: PartnersCountAggregate
  _max: PartnersMaxAggregate
  _min: PartnersMinAggregate
  _sum: PartnersSumAggregate
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt!
  isPublic: String
  name: String
  state: String
}

type PartnersMaxAggregate {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersMaxOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

type PartnersMinAggregate {
  address: String
  business_type: String
  city: String
  country: String
  created_at: DateTime
  id: BigInt
  isPublic: String
  name: String
  state: String
}

input PartnersMinOrderByAggregateInput {
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

enum PartnersOrderByRelevanceFieldEnum {
  address
  business_type
  city
  country
  isPublic
  name
  state
}

input PartnersOrderByRelevanceInput {
  fields: [PartnersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PartnersOrderByWithAggregationInput {
  _avg: PartnersAvgOrderByAggregateInput
  _count: PartnersCountOrderByAggregateInput
  _max: PartnersMaxOrderByAggregateInput
  _min: PartnersMinOrderByAggregateInput
  _sum: PartnersSumOrderByAggregateInput
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

input PartnersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PartnersOrderByRelevanceInput
  address: SortOrder
  business_type: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  isPublic: SortOrder
  name: SortOrder
  state: SortOrder
}

enum PartnersScalarFieldEnum {
  address
  business_type
  city
  country
  created_at
  id
  isPublic
  name
  state
}

input PartnersScalarWhereWithAggregatesInput {
  AND: [PartnersScalarWhereWithAggregatesInput!]
  NOT: [PartnersScalarWhereWithAggregatesInput!]
  OR: [PartnersScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  business_type: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
}

type PartnersSumAggregate {
  id: BigInt
}

input PartnersSumOrderByAggregateInput {
  id: SortOrder
}

input PartnersUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  business_type: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input PartnersUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  business_type: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
}

input PartnersWhereInput {
  AND: [PartnersWhereInput!]
  NOT: [PartnersWhereInput!]
  OR: [PartnersWhereInput!]
  address: StringNullableFilter
  business_type: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  name: StringNullableFilter
  state: StringNullableFilter
}

input PartnersWhereUniqueInput {
  id: BigInt
}

type Payments {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsAvgAggregate {
  id: Float
}

input PaymentsAvgOrderByAggregateInput {
  id: SortOrder
}

type PaymentsCountAggregate {
  _all: Int!
  active: Int!
  client_id: Int!
  client_secret: Int!
  country: Int!
  created_at: Int!
  host_uri: Int!
  icon: Int!
  id: Int!
  name: Int!
  redirect_url: Int!
  redirect_url_app: Int!
}

input PaymentsCountOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input PaymentsCreateInput {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

input PaymentsCreateManyInput {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsGroupBy {
  _avg: PaymentsAvgAggregate
  _count: PaymentsCountAggregate
  _max: PaymentsMaxAggregate
  _min: PaymentsMinAggregate
  _sum: PaymentsSumAggregate
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type PaymentsMaxAggregate {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input PaymentsMaxOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

type PaymentsMinAggregate {
  active: String
  client_id: String
  client_secret: String
  country: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input PaymentsMinOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum PaymentsOrderByRelevanceFieldEnum {
  active
  client_id
  client_secret
  country
  host_uri
  icon
  name
  redirect_url
  redirect_url_app
}

input PaymentsOrderByRelevanceInput {
  fields: [PaymentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PaymentsOrderByWithAggregationInput {
  _avg: PaymentsAvgOrderByAggregateInput
  _count: PaymentsCountOrderByAggregateInput
  _max: PaymentsMaxOrderByAggregateInput
  _min: PaymentsMinOrderByAggregateInput
  _sum: PaymentsSumOrderByAggregateInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input PaymentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PaymentsOrderByRelevanceInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum PaymentsScalarFieldEnum {
  active
  client_id
  client_secret
  country
  created_at
  host_uri
  icon
  id
  name
  redirect_url
  redirect_url_app
}

input PaymentsScalarWhereWithAggregatesInput {
  AND: [PaymentsScalarWhereWithAggregatesInput!]
  NOT: [PaymentsScalarWhereWithAggregatesInput!]
  OR: [PaymentsScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  host_uri: StringNullableWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  redirect_url: StringNullableWithAggregatesFilter
  redirect_url_app: StringNullableWithAggregatesFilter
}

type PaymentsSumAggregate {
  id: BigInt
}

input PaymentsSumOrderByAggregateInput {
  id: SortOrder
}

input PaymentsUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input PaymentsUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input PaymentsWhereInput {
  AND: [PaymentsWhereInput!]
  NOT: [PaymentsWhereInput!]
  OR: [PaymentsWhereInput!]
  active: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  host_uri: StringNullableFilter
  icon: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  redirect_url: StringNullableFilter
  redirect_url_app: StringNullableFilter
}

input PaymentsWhereUniqueInput {
  id: BigInt
  name: String
}

type Permissions {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsAvgAggregate {
  id: Float
}

input PermissionsAvgOrderByAggregateInput {
  id: SortOrder
}

type PermissionsCountAggregate {
  _all: Int!
  content: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  id: Int!
  name: Int!
  read: Int!
  role: Int!
  update: Int!
  users: Int!
}

input PermissionsCountOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsCreateInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsCreateManyInput {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsGroupBy {
  _avg: PermissionsAvgAggregate
  _count: PermissionsCountAggregate
  _max: PermissionsMaxAggregate
  _min: PermissionsMinAggregate
  _sum: PermissionsSumAggregate
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt!
  name: String
  read: String
  role: String
  update: String
  users: String
}

type PermissionsMaxAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMaxOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

type PermissionsMinAggregate {
  content: String
  create: String
  created_at: DateTime
  delete: String
  id: BigInt
  name: String
  read: String
  role: String
  update: String
  users: String
}

input PermissionsMinOrderByAggregateInput {
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsOrderByRelevanceFieldEnum {
  content
  create
  delete
  name
  read
  role
  update
  users
}

input PermissionsOrderByRelevanceInput {
  fields: [PermissionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PermissionsOrderByWithAggregationInput {
  _avg: PermissionsAvgOrderByAggregateInput
  _count: PermissionsCountOrderByAggregateInput
  _max: PermissionsMaxOrderByAggregateInput
  _min: PermissionsMinOrderByAggregateInput
  _sum: PermissionsSumOrderByAggregateInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

input PermissionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PermissionsOrderByRelevanceInput
  content: SortOrder
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  id: SortOrder
  name: SortOrder
  read: SortOrder
  role: SortOrder
  update: SortOrder
  users: SortOrder
}

enum PermissionsScalarFieldEnum {
  content
  create
  created_at
  delete
  id
  name
  read
  role
  update
  users
}

input PermissionsScalarWhereWithAggregatesInput {
  AND: [PermissionsScalarWhereWithAggregatesInput!]
  NOT: [PermissionsScalarWhereWithAggregatesInput!]
  OR: [PermissionsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  read: StringNullableWithAggregatesFilter
  role: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type PermissionsSumAggregate {
  id: BigInt
}

input PermissionsSumOrderByAggregateInput {
  id: SortOrder
}

input PermissionsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  read: NullableStringFieldUpdateOperationsInput
  role: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input PermissionsWhereInput {
  AND: [PermissionsWhereInput!]
  NOT: [PermissionsWhereInput!]
  OR: [PermissionsWhereInput!]
  content: StringNullableFilter
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  read: StringNullableFilter
  role: StringNullableFilter
  update: StringNullableFilter
  users: StringNullableFilter
}

input PermissionsWhereUniqueInput {
  id: BigInt
}

type Plugins {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsAvgAggregate {
  id: Float
}

input PluginsAvgOrderByAggregateInput {
  id: SortOrder
}

type PluginsCountAggregate {
  _all: Int!
  agree_terms: Int!
  created_at: Int!
  description: Int!
  github_link: Int!
  id: Int!
  last_updated: Int!
  logo: Int!
  name: Int!
  publisher_email: Int!
  publisher_name: Int!
  screenshots: Int!
  url: Int!
}

input PluginsCountOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsCreateInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsCreateManyInput {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsGroupBy {
  _avg: PluginsAvgAggregate
  _count: PluginsCountAggregate
  _max: PluginsMaxAggregate
  _min: PluginsMinAggregate
  _sum: PluginsSumAggregate
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt!
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

type PluginsMaxAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMaxOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

type PluginsMinAggregate {
  agree_terms: Boolean
  created_at: DateTime
  description: String
  github_link: String
  id: BigInt
  last_updated: DateTime
  logo: String
  name: String
  publisher_email: String
  publisher_name: String
  screenshots: String
  url: String
}

input PluginsMinOrderByAggregateInput {
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsOrderByRelevanceFieldEnum {
  description
  github_link
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsOrderByRelevanceInput {
  fields: [PluginsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input PluginsOrderByWithAggregationInput {
  _avg: PluginsAvgOrderByAggregateInput
  _count: PluginsCountOrderByAggregateInput
  _max: PluginsMaxOrderByAggregateInput
  _min: PluginsMinOrderByAggregateInput
  _sum: PluginsSumOrderByAggregateInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

input PluginsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: PluginsOrderByRelevanceInput
  agree_terms: SortOrder
  created_at: SortOrder
  description: SortOrder
  github_link: SortOrder
  id: SortOrder
  last_updated: SortOrder
  logo: SortOrder
  name: SortOrder
  publisher_email: SortOrder
  publisher_name: SortOrder
  screenshots: SortOrder
  url: SortOrder
}

enum PluginsScalarFieldEnum {
  agree_terms
  created_at
  description
  github_link
  id
  last_updated
  logo
  name
  publisher_email
  publisher_name
  screenshots
  url
}

input PluginsScalarWhereWithAggregatesInput {
  AND: [PluginsScalarWhereWithAggregatesInput!]
  NOT: [PluginsScalarWhereWithAggregatesInput!]
  OR: [PluginsScalarWhereWithAggregatesInput!]
  agree_terms: BoolNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  github_link: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  last_updated: DateTimeNullableWithAggregatesFilter
  logo: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  publisher_email: StringNullableWithAggregatesFilter
  publisher_name: StringNullableWithAggregatesFilter
  screenshots: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type PluginsSumAggregate {
  id: BigInt
}

input PluginsSumOrderByAggregateInput {
  id: SortOrder
}

input PluginsUpdateInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsUpdateManyMutationInput {
  agree_terms: NullableBoolFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  github_link: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  last_updated: NullableDateTimeFieldUpdateOperationsInput
  logo: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  publisher_email: NullableStringFieldUpdateOperationsInput
  publisher_name: NullableStringFieldUpdateOperationsInput
  screenshots: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input PluginsWhereInput {
  AND: [PluginsWhereInput!]
  NOT: [PluginsWhereInput!]
  OR: [PluginsWhereInput!]
  agree_terms: BoolNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  github_link: StringNullableFilter
  id: BigIntFilter
  last_updated: DateTimeNullableFilter
  logo: StringNullableFilter
  name: StringNullableFilter
  publisher_email: StringNullableFilter
  publisher_name: StringNullableFilter
  screenshots: StringNullableFilter
  url: StringNullableFilter
}

input PluginsWhereUniqueInput {
  id: BigInt
}

type Product_types {
  filter_options: String
  id: Int!
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesAvgAggregate {
  id: Float
  prod_id: Float
}

input Product_typesAvgOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

type Product_typesCountAggregate {
  _all: Int!
  filter_options: Int!
  id: Int!
  isShippable: Int!
  meta_description: Int!
  meta_url: Int!
  prod_id: Int!
  product_type: Int!
  products: Int!
  taxes: Int!
  type_name: Int!
}

input Product_typesCountOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

input Product_typesCreateInput {
  filter_options: String
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesCreateManyInput {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesGroupBy {
  _avg: Product_typesAvgAggregate
  _count: Product_typesCountAggregate
  _max: Product_typesMaxAggregate
  _min: Product_typesMinAggregate
  _sum: Product_typesSumAggregate
  filter_options: String
  id: Int!
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt!
  product_type: String
  products: String
  taxes: String
  type_name: String
}

type Product_typesMaxAggregate {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesMaxOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

type Product_typesMinAggregate {
  filter_options: String
  id: Int
  isShippable: String
  meta_description: String
  meta_url: String
  prod_id: BigInt
  product_type: String
  products: String
  taxes: String
  type_name: String
}

input Product_typesMinOrderByAggregateInput {
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

enum Product_typesOrderByRelevanceFieldEnum {
  filter_options
  isShippable
  meta_description
  meta_url
  product_type
  products
  taxes
  type_name
}

input Product_typesOrderByRelevanceInput {
  fields: [Product_typesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Product_typesOrderByWithAggregationInput {
  _avg: Product_typesAvgOrderByAggregateInput
  _count: Product_typesCountOrderByAggregateInput
  _max: Product_typesMaxOrderByAggregateInput
  _min: Product_typesMinOrderByAggregateInput
  _sum: Product_typesSumOrderByAggregateInput
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

input Product_typesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Product_typesOrderByRelevanceInput
  filter_options: SortOrder
  id: SortOrder
  isShippable: SortOrder
  meta_description: SortOrder
  meta_url: SortOrder
  prod_id: SortOrder
  product_type: SortOrder
  products: SortOrder
  taxes: SortOrder
  type_name: SortOrder
}

enum Product_typesScalarFieldEnum {
  filter_options
  id
  isShippable
  meta_description
  meta_url
  prod_id
  product_type
  products
  taxes
  type_name
}

input Product_typesScalarWhereWithAggregatesInput {
  AND: [Product_typesScalarWhereWithAggregatesInput!]
  NOT: [Product_typesScalarWhereWithAggregatesInput!]
  OR: [Product_typesScalarWhereWithAggregatesInput!]
  filter_options: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  isShippable: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  product_type: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  taxes: StringNullableWithAggregatesFilter
  type_name: StringNullableWithAggregatesFilter
}

type Product_typesSumAggregate {
  id: Int
  prod_id: BigInt
}

input Product_typesSumOrderByAggregateInput {
  id: SortOrder
  prod_id: SortOrder
}

input Product_typesUpdateInput {
  filter_options: NullableStringFieldUpdateOperationsInput
  isShippable: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_type: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  taxes: NullableStringFieldUpdateOperationsInput
  type_name: NullableStringFieldUpdateOperationsInput
}

input Product_typesUpdateManyMutationInput {
  filter_options: NullableStringFieldUpdateOperationsInput
  isShippable: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  product_type: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  taxes: NullableStringFieldUpdateOperationsInput
  type_name: NullableStringFieldUpdateOperationsInput
}

input Product_typesWhereInput {
  AND: [Product_typesWhereInput!]
  NOT: [Product_typesWhereInput!]
  OR: [Product_typesWhereInput!]
  filter_options: StringNullableFilter
  id: IntFilter
  isShippable: StringNullableFilter
  meta_description: StringNullableFilter
  meta_url: StringNullableFilter
  prod_id: BigIntFilter
  product_type: StringNullableFilter
  products: StringNullableFilter
  taxes: StringNullableFilter
  type_name: StringNullableFilter
}

input Product_typesWhereUniqueInput {
  id: Int
}

type Products {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt!
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsAvgAggregate {
  id: Float
  related_product: Float
  sku: Float
}

input ProductsAvgOrderByAggregateInput {
  id: SortOrder
  related_product: SortOrder
  sku: SortOrder
}

type ProductsCountAggregate {
  _all: Int!
  attributes: Int!
  brand: Int!
  brands: Int!
  categories: Int!
  content: Int!
  contract: Int!
  cost_string: Int!
  country: Int!
  coupons: Int!
  created_at: Int!
  credit_memos: Int!
  customer_type: Int!
  family: Int!
  file: Int!
  format: Int!
  height: Int!
  id: Int!
  image: Int!
  manufacture: Int!
  manufacturer: Int!
  manufacturer_part_number: Int!
  mediamanager: Int!
  meta_description: Int!
  meta_keywords: Int!
  meta_title: Int!
  meta_url: Int!
  name: Int!
  occassions: Int!
  occassions_occassionsToproducts: Int!
  orders: Int!
  other_products: Int!
  part_number: Int!
  price: Int!
  product: Int!
  product_attribute: Int!
  product_types: Int!
  products: Int!
  quantity_per_source: Int!
  quotes: Int!
  rating: Int!
  related_product: Int!
  returns: Int!
  salable_quantity: Int!
  short_description: Int!
  size: Int!
  sku: Int!
  status: Int!
  stock_status: Int!
  tags: Int!
  tax_class: Int!
  tax_rate: Int!
  tax_rule: Int!
  thumbnail: Int!
  trainings: Int!
  types: Int!
  variants: Int!
  visibility: Int!
  websites: Int!
  weight: Int!
  workspaces: Int!
  zone: Int!
}

input ProductsCountOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProductsCreateInput {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsCreateManyInput {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsGroupBy {
  _avg: ProductsAvgAggregate
  _count: ProductsCountAggregate
  _max: ProductsMaxAggregate
  _min: ProductsMinAggregate
  _sum: ProductsSumAggregate
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt!
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String!
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt!
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

type ProductsMaxAggregate {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsMaxOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

type ProductsMinAggregate {
  attributes: String
  brand: String
  brands: String
  categories: String
  content: String
  contract: String
  cost_string: String
  country: String
  coupons: String
  created_at: DateTime
  credit_memos: String
  customer_type: String
  family: String
  file: String
  format: String
  height: String
  id: BigInt
  image: String
  manufacture: String
  manufacturer: String
  manufacturer_part_number: String
  mediamanager: String
  meta_description: String
  meta_keywords: String
  meta_title: String
  meta_url: String
  name: String
  occassions: String
  occassions_occassionsToproducts: String
  orders: String
  other_products: String
  part_number: String
  price: String
  product: String
  product_attribute: String
  product_types: String
  products: String
  quantity_per_source: String
  quotes: String
  rating: String
  related_product: BigInt
  returns: String
  salable_quantity: String
  short_description: String
  size: String
  sku: BigInt
  status: Boolean
  stock_status: String
  tags: String
  tax_class: String
  tax_rate: String
  tax_rule: String
  thumbnail: String
  trainings: String
  types: String
  variants: String
  visibility: String
  websites: String
  weight: String
  workspaces: String
  zone: String
}

input ProductsMinOrderByAggregateInput {
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProductsOrderByRelevanceFieldEnum {
  attributes
  brand
  brands
  categories
  content
  contract
  cost_string
  country
  coupons
  credit_memos
  customer_type
  family
  file
  format
  height
  image
  manufacture
  manufacturer
  manufacturer_part_number
  mediamanager
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  occassions
  occassions_occassionsToproducts
  orders
  other_products
  part_number
  price
  product
  product_attribute
  product_types
  products
  quantity_per_source
  quotes
  rating
  returns
  salable_quantity
  short_description
  size
  stock_status
  tags
  tax_class
  tax_rate
  tax_rule
  thumbnail
  trainings
  types
  variants
  visibility
  websites
  weight
  workspaces
  zone
}

input ProductsOrderByRelevanceInput {
  fields: [ProductsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProductsOrderByWithAggregationInput {
  _avg: ProductsAvgOrderByAggregateInput
  _count: ProductsCountOrderByAggregateInput
  _max: ProductsMaxOrderByAggregateInput
  _min: ProductsMinOrderByAggregateInput
  _sum: ProductsSumOrderByAggregateInput
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProductsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProductsOrderByRelevanceInput
  attributes: SortOrder
  brand: SortOrder
  brands: SortOrder
  categories: SortOrder
  content: SortOrder
  contract: SortOrder
  cost_string: SortOrder
  country: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  credit_memos: SortOrder
  customer_type: SortOrder
  family: SortOrder
  file: SortOrder
  format: SortOrder
  height: SortOrder
  id: SortOrder
  image: SortOrder
  manufacture: SortOrder
  manufacturer: SortOrder
  manufacturer_part_number: SortOrder
  mediamanager: SortOrder
  meta_description: SortOrder
  meta_keywords: SortOrder
  meta_title: SortOrder
  meta_url: SortOrder
  name: SortOrder
  occassions: SortOrder
  occassions_occassionsToproducts: SortOrder
  orders: SortOrder
  other_products: SortOrder
  part_number: SortOrder
  price: SortOrder
  product: SortOrder
  product_attribute: SortOrder
  product_types: SortOrder
  products: SortOrder
  quantity_per_source: SortOrder
  quotes: SortOrder
  rating: SortOrder
  related_product: SortOrder
  returns: SortOrder
  salable_quantity: SortOrder
  short_description: SortOrder
  size: SortOrder
  sku: SortOrder
  status: SortOrder
  stock_status: SortOrder
  tags: SortOrder
  tax_class: SortOrder
  tax_rate: SortOrder
  tax_rule: SortOrder
  thumbnail: SortOrder
  trainings: SortOrder
  types: SortOrder
  variants: SortOrder
  visibility: SortOrder
  websites: SortOrder
  weight: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProductsScalarFieldEnum {
  attributes
  brand
  brands
  categories
  content
  contract
  cost_string
  country
  coupons
  created_at
  credit_memos
  customer_type
  family
  file
  format
  height
  id
  image
  manufacture
  manufacturer
  manufacturer_part_number
  mediamanager
  meta_description
  meta_keywords
  meta_title
  meta_url
  name
  occassions
  occassions_occassionsToproducts
  orders
  other_products
  part_number
  price
  product
  product_attribute
  product_types
  products
  quantity_per_source
  quotes
  rating
  related_product
  returns
  salable_quantity
  short_description
  size
  sku
  status
  stock_status
  tags
  tax_class
  tax_rate
  tax_rule
  thumbnail
  trainings
  types
  variants
  visibility
  websites
  weight
  workspaces
  zone
}

input ProductsScalarWhereWithAggregatesInput {
  AND: [ProductsScalarWhereWithAggregatesInput!]
  NOT: [ProductsScalarWhereWithAggregatesInput!]
  OR: [ProductsScalarWhereWithAggregatesInput!]
  attributes: StringNullableWithAggregatesFilter
  brand: StringNullableWithAggregatesFilter
  brands: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  contract: StringNullableWithAggregatesFilter
  cost_string: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  credit_memos: StringNullableWithAggregatesFilter
  customer_type: StringNullableWithAggregatesFilter
  family: StringNullableWithAggregatesFilter
  file: StringNullableWithAggregatesFilter
  format: StringNullableWithAggregatesFilter
  height: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  manufacture: StringNullableWithAggregatesFilter
  manufacturer: StringNullableWithAggregatesFilter
  manufacturer_part_number: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  meta_description: StringNullableWithAggregatesFilter
  meta_keywords: StringNullableWithAggregatesFilter
  meta_title: StringNullableWithAggregatesFilter
  meta_url: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  occassions: StringNullableWithAggregatesFilter
  occassions_occassionsToproducts: StringNullableWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  other_products: StringNullableWithAggregatesFilter
  part_number: StringNullableWithAggregatesFilter
  price: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  product_attribute: StringNullableWithAggregatesFilter
  product_types: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quantity_per_source: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  rating: StringNullableWithAggregatesFilter
  related_product: BigIntNullableWithAggregatesFilter
  returns: StringNullableWithAggregatesFilter
  salable_quantity: StringNullableWithAggregatesFilter
  short_description: StringNullableWithAggregatesFilter
  size: StringNullableWithAggregatesFilter
  sku: BigIntWithAggregatesFilter
  status: BoolNullableWithAggregatesFilter
  stock_status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  tax_class: StringNullableWithAggregatesFilter
  tax_rate: StringNullableWithAggregatesFilter
  tax_rule: StringNullableWithAggregatesFilter
  thumbnail: StringNullableWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
  types: StringNullableWithAggregatesFilter
  variants: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  weight: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zone: StringNullableWithAggregatesFilter
}

type ProductsSumAggregate {
  id: BigInt
  related_product: BigInt
  sku: BigInt
}

input ProductsSumOrderByAggregateInput {
  id: SortOrder
  related_product: SortOrder
  sku: SortOrder
}

input ProductsUpdateInput {
  attributes: NullableStringFieldUpdateOperationsInput
  brand: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  contract: NullableStringFieldUpdateOperationsInput
  cost_string: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_type: NullableStringFieldUpdateOperationsInput
  family: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  manufacture: NullableStringFieldUpdateOperationsInput
  manufacturer: NullableStringFieldUpdateOperationsInput
  manufacturer_part_number: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  occassions_occassionsToproducts: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  other_products: NullableStringFieldUpdateOperationsInput
  part_number: NullableStringFieldUpdateOperationsInput
  price: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  product_attribute: NullableStringFieldUpdateOperationsInput
  product_types: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity_per_source: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  related_product: NullableBigIntFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  salable_quantity: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: BigIntFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  stock_status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
  tax_rule: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  types: NullableStringFieldUpdateOperationsInput
  variants: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProductsUpdateManyMutationInput {
  attributes: NullableStringFieldUpdateOperationsInput
  brand: NullableStringFieldUpdateOperationsInput
  brands: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  contract: NullableStringFieldUpdateOperationsInput
  cost_string: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  credit_memos: NullableStringFieldUpdateOperationsInput
  customer_type: NullableStringFieldUpdateOperationsInput
  family: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  format: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  manufacture: NullableStringFieldUpdateOperationsInput
  manufacturer: NullableStringFieldUpdateOperationsInput
  manufacturer_part_number: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  meta_description: NullableStringFieldUpdateOperationsInput
  meta_keywords: NullableStringFieldUpdateOperationsInput
  meta_title: NullableStringFieldUpdateOperationsInput
  meta_url: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  occassions_occassionsToproducts: NullableStringFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  other_products: NullableStringFieldUpdateOperationsInput
  part_number: NullableStringFieldUpdateOperationsInput
  price: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  product_attribute: NullableStringFieldUpdateOperationsInput
  product_types: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity_per_source: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  related_product: NullableBigIntFieldUpdateOperationsInput
  returns: NullableStringFieldUpdateOperationsInput
  salable_quantity: NullableStringFieldUpdateOperationsInput
  short_description: NullableStringFieldUpdateOperationsInput
  size: NullableStringFieldUpdateOperationsInput
  sku: BigIntFieldUpdateOperationsInput
  status: NullableBoolFieldUpdateOperationsInput
  stock_status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  tax_class: NullableStringFieldUpdateOperationsInput
  tax_rate: NullableStringFieldUpdateOperationsInput
  tax_rule: NullableStringFieldUpdateOperationsInput
  thumbnail: NullableStringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
  types: NullableStringFieldUpdateOperationsInput
  variants: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProductsWhereInput {
  AND: [ProductsWhereInput!]
  NOT: [ProductsWhereInput!]
  OR: [ProductsWhereInput!]
  attributes: StringNullableFilter
  brand: StringNullableFilter
  brands: StringNullableFilter
  categories: StringNullableFilter
  content: StringNullableFilter
  contract: StringNullableFilter
  cost_string: StringNullableFilter
  country: StringNullableFilter
  coupons: StringNullableFilter
  created_at: DateTimeNullableFilter
  credit_memos: StringNullableFilter
  customer_type: StringNullableFilter
  family: StringNullableFilter
  file: StringNullableFilter
  format: StringNullableFilter
  height: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  manufacture: StringNullableFilter
  manufacturer: StringNullableFilter
  manufacturer_part_number: StringNullableFilter
  mediamanager: StringNullableFilter
  meta_description: StringNullableFilter
  meta_keywords: StringNullableFilter
  meta_title: StringNullableFilter
  meta_url: StringNullableFilter
  name: StringFilter
  occassions: StringNullableFilter
  occassions_occassionsToproducts: StringNullableFilter
  orders: StringNullableFilter
  other_products: StringNullableFilter
  part_number: StringNullableFilter
  price: StringNullableFilter
  product: StringNullableFilter
  product_attribute: StringNullableFilter
  product_types: StringNullableFilter
  products: StringNullableFilter
  quantity_per_source: StringNullableFilter
  quotes: StringNullableFilter
  rating: StringNullableFilter
  related_product: BigIntNullableFilter
  returns: StringNullableFilter
  salable_quantity: StringNullableFilter
  short_description: StringNullableFilter
  size: StringNullableFilter
  sku: BigIntFilter
  status: BoolNullableFilter
  stock_status: StringNullableFilter
  tags: StringNullableFilter
  tax_class: StringNullableFilter
  tax_rate: StringNullableFilter
  tax_rule: StringNullableFilter
  thumbnail: StringNullableFilter
  trainings: StringNullableFilter
  types: StringNullableFilter
  variants: StringNullableFilter
  visibility: StringNullableFilter
  websites: StringNullableFilter
  weight: StringNullableFilter
  workspaces: StringNullableFilter
  zone: StringNullableFilter
}

input ProductsWhereUniqueInput {
  id: BigInt
  sku: BigInt
}

type Projects {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt!
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsAvgAggregate {
  cust_id: Float
  id: Float
  staff_id: Float
  task_id: Float
  ticket_id: Float
}

input ProjectsAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
  task_id: SortOrder
  ticket_id: SortOrder
}

type ProjectsCountAggregate {
  _all: Int!
  assignee: Int!
  categories: Int!
  company: Int!
  considerworkingdays: Int!
  created_at: Int!
  cust_id: Int!
  customers: Int!
  doing: Int!
  done: Int!
  end_date: Int!
  file: Int!
  goal_collaborators: Int!
  goal_measurement: Int!
  goal_name: Int!
  goal_privacy: Int!
  goal_progress_source: Int!
  goal_timeperiod: Int!
  goal_updatemethod: Int!
  id: Int!
  method: Int!
  name: Int!
  priority: Int!
  product: Int!
  project_manager: Int!
  project_template: Int!
  resource: Int!
  section_rule: Int!
  staff_id: Int!
  start_date: Int!
  status: Int!
  tags: Int!
  task_id: Int!
  tasks: Int!
  team: Int!
  ticket_id: Int!
  ticketing: Int!
  type: Int!
  users: Int!
  websites: Int!
  workspaces: Int!
  zone: Int!
}

input ProjectsCountOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProjectsCreateInput {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsCreateManyInput {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsGroupBy {
  _avg: ProjectsAvgAggregate
  _count: ProjectsCountAggregate
  _max: ProjectsMaxAggregate
  _min: ProjectsMinAggregate
  _sum: ProjectsSumAggregate
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt!
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

type ProjectsMaxAggregate {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsMaxOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

type ProjectsMinAggregate {
  assignee: String
  categories: String
  company: String
  considerworkingdays: String
  created_at: DateTime
  cust_id: Int
  customers: String
  doing: String
  done: String
  end_date: String
  file: String
  goal_collaborators: String
  goal_measurement: String
  goal_name: String
  goal_privacy: String
  goal_progress_source: String
  goal_timeperiod: String
  goal_updatemethod: String
  id: BigInt
  method: String
  name: String
  priority: String
  product: String
  project_manager: String
  project_template: String
  resource: String
  section_rule: String
  staff_id: Int
  start_date: String
  status: String
  tags: String
  task_id: BigInt
  tasks: String
  team: String
  ticket_id: BigInt
  ticketing: String
  type: String
  users: String
  websites: String
  workspaces: String
  zone: String
}

input ProjectsMinOrderByAggregateInput {
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProjectsOrderByRelevanceFieldEnum {
  assignee
  categories
  company
  considerworkingdays
  customers
  doing
  done
  end_date
  file
  goal_collaborators
  goal_measurement
  goal_name
  goal_privacy
  goal_progress_source
  goal_timeperiod
  goal_updatemethod
  method
  name
  priority
  product
  project_manager
  project_template
  resource
  section_rule
  start_date
  status
  tags
  tasks
  team
  ticketing
  type
  users
  websites
  workspaces
  zone
}

input ProjectsOrderByRelevanceInput {
  fields: [ProjectsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProjectsOrderByWithAggregationInput {
  _avg: ProjectsAvgOrderByAggregateInput
  _count: ProjectsCountOrderByAggregateInput
  _max: ProjectsMaxOrderByAggregateInput
  _min: ProjectsMinOrderByAggregateInput
  _sum: ProjectsSumOrderByAggregateInput
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

input ProjectsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProjectsOrderByRelevanceInput
  assignee: SortOrder
  categories: SortOrder
  company: SortOrder
  considerworkingdays: SortOrder
  created_at: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  doing: SortOrder
  done: SortOrder
  end_date: SortOrder
  file: SortOrder
  goal_collaborators: SortOrder
  goal_measurement: SortOrder
  goal_name: SortOrder
  goal_privacy: SortOrder
  goal_progress_source: SortOrder
  goal_timeperiod: SortOrder
  goal_updatemethod: SortOrder
  id: SortOrder
  method: SortOrder
  name: SortOrder
  priority: SortOrder
  product: SortOrder
  project_manager: SortOrder
  project_template: SortOrder
  resource: SortOrder
  section_rule: SortOrder
  staff_id: SortOrder
  start_date: SortOrder
  status: SortOrder
  tags: SortOrder
  task_id: SortOrder
  tasks: SortOrder
  team: SortOrder
  ticket_id: SortOrder
  ticketing: SortOrder
  type: SortOrder
  users: SortOrder
  websites: SortOrder
  workspaces: SortOrder
  zone: SortOrder
}

enum ProjectsScalarFieldEnum {
  assignee
  categories
  company
  considerworkingdays
  created_at
  cust_id
  customers
  doing
  done
  end_date
  file
  goal_collaborators
  goal_measurement
  goal_name
  goal_privacy
  goal_progress_source
  goal_timeperiod
  goal_updatemethod
  id
  method
  name
  priority
  product
  project_manager
  project_template
  resource
  section_rule
  staff_id
  start_date
  status
  tags
  task_id
  tasks
  team
  ticket_id
  ticketing
  type
  users
  websites
  workspaces
  zone
}

input ProjectsScalarWhereWithAggregatesInput {
  AND: [ProjectsScalarWhereWithAggregatesInput!]
  NOT: [ProjectsScalarWhereWithAggregatesInput!]
  OR: [ProjectsScalarWhereWithAggregatesInput!]
  assignee: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  company: StringNullableWithAggregatesFilter
  considerworkingdays: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  cust_id: IntNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  doing: StringNullableWithAggregatesFilter
  done: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  file: StringNullableWithAggregatesFilter
  goal_collaborators: StringNullableWithAggregatesFilter
  goal_measurement: StringNullableWithAggregatesFilter
  goal_name: StringNullableWithAggregatesFilter
  goal_privacy: StringNullableWithAggregatesFilter
  goal_progress_source: StringNullableWithAggregatesFilter
  goal_timeperiod: StringNullableWithAggregatesFilter
  goal_updatemethod: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  method: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  project_manager: StringNullableWithAggregatesFilter
  project_template: StringNullableWithAggregatesFilter
  resource: StringNullableWithAggregatesFilter
  section_rule: StringNullableWithAggregatesFilter
  staff_id: IntNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  task_id: BigIntNullableWithAggregatesFilter
  tasks: StringNullableWithAggregatesFilter
  team: StringNullableWithAggregatesFilter
  ticket_id: BigIntNullableWithAggregatesFilter
  ticketing: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
  zone: StringNullableWithAggregatesFilter
}

type ProjectsSumAggregate {
  cust_id: Int
  id: BigInt
  staff_id: Int
  task_id: BigInt
  ticket_id: BigInt
}

input ProjectsSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  staff_id: SortOrder
  task_id: SortOrder
  ticket_id: SortOrder
}

input ProjectsUpdateInput {
  assignee: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  considerworkingdays: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: NullableIntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  doing: NullableStringFieldUpdateOperationsInput
  done: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  goal_collaborators: NullableStringFieldUpdateOperationsInput
  goal_measurement: NullableStringFieldUpdateOperationsInput
  goal_name: NullableStringFieldUpdateOperationsInput
  goal_privacy: NullableStringFieldUpdateOperationsInput
  goal_progress_source: NullableStringFieldUpdateOperationsInput
  goal_timeperiod: NullableStringFieldUpdateOperationsInput
  goal_updatemethod: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  method: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  project_manager: NullableStringFieldUpdateOperationsInput
  project_template: NullableStringFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  section_rule: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_id: NullableBigIntFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_id: NullableBigIntFieldUpdateOperationsInput
  ticketing: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProjectsUpdateManyMutationInput {
  assignee: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  company: NullableStringFieldUpdateOperationsInput
  considerworkingdays: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  cust_id: NullableIntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  doing: NullableStringFieldUpdateOperationsInput
  done: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  file: NullableStringFieldUpdateOperationsInput
  goal_collaborators: NullableStringFieldUpdateOperationsInput
  goal_measurement: NullableStringFieldUpdateOperationsInput
  goal_name: NullableStringFieldUpdateOperationsInput
  goal_privacy: NullableStringFieldUpdateOperationsInput
  goal_progress_source: NullableStringFieldUpdateOperationsInput
  goal_timeperiod: NullableStringFieldUpdateOperationsInput
  goal_updatemethod: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  method: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  project_manager: NullableStringFieldUpdateOperationsInput
  project_template: NullableStringFieldUpdateOperationsInput
  resource: NullableStringFieldUpdateOperationsInput
  section_rule: NullableStringFieldUpdateOperationsInput
  staff_id: NullableIntFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  task_id: NullableBigIntFieldUpdateOperationsInput
  tasks: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_id: NullableBigIntFieldUpdateOperationsInput
  ticketing: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
  zone: NullableStringFieldUpdateOperationsInput
}

input ProjectsWhereInput {
  AND: [ProjectsWhereInput!]
  NOT: [ProjectsWhereInput!]
  OR: [ProjectsWhereInput!]
  assignee: StringNullableFilter
  categories: StringNullableFilter
  company: StringNullableFilter
  considerworkingdays: StringNullableFilter
  created_at: DateTimeNullableFilter
  cust_id: IntNullableFilter
  customers: StringNullableFilter
  doing: StringNullableFilter
  done: StringNullableFilter
  end_date: StringNullableFilter
  file: StringNullableFilter
  goal_collaborators: StringNullableFilter
  goal_measurement: StringNullableFilter
  goal_name: StringNullableFilter
  goal_privacy: StringNullableFilter
  goal_progress_source: StringNullableFilter
  goal_timeperiod: StringNullableFilter
  goal_updatemethod: StringNullableFilter
  id: BigIntFilter
  method: StringNullableFilter
  name: StringNullableFilter
  priority: StringNullableFilter
  product: StringNullableFilter
  project_manager: StringNullableFilter
  project_template: StringNullableFilter
  resource: StringNullableFilter
  section_rule: StringNullableFilter
  staff_id: IntNullableFilter
  start_date: StringNullableFilter
  status: StringNullableFilter
  tags: StringNullableFilter
  task_id: BigIntNullableFilter
  tasks: StringNullableFilter
  team: StringNullableFilter
  ticket_id: BigIntNullableFilter
  ticketing: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
  websites: StringNullableFilter
  workspaces: StringNullableFilter
  zone: StringNullableFilter
}

input ProjectsWhereUniqueInput {
  id: BigInt
}

type Providers {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersAvgAggregate {
  id: Float
}

input ProvidersAvgOrderByAggregateInput {
  id: SortOrder
}

type ProvidersCountAggregate {
  _all: Int!
  active: Int!
  client_id: Int!
  client_secret: Int!
  created_at: Int!
  host_uri: Int!
  icon: Int!
  id: Int!
  name: Int!
  redirect_url: Int!
  redirect_url_app: Int!
}

input ProvidersCountOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersCreateInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

input ProvidersCreateManyInput {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersGroupBy {
  _avg: ProvidersAvgAggregate
  _count: ProvidersCountAggregate
  _max: ProvidersMaxAggregate
  _min: ProvidersMinAggregate
  _sum: ProvidersSumAggregate
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt!
  name: String!
  redirect_url: String
  redirect_url_app: String
}

type ProvidersMaxAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMaxOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

type ProvidersMinAggregate {
  active: String
  client_id: String
  client_secret: String
  created_at: DateTime
  host_uri: String
  icon: String
  id: BigInt
  name: String
  redirect_url: String
  redirect_url_app: String
}

input ProvidersMinOrderByAggregateInput {
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersOrderByRelevanceFieldEnum {
  active
  client_id
  client_secret
  host_uri
  icon
  name
  redirect_url
  redirect_url_app
}

input ProvidersOrderByRelevanceInput {
  fields: [ProvidersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ProvidersOrderByWithAggregationInput {
  _avg: ProvidersAvgOrderByAggregateInput
  _count: ProvidersCountOrderByAggregateInput
  _max: ProvidersMaxOrderByAggregateInput
  _min: ProvidersMinOrderByAggregateInput
  _sum: ProvidersSumOrderByAggregateInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

input ProvidersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ProvidersOrderByRelevanceInput
  active: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  created_at: SortOrder
  host_uri: SortOrder
  icon: SortOrder
  id: SortOrder
  name: SortOrder
  redirect_url: SortOrder
  redirect_url_app: SortOrder
}

enum ProvidersScalarFieldEnum {
  active
  client_id
  client_secret
  created_at
  host_uri
  icon
  id
  name
  redirect_url
  redirect_url_app
}

input ProvidersScalarWhereWithAggregatesInput {
  AND: [ProvidersScalarWhereWithAggregatesInput!]
  NOT: [ProvidersScalarWhereWithAggregatesInput!]
  OR: [ProvidersScalarWhereWithAggregatesInput!]
  active: StringNullableWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  host_uri: StringNullableWithAggregatesFilter
  icon: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  redirect_url: StringNullableWithAggregatesFilter
  redirect_url_app: StringNullableWithAggregatesFilter
}

type ProvidersSumAggregate {
  id: BigInt
}

input ProvidersSumOrderByAggregateInput {
  id: SortOrder
}

input ProvidersUpdateInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersUpdateManyMutationInput {
  active: NullableStringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  host_uri: NullableStringFieldUpdateOperationsInput
  icon: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  redirect_url: NullableStringFieldUpdateOperationsInput
  redirect_url_app: NullableStringFieldUpdateOperationsInput
}

input ProvidersWhereInput {
  AND: [ProvidersWhereInput!]
  NOT: [ProvidersWhereInput!]
  OR: [ProvidersWhereInput!]
  active: StringNullableFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  created_at: DateTimeNullableFilter
  host_uri: StringNullableFilter
  icon: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  redirect_url: StringNullableFilter
  redirect_url_app: StringNullableFilter
}

input ProvidersWhereUniqueInput {
  id: BigInt
  name: String
}

type Query {
  aggregateAgreements(cursor: AgreementsWhereUniqueInput, orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): AggregateAgreements!
  aggregateApitoken(cursor: ApitokenWhereUniqueInput, orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): AggregateApitoken!
  aggregateArticles(cursor: ArticlesWhereUniqueInput, orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): AggregateArticles!
  aggregateAttributes(cursor: AttributesWhereUniqueInput, orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): AggregateAttributes!
  aggregateBrands(cursor: BrandsWhereUniqueInput, orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): AggregateBrands!
  aggregateCategories(cursor: CategoriesWhereUniqueInput, orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): AggregateCategories!
  aggregateChannels(cursor: ChannelsWhereUniqueInput, orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): AggregateChannels!
  aggregateChecklist(cursor: ChecklistWhereUniqueInput, orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): AggregateChecklist!
  aggregateCities(cursor: CitiesWhereUniqueInput, orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): AggregateCities!
  aggregateCollections(cursor: CollectionsWhereUniqueInput, orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): AggregateCollections!
  aggregateContent_type(cursor: Content_typeWhereUniqueInput, orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): AggregateContent_type!
  aggregateCountries(cursor: CountriesWhereUniqueInput, orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): AggregateCountries!
  aggregateCurrencies(cursor: CurrenciesWhereUniqueInput, orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): AggregateCurrencies!
  aggregateCustomers(cursor: CustomersWhereUniqueInput, orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): AggregateCustomers!
  aggregateDashboards(cursor: DashboardsWhereUniqueInput, orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): AggregateDashboards!
  aggregateDeepdive(cursor: DeepdiveWhereUniqueInput, orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): AggregateDeepdive!
  aggregateDiscounts(cursor: DiscountsWhereUniqueInput, orderBy: [DiscountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DiscountsWhereInput): AggregateDiscounts!
  aggregateEndofshift(cursor: EndofshiftWhereUniqueInput, orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): AggregateEndofshift!
  aggregateEvents(cursor: EventsWhereUniqueInput, orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): AggregateEvents!
  aggregateFullfillments(cursor: FullfillmentsWhereUniqueInput, orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): AggregateFullfillments!
  aggregateGlossary(cursor: GlossaryWhereUniqueInput, orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): AggregateGlossary!
  aggregateIntegrations(cursor: IntegrationsWhereUniqueInput, orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): AggregateIntegrations!
  aggregateInternalization(cursor: InternalizationWhereUniqueInput, orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): AggregateInternalization!
  aggregateInvoices(cursor: InvoicesWhereUniqueInput, orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): AggregateInvoices!
  aggregateLogIn(cursor: LogInWhereUniqueInput, orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): AggregateLogIn!
  aggregateManufacturer(cursor: ManufacturerWhereUniqueInput, orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): AggregateManufacturer!
  aggregateMediamanager(cursor: MediamanagerWhereUniqueInput, orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): AggregateMediamanager!
  aggregateNewsletters(cursor: NewslettersWhereUniqueInput, orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): AggregateNewsletters!
  aggregateOoto(cursor: OotoWhereUniqueInput, orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): AggregateOoto!
  aggregateOrders(cursor: OrdersWhereUniqueInput, orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): AggregateOrders!
  aggregatePages(cursor: PagesWhereUniqueInput, orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): AggregatePages!
  aggregatePartners(cursor: PartnersWhereUniqueInput, orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): AggregatePartners!
  aggregatePayments(cursor: PaymentsWhereUniqueInput, orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): AggregatePayments!
  aggregatePermissions(cursor: PermissionsWhereUniqueInput, orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): AggregatePermissions!
  aggregatePlugins(cursor: PluginsWhereUniqueInput, orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): AggregatePlugins!
  aggregateProduct_types(cursor: Product_typesWhereUniqueInput, orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): AggregateProduct_types!
  aggregateProducts(cursor: ProductsWhereUniqueInput, orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): AggregateProducts!
  aggregateProjects(cursor: ProjectsWhereUniqueInput, orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): AggregateProjects!
  aggregateProviders(cursor: ProvidersWhereUniqueInput, orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): AggregateProviders!
  aggregateQuotes(cursor: QuotesWhereUniqueInput, orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): AggregateQuotes!
  aggregateReturns(cursor: ReturnsWhereUniqueInput, orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): AggregateReturns!
  aggregateReviews(cursor: ReviewsWhereUniqueInput, orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): AggregateReviews!
  aggregateRewards(cursor: RewardsWhereUniqueInput, orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): AggregateRewards!
  aggregateRoles(cursor: RolesWhereUniqueInput, orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): AggregateRoles!
  aggregateScheduler(cursor: SchedulerWhereUniqueInput, orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): AggregateScheduler!
  aggregateSegments(cursor: SegmentsWhereUniqueInput, orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): AggregateSegments!
  aggregateSettings(cursor: SettingsWhereUniqueInput, orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): AggregateSettings!
  aggregateShipments(cursor: ShipmentsWhereUniqueInput, orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): AggregateShipments!
  aggregateStates(cursor: StatesWhereUniqueInput, orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): AggregateStates!
  aggregateTags(cursor: TagsWhereUniqueInput, orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): AggregateTags!
  aggregateTaxes(cursor: TaxesWhereUniqueInput, orderBy: [TaxesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TaxesWhereInput): AggregateTaxes!
  aggregateThemes(cursor: ThemesWhereUniqueInput, orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): AggregateThemes!
  aggregateTicketing(cursor: TicketingWhereUniqueInput, orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): AggregateTicketing!
  aggregateTransactions(cursor: TransactionsWhereUniqueInput, orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): AggregateTransactions!
  aggregateUpload_file(cursor: Upload_fileWhereUniqueInput, orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): AggregateUpload_file!
  aggregateUsers(cursor: UsersWhereUniqueInput, orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): AggregateUsers!
  aggregateVendors(cursor: VendorsWhereUniqueInput, orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): AggregateVendors!
  aggregateVisits(cursor: VisitsWhereUniqueInput, orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): AggregateVisits!
  aggregateWarehouse(cursor: WarehouseWhereUniqueInput, orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): AggregateWarehouse!
  aggregateWebhooks(cursor: WebhooksWhereUniqueInput, orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): AggregateWebhooks!
  aggregateWebsites(cursor: WebsitesWhereUniqueInput, orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): AggregateWebsites!
  aggregateWishlists(cursor: WishlistsWhereUniqueInput, orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): AggregateWishlists!
  aggregateWorkspaces(cursor: WorkspacesWhereUniqueInput, orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): AggregateWorkspaces!
  aggregateZones(cursor: ZonesWhereUniqueInput, orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): AggregateZones!
  apitoken(where: ApitokenWhereUniqueInput!): Apitoken
  apitokens(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): [Apitoken!]!
  checklist(where: ChecklistWhereUniqueInput!): Checklist
  checklists(cursor: ChecklistWhereUniqueInput, distinct: [ChecklistScalarFieldEnum!], orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): [Checklist!]!
  content_type(where: Content_typeWhereUniqueInput!): Content_type
  content_types(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_type!]!
  deepdive(where: DeepdiveWhereUniqueInput!): Deepdive
  deepdives(cursor: DeepdiveWhereUniqueInput, distinct: [DeepdiveScalarFieldEnum!], orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): [Deepdive!]!
  endofshift(where: EndofshiftWhereUniqueInput!): Endofshift
  endofshifts(cursor: EndofshiftWhereUniqueInput, distinct: [EndofshiftScalarFieldEnum!], orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): [Endofshift!]!
  findFirstAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): Agreements
  findFirstAgreementsOrThrow(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): Agreements
  findFirstApitoken(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): Apitoken
  findFirstApitokenOrThrow(cursor: ApitokenWhereUniqueInput, distinct: [ApitokenScalarFieldEnum!], orderBy: [ApitokenOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ApitokenWhereInput): Apitoken
  findFirstArticles(cursor: ArticlesWhereUniqueInput, distinct: [ArticlesScalarFieldEnum!], orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): Articles
  findFirstArticlesOrThrow(cursor: ArticlesWhereUniqueInput, distinct: [ArticlesScalarFieldEnum!], orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): Articles
  findFirstAttributes(cursor: AttributesWhereUniqueInput, distinct: [AttributesScalarFieldEnum!], orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): Attributes
  findFirstAttributesOrThrow(cursor: AttributesWhereUniqueInput, distinct: [AttributesScalarFieldEnum!], orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): Attributes
  findFirstBrands(cursor: BrandsWhereUniqueInput, distinct: [BrandsScalarFieldEnum!], orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): Brands
  findFirstBrandsOrThrow(cursor: BrandsWhereUniqueInput, distinct: [BrandsScalarFieldEnum!], orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): Brands
  findFirstCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): Categories
  findFirstCategoriesOrThrow(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): Categories
  findFirstChannels(cursor: ChannelsWhereUniqueInput, distinct: [ChannelsScalarFieldEnum!], orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): Channels
  findFirstChannelsOrThrow(cursor: ChannelsWhereUniqueInput, distinct: [ChannelsScalarFieldEnum!], orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): Channels
  findFirstChecklist(cursor: ChecklistWhereUniqueInput, distinct: [ChecklistScalarFieldEnum!], orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): Checklist
  findFirstChecklistOrThrow(cursor: ChecklistWhereUniqueInput, distinct: [ChecklistScalarFieldEnum!], orderBy: [ChecklistOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChecklistWhereInput): Checklist
  findFirstCities(cursor: CitiesWhereUniqueInput, distinct: [CitiesScalarFieldEnum!], orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): Cities
  findFirstCitiesOrThrow(cursor: CitiesWhereUniqueInput, distinct: [CitiesScalarFieldEnum!], orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): Cities
  findFirstCollections(cursor: CollectionsWhereUniqueInput, distinct: [CollectionsScalarFieldEnum!], orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): Collections
  findFirstCollectionsOrThrow(cursor: CollectionsWhereUniqueInput, distinct: [CollectionsScalarFieldEnum!], orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): Collections
  findFirstContent_type(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): Content_type
  findFirstContent_typeOrThrow(cursor: Content_typeWhereUniqueInput, distinct: [Content_typeScalarFieldEnum!], orderBy: [Content_typeOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Content_typeWhereInput): Content_type
  findFirstCountries(cursor: CountriesWhereUniqueInput, distinct: [CountriesScalarFieldEnum!], orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): Countries
  findFirstCountriesOrThrow(cursor: CountriesWhereUniqueInput, distinct: [CountriesScalarFieldEnum!], orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): Countries
  findFirstCurrencies(cursor: CurrenciesWhereUniqueInput, distinct: [CurrenciesScalarFieldEnum!], orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): Currencies
  findFirstCurrenciesOrThrow(cursor: CurrenciesWhereUniqueInput, distinct: [CurrenciesScalarFieldEnum!], orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): Currencies
  findFirstCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): Customers
  findFirstCustomersOrThrow(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): Customers
  findFirstDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): Dashboards
  findFirstDashboardsOrThrow(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): Dashboards
  findFirstDeepdive(cursor: DeepdiveWhereUniqueInput, distinct: [DeepdiveScalarFieldEnum!], orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): Deepdive
  findFirstDeepdiveOrThrow(cursor: DeepdiveWhereUniqueInput, distinct: [DeepdiveScalarFieldEnum!], orderBy: [DeepdiveOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DeepdiveWhereInput): Deepdive
  findFirstDiscounts(cursor: DiscountsWhereUniqueInput, distinct: [DiscountsScalarFieldEnum!], orderBy: [DiscountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DiscountsWhereInput): Discounts
  findFirstDiscountsOrThrow(cursor: DiscountsWhereUniqueInput, distinct: [DiscountsScalarFieldEnum!], orderBy: [DiscountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DiscountsWhereInput): Discounts
  findFirstEndofshift(cursor: EndofshiftWhereUniqueInput, distinct: [EndofshiftScalarFieldEnum!], orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): Endofshift
  findFirstEndofshiftOrThrow(cursor: EndofshiftWhereUniqueInput, distinct: [EndofshiftScalarFieldEnum!], orderBy: [EndofshiftOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EndofshiftWhereInput): Endofshift
  findFirstEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): Events
  findFirstEventsOrThrow(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): Events
  findFirstFullfillments(cursor: FullfillmentsWhereUniqueInput, distinct: [FullfillmentsScalarFieldEnum!], orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): Fullfillments
  findFirstFullfillmentsOrThrow(cursor: FullfillmentsWhereUniqueInput, distinct: [FullfillmentsScalarFieldEnum!], orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): Fullfillments
  findFirstGlossary(cursor: GlossaryWhereUniqueInput, distinct: [GlossaryScalarFieldEnum!], orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): Glossary
  findFirstGlossaryOrThrow(cursor: GlossaryWhereUniqueInput, distinct: [GlossaryScalarFieldEnum!], orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): Glossary
  findFirstIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): Integrations
  findFirstIntegrationsOrThrow(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): Integrations
  findFirstInternalization(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): Internalization
  findFirstInternalizationOrThrow(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): Internalization
  findFirstInvoices(cursor: InvoicesWhereUniqueInput, distinct: [InvoicesScalarFieldEnum!], orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): Invoices
  findFirstInvoicesOrThrow(cursor: InvoicesWhereUniqueInput, distinct: [InvoicesScalarFieldEnum!], orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): Invoices
  findFirstLogIn(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): LogIn
  findFirstLogInOrThrow(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): LogIn
  findFirstManufacturer(cursor: ManufacturerWhereUniqueInput, distinct: [ManufacturerScalarFieldEnum!], orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): Manufacturer
  findFirstManufacturerOrThrow(cursor: ManufacturerWhereUniqueInput, distinct: [ManufacturerScalarFieldEnum!], orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): Manufacturer
  findFirstMediamanager(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): Mediamanager
  findFirstMediamanagerOrThrow(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): Mediamanager
  findFirstNewsletters(cursor: NewslettersWhereUniqueInput, distinct: [NewslettersScalarFieldEnum!], orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): Newsletters
  findFirstNewslettersOrThrow(cursor: NewslettersWhereUniqueInput, distinct: [NewslettersScalarFieldEnum!], orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): Newsletters
  findFirstOoto(cursor: OotoWhereUniqueInput, distinct: [OotoScalarFieldEnum!], orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): Ooto
  findFirstOotoOrThrow(cursor: OotoWhereUniqueInput, distinct: [OotoScalarFieldEnum!], orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): Ooto
  findFirstOrders(cursor: OrdersWhereUniqueInput, distinct: [OrdersScalarFieldEnum!], orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): Orders
  findFirstOrdersOrThrow(cursor: OrdersWhereUniqueInput, distinct: [OrdersScalarFieldEnum!], orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): Orders
  findFirstPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): Pages
  findFirstPagesOrThrow(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): Pages
  findFirstPartners(cursor: PartnersWhereUniqueInput, distinct: [PartnersScalarFieldEnum!], orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): Partners
  findFirstPartnersOrThrow(cursor: PartnersWhereUniqueInput, distinct: [PartnersScalarFieldEnum!], orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): Partners
  findFirstPayments(cursor: PaymentsWhereUniqueInput, distinct: [PaymentsScalarFieldEnum!], orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): Payments
  findFirstPaymentsOrThrow(cursor: PaymentsWhereUniqueInput, distinct: [PaymentsScalarFieldEnum!], orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): Payments
  findFirstPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): Permissions
  findFirstPermissionsOrThrow(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): Permissions
  findFirstPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): Plugins
  findFirstPluginsOrThrow(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): Plugins
  findFirstProduct_types(cursor: Product_typesWhereUniqueInput, distinct: [Product_typesScalarFieldEnum!], orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): Product_types
  findFirstProduct_typesOrThrow(cursor: Product_typesWhereUniqueInput, distinct: [Product_typesScalarFieldEnum!], orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): Product_types
  findFirstProducts(cursor: ProductsWhereUniqueInput, distinct: [ProductsScalarFieldEnum!], orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): Products
  findFirstProductsOrThrow(cursor: ProductsWhereUniqueInput, distinct: [ProductsScalarFieldEnum!], orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): Products
  findFirstProjects(cursor: ProjectsWhereUniqueInput, distinct: [ProjectsScalarFieldEnum!], orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): Projects
  findFirstProjectsOrThrow(cursor: ProjectsWhereUniqueInput, distinct: [ProjectsScalarFieldEnum!], orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): Projects
  findFirstProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): Providers
  findFirstProvidersOrThrow(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): Providers
  findFirstQuotes(cursor: QuotesWhereUniqueInput, distinct: [QuotesScalarFieldEnum!], orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): Quotes
  findFirstQuotesOrThrow(cursor: QuotesWhereUniqueInput, distinct: [QuotesScalarFieldEnum!], orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): Quotes
  findFirstReturns(cursor: ReturnsWhereUniqueInput, distinct: [ReturnsScalarFieldEnum!], orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): Returns
  findFirstReturnsOrThrow(cursor: ReturnsWhereUniqueInput, distinct: [ReturnsScalarFieldEnum!], orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): Returns
  findFirstReviews(cursor: ReviewsWhereUniqueInput, distinct: [ReviewsScalarFieldEnum!], orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): Reviews
  findFirstReviewsOrThrow(cursor: ReviewsWhereUniqueInput, distinct: [ReviewsScalarFieldEnum!], orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): Reviews
  findFirstRewards(cursor: RewardsWhereUniqueInput, distinct: [RewardsScalarFieldEnum!], orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): Rewards
  findFirstRewardsOrThrow(cursor: RewardsWhereUniqueInput, distinct: [RewardsScalarFieldEnum!], orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): Rewards
  findFirstRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): Roles
  findFirstRolesOrThrow(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): Roles
  findFirstScheduler(cursor: SchedulerWhereUniqueInput, distinct: [SchedulerScalarFieldEnum!], orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): Scheduler
  findFirstSchedulerOrThrow(cursor: SchedulerWhereUniqueInput, distinct: [SchedulerScalarFieldEnum!], orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): Scheduler
  findFirstSegments(cursor: SegmentsWhereUniqueInput, distinct: [SegmentsScalarFieldEnum!], orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): Segments
  findFirstSegmentsOrThrow(cursor: SegmentsWhereUniqueInput, distinct: [SegmentsScalarFieldEnum!], orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): Segments
  findFirstSettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): Settings
  findFirstSettingsOrThrow(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): Settings
  findFirstShipments(cursor: ShipmentsWhereUniqueInput, distinct: [ShipmentsScalarFieldEnum!], orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): Shipments
  findFirstShipmentsOrThrow(cursor: ShipmentsWhereUniqueInput, distinct: [ShipmentsScalarFieldEnum!], orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): Shipments
  findFirstStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): States
  findFirstStatesOrThrow(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): States
  findFirstTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): Tags
  findFirstTagsOrThrow(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): Tags
  findFirstTaxes(cursor: TaxesWhereUniqueInput, distinct: [TaxesScalarFieldEnum!], orderBy: [TaxesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TaxesWhereInput): Taxes
  findFirstTaxesOrThrow(cursor: TaxesWhereUniqueInput, distinct: [TaxesScalarFieldEnum!], orderBy: [TaxesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TaxesWhereInput): Taxes
  findFirstThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): Themes
  findFirstThemesOrThrow(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): Themes
  findFirstTicketing(cursor: TicketingWhereUniqueInput, distinct: [TicketingScalarFieldEnum!], orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): Ticketing
  findFirstTicketingOrThrow(cursor: TicketingWhereUniqueInput, distinct: [TicketingScalarFieldEnum!], orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): Ticketing
  findFirstTransactions(cursor: TransactionsWhereUniqueInput, distinct: [TransactionsScalarFieldEnum!], orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): Transactions
  findFirstTransactionsOrThrow(cursor: TransactionsWhereUniqueInput, distinct: [TransactionsScalarFieldEnum!], orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): Transactions
  findFirstUpload_file(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): Upload_file
  findFirstUpload_fileOrThrow(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): Upload_file
  findFirstUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstUsersOrThrow(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findFirstVendors(cursor: VendorsWhereUniqueInput, distinct: [VendorsScalarFieldEnum!], orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): Vendors
  findFirstVendorsOrThrow(cursor: VendorsWhereUniqueInput, distinct: [VendorsScalarFieldEnum!], orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): Vendors
  findFirstVisits(cursor: VisitsWhereUniqueInput, distinct: [VisitsScalarFieldEnum!], orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): Visits
  findFirstVisitsOrThrow(cursor: VisitsWhereUniqueInput, distinct: [VisitsScalarFieldEnum!], orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): Visits
  findFirstWarehouse(cursor: WarehouseWhereUniqueInput, distinct: [WarehouseScalarFieldEnum!], orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): Warehouse
  findFirstWarehouseOrThrow(cursor: WarehouseWhereUniqueInput, distinct: [WarehouseScalarFieldEnum!], orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): Warehouse
  findFirstWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): Webhooks
  findFirstWebhooksOrThrow(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): Webhooks
  findFirstWebsites(cursor: WebsitesWhereUniqueInput, distinct: [WebsitesScalarFieldEnum!], orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): Websites
  findFirstWebsitesOrThrow(cursor: WebsitesWhereUniqueInput, distinct: [WebsitesScalarFieldEnum!], orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): Websites
  findFirstWishlists(cursor: WishlistsWhereUniqueInput, distinct: [WishlistsScalarFieldEnum!], orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): Wishlists
  findFirstWishlistsOrThrow(cursor: WishlistsWhereUniqueInput, distinct: [WishlistsScalarFieldEnum!], orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): Wishlists
  findFirstWorkspaces(cursor: WorkspacesWhereUniqueInput, distinct: [WorkspacesScalarFieldEnum!], orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): Workspaces
  findFirstWorkspacesOrThrow(cursor: WorkspacesWhereUniqueInput, distinct: [WorkspacesScalarFieldEnum!], orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): Workspaces
  findFirstZones(cursor: ZonesWhereUniqueInput, distinct: [ZonesScalarFieldEnum!], orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): Zones
  findFirstZonesOrThrow(cursor: ZonesWhereUniqueInput, distinct: [ZonesScalarFieldEnum!], orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): Zones
  findManyAgreements(cursor: AgreementsWhereUniqueInput, distinct: [AgreementsScalarFieldEnum!], orderBy: [AgreementsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AgreementsWhereInput): [Agreements!]!
  findManyArticles(cursor: ArticlesWhereUniqueInput, distinct: [ArticlesScalarFieldEnum!], orderBy: [ArticlesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ArticlesWhereInput): [Articles!]!
  findManyAttributes(cursor: AttributesWhereUniqueInput, distinct: [AttributesScalarFieldEnum!], orderBy: [AttributesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: AttributesWhereInput): [Attributes!]!
  findManyBrands(cursor: BrandsWhereUniqueInput, distinct: [BrandsScalarFieldEnum!], orderBy: [BrandsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: BrandsWhereInput): [Brands!]!
  findManyCategories(cursor: CategoriesWhereUniqueInput, distinct: [CategoriesScalarFieldEnum!], orderBy: [CategoriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CategoriesWhereInput): [Categories!]!
  findManyChannels(cursor: ChannelsWhereUniqueInput, distinct: [ChannelsScalarFieldEnum!], orderBy: [ChannelsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ChannelsWhereInput): [Channels!]!
  findManyCities(cursor: CitiesWhereUniqueInput, distinct: [CitiesScalarFieldEnum!], orderBy: [CitiesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CitiesWhereInput): [Cities!]!
  findManyCollections(cursor: CollectionsWhereUniqueInput, distinct: [CollectionsScalarFieldEnum!], orderBy: [CollectionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CollectionsWhereInput): [Collections!]!
  findManyCountries(cursor: CountriesWhereUniqueInput, distinct: [CountriesScalarFieldEnum!], orderBy: [CountriesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CountriesWhereInput): [Countries!]!
  findManyCurrencies(cursor: CurrenciesWhereUniqueInput, distinct: [CurrenciesScalarFieldEnum!], orderBy: [CurrenciesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CurrenciesWhereInput): [Currencies!]!
  findManyCustomers(cursor: CustomersWhereUniqueInput, distinct: [CustomersScalarFieldEnum!], orderBy: [CustomersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: CustomersWhereInput): [Customers!]!
  findManyDashboards(cursor: DashboardsWhereUniqueInput, distinct: [DashboardsScalarFieldEnum!], orderBy: [DashboardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DashboardsWhereInput): [Dashboards!]!
  findManyDiscounts(cursor: DiscountsWhereUniqueInput, distinct: [DiscountsScalarFieldEnum!], orderBy: [DiscountsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: DiscountsWhereInput): [Discounts!]!
  findManyEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: EventsWhereInput): [Events!]!
  findManyFullfillments(cursor: FullfillmentsWhereUniqueInput, distinct: [FullfillmentsScalarFieldEnum!], orderBy: [FullfillmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): [Fullfillments!]!
  findManyIntegrations(cursor: IntegrationsWhereUniqueInput, distinct: [IntegrationsScalarFieldEnum!], orderBy: [IntegrationsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [Integrations!]!
  findManyInvoices(cursor: InvoicesWhereUniqueInput, distinct: [InvoicesScalarFieldEnum!], orderBy: [InvoicesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InvoicesWhereInput): [Invoices!]!
  findManyNewsletters(cursor: NewslettersWhereUniqueInput, distinct: [NewslettersScalarFieldEnum!], orderBy: [NewslettersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: NewslettersWhereInput): [Newsletters!]!
  findManyOrders(cursor: OrdersWhereUniqueInput, distinct: [OrdersScalarFieldEnum!], orderBy: [OrdersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OrdersWhereInput): [Orders!]!
  findManyPages(cursor: PagesWhereUniqueInput, distinct: [PagesScalarFieldEnum!], orderBy: [PagesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PagesWhereInput): [Pages!]!
  findManyPartners(cursor: PartnersWhereUniqueInput, distinct: [PartnersScalarFieldEnum!], orderBy: [PartnersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PartnersWhereInput): [Partners!]!
  findManyPayments(cursor: PaymentsWhereUniqueInput, distinct: [PaymentsScalarFieldEnum!], orderBy: [PaymentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PaymentsWhereInput): [Payments!]!
  findManyPermissions(cursor: PermissionsWhereUniqueInput, distinct: [PermissionsScalarFieldEnum!], orderBy: [PermissionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PermissionsWhereInput): [Permissions!]!
  findManyPlugins(cursor: PluginsWhereUniqueInput, distinct: [PluginsScalarFieldEnum!], orderBy: [PluginsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: PluginsWhereInput): [Plugins!]!
  findManyProduct_types(cursor: Product_typesWhereUniqueInput, distinct: [Product_typesScalarFieldEnum!], orderBy: [Product_typesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Product_typesWhereInput): [Product_types!]!
  findManyProducts(cursor: ProductsWhereUniqueInput, distinct: [ProductsScalarFieldEnum!], orderBy: [ProductsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProductsWhereInput): [Products!]!
  findManyProjects(cursor: ProjectsWhereUniqueInput, distinct: [ProjectsScalarFieldEnum!], orderBy: [ProjectsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProjectsWhereInput): [Projects!]!
  findManyProviders(cursor: ProvidersWhereUniqueInput, distinct: [ProvidersScalarFieldEnum!], orderBy: [ProvidersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ProvidersWhereInput): [Providers!]!
  findManyQuotes(cursor: QuotesWhereUniqueInput, distinct: [QuotesScalarFieldEnum!], orderBy: [QuotesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: QuotesWhereInput): [Quotes!]!
  findManyReturns(cursor: ReturnsWhereUniqueInput, distinct: [ReturnsScalarFieldEnum!], orderBy: [ReturnsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReturnsWhereInput): [Returns!]!
  findManyReviews(cursor: ReviewsWhereUniqueInput, distinct: [ReviewsScalarFieldEnum!], orderBy: [ReviewsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ReviewsWhereInput): [Reviews!]!
  findManyRewards(cursor: RewardsWhereUniqueInput, distinct: [RewardsScalarFieldEnum!], orderBy: [RewardsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RewardsWhereInput): [Rewards!]!
  findManyRoles(cursor: RolesWhereUniqueInput, distinct: [RolesScalarFieldEnum!], orderBy: [RolesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: RolesWhereInput): [Roles!]!
  findManySegments(cursor: SegmentsWhereUniqueInput, distinct: [SegmentsScalarFieldEnum!], orderBy: [SegmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SegmentsWhereInput): [Segments!]!
  findManySettings(cursor: SettingsWhereUniqueInput, distinct: [SettingsScalarFieldEnum!], orderBy: [SettingsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SettingsWhereInput): [Settings!]!
  findManyShipments(cursor: ShipmentsWhereUniqueInput, distinct: [ShipmentsScalarFieldEnum!], orderBy: [ShipmentsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ShipmentsWhereInput): [Shipments!]!
  findManyStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: StatesWhereInput): [States!]!
  findManyTags(cursor: TagsWhereUniqueInput, distinct: [TagsScalarFieldEnum!], orderBy: [TagsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TagsWhereInput): [Tags!]!
  findManyTaxes(cursor: TaxesWhereUniqueInput, distinct: [TaxesScalarFieldEnum!], orderBy: [TaxesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TaxesWhereInput): [Taxes!]!
  findManyThemes(cursor: ThemesWhereUniqueInput, distinct: [ThemesScalarFieldEnum!], orderBy: [ThemesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ThemesWhereInput): [Themes!]!
  findManyTransactions(cursor: TransactionsWhereUniqueInput, distinct: [TransactionsScalarFieldEnum!], orderBy: [TransactionsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TransactionsWhereInput): [Transactions!]!
  findManyUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: UsersWhereInput): [Users!]!
  findManyVendors(cursor: VendorsWhereUniqueInput, distinct: [VendorsScalarFieldEnum!], orderBy: [VendorsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VendorsWhereInput): [Vendors!]!
  findManyVisits(cursor: VisitsWhereUniqueInput, distinct: [VisitsScalarFieldEnum!], orderBy: [VisitsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: VisitsWhereInput): [Visits!]!
  findManyWebhooks(cursor: WebhooksWhereUniqueInput, distinct: [WebhooksScalarFieldEnum!], orderBy: [WebhooksOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebhooksWhereInput): [Webhooks!]!
  findManyWebsites(cursor: WebsitesWhereUniqueInput, distinct: [WebsitesScalarFieldEnum!], orderBy: [WebsitesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WebsitesWhereInput): [Websites!]!
  findManyWishlists(cursor: WishlistsWhereUniqueInput, distinct: [WishlistsScalarFieldEnum!], orderBy: [WishlistsOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WishlistsWhereInput): [Wishlists!]!
  findManyWorkspaces(cursor: WorkspacesWhereUniqueInput, distinct: [WorkspacesScalarFieldEnum!], orderBy: [WorkspacesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WorkspacesWhereInput): [Workspaces!]!
  findManyZones(cursor: ZonesWhereUniqueInput, distinct: [ZonesScalarFieldEnum!], orderBy: [ZonesOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ZonesWhereInput): [Zones!]!
  findUniqueAgreements(where: AgreementsWhereUniqueInput!): Agreements
  findUniqueAgreementsOrThrow(where: AgreementsWhereUniqueInput!): Agreements
  findUniqueArticles(where: ArticlesWhereUniqueInput!): Articles
  findUniqueArticlesOrThrow(where: ArticlesWhereUniqueInput!): Articles
  findUniqueAttributes(where: AttributesWhereUniqueInput!): Attributes
  findUniqueAttributesOrThrow(where: AttributesWhereUniqueInput!): Attributes
  findUniqueBrands(where: BrandsWhereUniqueInput!): Brands
  findUniqueBrandsOrThrow(where: BrandsWhereUniqueInput!): Brands
  findUniqueCategories(where: CategoriesWhereUniqueInput!): Categories
  findUniqueCategoriesOrThrow(where: CategoriesWhereUniqueInput!): Categories
  findUniqueChannels(where: ChannelsWhereUniqueInput!): Channels
  findUniqueChannelsOrThrow(where: ChannelsWhereUniqueInput!): Channels
  findUniqueCities(where: CitiesWhereUniqueInput!): Cities
  findUniqueCitiesOrThrow(where: CitiesWhereUniqueInput!): Cities
  findUniqueCollections(where: CollectionsWhereUniqueInput!): Collections
  findUniqueCollectionsOrThrow(where: CollectionsWhereUniqueInput!): Collections
  findUniqueCountries(where: CountriesWhereUniqueInput!): Countries
  findUniqueCountriesOrThrow(where: CountriesWhereUniqueInput!): Countries
  findUniqueCurrencies(where: CurrenciesWhereUniqueInput!): Currencies
  findUniqueCurrenciesOrThrow(where: CurrenciesWhereUniqueInput!): Currencies
  findUniqueCustomers(where: CustomersWhereUniqueInput!): Customers
  findUniqueCustomersOrThrow(where: CustomersWhereUniqueInput!): Customers
  findUniqueDashboards(where: DashboardsWhereUniqueInput!): Dashboards
  findUniqueDashboardsOrThrow(where: DashboardsWhereUniqueInput!): Dashboards
  findUniqueDiscounts(where: DiscountsWhereUniqueInput!): Discounts
  findUniqueDiscountsOrThrow(where: DiscountsWhereUniqueInput!): Discounts
  findUniqueEvents(where: EventsWhereUniqueInput!): Events
  findUniqueEventsOrThrow(where: EventsWhereUniqueInput!): Events
  findUniqueFullfillments(where: FullfillmentsWhereUniqueInput!): Fullfillments
  findUniqueFullfillmentsOrThrow(where: FullfillmentsWhereUniqueInput!): Fullfillments
  findUniqueIntegrations(where: IntegrationsWhereUniqueInput!): Integrations
  findUniqueIntegrationsOrThrow(where: IntegrationsWhereUniqueInput!): Integrations
  findUniqueInvoices(where: InvoicesWhereUniqueInput!): Invoices
  findUniqueInvoicesOrThrow(where: InvoicesWhereUniqueInput!): Invoices
  findUniqueNewsletters(where: NewslettersWhereUniqueInput!): Newsletters
  findUniqueNewslettersOrThrow(where: NewslettersWhereUniqueInput!): Newsletters
  findUniqueOrders(where: OrdersWhereUniqueInput!): Orders
  findUniqueOrdersOrThrow(where: OrdersWhereUniqueInput!): Orders
  findUniquePages(where: PagesWhereUniqueInput!): Pages
  findUniquePagesOrThrow(where: PagesWhereUniqueInput!): Pages
  findUniquePartners(where: PartnersWhereUniqueInput!): Partners
  findUniquePartnersOrThrow(where: PartnersWhereUniqueInput!): Partners
  findUniquePayments(where: PaymentsWhereUniqueInput!): Payments
  findUniquePaymentsOrThrow(where: PaymentsWhereUniqueInput!): Payments
  findUniquePermissions(where: PermissionsWhereUniqueInput!): Permissions
  findUniquePermissionsOrThrow(where: PermissionsWhereUniqueInput!): Permissions
  findUniquePlugins(where: PluginsWhereUniqueInput!): Plugins
  findUniquePluginsOrThrow(where: PluginsWhereUniqueInput!): Plugins
  findUniqueProduct_types(where: Product_typesWhereUniqueInput!): Product_types
  findUniqueProduct_typesOrThrow(where: Product_typesWhereUniqueInput!): Product_types
  findUniqueProducts(where: ProductsWhereUniqueInput!): Products
  findUniqueProductsOrThrow(where: ProductsWhereUniqueInput!): Products
  findUniqueProjects(where: ProjectsWhereUniqueInput!): Projects
  findUniqueProjectsOrThrow(where: ProjectsWhereUniqueInput!): Projects
  findUniqueProviders(where: ProvidersWhereUniqueInput!): Providers
  findUniqueProvidersOrThrow(where: ProvidersWhereUniqueInput!): Providers
  findUniqueQuotes(where: QuotesWhereUniqueInput!): Quotes
  findUniqueQuotesOrThrow(where: QuotesWhereUniqueInput!): Quotes
  findUniqueReturns(where: ReturnsWhereUniqueInput!): Returns
  findUniqueReturnsOrThrow(where: ReturnsWhereUniqueInput!): Returns
  findUniqueReviews(where: ReviewsWhereUniqueInput!): Reviews
  findUniqueReviewsOrThrow(where: ReviewsWhereUniqueInput!): Reviews
  findUniqueRewards(where: RewardsWhereUniqueInput!): Rewards
  findUniqueRewardsOrThrow(where: RewardsWhereUniqueInput!): Rewards
  findUniqueRoles(where: RolesWhereUniqueInput!): Roles
  findUniqueRolesOrThrow(where: RolesWhereUniqueInput!): Roles
  findUniqueSegments(where: SegmentsWhereUniqueInput!): Segments
  findUniqueSegmentsOrThrow(where: SegmentsWhereUniqueInput!): Segments
  findUniqueSettings(where: SettingsWhereUniqueInput!): Settings
  findUniqueSettingsOrThrow(where: SettingsWhereUniqueInput!): Settings
  findUniqueShipments(where: ShipmentsWhereUniqueInput!): Shipments
  findUniqueShipmentsOrThrow(where: ShipmentsWhereUniqueInput!): Shipments
  findUniqueStates(where: StatesWhereUniqueInput!): States
  findUniqueStatesOrThrow(where: StatesWhereUniqueInput!): States
  findUniqueTags(where: TagsWhereUniqueInput!): Tags
  findUniqueTagsOrThrow(where: TagsWhereUniqueInput!): Tags
  findUniqueTaxes(where: TaxesWhereUniqueInput!): Taxes
  findUniqueTaxesOrThrow(where: TaxesWhereUniqueInput!): Taxes
  findUniqueThemes(where: ThemesWhereUniqueInput!): Themes
  findUniqueThemesOrThrow(where: ThemesWhereUniqueInput!): Themes
  findUniqueTransactions(where: TransactionsWhereUniqueInput!): Transactions
  findUniqueTransactionsOrThrow(where: TransactionsWhereUniqueInput!): Transactions
  findUniqueUsers(where: UsersWhereUniqueInput!): Users
  findUniqueUsersOrThrow(where: UsersWhereUniqueInput!): Users
  findUniqueVendors(where: VendorsWhereUniqueInput!): Vendors
  findUniqueVendorsOrThrow(where: VendorsWhereUniqueInput!): Vendors
  findUniqueVisits(where: VisitsWhereUniqueInput!): Visits
  findUniqueVisitsOrThrow(where: VisitsWhereUniqueInput!): Visits
  findUniqueWebhooks(where: WebhooksWhereUniqueInput!): Webhooks
  findUniqueWebhooksOrThrow(where: WebhooksWhereUniqueInput!): Webhooks
  findUniqueWebsites(where: WebsitesWhereUniqueInput!): Websites
  findUniqueWebsitesOrThrow(where: WebsitesWhereUniqueInput!): Websites
  findUniqueWishlists(where: WishlistsWhereUniqueInput!): Wishlists
  findUniqueWishlistsOrThrow(where: WishlistsWhereUniqueInput!): Wishlists
  findUniqueWorkspaces(where: WorkspacesWhereUniqueInput!): Workspaces
  findUniqueWorkspacesOrThrow(where: WorkspacesWhereUniqueInput!): Workspaces
  findUniqueZones(where: ZonesWhereUniqueInput!): Zones
  findUniqueZonesOrThrow(where: ZonesWhereUniqueInput!): Zones
  getApitoken(where: ApitokenWhereUniqueInput!): Apitoken
  getChecklist(where: ChecklistWhereUniqueInput!): Checklist
  getContent_type(where: Content_typeWhereUniqueInput!): Content_type
  getDeepdive(where: DeepdiveWhereUniqueInput!): Deepdive
  getEndofshift(where: EndofshiftWhereUniqueInput!): Endofshift
  getGlossary(where: GlossaryWhereUniqueInput!): Glossary
  getInternalization(where: InternalizationWhereUniqueInput!): Internalization
  getLogIn(where: LogInWhereUniqueInput!): LogIn
  getManufacturer(where: ManufacturerWhereUniqueInput!): Manufacturer
  getMediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  getOoto(where: OotoWhereUniqueInput!): Ooto
  getScheduler(where: SchedulerWhereUniqueInput!): Scheduler
  getTicketing(where: TicketingWhereUniqueInput!): Ticketing
  getUpload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  getWarehouse(where: WarehouseWhereUniqueInput!): Warehouse
  glossaries(cursor: GlossaryWhereUniqueInput, distinct: [GlossaryScalarFieldEnum!], orderBy: [GlossaryOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: GlossaryWhereInput): [Glossary!]!
  glossary(where: GlossaryWhereUniqueInput!): Glossary
  groupByAgreements(by: [AgreementsScalarFieldEnum!]!, having: AgreementsScalarWhereWithAggregatesInput, orderBy: [AgreementsOrderByWithAggregationInput!], skip: Int, take: Int, where: AgreementsWhereInput): [AgreementsGroupBy!]!
  groupByApitoken(by: [ApitokenScalarFieldEnum!]!, having: ApitokenScalarWhereWithAggregatesInput, orderBy: [ApitokenOrderByWithAggregationInput!], skip: Int, take: Int, where: ApitokenWhereInput): [ApitokenGroupBy!]!
  groupByArticles(by: [ArticlesScalarFieldEnum!]!, having: ArticlesScalarWhereWithAggregatesInput, orderBy: [ArticlesOrderByWithAggregationInput!], skip: Int, take: Int, where: ArticlesWhereInput): [ArticlesGroupBy!]!
  groupByAttributes(by: [AttributesScalarFieldEnum!]!, having: AttributesScalarWhereWithAggregatesInput, orderBy: [AttributesOrderByWithAggregationInput!], skip: Int, take: Int, where: AttributesWhereInput): [AttributesGroupBy!]!
  groupByBrands(by: [BrandsScalarFieldEnum!]!, having: BrandsScalarWhereWithAggregatesInput, orderBy: [BrandsOrderByWithAggregationInput!], skip: Int, take: Int, where: BrandsWhereInput): [BrandsGroupBy!]!
  groupByCategories(by: [CategoriesScalarFieldEnum!]!, having: CategoriesScalarWhereWithAggregatesInput, orderBy: [CategoriesOrderByWithAggregationInput!], skip: Int, take: Int, where: CategoriesWhereInput): [CategoriesGroupBy!]!
  groupByChannels(by: [ChannelsScalarFieldEnum!]!, having: ChannelsScalarWhereWithAggregatesInput, orderBy: [ChannelsOrderByWithAggregationInput!], skip: Int, take: Int, where: ChannelsWhereInput): [ChannelsGroupBy!]!
  groupByChecklist(by: [ChecklistScalarFieldEnum!]!, having: ChecklistScalarWhereWithAggregatesInput, orderBy: [ChecklistOrderByWithAggregationInput!], skip: Int, take: Int, where: ChecklistWhereInput): [ChecklistGroupBy!]!
  groupByCities(by: [CitiesScalarFieldEnum!]!, having: CitiesScalarWhereWithAggregatesInput, orderBy: [CitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: CitiesWhereInput): [CitiesGroupBy!]!
  groupByCollections(by: [CollectionsScalarFieldEnum!]!, having: CollectionsScalarWhereWithAggregatesInput, orderBy: [CollectionsOrderByWithAggregationInput!], skip: Int, take: Int, where: CollectionsWhereInput): [CollectionsGroupBy!]!
  groupByContent_type(by: [Content_typeScalarFieldEnum!]!, having: Content_typeScalarWhereWithAggregatesInput, orderBy: [Content_typeOrderByWithAggregationInput!], skip: Int, take: Int, where: Content_typeWhereInput): [Content_typeGroupBy!]!
  groupByCountries(by: [CountriesScalarFieldEnum!]!, having: CountriesScalarWhereWithAggregatesInput, orderBy: [CountriesOrderByWithAggregationInput!], skip: Int, take: Int, where: CountriesWhereInput): [CountriesGroupBy!]!
  groupByCurrencies(by: [CurrenciesScalarFieldEnum!]!, having: CurrenciesScalarWhereWithAggregatesInput, orderBy: [CurrenciesOrderByWithAggregationInput!], skip: Int, take: Int, where: CurrenciesWhereInput): [CurrenciesGroupBy!]!
  groupByCustomers(by: [CustomersScalarFieldEnum!]!, having: CustomersScalarWhereWithAggregatesInput, orderBy: [CustomersOrderByWithAggregationInput!], skip: Int, take: Int, where: CustomersWhereInput): [CustomersGroupBy!]!
  groupByDashboards(by: [DashboardsScalarFieldEnum!]!, having: DashboardsScalarWhereWithAggregatesInput, orderBy: [DashboardsOrderByWithAggregationInput!], skip: Int, take: Int, where: DashboardsWhereInput): [DashboardsGroupBy!]!
  groupByDeepdive(by: [DeepdiveScalarFieldEnum!]!, having: DeepdiveScalarWhereWithAggregatesInput, orderBy: [DeepdiveOrderByWithAggregationInput!], skip: Int, take: Int, where: DeepdiveWhereInput): [DeepdiveGroupBy!]!
  groupByDiscounts(by: [DiscountsScalarFieldEnum!]!, having: DiscountsScalarWhereWithAggregatesInput, orderBy: [DiscountsOrderByWithAggregationInput!], skip: Int, take: Int, where: DiscountsWhereInput): [DiscountsGroupBy!]!
  groupByEndofshift(by: [EndofshiftScalarFieldEnum!]!, having: EndofshiftScalarWhereWithAggregatesInput, orderBy: [EndofshiftOrderByWithAggregationInput!], skip: Int, take: Int, where: EndofshiftWhereInput): [EndofshiftGroupBy!]!
  groupByEvents(by: [EventsScalarFieldEnum!]!, having: EventsScalarWhereWithAggregatesInput, orderBy: [EventsOrderByWithAggregationInput!], skip: Int, take: Int, where: EventsWhereInput): [EventsGroupBy!]!
  groupByFullfillments(by: [FullfillmentsScalarFieldEnum!]!, having: FullfillmentsScalarWhereWithAggregatesInput, orderBy: [FullfillmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: FullfillmentsWhereInput): [FullfillmentsGroupBy!]!
  groupByGlossary(by: [GlossaryScalarFieldEnum!]!, having: GlossaryScalarWhereWithAggregatesInput, orderBy: [GlossaryOrderByWithAggregationInput!], skip: Int, take: Int, where: GlossaryWhereInput): [GlossaryGroupBy!]!
  groupByIntegrations(by: [IntegrationsScalarFieldEnum!]!, having: IntegrationsScalarWhereWithAggregatesInput, orderBy: [IntegrationsOrderByWithAggregationInput!], skip: Int, take: Int, where: IntegrationsWhereInput): [IntegrationsGroupBy!]!
  groupByInternalization(by: [InternalizationScalarFieldEnum!]!, having: InternalizationScalarWhereWithAggregatesInput, orderBy: [InternalizationOrderByWithAggregationInput!], skip: Int, take: Int, where: InternalizationWhereInput): [InternalizationGroupBy!]!
  groupByInvoices(by: [InvoicesScalarFieldEnum!]!, having: InvoicesScalarWhereWithAggregatesInput, orderBy: [InvoicesOrderByWithAggregationInput!], skip: Int, take: Int, where: InvoicesWhereInput): [InvoicesGroupBy!]!
  groupByLogIn(by: [LogInScalarFieldEnum!]!, having: LogInScalarWhereWithAggregatesInput, orderBy: [LogInOrderByWithAggregationInput!], skip: Int, take: Int, where: LogInWhereInput): [LogInGroupBy!]!
  groupByManufacturer(by: [ManufacturerScalarFieldEnum!]!, having: ManufacturerScalarWhereWithAggregatesInput, orderBy: [ManufacturerOrderByWithAggregationInput!], skip: Int, take: Int, where: ManufacturerWhereInput): [ManufacturerGroupBy!]!
  groupByMediamanager(by: [MediamanagerScalarFieldEnum!]!, having: MediamanagerScalarWhereWithAggregatesInput, orderBy: [MediamanagerOrderByWithAggregationInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [MediamanagerGroupBy!]!
  groupByNewsletters(by: [NewslettersScalarFieldEnum!]!, having: NewslettersScalarWhereWithAggregatesInput, orderBy: [NewslettersOrderByWithAggregationInput!], skip: Int, take: Int, where: NewslettersWhereInput): [NewslettersGroupBy!]!
  groupByOoto(by: [OotoScalarFieldEnum!]!, having: OotoScalarWhereWithAggregatesInput, orderBy: [OotoOrderByWithAggregationInput!], skip: Int, take: Int, where: OotoWhereInput): [OotoGroupBy!]!
  groupByOrders(by: [OrdersScalarFieldEnum!]!, having: OrdersScalarWhereWithAggregatesInput, orderBy: [OrdersOrderByWithAggregationInput!], skip: Int, take: Int, where: OrdersWhereInput): [OrdersGroupBy!]!
  groupByPages(by: [PagesScalarFieldEnum!]!, having: PagesScalarWhereWithAggregatesInput, orderBy: [PagesOrderByWithAggregationInput!], skip: Int, take: Int, where: PagesWhereInput): [PagesGroupBy!]!
  groupByPartners(by: [PartnersScalarFieldEnum!]!, having: PartnersScalarWhereWithAggregatesInput, orderBy: [PartnersOrderByWithAggregationInput!], skip: Int, take: Int, where: PartnersWhereInput): [PartnersGroupBy!]!
  groupByPayments(by: [PaymentsScalarFieldEnum!]!, having: PaymentsScalarWhereWithAggregatesInput, orderBy: [PaymentsOrderByWithAggregationInput!], skip: Int, take: Int, where: PaymentsWhereInput): [PaymentsGroupBy!]!
  groupByPermissions(by: [PermissionsScalarFieldEnum!]!, having: PermissionsScalarWhereWithAggregatesInput, orderBy: [PermissionsOrderByWithAggregationInput!], skip: Int, take: Int, where: PermissionsWhereInput): [PermissionsGroupBy!]!
  groupByPlugins(by: [PluginsScalarFieldEnum!]!, having: PluginsScalarWhereWithAggregatesInput, orderBy: [PluginsOrderByWithAggregationInput!], skip: Int, take: Int, where: PluginsWhereInput): [PluginsGroupBy!]!
  groupByProduct_types(by: [Product_typesScalarFieldEnum!]!, having: Product_typesScalarWhereWithAggregatesInput, orderBy: [Product_typesOrderByWithAggregationInput!], skip: Int, take: Int, where: Product_typesWhereInput): [Product_typesGroupBy!]!
  groupByProducts(by: [ProductsScalarFieldEnum!]!, having: ProductsScalarWhereWithAggregatesInput, orderBy: [ProductsOrderByWithAggregationInput!], skip: Int, take: Int, where: ProductsWhereInput): [ProductsGroupBy!]!
  groupByProjects(by: [ProjectsScalarFieldEnum!]!, having: ProjectsScalarWhereWithAggregatesInput, orderBy: [ProjectsOrderByWithAggregationInput!], skip: Int, take: Int, where: ProjectsWhereInput): [ProjectsGroupBy!]!
  groupByProviders(by: [ProvidersScalarFieldEnum!]!, having: ProvidersScalarWhereWithAggregatesInput, orderBy: [ProvidersOrderByWithAggregationInput!], skip: Int, take: Int, where: ProvidersWhereInput): [ProvidersGroupBy!]!
  groupByQuotes(by: [QuotesScalarFieldEnum!]!, having: QuotesScalarWhereWithAggregatesInput, orderBy: [QuotesOrderByWithAggregationInput!], skip: Int, take: Int, where: QuotesWhereInput): [QuotesGroupBy!]!
  groupByReturns(by: [ReturnsScalarFieldEnum!]!, having: ReturnsScalarWhereWithAggregatesInput, orderBy: [ReturnsOrderByWithAggregationInput!], skip: Int, take: Int, where: ReturnsWhereInput): [ReturnsGroupBy!]!
  groupByReviews(by: [ReviewsScalarFieldEnum!]!, having: ReviewsScalarWhereWithAggregatesInput, orderBy: [ReviewsOrderByWithAggregationInput!], skip: Int, take: Int, where: ReviewsWhereInput): [ReviewsGroupBy!]!
  groupByRewards(by: [RewardsScalarFieldEnum!]!, having: RewardsScalarWhereWithAggregatesInput, orderBy: [RewardsOrderByWithAggregationInput!], skip: Int, take: Int, where: RewardsWhereInput): [RewardsGroupBy!]!
  groupByRoles(by: [RolesScalarFieldEnum!]!, having: RolesScalarWhereWithAggregatesInput, orderBy: [RolesOrderByWithAggregationInput!], skip: Int, take: Int, where: RolesWhereInput): [RolesGroupBy!]!
  groupByScheduler(by: [SchedulerScalarFieldEnum!]!, having: SchedulerScalarWhereWithAggregatesInput, orderBy: [SchedulerOrderByWithAggregationInput!], skip: Int, take: Int, where: SchedulerWhereInput): [SchedulerGroupBy!]!
  groupBySegments(by: [SegmentsScalarFieldEnum!]!, having: SegmentsScalarWhereWithAggregatesInput, orderBy: [SegmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: SegmentsWhereInput): [SegmentsGroupBy!]!
  groupBySettings(by: [SettingsScalarFieldEnum!]!, having: SettingsScalarWhereWithAggregatesInput, orderBy: [SettingsOrderByWithAggregationInput!], skip: Int, take: Int, where: SettingsWhereInput): [SettingsGroupBy!]!
  groupByShipments(by: [ShipmentsScalarFieldEnum!]!, having: ShipmentsScalarWhereWithAggregatesInput, orderBy: [ShipmentsOrderByWithAggregationInput!], skip: Int, take: Int, where: ShipmentsWhereInput): [ShipmentsGroupBy!]!
  groupByStates(by: [StatesScalarFieldEnum!]!, having: StatesScalarWhereWithAggregatesInput, orderBy: [StatesOrderByWithAggregationInput!], skip: Int, take: Int, where: StatesWhereInput): [StatesGroupBy!]!
  groupByTags(by: [TagsScalarFieldEnum!]!, having: TagsScalarWhereWithAggregatesInput, orderBy: [TagsOrderByWithAggregationInput!], skip: Int, take: Int, where: TagsWhereInput): [TagsGroupBy!]!
  groupByTaxes(by: [TaxesScalarFieldEnum!]!, having: TaxesScalarWhereWithAggregatesInput, orderBy: [TaxesOrderByWithAggregationInput!], skip: Int, take: Int, where: TaxesWhereInput): [TaxesGroupBy!]!
  groupByThemes(by: [ThemesScalarFieldEnum!]!, having: ThemesScalarWhereWithAggregatesInput, orderBy: [ThemesOrderByWithAggregationInput!], skip: Int, take: Int, where: ThemesWhereInput): [ThemesGroupBy!]!
  groupByTicketing(by: [TicketingScalarFieldEnum!]!, having: TicketingScalarWhereWithAggregatesInput, orderBy: [TicketingOrderByWithAggregationInput!], skip: Int, take: Int, where: TicketingWhereInput): [TicketingGroupBy!]!
  groupByTransactions(by: [TransactionsScalarFieldEnum!]!, having: TransactionsScalarWhereWithAggregatesInput, orderBy: [TransactionsOrderByWithAggregationInput!], skip: Int, take: Int, where: TransactionsWhereInput): [TransactionsGroupBy!]!
  groupByUpload_file(by: [Upload_fileScalarFieldEnum!]!, having: Upload_fileScalarWhereWithAggregatesInput, orderBy: [Upload_fileOrderByWithAggregationInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_fileGroupBy!]!
  groupByUsers(by: [UsersScalarFieldEnum!]!, having: UsersScalarWhereWithAggregatesInput, orderBy: [UsersOrderByWithAggregationInput!], skip: Int, take: Int, where: UsersWhereInput): [UsersGroupBy!]!
  groupByVendors(by: [VendorsScalarFieldEnum!]!, having: VendorsScalarWhereWithAggregatesInput, orderBy: [VendorsOrderByWithAggregationInput!], skip: Int, take: Int, where: VendorsWhereInput): [VendorsGroupBy!]!
  groupByVisits(by: [VisitsScalarFieldEnum!]!, having: VisitsScalarWhereWithAggregatesInput, orderBy: [VisitsOrderByWithAggregationInput!], skip: Int, take: Int, where: VisitsWhereInput): [VisitsGroupBy!]!
  groupByWarehouse(by: [WarehouseScalarFieldEnum!]!, having: WarehouseScalarWhereWithAggregatesInput, orderBy: [WarehouseOrderByWithAggregationInput!], skip: Int, take: Int, where: WarehouseWhereInput): [WarehouseGroupBy!]!
  groupByWebhooks(by: [WebhooksScalarFieldEnum!]!, having: WebhooksScalarWhereWithAggregatesInput, orderBy: [WebhooksOrderByWithAggregationInput!], skip: Int, take: Int, where: WebhooksWhereInput): [WebhooksGroupBy!]!
  groupByWebsites(by: [WebsitesScalarFieldEnum!]!, having: WebsitesScalarWhereWithAggregatesInput, orderBy: [WebsitesOrderByWithAggregationInput!], skip: Int, take: Int, where: WebsitesWhereInput): [WebsitesGroupBy!]!
  groupByWishlists(by: [WishlistsScalarFieldEnum!]!, having: WishlistsScalarWhereWithAggregatesInput, orderBy: [WishlistsOrderByWithAggregationInput!], skip: Int, take: Int, where: WishlistsWhereInput): [WishlistsGroupBy!]!
  groupByWorkspaces(by: [WorkspacesScalarFieldEnum!]!, having: WorkspacesScalarWhereWithAggregatesInput, orderBy: [WorkspacesOrderByWithAggregationInput!], skip: Int, take: Int, where: WorkspacesWhereInput): [WorkspacesGroupBy!]!
  groupByZones(by: [ZonesScalarFieldEnum!]!, having: ZonesScalarWhereWithAggregatesInput, orderBy: [ZonesOrderByWithAggregationInput!], skip: Int, take: Int, where: ZonesWhereInput): [ZonesGroupBy!]!
  internalization(where: InternalizationWhereUniqueInput!): Internalization
  internalizations(cursor: InternalizationWhereUniqueInput, distinct: [InternalizationScalarFieldEnum!], orderBy: [InternalizationOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: InternalizationWhereInput): [Internalization!]!
  logIn(where: LogInWhereUniqueInput!): LogIn
  logIns(cursor: LogInWhereUniqueInput, distinct: [LogInScalarFieldEnum!], orderBy: [LogInOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: LogInWhereInput): [LogIn!]!
  manufacturer(where: ManufacturerWhereUniqueInput!): Manufacturer
  manufacturers(cursor: ManufacturerWhereUniqueInput, distinct: [ManufacturerScalarFieldEnum!], orderBy: [ManufacturerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: ManufacturerWhereInput): [Manufacturer!]!
  mediamanager(where: MediamanagerWhereUniqueInput!): Mediamanager
  mediamanagers(cursor: MediamanagerWhereUniqueInput, distinct: [MediamanagerScalarFieldEnum!], orderBy: [MediamanagerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: MediamanagerWhereInput): [Mediamanager!]!
  ooto(where: OotoWhereUniqueInput!): Ooto
  ootos(cursor: OotoWhereUniqueInput, distinct: [OotoScalarFieldEnum!], orderBy: [OotoOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: OotoWhereInput): [Ooto!]!
  scheduler(where: SchedulerWhereUniqueInput!): Scheduler
  schedulers(cursor: SchedulerWhereUniqueInput, distinct: [SchedulerScalarFieldEnum!], orderBy: [SchedulerOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: SchedulerWhereInput): [Scheduler!]!
  ticketing(where: TicketingWhereUniqueInput!): Ticketing
  ticketings(cursor: TicketingWhereUniqueInput, distinct: [TicketingScalarFieldEnum!], orderBy: [TicketingOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: TicketingWhereInput): [Ticketing!]!
  upload_file(where: Upload_fileWhereUniqueInput!): Upload_file
  upload_files(cursor: Upload_fileWhereUniqueInput, distinct: [Upload_fileScalarFieldEnum!], orderBy: [Upload_fileOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: Upload_fileWhereInput): [Upload_file!]!
  warehouse(where: WarehouseWhereUniqueInput!): Warehouse
  warehouses(cursor: WarehouseWhereUniqueInput, distinct: [WarehouseScalarFieldEnum!], orderBy: [WarehouseOrderByWithRelationAndSearchRelevanceInput!], skip: Int, take: Int, where: WarehouseWhereInput): [Warehouse!]!
}

enum QueryMode {
  default
  insensitive
}

type Quotes {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int!
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesAvgAggregate {
  cust_id: Float
  id: Float
  order_id: Float
  prod_id: Float
}

input QuotesAvgOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_id: SortOrder
  prod_id: SortOrder
}

type QuotesCountAggregate {
  _all: Int!
  account: Int!
  approval_issues: Int!
  approval_status: Int!
  assigned_to: Int!
  billing_city: Int!
  billing_country: Int!
  billing_postal: Int!
  billing_state: Int!
  billing_street: Int!
  categories: Int!
  contact: Int!
  created_at: Int!
  currency: Int!
  cust_id: Int!
  customers: Int!
  customers_customersToquotes: Int!
  discount: Int!
  grand_total: Int!
  id: Int!
  invoice_status: Int!
  line_item_discount: Int!
  line_item_group_total: Int!
  line_item_name: Int!
  line_item_subtotal: Int!
  line_item_tax: Int!
  line_item_total: Int!
  name: Int!
  order_id: Int!
  orders: Int!
  payment_terms: Int!
  prod_id: Int!
  products_productsToquotes: Int!
  quote_stage: Int!
  shipping: Int!
  shipping_city: Int!
  shipping_country: Int!
  shipping_postal: Int!
  shipping_state: Int!
  shipping_street: Int!
  shipping_tax: Int!
  subtotal: Int!
  tax: Int!
  total: Int!
  valid_until: Int!
}

input QuotesCountOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

input QuotesCreateInput {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesCreateManyInput {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesGroupBy {
  _avg: QuotesAvgAggregate
  _count: QuotesCountAggregate
  _max: QuotesMaxAggregate
  _min: QuotesMinAggregate
  _sum: QuotesSumAggregate
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int!
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int!
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String!
  order_id: Int!
  orders: String
  payment_terms: String
  prod_id: BigInt!
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

type QuotesMaxAggregate {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String
  order_id: Int
  orders: String
  payment_terms: String
  prod_id: BigInt
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesMaxOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

type QuotesMinAggregate {
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  categories: String
  contact: String
  created_at: DateTime
  currency: String
  cust_id: Int
  customers: String
  customers_customersToquotes: String
  discount: String
  grand_total: String
  id: Int
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  name: String
  order_id: Int
  orders: String
  payment_terms: String
  prod_id: BigInt
  products_productsToquotes: String
  quote_stage: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  valid_until: String
}

input QuotesMinOrderByAggregateInput {
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

enum QuotesOrderByRelevanceFieldEnum {
  account
  approval_issues
  approval_status
  assigned_to
  billing_city
  billing_country
  billing_postal
  billing_state
  billing_street
  categories
  contact
  currency
  customers
  customers_customersToquotes
  discount
  grand_total
  invoice_status
  line_item_discount
  line_item_group_total
  line_item_name
  line_item_subtotal
  line_item_tax
  line_item_total
  name
  orders
  payment_terms
  products_productsToquotes
  quote_stage
  shipping
  shipping_city
  shipping_country
  shipping_postal
  shipping_state
  shipping_street
  shipping_tax
  subtotal
  tax
  total
  valid_until
}

input QuotesOrderByRelevanceInput {
  fields: [QuotesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input QuotesOrderByWithAggregationInput {
  _avg: QuotesAvgOrderByAggregateInput
  _count: QuotesCountOrderByAggregateInput
  _max: QuotesMaxOrderByAggregateInput
  _min: QuotesMinOrderByAggregateInput
  _sum: QuotesSumOrderByAggregateInput
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

input QuotesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: QuotesOrderByRelevanceInput
  account: SortOrder
  approval_issues: SortOrder
  approval_status: SortOrder
  assigned_to: SortOrder
  billing_city: SortOrder
  billing_country: SortOrder
  billing_postal: SortOrder
  billing_state: SortOrder
  billing_street: SortOrder
  categories: SortOrder
  contact: SortOrder
  created_at: SortOrder
  currency: SortOrder
  cust_id: SortOrder
  customers: SortOrder
  customers_customersToquotes: SortOrder
  discount: SortOrder
  grand_total: SortOrder
  id: SortOrder
  invoice_status: SortOrder
  line_item_discount: SortOrder
  line_item_group_total: SortOrder
  line_item_name: SortOrder
  line_item_subtotal: SortOrder
  line_item_tax: SortOrder
  line_item_total: SortOrder
  name: SortOrder
  order_id: SortOrder
  orders: SortOrder
  payment_terms: SortOrder
  prod_id: SortOrder
  products_productsToquotes: SortOrder
  quote_stage: SortOrder
  shipping: SortOrder
  shipping_city: SortOrder
  shipping_country: SortOrder
  shipping_postal: SortOrder
  shipping_state: SortOrder
  shipping_street: SortOrder
  shipping_tax: SortOrder
  subtotal: SortOrder
  tax: SortOrder
  total: SortOrder
  valid_until: SortOrder
}

enum QuotesScalarFieldEnum {
  account
  approval_issues
  approval_status
  assigned_to
  billing_city
  billing_country
  billing_postal
  billing_state
  billing_street
  categories
  contact
  created_at
  currency
  cust_id
  customers
  customers_customersToquotes
  discount
  grand_total
  id
  invoice_status
  line_item_discount
  line_item_group_total
  line_item_name
  line_item_subtotal
  line_item_tax
  line_item_total
  name
  order_id
  orders
  payment_terms
  prod_id
  products_productsToquotes
  quote_stage
  shipping
  shipping_city
  shipping_country
  shipping_postal
  shipping_state
  shipping_street
  shipping_tax
  subtotal
  tax
  total
  valid_until
}

input QuotesScalarWhereWithAggregatesInput {
  AND: [QuotesScalarWhereWithAggregatesInput!]
  NOT: [QuotesScalarWhereWithAggregatesInput!]
  OR: [QuotesScalarWhereWithAggregatesInput!]
  account: StringNullableWithAggregatesFilter
  approval_issues: StringNullableWithAggregatesFilter
  approval_status: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  billing_city: StringNullableWithAggregatesFilter
  billing_country: StringNullableWithAggregatesFilter
  billing_postal: StringNullableWithAggregatesFilter
  billing_state: StringNullableWithAggregatesFilter
  billing_street: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  contact: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  currency: StringNullableWithAggregatesFilter
  cust_id: IntWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  customers_customersToquotes: StringNullableWithAggregatesFilter
  discount: StringNullableWithAggregatesFilter
  grand_total: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  invoice_status: StringNullableWithAggregatesFilter
  line_item_discount: StringNullableWithAggregatesFilter
  line_item_group_total: StringNullableWithAggregatesFilter
  line_item_name: StringNullableWithAggregatesFilter
  line_item_subtotal: StringNullableWithAggregatesFilter
  line_item_tax: StringNullableWithAggregatesFilter
  line_item_total: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  order_id: IntWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  payment_terms: StringNullableWithAggregatesFilter
  prod_id: BigIntWithAggregatesFilter
  products_productsToquotes: StringNullableWithAggregatesFilter
  quote_stage: StringNullableWithAggregatesFilter
  shipping: StringNullableWithAggregatesFilter
  shipping_city: StringNullableWithAggregatesFilter
  shipping_country: StringNullableWithAggregatesFilter
  shipping_postal: StringNullableWithAggregatesFilter
  shipping_state: StringNullableWithAggregatesFilter
  shipping_street: StringNullableWithAggregatesFilter
  shipping_tax: StringNullableWithAggregatesFilter
  subtotal: StringNullableWithAggregatesFilter
  tax: StringNullableWithAggregatesFilter
  total: StringNullableWithAggregatesFilter
  valid_until: StringNullableWithAggregatesFilter
}

type QuotesSumAggregate {
  cust_id: Int
  id: Int
  order_id: Int
  prod_id: BigInt
}

input QuotesSumOrderByAggregateInput {
  cust_id: SortOrder
  id: SortOrder
  order_id: SortOrder
  prod_id: SortOrder
}

input QuotesUpdateInput {
  account: NullableStringFieldUpdateOperationsInput
  approval_issues: NullableStringFieldUpdateOperationsInput
  approval_status: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  billing_city: NullableStringFieldUpdateOperationsInput
  billing_country: NullableStringFieldUpdateOperationsInput
  billing_postal: NullableStringFieldUpdateOperationsInput
  billing_state: NullableStringFieldUpdateOperationsInput
  billing_street: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  customers_customersToquotes: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  invoice_status: NullableStringFieldUpdateOperationsInput
  line_item_discount: NullableStringFieldUpdateOperationsInput
  line_item_group_total: NullableStringFieldUpdateOperationsInput
  line_item_name: NullableStringFieldUpdateOperationsInput
  line_item_subtotal: NullableStringFieldUpdateOperationsInput
  line_item_tax: NullableStringFieldUpdateOperationsInput
  line_item_total: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  payment_terms: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products_productsToquotes: NullableStringFieldUpdateOperationsInput
  quote_stage: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_city: NullableStringFieldUpdateOperationsInput
  shipping_country: NullableStringFieldUpdateOperationsInput
  shipping_postal: NullableStringFieldUpdateOperationsInput
  shipping_state: NullableStringFieldUpdateOperationsInput
  shipping_street: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
  valid_until: NullableStringFieldUpdateOperationsInput
}

input QuotesUpdateManyMutationInput {
  account: NullableStringFieldUpdateOperationsInput
  approval_issues: NullableStringFieldUpdateOperationsInput
  approval_status: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  billing_city: NullableStringFieldUpdateOperationsInput
  billing_country: NullableStringFieldUpdateOperationsInput
  billing_postal: NullableStringFieldUpdateOperationsInput
  billing_state: NullableStringFieldUpdateOperationsInput
  billing_street: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  contact: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  currency: NullableStringFieldUpdateOperationsInput
  cust_id: IntFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  customers_customersToquotes: NullableStringFieldUpdateOperationsInput
  discount: NullableStringFieldUpdateOperationsInput
  grand_total: NullableStringFieldUpdateOperationsInput
  invoice_status: NullableStringFieldUpdateOperationsInput
  line_item_discount: NullableStringFieldUpdateOperationsInput
  line_item_group_total: NullableStringFieldUpdateOperationsInput
  line_item_name: NullableStringFieldUpdateOperationsInput
  line_item_subtotal: NullableStringFieldUpdateOperationsInput
  line_item_tax: NullableStringFieldUpdateOperationsInput
  line_item_total: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  payment_terms: NullableStringFieldUpdateOperationsInput
  prod_id: BigIntFieldUpdateOperationsInput
  products_productsToquotes: NullableStringFieldUpdateOperationsInput
  quote_stage: NullableStringFieldUpdateOperationsInput
  shipping: NullableStringFieldUpdateOperationsInput
  shipping_city: NullableStringFieldUpdateOperationsInput
  shipping_country: NullableStringFieldUpdateOperationsInput
  shipping_postal: NullableStringFieldUpdateOperationsInput
  shipping_state: NullableStringFieldUpdateOperationsInput
  shipping_street: NullableStringFieldUpdateOperationsInput
  shipping_tax: NullableStringFieldUpdateOperationsInput
  subtotal: NullableStringFieldUpdateOperationsInput
  tax: NullableStringFieldUpdateOperationsInput
  total: NullableStringFieldUpdateOperationsInput
  valid_until: NullableStringFieldUpdateOperationsInput
}

input QuotesWhereInput {
  AND: [QuotesWhereInput!]
  NOT: [QuotesWhereInput!]
  OR: [QuotesWhereInput!]
  account: StringNullableFilter
  approval_issues: StringNullableFilter
  approval_status: StringNullableFilter
  assigned_to: StringNullableFilter
  billing_city: StringNullableFilter
  billing_country: StringNullableFilter
  billing_postal: StringNullableFilter
  billing_state: StringNullableFilter
  billing_street: StringNullableFilter
  categories: StringNullableFilter
  contact: StringNullableFilter
  created_at: DateTimeNullableFilter
  currency: StringNullableFilter
  cust_id: IntFilter
  customers: StringNullableFilter
  customers_customersToquotes: StringNullableFilter
  discount: StringNullableFilter
  grand_total: StringNullableFilter
  id: IntFilter
  invoice_status: StringNullableFilter
  line_item_discount: StringNullableFilter
  line_item_group_total: StringNullableFilter
  line_item_name: StringNullableFilter
  line_item_subtotal: StringNullableFilter
  line_item_tax: StringNullableFilter
  line_item_total: StringNullableFilter
  name: StringFilter
  order_id: IntFilter
  orders: StringNullableFilter
  payment_terms: StringNullableFilter
  prod_id: BigIntFilter
  products_productsToquotes: StringNullableFilter
  quote_stage: StringNullableFilter
  shipping: StringNullableFilter
  shipping_city: StringNullableFilter
  shipping_country: StringNullableFilter
  shipping_postal: StringNullableFilter
  shipping_state: StringNullableFilter
  shipping_street: StringNullableFilter
  shipping_tax: StringNullableFilter
  subtotal: StringNullableFilter
  tax: StringNullableFilter
  total: StringNullableFilter
  valid_until: StringNullableFilter
}

input QuotesWhereUniqueInput {
  id: Int
}

type Returns {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt!
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsAvgAggregate {
  id: Float
}

input ReturnsAvgOrderByAggregateInput {
  id: SortOrder
}

type ReturnsCountAggregate {
  _all: Int!
  case_id: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  height: Int!
  howShipped: Int!
  id: Int!
  liquidationReason: Int!
  location: Int!
  media: Int!
  name: Int!
  products: Int!
  return_prefix: Int!
  shipTo: Int!
  shippingDescription: Int!
  shippingNumber: Int!
  status: Int!
  type: Int!
  validity: Int!
  weight: Int!
}

input ReturnsCountOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

input ReturnsCreateInput {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsCreateManyInput {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsGroupBy {
  _avg: ReturnsAvgAggregate
  _count: ReturnsCountAggregate
  _max: ReturnsMaxAggregate
  _min: ReturnsMinAggregate
  _sum: ReturnsSumAggregate
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt!
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

type ReturnsMaxAggregate {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsMaxOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

type ReturnsMinAggregate {
  case_id: String
  created_at: DateTime
  customers: String
  description: String
  height: String
  howShipped: String
  id: BigInt
  liquidationReason: String
  location: String
  media: String
  name: String
  products: String
  return_prefix: String
  shipTo: String
  shippingDescription: String
  shippingNumber: String
  status: String
  type: String
  validity: String
  weight: String
}

input ReturnsMinOrderByAggregateInput {
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

enum ReturnsOrderByRelevanceFieldEnum {
  case_id
  customers
  description
  height
  howShipped
  liquidationReason
  location
  media
  name
  products
  return_prefix
  shipTo
  shippingDescription
  shippingNumber
  status
  type
  validity
  weight
}

input ReturnsOrderByRelevanceInput {
  fields: [ReturnsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ReturnsOrderByWithAggregationInput {
  _avg: ReturnsAvgOrderByAggregateInput
  _count: ReturnsCountOrderByAggregateInput
  _max: ReturnsMaxOrderByAggregateInput
  _min: ReturnsMinOrderByAggregateInput
  _sum: ReturnsSumOrderByAggregateInput
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

input ReturnsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ReturnsOrderByRelevanceInput
  case_id: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  height: SortOrder
  howShipped: SortOrder
  id: SortOrder
  liquidationReason: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  return_prefix: SortOrder
  shipTo: SortOrder
  shippingDescription: SortOrder
  shippingNumber: SortOrder
  status: SortOrder
  type: SortOrder
  validity: SortOrder
  weight: SortOrder
}

enum ReturnsScalarFieldEnum {
  case_id
  created_at
  customers
  description
  height
  howShipped
  id
  liquidationReason
  location
  media
  name
  products
  return_prefix
  shipTo
  shippingDescription
  shippingNumber
  status
  type
  validity
  weight
}

input ReturnsScalarWhereWithAggregatesInput {
  AND: [ReturnsScalarWhereWithAggregatesInput!]
  NOT: [ReturnsScalarWhereWithAggregatesInput!]
  OR: [ReturnsScalarWhereWithAggregatesInput!]
  case_id: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  height: StringNullableWithAggregatesFilter
  howShipped: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  liquidationReason: StringNullableWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  return_prefix: StringNullableWithAggregatesFilter
  shipTo: StringNullableWithAggregatesFilter
  shippingDescription: StringNullableWithAggregatesFilter
  shippingNumber: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  validity: StringNullableWithAggregatesFilter
  weight: StringNullableWithAggregatesFilter
}

type ReturnsSumAggregate {
  id: BigInt
}

input ReturnsSumOrderByAggregateInput {
  id: SortOrder
}

input ReturnsUpdateInput {
  case_id: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  howShipped: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  liquidationReason: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  return_prefix: NullableStringFieldUpdateOperationsInput
  shipTo: NullableStringFieldUpdateOperationsInput
  shippingDescription: NullableStringFieldUpdateOperationsInput
  shippingNumber: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  validity: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
}

input ReturnsUpdateManyMutationInput {
  case_id: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  height: NullableStringFieldUpdateOperationsInput
  howShipped: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  liquidationReason: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  return_prefix: NullableStringFieldUpdateOperationsInput
  shipTo: NullableStringFieldUpdateOperationsInput
  shippingDescription: NullableStringFieldUpdateOperationsInput
  shippingNumber: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  validity: NullableStringFieldUpdateOperationsInput
  weight: NullableStringFieldUpdateOperationsInput
}

input ReturnsWhereInput {
  AND: [ReturnsWhereInput!]
  NOT: [ReturnsWhereInput!]
  OR: [ReturnsWhereInput!]
  case_id: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  height: StringNullableFilter
  howShipped: StringNullableFilter
  id: BigIntFilter
  liquidationReason: StringNullableFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  products: StringNullableFilter
  return_prefix: StringNullableFilter
  shipTo: StringNullableFilter
  shippingDescription: StringNullableFilter
  shippingNumber: StringNullableFilter
  status: StringNullableFilter
  type: StringNullableFilter
  validity: StringNullableFilter
  weight: StringNullableFilter
}

input ReturnsWhereUniqueInput {
  id: BigInt
}

type Reviews {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int!
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsAvgAggregate {
  comment_id: Float
  id: Float
  shop_id: Float
}

input ReviewsAvgOrderByAggregateInput {
  comment_id: SortOrder
  id: SortOrder
  shop_id: SortOrder
}

type ReviewsCountAggregate {
  _all: Int!
  comment_id: Int!
  content: Int!
  created_at: Int!
  first_name: Int!
  id: Int!
  last_name: Int!
  shop_id: Int!
  websites: Int!
}

input ReviewsCountOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

input ReviewsCreateInput {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  last_name: String
  shop_id: Int!
  websites: String
}

input ReviewsCreateManyInput {
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsGroupBy {
  _avg: ReviewsAvgAggregate
  _count: ReviewsCountAggregate
  _max: ReviewsMaxAggregate
  _min: ReviewsMinAggregate
  _sum: ReviewsSumAggregate
  comment_id: Int!
  content: String
  created_at: DateTime
  first_name: String
  id: Int!
  last_name: String
  shop_id: Int!
  websites: String
}

type ReviewsMaxAggregate {
  comment_id: Int
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int
  websites: String
}

input ReviewsMaxOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

type ReviewsMinAggregate {
  comment_id: Int
  content: String
  created_at: DateTime
  first_name: String
  id: Int
  last_name: String
  shop_id: Int
  websites: String
}

input ReviewsMinOrderByAggregateInput {
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

enum ReviewsOrderByRelevanceFieldEnum {
  content
  first_name
  last_name
  websites
}

input ReviewsOrderByRelevanceInput {
  fields: [ReviewsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ReviewsOrderByWithAggregationInput {
  _avg: ReviewsAvgOrderByAggregateInput
  _count: ReviewsCountOrderByAggregateInput
  _max: ReviewsMaxOrderByAggregateInput
  _min: ReviewsMinOrderByAggregateInput
  _sum: ReviewsSumOrderByAggregateInput
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

input ReviewsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ReviewsOrderByRelevanceInput
  comment_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  first_name: SortOrder
  id: SortOrder
  last_name: SortOrder
  shop_id: SortOrder
  websites: SortOrder
}

enum ReviewsScalarFieldEnum {
  comment_id
  content
  created_at
  first_name
  id
  last_name
  shop_id
  websites
}

input ReviewsScalarWhereWithAggregatesInput {
  AND: [ReviewsScalarWhereWithAggregatesInput!]
  NOT: [ReviewsScalarWhereWithAggregatesInput!]
  OR: [ReviewsScalarWhereWithAggregatesInput!]
  comment_id: IntWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  first_name: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  shop_id: IntWithAggregatesFilter
  websites: StringNullableWithAggregatesFilter
}

type ReviewsSumAggregate {
  comment_id: Int
  id: Int
  shop_id: Int
}

input ReviewsSumOrderByAggregateInput {
  comment_id: SortOrder
  id: SortOrder
  shop_id: SortOrder
}

input ReviewsUpdateInput {
  comment_id: IntFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  shop_id: IntFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input ReviewsUpdateManyMutationInput {
  comment_id: IntFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  first_name: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  shop_id: IntFieldUpdateOperationsInput
  websites: NullableStringFieldUpdateOperationsInput
}

input ReviewsWhereInput {
  AND: [ReviewsWhereInput!]
  NOT: [ReviewsWhereInput!]
  OR: [ReviewsWhereInput!]
  comment_id: IntFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  first_name: StringNullableFilter
  id: IntFilter
  last_name: StringNullableFilter
  shop_id: IntFilter
  websites: StringNullableFilter
}

input ReviewsWhereUniqueInput {
  id: Int
}

type Rewards {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int!
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsAvgAggregate {
  id: Float
}

input RewardsAvgOrderByAggregateInput {
  id: SortOrder
}

type RewardsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  coupons: Int!
  created_at: Int!
  customers: Int!
  expiration: Int!
  id: Int!
  level: Int!
  name: Int!
  products: Int!
  slug: Int!
  users: Int!
}

input RewardsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

input RewardsCreateInput {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

input RewardsCreateManyInput {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsGroupBy {
  _avg: RewardsAvgAggregate
  _count: RewardsCountAggregate
  _max: RewardsMaxAggregate
  _min: RewardsMinAggregate
  _sum: RewardsSumAggregate
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int!
  level: String
  name: String!
  products: String
  slug: String
  users: String
}

type RewardsMaxAggregate {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String
  products: String
  slug: String
  users: String
}

input RewardsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

type RewardsMinAggregate {
  articles: String
  categories: String
  coupons: String
  created_at: DateTime
  customers: String
  expiration: String
  id: Int
  level: String
  name: String
  products: String
  slug: String
  users: String
}

input RewardsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

enum RewardsOrderByRelevanceFieldEnum {
  articles
  categories
  coupons
  customers
  expiration
  level
  name
  products
  slug
  users
}

input RewardsOrderByRelevanceInput {
  fields: [RewardsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RewardsOrderByWithAggregationInput {
  _avg: RewardsAvgOrderByAggregateInput
  _count: RewardsCountOrderByAggregateInput
  _max: RewardsMaxOrderByAggregateInput
  _min: RewardsMinOrderByAggregateInput
  _sum: RewardsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

input RewardsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RewardsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  coupons: SortOrder
  created_at: SortOrder
  customers: SortOrder
  expiration: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  products: SortOrder
  slug: SortOrder
  users: SortOrder
}

enum RewardsScalarFieldEnum {
  articles
  categories
  coupons
  created_at
  customers
  expiration
  id
  level
  name
  products
  slug
  users
}

input RewardsScalarWhereWithAggregatesInput {
  AND: [RewardsScalarWhereWithAggregatesInput!]
  NOT: [RewardsScalarWhereWithAggregatesInput!]
  OR: [RewardsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  expiration: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  slug: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type RewardsSumAggregate {
  id: Int
}

input RewardsSumOrderByAggregateInput {
  id: SortOrder
}

input RewardsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input RewardsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  expiration: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  slug: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input RewardsWhereInput {
  AND: [RewardsWhereInput!]
  NOT: [RewardsWhereInput!]
  OR: [RewardsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  coupons: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  expiration: StringNullableFilter
  id: IntFilter
  level: StringNullableFilter
  name: StringFilter
  products: StringNullableFilter
  slug: StringNullableFilter
  users: StringNullableFilter
}

input RewardsWhereUniqueInput {
  id: Int
}

type Roles {
  content: String
  created_at: DateTime
  id: Int!
  role_name: String!
}

type RolesAvgAggregate {
  id: Float
}

input RolesAvgOrderByAggregateInput {
  id: SortOrder
}

type RolesCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  id: Int!
  role_name: Int!
}

input RolesCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

input RolesCreateInput {
  content: String
  created_at: DateTime
  role_name: String!
}

input RolesCreateManyInput {
  content: String
  created_at: DateTime
  id: Int
  role_name: String!
}

type RolesGroupBy {
  _avg: RolesAvgAggregate
  _count: RolesCountAggregate
  _max: RolesMaxAggregate
  _min: RolesMinAggregate
  _sum: RolesSumAggregate
  content: String
  created_at: DateTime
  id: Int!
  role_name: String!
}

type RolesMaxAggregate {
  content: String
  created_at: DateTime
  id: Int
  role_name: String
}

input RolesMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

type RolesMinAggregate {
  content: String
  created_at: DateTime
  id: Int
  role_name: String
}

input RolesMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

enum RolesOrderByRelevanceFieldEnum {
  content
  role_name
}

input RolesOrderByRelevanceInput {
  fields: [RolesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input RolesOrderByWithAggregationInput {
  _avg: RolesAvgOrderByAggregateInput
  _count: RolesCountOrderByAggregateInput
  _max: RolesMaxOrderByAggregateInput
  _min: RolesMinOrderByAggregateInput
  _sum: RolesSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

input RolesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: RolesOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  id: SortOrder
  role_name: SortOrder
}

enum RolesScalarFieldEnum {
  content
  created_at
  id
  role_name
}

input RolesScalarWhereWithAggregatesInput {
  AND: [RolesScalarWhereWithAggregatesInput!]
  NOT: [RolesScalarWhereWithAggregatesInput!]
  OR: [RolesScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  role_name: StringWithAggregatesFilter
}

type RolesSumAggregate {
  id: Int
}

input RolesSumOrderByAggregateInput {
  id: SortOrder
}

input RolesUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
}

input RolesUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  role_name: StringFieldUpdateOperationsInput
}

input RolesWhereInput {
  AND: [RolesWhereInput!]
  NOT: [RolesWhereInput!]
  OR: [RolesWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: IntFilter
  role_name: StringFilter
}

input RolesWhereUniqueInput {
  id: Int
}

type Scheduler {
  created_at: DateTime
  end_date: String
  id: BigInt!
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

type SchedulerAvgAggregate {
  id: Float
}

input SchedulerAvgOrderByAggregateInput {
  id: SortOrder
}

type SchedulerCountAggregate {
  _all: Int!
  created_at: Int!
  end_date: Int!
  id: Int!
  label: Int!
  level: Int!
  login: Int!
  name: Int!
  notes: Int!
  permission: Int!
  public: Int!
  start_date: Int!
  whid: Int!
}

input SchedulerCountOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  label: SortOrder
  level: SortOrder
  login: SortOrder
  name: SortOrder
  notes: SortOrder
  permission: SortOrder
  public: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input SchedulerCreateInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

input SchedulerCreateManyInput {
  created_at: DateTime
  end_date: String
  id: BigInt
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

type SchedulerGroupBy {
  _avg: SchedulerAvgAggregate
  _count: SchedulerCountAggregate
  _max: SchedulerMaxAggregate
  _min: SchedulerMinAggregate
  _sum: SchedulerSumAggregate
  created_at: DateTime
  end_date: String
  id: BigInt!
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

type SchedulerMaxAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

input SchedulerMaxOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  label: SortOrder
  level: SortOrder
  login: SortOrder
  name: SortOrder
  notes: SortOrder
  permission: SortOrder
  public: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

type SchedulerMinAggregate {
  created_at: DateTime
  end_date: String
  id: BigInt
  label: String
  level: String
  login: String
  name: String
  notes: String
  permission: String
  public: String
  start_date: String
  whid: String
}

input SchedulerMinOrderByAggregateInput {
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  label: SortOrder
  level: SortOrder
  login: SortOrder
  name: SortOrder
  notes: SortOrder
  permission: SortOrder
  public: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum SchedulerOrderByRelevanceFieldEnum {
  end_date
  label
  level
  login
  name
  notes
  permission
  public
  start_date
  whid
}

input SchedulerOrderByRelevanceInput {
  fields: [SchedulerOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SchedulerOrderByWithAggregationInput {
  _avg: SchedulerAvgOrderByAggregateInput
  _count: SchedulerCountOrderByAggregateInput
  _max: SchedulerMaxOrderByAggregateInput
  _min: SchedulerMinOrderByAggregateInput
  _sum: SchedulerSumOrderByAggregateInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  label: SortOrder
  level: SortOrder
  login: SortOrder
  name: SortOrder
  notes: SortOrder
  permission: SortOrder
  public: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

input SchedulerOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SchedulerOrderByRelevanceInput
  created_at: SortOrder
  end_date: SortOrder
  id: SortOrder
  label: SortOrder
  level: SortOrder
  login: SortOrder
  name: SortOrder
  notes: SortOrder
  permission: SortOrder
  public: SortOrder
  start_date: SortOrder
  whid: SortOrder
}

enum SchedulerScalarFieldEnum {
  created_at
  end_date
  id
  label
  level
  login
  name
  notes
  permission
  public
  start_date
  whid
}

input SchedulerScalarWhereWithAggregatesInput {
  AND: [SchedulerScalarWhereWithAggregatesInput!]
  NOT: [SchedulerScalarWhereWithAggregatesInput!]
  OR: [SchedulerScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  label: StringNullableWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  login: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  notes: StringNullableWithAggregatesFilter
  permission: StringNullableWithAggregatesFilter
  public: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  whid: StringNullableWithAggregatesFilter
}

type SchedulerSumAggregate {
  id: BigInt
}

input SchedulerSumOrderByAggregateInput {
  id: SortOrder
}

input SchedulerUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  label: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  permission: NullableStringFieldUpdateOperationsInput
  public: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input SchedulerUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  label: NullableStringFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  login: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  notes: NullableStringFieldUpdateOperationsInput
  permission: NullableStringFieldUpdateOperationsInput
  public: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  whid: NullableStringFieldUpdateOperationsInput
}

input SchedulerWhereInput {
  AND: [SchedulerWhereInput!]
  NOT: [SchedulerWhereInput!]
  OR: [SchedulerWhereInput!]
  created_at: DateTimeNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  label: StringNullableFilter
  level: StringNullableFilter
  login: StringNullableFilter
  name: StringNullableFilter
  notes: StringNullableFilter
  permission: StringNullableFilter
  public: StringNullableFilter
  start_date: StringNullableFilter
  whid: StringNullableFilter
}

input SchedulerWhereUniqueInput {
  id: BigInt
}

type Segments {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt!
  name: String
  status: String
  website: String
}

type SegmentsAvgAggregate {
  id: Float
}

input SegmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type SegmentsCountAggregate {
  _all: Int!
  apply_to: Int!
  created_at: Int!
  customers: Int!
  description: Int!
  id: Int!
  name: Int!
  status: Int!
  website: Int!
}

input SegmentsCountOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

input SegmentsCreateInput {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsCreateManyInput {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

type SegmentsGroupBy {
  _avg: SegmentsAvgAggregate
  _count: SegmentsCountAggregate
  _max: SegmentsMaxAggregate
  _min: SegmentsMinAggregate
  _sum: SegmentsSumAggregate
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt!
  name: String
  status: String
  website: String
}

type SegmentsMaxAggregate {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsMaxOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

type SegmentsMinAggregate {
  apply_to: String
  created_at: DateTime
  customers: String
  description: String
  id: BigInt
  name: String
  status: String
  website: String
}

input SegmentsMinOrderByAggregateInput {
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

enum SegmentsOrderByRelevanceFieldEnum {
  apply_to
  customers
  description
  name
  status
  website
}

input SegmentsOrderByRelevanceInput {
  fields: [SegmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SegmentsOrderByWithAggregationInput {
  _avg: SegmentsAvgOrderByAggregateInput
  _count: SegmentsCountOrderByAggregateInput
  _max: SegmentsMaxOrderByAggregateInput
  _min: SegmentsMinOrderByAggregateInput
  _sum: SegmentsSumOrderByAggregateInput
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

input SegmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SegmentsOrderByRelevanceInput
  apply_to: SortOrder
  created_at: SortOrder
  customers: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  status: SortOrder
  website: SortOrder
}

enum SegmentsScalarFieldEnum {
  apply_to
  created_at
  customers
  description
  id
  name
  status
  website
}

input SegmentsScalarWhereWithAggregatesInput {
  AND: [SegmentsScalarWhereWithAggregatesInput!]
  NOT: [SegmentsScalarWhereWithAggregatesInput!]
  OR: [SegmentsScalarWhereWithAggregatesInput!]
  apply_to: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type SegmentsSumAggregate {
  id: BigInt
}

input SegmentsSumOrderByAggregateInput {
  id: SortOrder
}

input SegmentsUpdateInput {
  apply_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input SegmentsUpdateManyMutationInput {
  apply_to: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input SegmentsWhereInput {
  AND: [SegmentsWhereInput!]
  NOT: [SegmentsWhereInput!]
  OR: [SegmentsWhereInput!]
  apply_to: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  status: StringNullableFilter
  website: StringNullableFilter
}

input SegmentsWhereUniqueInput {
  id: BigInt
}

type Settings {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsAvgAggregate {
  id: Float
}

input SettingsAvgOrderByAggregateInput {
  id: SortOrder
}

type SettingsCountAggregate {
  _all: Int!
  address: Int!
  address_two: Int!
  allow_countries: Int!
  allow_state: Int!
  allowed_currency: Int!
  awsS3: Int!
  base_currency: Int!
  city: Int!
  country: Int!
  created_at: Int!
  databaseUrl: Int!
  default_country: Int!
  default_currency: Int!
  european_union_countries: Int!
  googleAnalytics: Int!
  id: Int!
  isPublic: Int!
  mailServer: Int!
  optional_zip: Int!
  region: Int!
  searchSetting: Int!
  sentryDsn: Int!
  siteName: Int!
  siteTagline: Int!
  siteWebsite: Int!
  state_required_for: Int!
  store_hours: Int!
  store_name: Int!
  store_phone: Int!
  top_destinations: Int!
  type: Int!
  vat_number: Int!
  zipcode: Int!
}

input SettingsCountOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

input SettingsCreateInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsCreateManyInput {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsGroupBy {
  _avg: SettingsAvgAggregate
  _count: SettingsCountAggregate
  _max: SettingsMaxAggregate
  _min: SettingsMinAggregate
  _sum: SettingsSumAggregate
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt!
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

type SettingsMaxAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsMaxOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

type SettingsMinAggregate {
  address: String
  address_two: String
  allow_countries: String
  allow_state: String
  allowed_currency: String
  awsS3: String
  base_currency: String
  city: String
  country: String
  created_at: DateTime
  databaseUrl: String
  default_country: String
  default_currency: String
  european_union_countries: String
  googleAnalytics: String
  id: BigInt
  isPublic: String
  mailServer: String
  optional_zip: String
  region: String
  searchSetting: String
  sentryDsn: String
  siteName: String
  siteTagline: String
  siteWebsite: String
  state_required_for: String
  store_hours: String
  store_name: String
  store_phone: String
  top_destinations: String
  type: String
  vat_number: String
  zipcode: String
}

input SettingsMinOrderByAggregateInput {
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

enum SettingsOrderByRelevanceFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  databaseUrl
  default_country
  default_currency
  european_union_countries
  googleAnalytics
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  zipcode
}

input SettingsOrderByRelevanceInput {
  fields: [SettingsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input SettingsOrderByWithAggregationInput {
  _avg: SettingsAvgOrderByAggregateInput
  _count: SettingsCountOrderByAggregateInput
  _max: SettingsMaxOrderByAggregateInput
  _min: SettingsMinOrderByAggregateInput
  _sum: SettingsSumOrderByAggregateInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

input SettingsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: SettingsOrderByRelevanceInput
  address: SortOrder
  address_two: SortOrder
  allow_countries: SortOrder
  allow_state: SortOrder
  allowed_currency: SortOrder
  awsS3: SortOrder
  base_currency: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  databaseUrl: SortOrder
  default_country: SortOrder
  default_currency: SortOrder
  european_union_countries: SortOrder
  googleAnalytics: SortOrder
  id: SortOrder
  isPublic: SortOrder
  mailServer: SortOrder
  optional_zip: SortOrder
  region: SortOrder
  searchSetting: SortOrder
  sentryDsn: SortOrder
  siteName: SortOrder
  siteTagline: SortOrder
  siteWebsite: SortOrder
  state_required_for: SortOrder
  store_hours: SortOrder
  store_name: SortOrder
  store_phone: SortOrder
  top_destinations: SortOrder
  type: SortOrder
  vat_number: SortOrder
  zipcode: SortOrder
}

enum SettingsScalarFieldEnum {
  address
  address_two
  allow_countries
  allow_state
  allowed_currency
  awsS3
  base_currency
  city
  country
  created_at
  databaseUrl
  default_country
  default_currency
  european_union_countries
  googleAnalytics
  id
  isPublic
  mailServer
  optional_zip
  region
  searchSetting
  sentryDsn
  siteName
  siteTagline
  siteWebsite
  state_required_for
  store_hours
  store_name
  store_phone
  top_destinations
  type
  vat_number
  zipcode
}

input SettingsScalarWhereWithAggregatesInput {
  AND: [SettingsScalarWhereWithAggregatesInput!]
  NOT: [SettingsScalarWhereWithAggregatesInput!]
  OR: [SettingsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  address_two: StringNullableWithAggregatesFilter
  allow_countries: StringNullableWithAggregatesFilter
  allow_state: StringNullableWithAggregatesFilter
  allowed_currency: StringNullableWithAggregatesFilter
  awsS3: StringNullableWithAggregatesFilter
  base_currency: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  databaseUrl: StringNullableWithAggregatesFilter
  default_country: StringNullableWithAggregatesFilter
  default_currency: StringNullableWithAggregatesFilter
  european_union_countries: StringNullableWithAggregatesFilter
  googleAnalytics: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  mailServer: StringNullableWithAggregatesFilter
  optional_zip: StringNullableWithAggregatesFilter
  region: StringNullableWithAggregatesFilter
  searchSetting: StringNullableWithAggregatesFilter
  sentryDsn: StringNullableWithAggregatesFilter
  siteName: StringNullableWithAggregatesFilter
  siteTagline: StringNullableWithAggregatesFilter
  siteWebsite: StringNullableWithAggregatesFilter
  state_required_for: StringNullableWithAggregatesFilter
  store_hours: StringNullableWithAggregatesFilter
  store_name: StringNullableWithAggregatesFilter
  store_phone: StringNullableWithAggregatesFilter
  top_destinations: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  vat_number: StringNullableWithAggregatesFilter
  zipcode: StringNullableWithAggregatesFilter
}

type SettingsSumAggregate {
  id: BigInt
}

input SettingsSumOrderByAggregateInput {
  id: SortOrder
}

input SettingsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  address_two: NullableStringFieldUpdateOperationsInput
  allow_countries: NullableStringFieldUpdateOperationsInput
  allow_state: NullableStringFieldUpdateOperationsInput
  allowed_currency: NullableStringFieldUpdateOperationsInput
  awsS3: NullableStringFieldUpdateOperationsInput
  base_currency: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  databaseUrl: NullableStringFieldUpdateOperationsInput
  default_country: NullableStringFieldUpdateOperationsInput
  default_currency: NullableStringFieldUpdateOperationsInput
  european_union_countries: NullableStringFieldUpdateOperationsInput
  googleAnalytics: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  mailServer: NullableStringFieldUpdateOperationsInput
  optional_zip: NullableStringFieldUpdateOperationsInput
  region: NullableStringFieldUpdateOperationsInput
  searchSetting: NullableStringFieldUpdateOperationsInput
  sentryDsn: NullableStringFieldUpdateOperationsInput
  siteName: NullableStringFieldUpdateOperationsInput
  siteTagline: NullableStringFieldUpdateOperationsInput
  siteWebsite: NullableStringFieldUpdateOperationsInput
  state_required_for: NullableStringFieldUpdateOperationsInput
  store_hours: NullableStringFieldUpdateOperationsInput
  store_name: NullableStringFieldUpdateOperationsInput
  store_phone: NullableStringFieldUpdateOperationsInput
  top_destinations: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  vat_number: NullableStringFieldUpdateOperationsInput
  zipcode: NullableStringFieldUpdateOperationsInput
}

input SettingsWhereInput {
  AND: [SettingsWhereInput!]
  NOT: [SettingsWhereInput!]
  OR: [SettingsWhereInput!]
  address: StringNullableFilter
  address_two: StringNullableFilter
  allow_countries: StringNullableFilter
  allow_state: StringNullableFilter
  allowed_currency: StringNullableFilter
  awsS3: StringNullableFilter
  base_currency: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  databaseUrl: StringNullableFilter
  default_country: StringNullableFilter
  default_currency: StringNullableFilter
  european_union_countries: StringNullableFilter
  googleAnalytics: StringNullableFilter
  id: BigIntFilter
  isPublic: StringNullableFilter
  mailServer: StringNullableFilter
  optional_zip: StringNullableFilter
  region: StringNullableFilter
  searchSetting: StringNullableFilter
  sentryDsn: StringNullableFilter
  siteName: StringNullableFilter
  siteTagline: StringNullableFilter
  siteWebsite: StringNullableFilter
  state_required_for: StringNullableFilter
  store_hours: StringNullableFilter
  store_name: StringNullableFilter
  store_phone: StringNullableFilter
  top_destinations: StringNullableFilter
  type: StringNullableFilter
  vat_number: StringNullableFilter
  zipcode: StringNullableFilter
}

input SettingsWhereUniqueInput {
  id: BigInt
}

type Shipments {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt!
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsAvgAggregate {
  id: Float
}

input ShipmentsAvgOrderByAggregateInput {
  id: SortOrder
}

type ShipmentsCountAggregate {
  _all: Int!
  carrier_name: Int!
  client_id: Int!
  client_secret: Int!
  country: Int!
  id: Int!
  image: Int!
  product: Int!
  ship_date: Int!
  speed_grade: Int!
  tracking_url: Int!
  transit_time: Int!
  website: Int!
}

input ShipmentsCountOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

input ShipmentsCreateInput {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsCreateManyInput {
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsGroupBy {
  _avg: ShipmentsAvgAggregate
  _count: ShipmentsCountAggregate
  _max: ShipmentsMaxAggregate
  _min: ShipmentsMinAggregate
  _sum: ShipmentsSumAggregate
  carrier_name: String!
  client_id: String
  client_secret: String
  country: String
  id: BigInt!
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

type ShipmentsMaxAggregate {
  carrier_name: String
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsMaxOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

type ShipmentsMinAggregate {
  carrier_name: String
  client_id: String
  client_secret: String
  country: String
  id: BigInt
  image: String
  product: String
  ship_date: DateTime
  speed_grade: String
  tracking_url: String
  transit_time: String
  website: String
}

input ShipmentsMinOrderByAggregateInput {
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

enum ShipmentsOrderByRelevanceFieldEnum {
  carrier_name
  client_id
  client_secret
  country
  image
  product
  speed_grade
  tracking_url
  transit_time
  website
}

input ShipmentsOrderByRelevanceInput {
  fields: [ShipmentsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ShipmentsOrderByWithAggregationInput {
  _avg: ShipmentsAvgOrderByAggregateInput
  _count: ShipmentsCountOrderByAggregateInput
  _max: ShipmentsMaxOrderByAggregateInput
  _min: ShipmentsMinOrderByAggregateInput
  _sum: ShipmentsSumOrderByAggregateInput
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

input ShipmentsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ShipmentsOrderByRelevanceInput
  carrier_name: SortOrder
  client_id: SortOrder
  client_secret: SortOrder
  country: SortOrder
  id: SortOrder
  image: SortOrder
  product: SortOrder
  ship_date: SortOrder
  speed_grade: SortOrder
  tracking_url: SortOrder
  transit_time: SortOrder
  website: SortOrder
}

enum ShipmentsScalarFieldEnum {
  carrier_name
  client_id
  client_secret
  country
  id
  image
  product
  ship_date
  speed_grade
  tracking_url
  transit_time
  website
}

input ShipmentsScalarWhereWithAggregatesInput {
  AND: [ShipmentsScalarWhereWithAggregatesInput!]
  NOT: [ShipmentsScalarWhereWithAggregatesInput!]
  OR: [ShipmentsScalarWhereWithAggregatesInput!]
  carrier_name: StringWithAggregatesFilter
  client_id: StringNullableWithAggregatesFilter
  client_secret: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  product: StringNullableWithAggregatesFilter
  ship_date: DateTimeNullableWithAggregatesFilter
  speed_grade: StringNullableWithAggregatesFilter
  tracking_url: StringNullableWithAggregatesFilter
  transit_time: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
}

type ShipmentsSumAggregate {
  id: BigInt
}

input ShipmentsSumOrderByAggregateInput {
  id: SortOrder
}

input ShipmentsUpdateInput {
  carrier_name: StringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  ship_date: NullableDateTimeFieldUpdateOperationsInput
  speed_grade: NullableStringFieldUpdateOperationsInput
  tracking_url: NullableStringFieldUpdateOperationsInput
  transit_time: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input ShipmentsUpdateManyMutationInput {
  carrier_name: StringFieldUpdateOperationsInput
  client_id: NullableStringFieldUpdateOperationsInput
  client_secret: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  product: NullableStringFieldUpdateOperationsInput
  ship_date: NullableDateTimeFieldUpdateOperationsInput
  speed_grade: NullableStringFieldUpdateOperationsInput
  tracking_url: NullableStringFieldUpdateOperationsInput
  transit_time: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
}

input ShipmentsWhereInput {
  AND: [ShipmentsWhereInput!]
  NOT: [ShipmentsWhereInput!]
  OR: [ShipmentsWhereInput!]
  carrier_name: StringFilter
  client_id: StringNullableFilter
  client_secret: StringNullableFilter
  country: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  product: StringNullableFilter
  ship_date: DateTimeNullableFilter
  speed_grade: StringNullableFilter
  tracking_url: StringNullableFilter
  transit_time: StringNullableFilter
  website: StringNullableFilter
}

input ShipmentsWhereUniqueInput {
  id: BigInt
}

enum SortOrder {
  asc
  desc
}

type States {
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  trainings: String
}

type StatesAvgAggregate {
  id: Float
}

input StatesAvgOrderByAggregateInput {
  id: SortOrder
}

type StatesCountAggregate {
  _all: Int!
  country: Int!
  description: Int!
  id: Int!
  image: Int!
  name: Int!
  trainings: Int!
}

input StatesCountOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

input StatesCreateInput {
  country: String
  description: String
  image: String
  name: String!
  trainings: String
}

input StatesCreateManyInput {
  country: String
  description: String
  id: Int
  image: String
  name: String!
  trainings: String
}

type StatesGroupBy {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
  country: String
  description: String
  id: Int!
  image: String
  name: String!
  trainings: String
}

type StatesMaxAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  trainings: String
}

input StatesMaxOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

type StatesMinAggregate {
  country: String
  description: String
  id: Int
  image: String
  name: String
  trainings: String
}

input StatesMinOrderByAggregateInput {
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

enum StatesOrderByRelevanceFieldEnum {
  country
  description
  image
  name
  trainings
}

input StatesOrderByRelevanceInput {
  fields: [StatesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input StatesOrderByWithAggregationInput {
  _avg: StatesAvgOrderByAggregateInput
  _count: StatesCountOrderByAggregateInput
  _max: StatesMaxOrderByAggregateInput
  _min: StatesMinOrderByAggregateInput
  _sum: StatesSumOrderByAggregateInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

input StatesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: StatesOrderByRelevanceInput
  country: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  trainings: SortOrder
}

enum StatesScalarFieldEnum {
  country
  description
  id
  image
  name
  trainings
}

input StatesScalarWhereWithAggregatesInput {
  AND: [StatesScalarWhereWithAggregatesInput!]
  NOT: [StatesScalarWhereWithAggregatesInput!]
  OR: [StatesScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  trainings: StringNullableWithAggregatesFilter
}

type StatesSumAggregate {
  id: Int
}

input StatesSumOrderByAggregateInput {
  id: SortOrder
}

input StatesUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input StatesUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  trainings: NullableStringFieldUpdateOperationsInput
}

input StatesWhereInput {
  AND: [StatesWhereInput!]
  NOT: [StatesWhereInput!]
  OR: [StatesWhereInput!]
  country: StringNullableFilter
  description: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  name: StringFilter
  trainings: StringNullableFilter
}

input StatesWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  search: String
  startsWith: String
}

type Tags {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsAvgAggregate {
  id: Float
}

input TagsAvgOrderByAggregateInput {
  id: SortOrder
}

type TagsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  customers: Int!
  excerpt: Int!
  id: Int!
  name: Int!
  products: Int!
  users: Int!
}

input TagsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsCreateInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  name: String!
  products: String
  users: String
}

input TagsCreateManyInput {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String!
  products: String
  users: String
}

type TagsGroupBy {
  _avg: TagsAvgAggregate
  _count: TagsCountAggregate
  _max: TagsMaxAggregate
  _min: TagsMinAggregate
  _sum: TagsSumAggregate
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int!
  name: String!
  products: String
  users: String
}

type TagsMaxAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

type TagsMinAggregate {
  articles: String
  categories: String
  customers: String
  excerpt: String
  id: Int
  name: String
  products: String
  users: String
}

input TagsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsOrderByRelevanceFieldEnum {
  articles
  categories
  customers
  excerpt
  name
  products
  users
}

input TagsOrderByRelevanceInput {
  fields: [TagsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TagsOrderByWithAggregationInput {
  _avg: TagsAvgOrderByAggregateInput
  _count: TagsCountOrderByAggregateInput
  _max: TagsMaxOrderByAggregateInput
  _min: TagsMinOrderByAggregateInput
  _sum: TagsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

input TagsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TagsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  customers: SortOrder
  excerpt: SortOrder
  id: SortOrder
  name: SortOrder
  products: SortOrder
  users: SortOrder
}

enum TagsScalarFieldEnum {
  articles
  categories
  customers
  excerpt
  id
  name
  products
  users
}

input TagsScalarWhereWithAggregatesInput {
  AND: [TagsScalarWhereWithAggregatesInput!]
  NOT: [TagsScalarWhereWithAggregatesInput!]
  OR: [TagsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  excerpt: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
}

type TagsSumAggregate {
  id: Int
}

input TagsSumOrderByAggregateInput {
  id: SortOrder
}

input TagsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  excerpt: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
}

input TagsWhereInput {
  AND: [TagsWhereInput!]
  NOT: [TagsWhereInput!]
  OR: [TagsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  customers: StringNullableFilter
  excerpt: StringNullableFilter
  id: IntFilter
  name: StringFilter
  products: StringNullableFilter
  users: StringNullableFilter
}

input TagsWhereUniqueInput {
  id: Int
}

type Taxes {
  country: String
  id: Int!
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String!
}

type TaxesAvgAggregate {
  id: Float
}

input TaxesAvgOrderByAggregateInput {
  id: SortOrder
}

type TaxesCountAggregate {
  _all: Int!
  country: Int!
  id: Int!
  postcode: Int!
  products: Int!
  rate_percent: Int!
  state: Int!
  taxCategory: Int!
  taxDefault: Int!
  taxRuleName: Int!
  tax_identifier: Int!
}

input TaxesCountOrderByAggregateInput {
  country: SortOrder
  id: SortOrder
  postcode: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  taxCategory: SortOrder
  taxDefault: SortOrder
  taxRuleName: SortOrder
  tax_identifier: SortOrder
}

input TaxesCreateInput {
  country: String
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String!
}

input TaxesCreateManyInput {
  country: String
  id: Int
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String!
}

type TaxesGroupBy {
  _avg: TaxesAvgAggregate
  _count: TaxesCountAggregate
  _max: TaxesMaxAggregate
  _min: TaxesMinAggregate
  _sum: TaxesSumAggregate
  country: String
  id: Int!
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String!
}

type TaxesMaxAggregate {
  country: String
  id: Int
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String
}

input TaxesMaxOrderByAggregateInput {
  country: SortOrder
  id: SortOrder
  postcode: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  taxCategory: SortOrder
  taxDefault: SortOrder
  taxRuleName: SortOrder
  tax_identifier: SortOrder
}

type TaxesMinAggregate {
  country: String
  id: Int
  postcode: String
  products: String
  rate_percent: String
  state: String
  taxCategory: String
  taxDefault: String
  taxRuleName: String
  tax_identifier: String
}

input TaxesMinOrderByAggregateInput {
  country: SortOrder
  id: SortOrder
  postcode: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  taxCategory: SortOrder
  taxDefault: SortOrder
  taxRuleName: SortOrder
  tax_identifier: SortOrder
}

enum TaxesOrderByRelevanceFieldEnum {
  country
  postcode
  products
  rate_percent
  state
  taxCategory
  taxDefault
  taxRuleName
  tax_identifier
}

input TaxesOrderByRelevanceInput {
  fields: [TaxesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TaxesOrderByWithAggregationInput {
  _avg: TaxesAvgOrderByAggregateInput
  _count: TaxesCountOrderByAggregateInput
  _max: TaxesMaxOrderByAggregateInput
  _min: TaxesMinOrderByAggregateInput
  _sum: TaxesSumOrderByAggregateInput
  country: SortOrder
  id: SortOrder
  postcode: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  taxCategory: SortOrder
  taxDefault: SortOrder
  taxRuleName: SortOrder
  tax_identifier: SortOrder
}

input TaxesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TaxesOrderByRelevanceInput
  country: SortOrder
  id: SortOrder
  postcode: SortOrder
  products: SortOrder
  rate_percent: SortOrder
  state: SortOrder
  taxCategory: SortOrder
  taxDefault: SortOrder
  taxRuleName: SortOrder
  tax_identifier: SortOrder
}

enum TaxesScalarFieldEnum {
  country
  id
  postcode
  products
  rate_percent
  state
  taxCategory
  taxDefault
  taxRuleName
  tax_identifier
}

input TaxesScalarWhereWithAggregatesInput {
  AND: [TaxesScalarWhereWithAggregatesInput!]
  NOT: [TaxesScalarWhereWithAggregatesInput!]
  OR: [TaxesScalarWhereWithAggregatesInput!]
  country: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  postcode: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  rate_percent: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  taxCategory: StringNullableWithAggregatesFilter
  taxDefault: StringNullableWithAggregatesFilter
  taxRuleName: StringNullableWithAggregatesFilter
  tax_identifier: StringWithAggregatesFilter
}

type TaxesSumAggregate {
  id: Int
}

input TaxesSumOrderByAggregateInput {
  id: SortOrder
}

input TaxesUpdateInput {
  country: NullableStringFieldUpdateOperationsInput
  postcode: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rate_percent: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  taxCategory: NullableStringFieldUpdateOperationsInput
  taxDefault: NullableStringFieldUpdateOperationsInput
  taxRuleName: NullableStringFieldUpdateOperationsInput
  tax_identifier: StringFieldUpdateOperationsInput
}

input TaxesUpdateManyMutationInput {
  country: NullableStringFieldUpdateOperationsInput
  postcode: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  rate_percent: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  taxCategory: NullableStringFieldUpdateOperationsInput
  taxDefault: NullableStringFieldUpdateOperationsInput
  taxRuleName: NullableStringFieldUpdateOperationsInput
  tax_identifier: StringFieldUpdateOperationsInput
}

input TaxesWhereInput {
  AND: [TaxesWhereInput!]
  NOT: [TaxesWhereInput!]
  OR: [TaxesWhereInput!]
  country: StringNullableFilter
  id: IntFilter
  postcode: StringNullableFilter
  products: StringNullableFilter
  rate_percent: StringNullableFilter
  state: StringNullableFilter
  taxCategory: StringNullableFilter
  taxDefault: StringNullableFilter
  taxRuleName: StringNullableFilter
  tax_identifier: StringFilter
}

input TaxesWhereUniqueInput {
  id: Int
}

type Themes {
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesAvgAggregate {
  id: Float
  website_id: Float
}

input ThemesAvgOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

type ThemesCountAggregate {
  _all: Int!
  action: Int!
  id: Int!
  parent_theme: Int!
  theme_path: Int!
  title: Int!
  website_id: Int!
  websites: Int!
}

input ThemesCountOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesCreateInput {
  action: String
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

input ThemesCreateManyInput {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesGroupBy {
  _avg: ThemesAvgAggregate
  _count: ThemesCountAggregate
  _max: ThemesMaxAggregate
  _min: ThemesMinAggregate
  _sum: ThemesSumAggregate
  action: String
  id: Int!
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt!
  websites: String!
}

type ThemesMaxAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMaxOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

type ThemesMinAggregate {
  action: String
  id: Int
  parent_theme: String
  theme_path: String
  title: String
  website_id: BigInt
  websites: String
}

input ThemesMinOrderByAggregateInput {
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesOrderByRelevanceFieldEnum {
  action
  parent_theme
  theme_path
  title
  websites
}

input ThemesOrderByRelevanceInput {
  fields: [ThemesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ThemesOrderByWithAggregationInput {
  _avg: ThemesAvgOrderByAggregateInput
  _count: ThemesCountOrderByAggregateInput
  _max: ThemesMaxOrderByAggregateInput
  _min: ThemesMinOrderByAggregateInput
  _sum: ThemesSumOrderByAggregateInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

input ThemesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ThemesOrderByRelevanceInput
  action: SortOrder
  id: SortOrder
  parent_theme: SortOrder
  theme_path: SortOrder
  title: SortOrder
  website_id: SortOrder
  websites: SortOrder
}

enum ThemesScalarFieldEnum {
  action
  id
  parent_theme
  theme_path
  title
  website_id
  websites
}

input ThemesScalarWhereWithAggregatesInput {
  AND: [ThemesScalarWhereWithAggregatesInput!]
  NOT: [ThemesScalarWhereWithAggregatesInput!]
  OR: [ThemesScalarWhereWithAggregatesInput!]
  action: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  parent_theme: StringNullableWithAggregatesFilter
  theme_path: StringNullableWithAggregatesFilter
  title: StringNullableWithAggregatesFilter
  website_id: BigIntWithAggregatesFilter
  websites: StringWithAggregatesFilter
}

type ThemesSumAggregate {
  id: Int
  website_id: BigInt
}

input ThemesSumOrderByAggregateInput {
  id: SortOrder
  website_id: SortOrder
}

input ThemesUpdateInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesUpdateManyMutationInput {
  action: NullableStringFieldUpdateOperationsInput
  parent_theme: NullableStringFieldUpdateOperationsInput
  theme_path: NullableStringFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  website_id: BigIntFieldUpdateOperationsInput
  websites: StringFieldUpdateOperationsInput
}

input ThemesWhereInput {
  AND: [ThemesWhereInput!]
  NOT: [ThemesWhereInput!]
  OR: [ThemesWhereInput!]
  action: StringNullableFilter
  id: IntFilter
  parent_theme: StringNullableFilter
  theme_path: StringNullableFilter
  title: StringNullableFilter
  website_id: BigIntFilter
  websites: StringFilter
}

input ThemesWhereUniqueInput {
  id: Int
}

type Ticketing {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt!
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingAvgAggregate {
  id: Float
}

input TicketingAvgOrderByAggregateInput {
  id: SortOrder
}

type TicketingCountAggregate {
  _all: Int!
  account_name: Int!
  assigned_to: Int!
  comment: Int!
  content: Int!
  created_at: Int!
  date: Int!
  date_modified: Int!
  department: Int!
  id: Int!
  level: Int!
  location: Int!
  media: Int!
  name: Int!
  priority: Int!
  products: Int!
  projects: Int!
  projects_projectsToticketing: Int!
  requester: Int!
  requester_email: Int!
  resolution: Int!
  severity: Int!
  status: Int!
  team: Int!
  ticket_type: Int!
}

input TicketingCountOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

input TicketingCreateInput {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingCreateManyInput {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingGroupBy {
  _avg: TicketingAvgAggregate
  _count: TicketingCountAggregate
  _max: TicketingMaxAggregate
  _min: TicketingMinAggregate
  _sum: TicketingSumAggregate
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt!
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

type TicketingMaxAggregate {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingMaxOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

type TicketingMinAggregate {
  account_name: String
  assigned_to: String
  comment: String
  content: String
  created_at: DateTime
  date: String
  date_modified: DateTime
  department: String
  id: BigInt
  level: String
  location: String
  media: String
  name: String
  priority: String
  products: String
  projects: String
  projects_projectsToticketing: String
  requester: String
  requester_email: String
  resolution: String
  severity: String
  status: String
  team: String
  ticket_type: String
}

input TicketingMinOrderByAggregateInput {
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

enum TicketingOrderByRelevanceFieldEnum {
  account_name
  assigned_to
  comment
  content
  date
  department
  level
  location
  media
  name
  priority
  products
  projects
  projects_projectsToticketing
  requester
  requester_email
  resolution
  severity
  status
  team
  ticket_type
}

input TicketingOrderByRelevanceInput {
  fields: [TicketingOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TicketingOrderByWithAggregationInput {
  _avg: TicketingAvgOrderByAggregateInput
  _count: TicketingCountOrderByAggregateInput
  _max: TicketingMaxOrderByAggregateInput
  _min: TicketingMinOrderByAggregateInput
  _sum: TicketingSumOrderByAggregateInput
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

input TicketingOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TicketingOrderByRelevanceInput
  account_name: SortOrder
  assigned_to: SortOrder
  comment: SortOrder
  content: SortOrder
  created_at: SortOrder
  date: SortOrder
  date_modified: SortOrder
  department: SortOrder
  id: SortOrder
  level: SortOrder
  location: SortOrder
  media: SortOrder
  name: SortOrder
  priority: SortOrder
  products: SortOrder
  projects: SortOrder
  projects_projectsToticketing: SortOrder
  requester: SortOrder
  requester_email: SortOrder
  resolution: SortOrder
  severity: SortOrder
  status: SortOrder
  team: SortOrder
  ticket_type: SortOrder
}

enum TicketingScalarFieldEnum {
  account_name
  assigned_to
  comment
  content
  created_at
  date
  date_modified
  department
  id
  level
  location
  media
  name
  priority
  products
  projects
  projects_projectsToticketing
  requester
  requester_email
  resolution
  severity
  status
  team
  ticket_type
}

input TicketingScalarWhereWithAggregatesInput {
  AND: [TicketingScalarWhereWithAggregatesInput!]
  NOT: [TicketingScalarWhereWithAggregatesInput!]
  OR: [TicketingScalarWhereWithAggregatesInput!]
  account_name: StringNullableWithAggregatesFilter
  assigned_to: StringNullableWithAggregatesFilter
  comment: StringNullableWithAggregatesFilter
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  date: StringNullableWithAggregatesFilter
  date_modified: DateTimeNullableWithAggregatesFilter
  department: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  level: StringNullableWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  priority: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  projects_projectsToticketing: StringNullableWithAggregatesFilter
  requester: StringNullableWithAggregatesFilter
  requester_email: StringNullableWithAggregatesFilter
  resolution: StringNullableWithAggregatesFilter
  severity: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
  team: StringNullableWithAggregatesFilter
  ticket_type: StringNullableWithAggregatesFilter
}

type TicketingSumAggregate {
  id: BigInt
}

input TicketingSumOrderByAggregateInput {
  id: SortOrder
}

input TicketingUpdateInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date: NullableStringFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  projects_projectsToticketing: NullableStringFieldUpdateOperationsInput
  requester: NullableStringFieldUpdateOperationsInput
  requester_email: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  severity: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_type: NullableStringFieldUpdateOperationsInput
}

input TicketingUpdateManyMutationInput {
  account_name: NullableStringFieldUpdateOperationsInput
  assigned_to: NullableStringFieldUpdateOperationsInput
  comment: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  date: NullableStringFieldUpdateOperationsInput
  date_modified: NullableDateTimeFieldUpdateOperationsInput
  department: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  level: NullableStringFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  priority: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  projects_projectsToticketing: NullableStringFieldUpdateOperationsInput
  requester: NullableStringFieldUpdateOperationsInput
  requester_email: NullableStringFieldUpdateOperationsInput
  resolution: NullableStringFieldUpdateOperationsInput
  severity: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
  team: NullableStringFieldUpdateOperationsInput
  ticket_type: NullableStringFieldUpdateOperationsInput
}

input TicketingWhereInput {
  AND: [TicketingWhereInput!]
  NOT: [TicketingWhereInput!]
  OR: [TicketingWhereInput!]
  account_name: StringNullableFilter
  assigned_to: StringNullableFilter
  comment: StringNullableFilter
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  date: StringNullableFilter
  date_modified: DateTimeNullableFilter
  department: StringNullableFilter
  id: BigIntFilter
  level: StringNullableFilter
  location: StringNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  priority: StringNullableFilter
  products: StringNullableFilter
  projects: StringNullableFilter
  projects_projectsToticketing: StringNullableFilter
  requester: StringNullableFilter
  requester_email: StringNullableFilter
  resolution: StringNullableFilter
  severity: StringNullableFilter
  status: StringNullableFilter
  team: StringNullableFilter
  ticket_type: StringNullableFilter
}

input TicketingWhereUniqueInput {
  id: BigInt
}

type Transactions {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int!
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsAvgAggregate {
  id: Float
  order_id: Float
  parent_transaction_id: Float
  payment_method: Float
  transaction_id: Float
}

input TransactionsAvgOrderByAggregateInput {
  id: SortOrder
  order_id: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

type TransactionsCountAggregate {
  _all: Int!
  closed: Int!
  created: Int!
  customer_payment: Int!
  id: Int!
  order_id: Int!
  orders: Int!
  parent_transaction_id: Int!
  payment_method: Int!
  transaction_id: Int!
}

input TransactionsCountOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsCreateInput {
  closed: String
  created: DateTime
  customer_payment: String
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

input TransactionsCreateManyInput {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsGroupBy {
  _avg: TransactionsAvgAggregate
  _count: TransactionsCountAggregate
  _max: TransactionsMaxAggregate
  _min: TransactionsMinAggregate
  _sum: TransactionsSumAggregate
  closed: String
  created: DateTime
  customer_payment: String
  id: Int!
  order_id: Int!
  orders: String
  parent_transaction_id: Int!
  payment_method: BigInt!
  transaction_id: Int!
}

type TransactionsMaxAggregate {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int
  orders: String
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsMaxOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

type TransactionsMinAggregate {
  closed: String
  created: DateTime
  customer_payment: String
  id: Int
  order_id: Int
  orders: String
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsMinOrderByAggregateInput {
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

enum TransactionsOrderByRelevanceFieldEnum {
  closed
  customer_payment
  orders
}

input TransactionsOrderByRelevanceInput {
  fields: [TransactionsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input TransactionsOrderByWithAggregationInput {
  _avg: TransactionsAvgOrderByAggregateInput
  _count: TransactionsCountOrderByAggregateInput
  _max: TransactionsMaxOrderByAggregateInput
  _min: TransactionsMinOrderByAggregateInput
  _sum: TransactionsSumOrderByAggregateInput
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: TransactionsOrderByRelevanceInput
  closed: SortOrder
  created: SortOrder
  customer_payment: SortOrder
  id: SortOrder
  order_id: SortOrder
  orders: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

enum TransactionsScalarFieldEnum {
  closed
  created
  customer_payment
  id
  order_id
  orders
  parent_transaction_id
  payment_method
  transaction_id
}

input TransactionsScalarWhereWithAggregatesInput {
  AND: [TransactionsScalarWhereWithAggregatesInput!]
  NOT: [TransactionsScalarWhereWithAggregatesInput!]
  OR: [TransactionsScalarWhereWithAggregatesInput!]
  closed: StringNullableWithAggregatesFilter
  created: DateTimeNullableWithAggregatesFilter
  customer_payment: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  order_id: IntWithAggregatesFilter
  orders: StringNullableWithAggregatesFilter
  parent_transaction_id: IntWithAggregatesFilter
  payment_method: BigIntWithAggregatesFilter
  transaction_id: IntWithAggregatesFilter
}

type TransactionsSumAggregate {
  id: Int
  order_id: Int
  parent_transaction_id: Int
  payment_method: BigInt
  transaction_id: Int
}

input TransactionsSumOrderByAggregateInput {
  id: SortOrder
  order_id: SortOrder
  parent_transaction_id: SortOrder
  payment_method: SortOrder
  transaction_id: SortOrder
}

input TransactionsUpdateInput {
  closed: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  parent_transaction_id: IntFieldUpdateOperationsInput
  payment_method: BigIntFieldUpdateOperationsInput
  transaction_id: IntFieldUpdateOperationsInput
}

input TransactionsUpdateManyMutationInput {
  closed: NullableStringFieldUpdateOperationsInput
  created: NullableDateTimeFieldUpdateOperationsInput
  customer_payment: NullableStringFieldUpdateOperationsInput
  order_id: IntFieldUpdateOperationsInput
  orders: NullableStringFieldUpdateOperationsInput
  parent_transaction_id: IntFieldUpdateOperationsInput
  payment_method: BigIntFieldUpdateOperationsInput
  transaction_id: IntFieldUpdateOperationsInput
}

input TransactionsWhereInput {
  AND: [TransactionsWhereInput!]
  NOT: [TransactionsWhereInput!]
  OR: [TransactionsWhereInput!]
  closed: StringNullableFilter
  created: DateTimeNullableFilter
  customer_payment: StringNullableFilter
  id: IntFilter
  order_id: IntFilter
  orders: StringNullableFilter
  parent_transaction_id: IntFilter
  payment_method: BigIntFilter
  transaction_id: IntFilter
}

input TransactionsWhereUniqueInput {
  id: Int
}

type Upload_file {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileAvgAggregate {
  created_by: Float
  height: Float
  id: Float
  size: Decimal
  updated_by: Float
  width: Float
}

input Upload_fileAvgOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

type Upload_fileCountAggregate {
  _all: Int!
  alternativeText: Int!
  caption: Int!
  created_at: Int!
  created_by: Int!
  ext: Int!
  formats: Int!
  hash: Int!
  height: Int!
  id: Int!
  mime: Int!
  name: Int!
  previewUrl: Int!
  provider: Int!
  provider_metadata: Int!
  size: Int!
  updated_at: Int!
  updated_by: Int!
  url: Int!
  width: Int!
}

input Upload_fileCountOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileCreateInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

input Upload_fileCreateManyInput {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileGroupBy {
  _avg: Upload_fileAvgAggregate
  _count: Upload_fileCountAggregate
  _max: Upload_fileMaxAggregate
  _min: Upload_fileMinAggregate
  _sum: Upload_fileSumAggregate
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  formats: JSON
  hash: String!
  height: Int
  id: Int!
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  size: Decimal!
  updated_at: DateTime
  updated_by: Int
  url: String!
  width: Int
}

type Upload_fileMaxAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMaxOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

type Upload_fileMinAggregate {
  alternativeText: String
  caption: String
  created_at: DateTime
  created_by: Int
  ext: String
  hash: String
  height: Int
  id: Int
  mime: String
  name: String
  previewUrl: String
  provider: String
  size: Decimal
  updated_at: DateTime
  updated_by: Int
  url: String
  width: Int
}

input Upload_fileMinOrderByAggregateInput {
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileOrderByRelevanceFieldEnum {
  alternativeText
  caption
  ext
  hash
  mime
  name
  previewUrl
  provider
  url
}

input Upload_fileOrderByRelevanceInput {
  fields: [Upload_fileOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input Upload_fileOrderByWithAggregationInput {
  _avg: Upload_fileAvgOrderByAggregateInput
  _count: Upload_fileCountOrderByAggregateInput
  _max: Upload_fileMaxOrderByAggregateInput
  _min: Upload_fileMinOrderByAggregateInput
  _sum: Upload_fileSumOrderByAggregateInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

input Upload_fileOrderByWithRelationAndSearchRelevanceInput {
  _relevance: Upload_fileOrderByRelevanceInput
  alternativeText: SortOrder
  caption: SortOrder
  created_at: SortOrder
  created_by: SortOrder
  ext: SortOrder
  formats: SortOrder
  hash: SortOrder
  height: SortOrder
  id: SortOrder
  mime: SortOrder
  name: SortOrder
  previewUrl: SortOrder
  provider: SortOrder
  provider_metadata: SortOrder
  size: SortOrder
  updated_at: SortOrder
  updated_by: SortOrder
  url: SortOrder
  width: SortOrder
}

enum Upload_fileScalarFieldEnum {
  alternativeText
  caption
  created_at
  created_by
  ext
  formats
  hash
  height
  id
  mime
  name
  previewUrl
  provider
  provider_metadata
  size
  updated_at
  updated_by
  url
  width
}

input Upload_fileScalarWhereWithAggregatesInput {
  AND: [Upload_fileScalarWhereWithAggregatesInput!]
  NOT: [Upload_fileScalarWhereWithAggregatesInput!]
  OR: [Upload_fileScalarWhereWithAggregatesInput!]
  alternativeText: StringNullableWithAggregatesFilter
  caption: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  created_by: IntNullableWithAggregatesFilter
  ext: StringNullableWithAggregatesFilter
  formats: JsonNullableWithAggregatesFilter
  hash: StringWithAggregatesFilter
  height: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  mime: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  previewUrl: StringNullableWithAggregatesFilter
  provider: StringWithAggregatesFilter
  provider_metadata: JsonNullableWithAggregatesFilter
  size: DecimalWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
  updated_by: IntNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
  width: IntNullableWithAggregatesFilter
}

type Upload_fileSumAggregate {
  created_by: Int
  height: Int
  id: Int
  size: Decimal
  updated_by: Int
  width: Int
}

input Upload_fileSumOrderByAggregateInput {
  created_by: SortOrder
  height: SortOrder
  id: SortOrder
  size: SortOrder
  updated_by: SortOrder
  width: SortOrder
}

input Upload_fileUpdateInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileUpdateManyMutationInput {
  alternativeText: NullableStringFieldUpdateOperationsInput
  caption: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  created_by: NullableIntFieldUpdateOperationsInput
  ext: NullableStringFieldUpdateOperationsInput
  formats: JSON
  hash: StringFieldUpdateOperationsInput
  height: NullableIntFieldUpdateOperationsInput
  mime: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  previewUrl: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  provider_metadata: JSON
  size: DecimalFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
  updated_by: NullableIntFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
  width: NullableIntFieldUpdateOperationsInput
}

input Upload_fileWhereInput {
  AND: [Upload_fileWhereInput!]
  NOT: [Upload_fileWhereInput!]
  OR: [Upload_fileWhereInput!]
  alternativeText: StringNullableFilter
  caption: StringNullableFilter
  created_at: DateTimeNullableFilter
  created_by: IntNullableFilter
  ext: StringNullableFilter
  formats: JsonNullableFilter
  hash: StringFilter
  height: IntNullableFilter
  id: IntFilter
  mime: StringFilter
  name: StringFilter
  previewUrl: StringNullableFilter
  provider: StringFilter
  provider_metadata: JsonNullableFilter
  size: DecimalFilter
  updated_at: DateTimeNullableFilter
  updated_by: IntNullableFilter
  url: StringFilter
  width: IntNullableFilter
}

input Upload_fileWhereUniqueInput {
  id: Int
}

type Users {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt!
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersAvgAggregate {
  id: Float
}

input UsersAvgOrderByAggregateInput {
  id: SortOrder
}

type UsersCountAggregate {
  _all: Int!
  created_at: Int!
  email: Int!
  emails: Int!
  first_name: Int!
  id: Int!
  interface_locale: Int!
  last_name: Int!
  mediamanager: Int!
  messages: Int!
  password: Int!
  permissions: Int!
  projects: Int!
  username: Int!
  value: Int!
  workspaces: Int!
}

input UsersCountOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

input UsersCreateInput {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

input UsersCreateManyInput {
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersGroupBy {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
  created_at: DateTime
  email: String!
  emails: String
  first_name: String!
  id: BigInt!
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String!
  permissions: String
  projects: String
  username: String!
  value: String
  workspaces: String
}

type UsersMaxAggregate {
  created_at: DateTime
  email: String
  emails: String
  first_name: String
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String
  permissions: String
  projects: String
  username: String
  value: String
  workspaces: String
}

input UsersMaxOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

type UsersMinAggregate {
  created_at: DateTime
  email: String
  emails: String
  first_name: String
  id: BigInt
  interface_locale: String
  last_name: String
  mediamanager: String
  messages: String
  password: String
  permissions: String
  projects: String
  username: String
  value: String
  workspaces: String
}

input UsersMinOrderByAggregateInput {
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

enum UsersOrderByRelevanceFieldEnum {
  email
  emails
  first_name
  interface_locale
  last_name
  mediamanager
  messages
  password
  permissions
  projects
  username
  value
  workspaces
}

input UsersOrderByRelevanceInput {
  fields: [UsersOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input UsersOrderByWithAggregationInput {
  _avg: UsersAvgOrderByAggregateInput
  _count: UsersCountOrderByAggregateInput
  _max: UsersMaxOrderByAggregateInput
  _min: UsersMinOrderByAggregateInput
  _sum: UsersSumOrderByAggregateInput
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

input UsersOrderByWithRelationAndSearchRelevanceInput {
  _relevance: UsersOrderByRelevanceInput
  created_at: SortOrder
  email: SortOrder
  emails: SortOrder
  first_name: SortOrder
  id: SortOrder
  interface_locale: SortOrder
  last_name: SortOrder
  mediamanager: SortOrder
  messages: SortOrder
  password: SortOrder
  permissions: SortOrder
  projects: SortOrder
  username: SortOrder
  value: SortOrder
  workspaces: SortOrder
}

enum UsersScalarFieldEnum {
  created_at
  email
  emails
  first_name
  id
  interface_locale
  last_name
  mediamanager
  messages
  password
  permissions
  projects
  username
  value
  workspaces
}

input UsersScalarWhereWithAggregatesInput {
  AND: [UsersScalarWhereWithAggregatesInput!]
  NOT: [UsersScalarWhereWithAggregatesInput!]
  OR: [UsersScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  email: StringWithAggregatesFilter
  emails: StringNullableWithAggregatesFilter
  first_name: StringWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  interface_locale: StringNullableWithAggregatesFilter
  last_name: StringNullableWithAggregatesFilter
  mediamanager: StringNullableWithAggregatesFilter
  messages: StringNullableWithAggregatesFilter
  password: StringWithAggregatesFilter
  permissions: StringNullableWithAggregatesFilter
  projects: StringNullableWithAggregatesFilter
  username: StringWithAggregatesFilter
  value: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type UsersSumAggregate {
  id: BigInt
}

input UsersSumOrderByAggregateInput {
  id: SortOrder
}

input UsersUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  interface_locale: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input UsersUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  emails: NullableStringFieldUpdateOperationsInput
  first_name: StringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  interface_locale: NullableStringFieldUpdateOperationsInput
  last_name: NullableStringFieldUpdateOperationsInput
  mediamanager: NullableStringFieldUpdateOperationsInput
  messages: NullableStringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: NullableStringFieldUpdateOperationsInput
  projects: NullableStringFieldUpdateOperationsInput
  username: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  created_at: DateTimeNullableFilter
  email: StringFilter
  emails: StringNullableFilter
  first_name: StringFilter
  id: BigIntFilter
  interface_locale: StringNullableFilter
  last_name: StringNullableFilter
  mediamanager: StringNullableFilter
  messages: StringNullableFilter
  password: StringFilter
  permissions: StringNullableFilter
  projects: StringNullableFilter
  username: StringFilter
  value: StringNullableFilter
  workspaces: StringNullableFilter
}

input UsersWhereUniqueInput {
  id: BigInt
}

type Vendors {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int!
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsAvgAggregate {
  id: Float
}

input VendorsAvgOrderByAggregateInput {
  id: SortOrder
}

type VendorsCountAggregate {
  _all: Int!
  articles: Int!
  categories: Int!
  comments: Int!
  country: Int!
  coupons: Int!
  customers: Int!
  description: Int!
  gift_certificates: Int!
  id: Int!
  image: Int!
  invoices: Int!
  name: Int!
  physical_store: Int!
  polls: Int!
  products: Int!
  quotes: Int!
  rating: Int!
  reports: Int!
  reviews: Int!
  reward_points: Int!
  special_discounts: Int!
  statistics: Int!
  stocks: Int!
  tags: Int!
  type: Int!
  users: Int!
  website: Int!
  workspaces: Int!
}

input VendorsCountOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

input VendorsCreateInput {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsCreateManyInput {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsGroupBy {
  _avg: VendorsAvgAggregate
  _count: VendorsCountAggregate
  _max: VendorsMaxAggregate
  _min: VendorsMinAggregate
  _sum: VendorsSumAggregate
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int!
  image: String
  invoices: String
  name: String!
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

type VendorsMaxAggregate {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsMaxOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

type VendorsMinAggregate {
  articles: String
  categories: String
  comments: String
  country: String
  coupons: String
  customers: String
  description: String
  gift_certificates: String
  id: Int
  image: String
  invoices: String
  name: String
  physical_store: String
  polls: String
  products: String
  quotes: String
  rating: String
  reports: String
  reviews: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  tags: String
  type: String
  users: String
  website: String
  workspaces: String
}

input VendorsMinOrderByAggregateInput {
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

enum VendorsOrderByRelevanceFieldEnum {
  articles
  categories
  comments
  country
  coupons
  customers
  description
  gift_certificates
  image
  invoices
  name
  physical_store
  polls
  products
  quotes
  rating
  reports
  reviews
  reward_points
  special_discounts
  statistics
  stocks
  tags
  type
  users
  website
  workspaces
}

input VendorsOrderByRelevanceInput {
  fields: [VendorsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input VendorsOrderByWithAggregationInput {
  _avg: VendorsAvgOrderByAggregateInput
  _count: VendorsCountOrderByAggregateInput
  _max: VendorsMaxOrderByAggregateInput
  _min: VendorsMinOrderByAggregateInput
  _sum: VendorsSumOrderByAggregateInput
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

input VendorsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: VendorsOrderByRelevanceInput
  articles: SortOrder
  categories: SortOrder
  comments: SortOrder
  country: SortOrder
  coupons: SortOrder
  customers: SortOrder
  description: SortOrder
  gift_certificates: SortOrder
  id: SortOrder
  image: SortOrder
  invoices: SortOrder
  name: SortOrder
  physical_store: SortOrder
  polls: SortOrder
  products: SortOrder
  quotes: SortOrder
  rating: SortOrder
  reports: SortOrder
  reviews: SortOrder
  reward_points: SortOrder
  special_discounts: SortOrder
  statistics: SortOrder
  stocks: SortOrder
  tags: SortOrder
  type: SortOrder
  users: SortOrder
  website: SortOrder
  workspaces: SortOrder
}

enum VendorsScalarFieldEnum {
  articles
  categories
  comments
  country
  coupons
  customers
  description
  gift_certificates
  id
  image
  invoices
  name
  physical_store
  polls
  products
  quotes
  rating
  reports
  reviews
  reward_points
  special_discounts
  statistics
  stocks
  tags
  type
  users
  website
  workspaces
}

input VendorsScalarWhereWithAggregatesInput {
  AND: [VendorsScalarWhereWithAggregatesInput!]
  NOT: [VendorsScalarWhereWithAggregatesInput!]
  OR: [VendorsScalarWhereWithAggregatesInput!]
  articles: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  comments: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  coupons: StringNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  gift_certificates: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  invoices: StringNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  physical_store: StringNullableWithAggregatesFilter
  polls: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quotes: StringNullableWithAggregatesFilter
  rating: StringNullableWithAggregatesFilter
  reports: StringNullableWithAggregatesFilter
  reviews: StringNullableWithAggregatesFilter
  reward_points: StringNullableWithAggregatesFilter
  special_discounts: StringNullableWithAggregatesFilter
  statistics: StringNullableWithAggregatesFilter
  stocks: StringNullableWithAggregatesFilter
  tags: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  users: StringNullableWithAggregatesFilter
  website: StringNullableWithAggregatesFilter
  workspaces: StringNullableWithAggregatesFilter
}

type VendorsSumAggregate {
  id: Int
}

input VendorsSumOrderByAggregateInput {
  id: SortOrder
}

input VendorsUpdateInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gift_certificates: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invoices: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  physical_store: NullableStringFieldUpdateOperationsInput
  polls: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  reviews: NullableStringFieldUpdateOperationsInput
  reward_points: NullableStringFieldUpdateOperationsInput
  special_discounts: NullableStringFieldUpdateOperationsInput
  statistics: NullableStringFieldUpdateOperationsInput
  stocks: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input VendorsUpdateManyMutationInput {
  articles: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  comments: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  coupons: NullableStringFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  gift_certificates: NullableStringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  invoices: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  physical_store: NullableStringFieldUpdateOperationsInput
  polls: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quotes: NullableStringFieldUpdateOperationsInput
  rating: NullableStringFieldUpdateOperationsInput
  reports: NullableStringFieldUpdateOperationsInput
  reviews: NullableStringFieldUpdateOperationsInput
  reward_points: NullableStringFieldUpdateOperationsInput
  special_discounts: NullableStringFieldUpdateOperationsInput
  statistics: NullableStringFieldUpdateOperationsInput
  stocks: NullableStringFieldUpdateOperationsInput
  tags: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  users: NullableStringFieldUpdateOperationsInput
  website: NullableStringFieldUpdateOperationsInput
  workspaces: NullableStringFieldUpdateOperationsInput
}

input VendorsWhereInput {
  AND: [VendorsWhereInput!]
  NOT: [VendorsWhereInput!]
  OR: [VendorsWhereInput!]
  articles: StringNullableFilter
  categories: StringNullableFilter
  comments: StringNullableFilter
  country: StringNullableFilter
  coupons: StringNullableFilter
  customers: StringNullableFilter
  description: StringNullableFilter
  gift_certificates: StringNullableFilter
  id: IntFilter
  image: StringNullableFilter
  invoices: StringNullableFilter
  name: StringFilter
  physical_store: StringNullableFilter
  polls: StringNullableFilter
  products: StringNullableFilter
  quotes: StringNullableFilter
  rating: StringNullableFilter
  reports: StringNullableFilter
  reviews: StringNullableFilter
  reward_points: StringNullableFilter
  special_discounts: StringNullableFilter
  statistics: StringNullableFilter
  stocks: StringNullableFilter
  tags: StringNullableFilter
  type: StringNullableFilter
  users: StringNullableFilter
  website: StringNullableFilter
  workspaces: StringNullableFilter
}

input VendorsWhereUniqueInput {
  id: Int
}

type Visits {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt!
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsAvgAggregate {
  id: Float
}

input VisitsAvgOrderByAggregateInput {
  id: SortOrder
}

type VisitsCountAggregate {
  _all: Int!
  content: Int!
  created_at: Int!
  emergency: Int!
  end_date: Int!
  id: Int!
  location: Int!
  meeting: Int!
  reason: Int!
  start_date: Int!
  task: Int!
  username: Int!
}

input VisitsCountOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

input VisitsCreateInput {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsCreateManyInput {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsGroupBy {
  _avg: VisitsAvgAggregate
  _count: VisitsCountAggregate
  _max: VisitsMaxAggregate
  _min: VisitsMinAggregate
  _sum: VisitsSumAggregate
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt!
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

type VisitsMaxAggregate {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsMaxOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

type VisitsMinAggregate {
  content: String
  created_at: DateTime
  emergency: String
  end_date: String
  id: BigInt
  location: String
  meeting: String
  reason: String
  start_date: String
  task: String
  username: String
}

input VisitsMinOrderByAggregateInput {
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

enum VisitsOrderByRelevanceFieldEnum {
  content
  emergency
  end_date
  location
  meeting
  reason
  start_date
  task
  username
}

input VisitsOrderByRelevanceInput {
  fields: [VisitsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input VisitsOrderByWithAggregationInput {
  _avg: VisitsAvgOrderByAggregateInput
  _count: VisitsCountOrderByAggregateInput
  _max: VisitsMaxOrderByAggregateInput
  _min: VisitsMinOrderByAggregateInput
  _sum: VisitsSumOrderByAggregateInput
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

input VisitsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: VisitsOrderByRelevanceInput
  content: SortOrder
  created_at: SortOrder
  emergency: SortOrder
  end_date: SortOrder
  id: SortOrder
  location: SortOrder
  meeting: SortOrder
  reason: SortOrder
  start_date: SortOrder
  task: SortOrder
  username: SortOrder
}

enum VisitsScalarFieldEnum {
  content
  created_at
  emergency
  end_date
  id
  location
  meeting
  reason
  start_date
  task
  username
}

input VisitsScalarWhereWithAggregatesInput {
  AND: [VisitsScalarWhereWithAggregatesInput!]
  NOT: [VisitsScalarWhereWithAggregatesInput!]
  OR: [VisitsScalarWhereWithAggregatesInput!]
  content: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  emergency: StringNullableWithAggregatesFilter
  end_date: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  location: StringNullableWithAggregatesFilter
  meeting: StringNullableWithAggregatesFilter
  reason: StringNullableWithAggregatesFilter
  start_date: StringNullableWithAggregatesFilter
  task: StringNullableWithAggregatesFilter
  username: StringNullableWithAggregatesFilter
}

type VisitsSumAggregate {
  id: BigInt
}

input VisitsSumOrderByAggregateInput {
  id: SortOrder
}

input VisitsUpdateInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  emergency: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  meeting: NullableStringFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input VisitsUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  emergency: NullableStringFieldUpdateOperationsInput
  end_date: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  location: NullableStringFieldUpdateOperationsInput
  meeting: NullableStringFieldUpdateOperationsInput
  reason: NullableStringFieldUpdateOperationsInput
  start_date: NullableStringFieldUpdateOperationsInput
  task: NullableStringFieldUpdateOperationsInput
  username: NullableStringFieldUpdateOperationsInput
}

input VisitsWhereInput {
  AND: [VisitsWhereInput!]
  NOT: [VisitsWhereInput!]
  OR: [VisitsWhereInput!]
  content: StringNullableFilter
  created_at: DateTimeNullableFilter
  emergency: StringNullableFilter
  end_date: StringNullableFilter
  id: BigIntFilter
  location: StringNullableFilter
  meeting: StringNullableFilter
  reason: StringNullableFilter
  start_date: StringNullableFilter
  task: StringNullableFilter
  username: StringNullableFilter
}

input VisitsWhereUniqueInput {
  id: BigInt
}

type Warehouse {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseAvgAggregate {
  id: Float
}

input WarehouseAvgOrderByAggregateInput {
  id: SortOrder
}

type WarehouseCountAggregate {
  _all: Int!
  category: Int!
  city: Int!
  country: Int!
  created_at: Int!
  description: Int!
  id: Int!
  image: Int!
  isPublic: Int!
  name: Int!
  postal: Int!
  products: Int!
  state: Int!
  status: Int!
}

input WarehouseCountOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

input WarehouseCreateInput {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseCreateManyInput {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseGroupBy {
  _avg: WarehouseAvgAggregate
  _count: WarehouseCountAggregate
  _max: WarehouseMaxAggregate
  _min: WarehouseMinAggregate
  _sum: WarehouseSumAggregate
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt!
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

type WarehouseMaxAggregate {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseMaxOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

type WarehouseMinAggregate {
  category: String
  city: String
  country: String
  created_at: DateTime
  description: String
  id: BigInt
  image: String
  isPublic: String
  name: String
  postal: String
  products: String
  state: String
  status: String
}

input WarehouseMinOrderByAggregateInput {
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

enum WarehouseOrderByRelevanceFieldEnum {
  category
  city
  country
  description
  image
  isPublic
  name
  postal
  products
  state
  status
}

input WarehouseOrderByRelevanceInput {
  fields: [WarehouseOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WarehouseOrderByWithAggregationInput {
  _avg: WarehouseAvgOrderByAggregateInput
  _count: WarehouseCountOrderByAggregateInput
  _max: WarehouseMaxOrderByAggregateInput
  _min: WarehouseMinOrderByAggregateInput
  _sum: WarehouseSumOrderByAggregateInput
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

input WarehouseOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WarehouseOrderByRelevanceInput
  category: SortOrder
  city: SortOrder
  country: SortOrder
  created_at: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  isPublic: SortOrder
  name: SortOrder
  postal: SortOrder
  products: SortOrder
  state: SortOrder
  status: SortOrder
}

enum WarehouseScalarFieldEnum {
  category
  city
  country
  created_at
  description
  id
  image
  isPublic
  name
  postal
  products
  state
  status
}

input WarehouseScalarWhereWithAggregatesInput {
  AND: [WarehouseScalarWhereWithAggregatesInput!]
  NOT: [WarehouseScalarWhereWithAggregatesInput!]
  OR: [WarehouseScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  city: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isPublic: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  postal: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  state: StringNullableWithAggregatesFilter
  status: StringNullableWithAggregatesFilter
}

type WarehouseSumAggregate {
  id: BigInt
}

input WarehouseSumOrderByAggregateInput {
  id: SortOrder
}

input WarehouseUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input WarehouseUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  city: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isPublic: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  postal: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  state: NullableStringFieldUpdateOperationsInput
  status: NullableStringFieldUpdateOperationsInput
}

input WarehouseWhereInput {
  AND: [WarehouseWhereInput!]
  NOT: [WarehouseWhereInput!]
  OR: [WarehouseWhereInput!]
  category: StringNullableFilter
  city: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  isPublic: StringNullableFilter
  name: StringNullableFilter
  postal: StringNullableFilter
  products: StringNullableFilter
  state: StringNullableFilter
  status: StringNullableFilter
}

input WarehouseWhereUniqueInput {
  id: BigInt
}

type Webhooks {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksAvgAggregate {
  id: Float
}

input WebhooksAvgOrderByAggregateInput {
  id: SortOrder
}

type WebhooksCountAggregate {
  _all: Int!
  create: Int!
  created_at: Int!
  delete: Int!
  headers: Int!
  id: Int!
  name: Int!
  publish: Int!
  retrieve: Int!
  unpublish: Int!
  update: Int!
  url: Int!
}

input WebhooksCountOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksCreateInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

input WebhooksCreateManyInput {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksGroupBy {
  _avg: WebhooksAvgAggregate
  _count: WebhooksCountAggregate
  _max: WebhooksMaxAggregate
  _min: WebhooksMinAggregate
  _sum: WebhooksSumAggregate
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt!
  name: String!
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String!
}

type WebhooksMaxAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMaxOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

type WebhooksMinAggregate {
  create: String
  created_at: DateTime
  delete: String
  headers: String
  id: BigInt
  name: String
  publish: String
  retrieve: String
  unpublish: String
  update: String
  url: String
}

input WebhooksMinOrderByAggregateInput {
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksOrderByRelevanceFieldEnum {
  create
  delete
  headers
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksOrderByRelevanceInput {
  fields: [WebhooksOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WebhooksOrderByWithAggregationInput {
  _avg: WebhooksAvgOrderByAggregateInput
  _count: WebhooksCountOrderByAggregateInput
  _max: WebhooksMaxOrderByAggregateInput
  _min: WebhooksMinOrderByAggregateInput
  _sum: WebhooksSumOrderByAggregateInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

input WebhooksOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WebhooksOrderByRelevanceInput
  create: SortOrder
  created_at: SortOrder
  delete: SortOrder
  headers: SortOrder
  id: SortOrder
  name: SortOrder
  publish: SortOrder
  retrieve: SortOrder
  unpublish: SortOrder
  update: SortOrder
  url: SortOrder
}

enum WebhooksScalarFieldEnum {
  create
  created_at
  delete
  headers
  id
  name
  publish
  retrieve
  unpublish
  update
  url
}

input WebhooksScalarWhereWithAggregatesInput {
  AND: [WebhooksScalarWhereWithAggregatesInput!]
  NOT: [WebhooksScalarWhereWithAggregatesInput!]
  OR: [WebhooksScalarWhereWithAggregatesInput!]
  create: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  delete: StringNullableWithAggregatesFilter
  headers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringWithAggregatesFilter
  publish: StringNullableWithAggregatesFilter
  retrieve: StringNullableWithAggregatesFilter
  unpublish: StringNullableWithAggregatesFilter
  update: StringNullableWithAggregatesFilter
  url: StringWithAggregatesFilter
}

type WebhooksSumAggregate {
  id: BigInt
}

input WebhooksSumOrderByAggregateInput {
  id: SortOrder
}

input WebhooksUpdateInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksUpdateManyMutationInput {
  create: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  delete: NullableStringFieldUpdateOperationsInput
  headers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  publish: NullableStringFieldUpdateOperationsInput
  retrieve: NullableStringFieldUpdateOperationsInput
  unpublish: NullableStringFieldUpdateOperationsInput
  update: NullableStringFieldUpdateOperationsInput
  url: StringFieldUpdateOperationsInput
}

input WebhooksWhereInput {
  AND: [WebhooksWhereInput!]
  NOT: [WebhooksWhereInput!]
  OR: [WebhooksWhereInput!]
  create: StringNullableFilter
  created_at: DateTimeNullableFilter
  delete: StringNullableFilter
  headers: StringNullableFilter
  id: BigIntFilter
  name: StringFilter
  publish: StringNullableFilter
  retrieve: StringNullableFilter
  unpublish: StringNullableFilter
  update: StringNullableFilter
  url: StringFilter
}

input WebhooksWhereUniqueInput {
  id: BigInt
}

type Websites {
  category: String
  created_at: DateTime
  id: BigInt!
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

type WebsitesAvgAggregate {
  id: Float
}

input WebsitesAvgOrderByAggregateInput {
  id: SortOrder
}

type WebsitesCountAggregate {
  _all: Int!
  category: Int!
  created_at: Int!
  id: Int!
  image: Int!
  name: Int!
  shop: Int!
  store: Int!
  themes: Int!
  url: Int!
}

input WebsitesCountOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

input WebsitesCreateInput {
  category: String
  created_at: DateTime
  id: BigInt
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

input WebsitesCreateManyInput {
  category: String
  created_at: DateTime
  id: BigInt
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

type WebsitesGroupBy {
  _avg: WebsitesAvgAggregate
  _count: WebsitesCountAggregate
  _max: WebsitesMaxAggregate
  _min: WebsitesMinAggregate
  _sum: WebsitesSumAggregate
  category: String
  created_at: DateTime
  id: BigInt!
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

type WebsitesMaxAggregate {
  category: String
  created_at: DateTime
  id: BigInt
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

input WebsitesMaxOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

type WebsitesMinAggregate {
  category: String
  created_at: DateTime
  id: BigInt
  image: String
  name: String
  shop: String
  store: String
  themes: String
  url: String
}

input WebsitesMinOrderByAggregateInput {
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

enum WebsitesOrderByRelevanceFieldEnum {
  category
  image
  name
  shop
  store
  themes
  url
}

input WebsitesOrderByRelevanceInput {
  fields: [WebsitesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WebsitesOrderByWithAggregationInput {
  _avg: WebsitesAvgOrderByAggregateInput
  _count: WebsitesCountOrderByAggregateInput
  _max: WebsitesMaxOrderByAggregateInput
  _min: WebsitesMinOrderByAggregateInput
  _sum: WebsitesSumOrderByAggregateInput
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

input WebsitesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WebsitesOrderByRelevanceInput
  category: SortOrder
  created_at: SortOrder
  id: SortOrder
  image: SortOrder
  name: SortOrder
  shop: SortOrder
  store: SortOrder
  themes: SortOrder
  url: SortOrder
}

enum WebsitesScalarFieldEnum {
  category
  created_at
  id
  image
  name
  shop
  store
  themes
  url
}

input WebsitesScalarWhereWithAggregatesInput {
  AND: [WebsitesScalarWhereWithAggregatesInput!]
  NOT: [WebsitesScalarWhereWithAggregatesInput!]
  OR: [WebsitesScalarWhereWithAggregatesInput!]
  category: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  shop: StringNullableWithAggregatesFilter
  store: StringNullableWithAggregatesFilter
  themes: StringNullableWithAggregatesFilter
  url: StringNullableWithAggregatesFilter
}

type WebsitesSumAggregate {
  id: BigInt
}

input WebsitesSumOrderByAggregateInput {
  id: SortOrder
}

input WebsitesUpdateInput {
  category: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  shop: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  themes: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input WebsitesUpdateManyMutationInput {
  category: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  shop: NullableStringFieldUpdateOperationsInput
  store: NullableStringFieldUpdateOperationsInput
  themes: NullableStringFieldUpdateOperationsInput
  url: NullableStringFieldUpdateOperationsInput
}

input WebsitesWhereInput {
  AND: [WebsitesWhereInput!]
  NOT: [WebsitesWhereInput!]
  OR: [WebsitesWhereInput!]
  category: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  image: StringNullableFilter
  name: StringNullableFilter
  shop: StringNullableFilter
  store: StringNullableFilter
  themes: StringNullableFilter
  url: StringNullableFilter
}

input WebsitesWhereUniqueInput {
  id: BigInt
}

type Wishlists {
  created_at: DateTime
  customers: String
  id: BigInt!
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsAvgAggregate {
  id: Float
}

input WishlistsAvgOrderByAggregateInput {
  id: SortOrder
}

type WishlistsCountAggregate {
  _all: Int!
  created_at: Int!
  customers: Int!
  id: Int!
  name: Int!
  occassions: Int!
  products: Int!
  quantity: Int!
  visibility: Int!
}

input WishlistsCountOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

input WishlistsCreateInput {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsCreateManyInput {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsGroupBy {
  _avg: WishlistsAvgAggregate
  _count: WishlistsCountAggregate
  _max: WishlistsMaxAggregate
  _min: WishlistsMinAggregate
  _sum: WishlistsSumAggregate
  created_at: DateTime
  customers: String
  id: BigInt!
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

type WishlistsMaxAggregate {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsMaxOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

type WishlistsMinAggregate {
  created_at: DateTime
  customers: String
  id: BigInt
  name: String
  occassions: String
  products: String
  quantity: String
  visibility: String
}

input WishlistsMinOrderByAggregateInput {
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

enum WishlistsOrderByRelevanceFieldEnum {
  customers
  name
  occassions
  products
  quantity
  visibility
}

input WishlistsOrderByRelevanceInput {
  fields: [WishlistsOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WishlistsOrderByWithAggregationInput {
  _avg: WishlistsAvgOrderByAggregateInput
  _count: WishlistsCountOrderByAggregateInput
  _max: WishlistsMaxOrderByAggregateInput
  _min: WishlistsMinOrderByAggregateInput
  _sum: WishlistsSumOrderByAggregateInput
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

input WishlistsOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WishlistsOrderByRelevanceInput
  created_at: SortOrder
  customers: SortOrder
  id: SortOrder
  name: SortOrder
  occassions: SortOrder
  products: SortOrder
  quantity: SortOrder
  visibility: SortOrder
}

enum WishlistsScalarFieldEnum {
  created_at
  customers
  id
  name
  occassions
  products
  quantity
  visibility
}

input WishlistsScalarWhereWithAggregatesInput {
  AND: [WishlistsScalarWhereWithAggregatesInput!]
  NOT: [WishlistsScalarWhereWithAggregatesInput!]
  OR: [WishlistsScalarWhereWithAggregatesInput!]
  created_at: DateTimeNullableWithAggregatesFilter
  customers: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  occassions: StringNullableWithAggregatesFilter
  products: StringNullableWithAggregatesFilter
  quantity: StringNullableWithAggregatesFilter
  visibility: StringNullableWithAggregatesFilter
}

type WishlistsSumAggregate {
  id: BigInt
}

input WishlistsSumOrderByAggregateInput {
  id: SortOrder
}

input WishlistsUpdateInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
}

input WishlistsUpdateManyMutationInput {
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  occassions: NullableStringFieldUpdateOperationsInput
  products: NullableStringFieldUpdateOperationsInput
  quantity: NullableStringFieldUpdateOperationsInput
  visibility: NullableStringFieldUpdateOperationsInput
}

input WishlistsWhereInput {
  AND: [WishlistsWhereInput!]
  NOT: [WishlistsWhereInput!]
  OR: [WishlistsWhereInput!]
  created_at: DateTimeNullableFilter
  customers: StringNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  occassions: StringNullableFilter
  products: StringNullableFilter
  quantity: StringNullableFilter
  visibility: StringNullableFilter
}

input WishlistsWhereUniqueInput {
  id: BigInt
}

type Workspaces {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt!
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesAvgAggregate {
  brands: Float
  category: Float
  customers: Float
  id: Float
  products: Float
  projects: Float
  shops: Float
  tasks: Float
  users: Float
}

input WorkspacesAvgOrderByAggregateInput {
  brands: SortOrder
  category: SortOrder
  customers: SortOrder
  id: SortOrder
  products: SortOrder
  projects: SortOrder
  shops: SortOrder
  tasks: SortOrder
  users: SortOrder
}

type WorkspacesCountAggregate {
  _all: Int!
  author: Int!
  brands: Int!
  brands_brandsToworkspaces: Int!
  categories: Int!
  category: Int!
  code: Int!
  created_at: Int!
  customers: Int!
  customers_customersToworkspaces: Int!
  description: Int!
  id: Int!
  isPublic: Int!
  media: Int!
  name: Int!
  products: Int!
  products_productsToworkspaces: Int!
  projects: Int!
  projects_projectsToworkspaces: Int!
  shops: Int!
  shops_shopsToworkspaces: Int!
  tasks: Int!
  tasks_tasksToworkspaces: Int!
  users: Int!
  users_usersToworkspaces: Int!
}

input WorkspacesCountOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

input WorkspacesCreateInput {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesCreateManyInput {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesGroupBy {
  _avg: WorkspacesAvgAggregate
  _count: WorkspacesCountAggregate
  _max: WorkspacesMaxAggregate
  _min: WorkspacesMinAggregate
  _sum: WorkspacesSumAggregate
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt!
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

type WorkspacesMaxAggregate {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesMaxOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

type WorkspacesMinAggregate {
  author: String
  brands: BigInt
  brands_brandsToworkspaces: String
  categories: String
  category: Int
  code: String
  created_at: DateTime
  customers: Int
  customers_customersToworkspaces: String
  description: String
  id: BigInt
  isPublic: Boolean
  media: String
  name: String
  products: BigInt
  products_productsToworkspaces: String
  projects: BigInt
  projects_projectsToworkspaces: String
  shops: Int
  shops_shopsToworkspaces: String
  tasks: BigInt
  tasks_tasksToworkspaces: String
  users: Int
  users_usersToworkspaces: String
}

input WorkspacesMinOrderByAggregateInput {
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

enum WorkspacesOrderByRelevanceFieldEnum {
  author
  brands_brandsToworkspaces
  categories
  code
  customers_customersToworkspaces
  description
  media
  name
  products_productsToworkspaces
  projects_projectsToworkspaces
  shops_shopsToworkspaces
  tasks_tasksToworkspaces
  users_usersToworkspaces
}

input WorkspacesOrderByRelevanceInput {
  fields: [WorkspacesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input WorkspacesOrderByWithAggregationInput {
  _avg: WorkspacesAvgOrderByAggregateInput
  _count: WorkspacesCountOrderByAggregateInput
  _max: WorkspacesMaxOrderByAggregateInput
  _min: WorkspacesMinOrderByAggregateInput
  _sum: WorkspacesSumOrderByAggregateInput
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

input WorkspacesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: WorkspacesOrderByRelevanceInput
  author: SortOrder
  brands: SortOrder
  brands_brandsToworkspaces: SortOrder
  categories: SortOrder
  category: SortOrder
  code: SortOrder
  created_at: SortOrder
  customers: SortOrder
  customers_customersToworkspaces: SortOrder
  description: SortOrder
  id: SortOrder
  isPublic: SortOrder
  media: SortOrder
  name: SortOrder
  products: SortOrder
  products_productsToworkspaces: SortOrder
  projects: SortOrder
  projects_projectsToworkspaces: SortOrder
  shops: SortOrder
  shops_shopsToworkspaces: SortOrder
  tasks: SortOrder
  tasks_tasksToworkspaces: SortOrder
  users: SortOrder
  users_usersToworkspaces: SortOrder
}

enum WorkspacesScalarFieldEnum {
  author
  brands
  brands_brandsToworkspaces
  categories
  category
  code
  created_at
  customers
  customers_customersToworkspaces
  description
  id
  isPublic
  media
  name
  products
  products_productsToworkspaces
  projects
  projects_projectsToworkspaces
  shops
  shops_shopsToworkspaces
  tasks
  tasks_tasksToworkspaces
  users
  users_usersToworkspaces
}

input WorkspacesScalarWhereWithAggregatesInput {
  AND: [WorkspacesScalarWhereWithAggregatesInput!]
  NOT: [WorkspacesScalarWhereWithAggregatesInput!]
  OR: [WorkspacesScalarWhereWithAggregatesInput!]
  author: StringNullableWithAggregatesFilter
  brands: BigIntNullableWithAggregatesFilter
  brands_brandsToworkspaces: StringNullableWithAggregatesFilter
  categories: StringNullableWithAggregatesFilter
  category: IntNullableWithAggregatesFilter
  code: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  customers: IntNullableWithAggregatesFilter
  customers_customersToworkspaces: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  isPublic: BoolNullableWithAggregatesFilter
  media: StringNullableWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  products: BigIntNullableWithAggregatesFilter
  products_productsToworkspaces: StringNullableWithAggregatesFilter
  projects: BigIntNullableWithAggregatesFilter
  projects_projectsToworkspaces: StringNullableWithAggregatesFilter
  shops: IntNullableWithAggregatesFilter
  shops_shopsToworkspaces: StringNullableWithAggregatesFilter
  tasks: BigIntNullableWithAggregatesFilter
  tasks_tasksToworkspaces: StringNullableWithAggregatesFilter
  users: IntNullableWithAggregatesFilter
  users_usersToworkspaces: StringNullableWithAggregatesFilter
}

type WorkspacesSumAggregate {
  brands: BigInt
  category: Int
  customers: Int
  id: BigInt
  products: BigInt
  projects: BigInt
  shops: Int
  tasks: BigInt
  users: Int
}

input WorkspacesSumOrderByAggregateInput {
  brands: SortOrder
  category: SortOrder
  customers: SortOrder
  id: SortOrder
  products: SortOrder
  projects: SortOrder
  shops: SortOrder
  tasks: SortOrder
  users: SortOrder
}

input WorkspacesUpdateInput {
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsToworkspaces: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  category: NullableIntFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableIntFieldUpdateOperationsInput
  customers_customersToworkspaces: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableBoolFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_productsToworkspaces: NullableStringFieldUpdateOperationsInput
  projects: NullableBigIntFieldUpdateOperationsInput
  projects_projectsToworkspaces: NullableStringFieldUpdateOperationsInput
  shops: NullableIntFieldUpdateOperationsInput
  shops_shopsToworkspaces: NullableStringFieldUpdateOperationsInput
  tasks: NullableBigIntFieldUpdateOperationsInput
  tasks_tasksToworkspaces: NullableStringFieldUpdateOperationsInput
  users: NullableIntFieldUpdateOperationsInput
  users_usersToworkspaces: NullableStringFieldUpdateOperationsInput
}

input WorkspacesUpdateManyMutationInput {
  author: NullableStringFieldUpdateOperationsInput
  brands: NullableBigIntFieldUpdateOperationsInput
  brands_brandsToworkspaces: NullableStringFieldUpdateOperationsInput
  categories: NullableStringFieldUpdateOperationsInput
  category: NullableIntFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  customers: NullableIntFieldUpdateOperationsInput
  customers_customersToworkspaces: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  isPublic: NullableBoolFieldUpdateOperationsInput
  media: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  products: NullableBigIntFieldUpdateOperationsInput
  products_productsToworkspaces: NullableStringFieldUpdateOperationsInput
  projects: NullableBigIntFieldUpdateOperationsInput
  projects_projectsToworkspaces: NullableStringFieldUpdateOperationsInput
  shops: NullableIntFieldUpdateOperationsInput
  shops_shopsToworkspaces: NullableStringFieldUpdateOperationsInput
  tasks: NullableBigIntFieldUpdateOperationsInput
  tasks_tasksToworkspaces: NullableStringFieldUpdateOperationsInput
  users: NullableIntFieldUpdateOperationsInput
  users_usersToworkspaces: NullableStringFieldUpdateOperationsInput
}

input WorkspacesWhereInput {
  AND: [WorkspacesWhereInput!]
  NOT: [WorkspacesWhereInput!]
  OR: [WorkspacesWhereInput!]
  author: StringNullableFilter
  brands: BigIntNullableFilter
  brands_brandsToworkspaces: StringNullableFilter
  categories: StringNullableFilter
  category: IntNullableFilter
  code: StringNullableFilter
  created_at: DateTimeNullableFilter
  customers: IntNullableFilter
  customers_customersToworkspaces: StringNullableFilter
  description: StringNullableFilter
  id: BigIntFilter
  isPublic: BoolNullableFilter
  media: StringNullableFilter
  name: StringNullableFilter
  products: BigIntNullableFilter
  products_productsToworkspaces: StringNullableFilter
  projects: BigIntNullableFilter
  projects_projectsToworkspaces: StringNullableFilter
  shops: IntNullableFilter
  shops_shopsToworkspaces: StringNullableFilter
  tasks: BigIntNullableFilter
  tasks_tasksToworkspaces: StringNullableFilter
  users: IntNullableFilter
  users_usersToworkspaces: StringNullableFilter
}

input WorkspacesWhereUniqueInput {
  id: BigInt
}

type Zones {
  code: String
  country: String
  created_at: DateTime
  id: BigInt!
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesAvgAggregate {
  id: Float
}

input ZonesAvgOrderByAggregateInput {
  id: SortOrder
}

type ZonesCountAggregate {
  _all: Int!
  code: Int!
  country: Int!
  created_at: Int!
  id: Int!
  name: Int!
  scope: Int!
  type: Int!
  updated_at: Int!
}

input ZonesCountOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input ZonesCreateInput {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesCreateManyInput {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesGroupBy {
  _avg: ZonesAvgAggregate
  _count: ZonesCountAggregate
  _max: ZonesMaxAggregate
  _min: ZonesMinAggregate
  _sum: ZonesSumAggregate
  code: String
  country: String
  created_at: DateTime
  id: BigInt!
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

type ZonesMaxAggregate {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesMaxOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

type ZonesMinAggregate {
  code: String
  country: String
  created_at: DateTime
  id: BigInt
  name: String
  scope: String
  type: String
  updated_at: DateTime
}

input ZonesMinOrderByAggregateInput {
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum ZonesOrderByRelevanceFieldEnum {
  code
  country
  name
  scope
  type
}

input ZonesOrderByRelevanceInput {
  fields: [ZonesOrderByRelevanceFieldEnum!]!
  search: String!
  sort: SortOrder!
}

input ZonesOrderByWithAggregationInput {
  _avg: ZonesAvgOrderByAggregateInput
  _count: ZonesCountOrderByAggregateInput
  _max: ZonesMaxOrderByAggregateInput
  _min: ZonesMinOrderByAggregateInput
  _sum: ZonesSumOrderByAggregateInput
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

input ZonesOrderByWithRelationAndSearchRelevanceInput {
  _relevance: ZonesOrderByRelevanceInput
  code: SortOrder
  country: SortOrder
  created_at: SortOrder
  id: SortOrder
  name: SortOrder
  scope: SortOrder
  type: SortOrder
  updated_at: SortOrder
}

enum ZonesScalarFieldEnum {
  code
  country
  created_at
  id
  name
  scope
  type
  updated_at
}

input ZonesScalarWhereWithAggregatesInput {
  AND: [ZonesScalarWhereWithAggregatesInput!]
  NOT: [ZonesScalarWhereWithAggregatesInput!]
  OR: [ZonesScalarWhereWithAggregatesInput!]
  code: StringNullableWithAggregatesFilter
  country: StringNullableWithAggregatesFilter
  created_at: DateTimeNullableWithAggregatesFilter
  id: BigIntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  scope: StringNullableWithAggregatesFilter
  type: StringNullableWithAggregatesFilter
  updated_at: DateTimeNullableWithAggregatesFilter
}

type ZonesSumAggregate {
  id: BigInt
}

input ZonesSumOrderByAggregateInput {
  id: SortOrder
}

input ZonesUpdateInput {
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input ZonesUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  country: NullableStringFieldUpdateOperationsInput
  created_at: NullableDateTimeFieldUpdateOperationsInput
  id: BigIntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  type: NullableStringFieldUpdateOperationsInput
  updated_at: NullableDateTimeFieldUpdateOperationsInput
}

input ZonesWhereInput {
  AND: [ZonesWhereInput!]
  NOT: [ZonesWhereInput!]
  OR: [ZonesWhereInput!]
  code: StringNullableFilter
  country: StringNullableFilter
  created_at: DateTimeNullableFilter
  id: BigIntFilter
  name: StringNullableFilter
  scope: StringNullableFilter
  type: StringNullableFilter
  updated_at: DateTimeNullableFilter
}

input ZonesWhereUniqueInput {
  id: BigInt
}