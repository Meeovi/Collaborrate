/* eslint-disable */
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** The `BigInt` scalar type represents non-fractional signed whole numeric values. */
  BigInt: any;
  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */
  DateTime: any;
  /** GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library. */
  Decimal: any;
  /** The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf). */
  JSON: any;
};

export type Accounts = {
  __typename?: 'Accounts';
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  annual_revenue?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  industry?: Maybe<Scalars['String']>;
  member_of?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type AccountsAvgAggregate = {
  __typename?: 'AccountsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type AccountsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AccountsCountAggregate = {
  __typename?: 'AccountsCountAggregate';
  _all: Scalars['Int'];
  address: Scalars['Int'];
  alt_address: Scalars['Int'];
  alt_city: Scalars['Int'];
  alt_country: Scalars['Int'];
  alt_postalcode: Scalars['Int'];
  alt_state: Scalars['Int'];
  annual_revenue: Scalars['Int'];
  assigned_to: Scalars['Int'];
  campaign: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  email: Scalars['Int'];
  employees: Scalars['Int'];
  fax: Scalars['Int'];
  id: Scalars['Int'];
  industry: Scalars['Int'];
  member_of: Scalars['Int'];
  name: Scalars['Int'];
  office_phone: Scalars['Int'];
  postalcode: Scalars['Int'];
  state: Scalars['Int'];
  type: Scalars['Int'];
  website: Scalars['Int'];
};

export type AccountsCountOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  annual_revenue?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  employees?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  industry?: InputMaybe<SortOrder>;
  member_of?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type AccountsCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  annual_revenue?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  employees?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  industry?: InputMaybe<Scalars['String']>;
  member_of?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type AccountsCreateManyInput = {
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  annual_revenue?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  employees?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  industry?: InputMaybe<Scalars['String']>;
  member_of?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type AccountsGroupBy = {
  __typename?: 'AccountsGroupBy';
  _avg?: Maybe<AccountsAvgAggregate>;
  _count?: Maybe<AccountsCountAggregate>;
  _max?: Maybe<AccountsMaxAggregate>;
  _min?: Maybe<AccountsMinAggregate>;
  _sum?: Maybe<AccountsSumAggregate>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  annual_revenue?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  industry?: Maybe<Scalars['String']>;
  member_of?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type AccountsMaxAggregate = {
  __typename?: 'AccountsMaxAggregate';
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  annual_revenue?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  industry?: Maybe<Scalars['String']>;
  member_of?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type AccountsMaxOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  annual_revenue?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  employees?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  industry?: InputMaybe<SortOrder>;
  member_of?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type AccountsMinAggregate = {
  __typename?: 'AccountsMinAggregate';
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  annual_revenue?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  employees?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  industry?: Maybe<Scalars['String']>;
  member_of?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type AccountsMinOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  annual_revenue?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  employees?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  industry?: InputMaybe<SortOrder>;
  member_of?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum AccountsOrderByRelevanceFieldEnum {
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  AnnualRevenue = 'annual_revenue',
  AssignedTo = 'assigned_to',
  Campaign = 'campaign',
  City = 'city',
  Country = 'country',
  Email = 'email',
  Employees = 'employees',
  Fax = 'fax',
  Industry = 'industry',
  MemberOf = 'member_of',
  Name = 'name',
  OfficePhone = 'office_phone',
  Postalcode = 'postalcode',
  State = 'state',
  Type = 'type',
  Website = 'website'
}

export type AccountsOrderByRelevanceInput = {
  fields: Array<AccountsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type AccountsOrderByWithAggregationInput = {
  _avg?: InputMaybe<AccountsAvgOrderByAggregateInput>;
  _count?: InputMaybe<AccountsCountOrderByAggregateInput>;
  _max?: InputMaybe<AccountsMaxOrderByAggregateInput>;
  _min?: InputMaybe<AccountsMinOrderByAggregateInput>;
  _sum?: InputMaybe<AccountsSumOrderByAggregateInput>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  annual_revenue?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  employees?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  industry?: InputMaybe<SortOrder>;
  member_of?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type AccountsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<AccountsOrderByRelevanceInput>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  annual_revenue?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  employees?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  industry?: InputMaybe<SortOrder>;
  member_of?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum AccountsScalarFieldEnum {
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  AnnualRevenue = 'annual_revenue',
  AssignedTo = 'assigned_to',
  Campaign = 'campaign',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  Email = 'email',
  Employees = 'employees',
  Fax = 'fax',
  Id = 'id',
  Industry = 'industry',
  MemberOf = 'member_of',
  Name = 'name',
  OfficePhone = 'office_phone',
  Postalcode = 'postalcode',
  State = 'state',
  Type = 'type',
  Website = 'website'
}

export type AccountsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AccountsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AccountsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AccountsScalarWhereWithAggregatesInput>>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_city?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  annual_revenue?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  campaign?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  employees?: InputMaybe<StringNullableWithAggregatesFilter>;
  fax?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  industry?: InputMaybe<StringNullableWithAggregatesFilter>;
  member_of?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  office_phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AccountsSumAggregate = {
  __typename?: 'AccountsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type AccountsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AccountsUpdateInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  annual_revenue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  employees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  industry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  member_of?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AccountsUpdateManyMutationInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  annual_revenue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  employees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  industry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  member_of?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AccountsWhereInput = {
  AND?: InputMaybe<Array<AccountsWhereInput>>;
  NOT?: InputMaybe<Array<AccountsWhereInput>>;
  OR?: InputMaybe<Array<AccountsWhereInput>>;
  address?: InputMaybe<StringNullableFilter>;
  alt_address?: InputMaybe<StringNullableFilter>;
  alt_city?: InputMaybe<StringNullableFilter>;
  alt_country?: InputMaybe<StringNullableFilter>;
  alt_postalcode?: InputMaybe<StringNullableFilter>;
  alt_state?: InputMaybe<StringNullableFilter>;
  annual_revenue?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  campaign?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  employees?: InputMaybe<StringNullableFilter>;
  fax?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  industry?: InputMaybe<StringNullableFilter>;
  member_of?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  office_phone?: InputMaybe<StringNullableFilter>;
  postalcode?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type AccountsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type AffectedRowsOutput = {
  __typename?: 'AffectedRowsOutput';
  count: Scalars['Int'];
};

export type AggregateAccounts = {
  __typename?: 'AggregateAccounts';
  _avg?: Maybe<AccountsAvgAggregate>;
  _count?: Maybe<AccountsCountAggregate>;
  _max?: Maybe<AccountsMaxAggregate>;
  _min?: Maybe<AccountsMinAggregate>;
  _sum?: Maybe<AccountsSumAggregate>;
};

export type AggregateAgreements = {
  __typename?: 'AggregateAgreements';
  _avg?: Maybe<AgreementsAvgAggregate>;
  _count?: Maybe<AgreementsCountAggregate>;
  _max?: Maybe<AgreementsMaxAggregate>;
  _min?: Maybe<AgreementsMinAggregate>;
  _sum?: Maybe<AgreementsSumAggregate>;
};

export type AggregateAnalytics = {
  __typename?: 'AggregateAnalytics';
  _avg?: Maybe<AnalyticsAvgAggregate>;
  _count?: Maybe<AnalyticsCountAggregate>;
  _max?: Maybe<AnalyticsMaxAggregate>;
  _min?: Maybe<AnalyticsMinAggregate>;
  _sum?: Maybe<AnalyticsSumAggregate>;
};

export type AggregateApitoken = {
  __typename?: 'AggregateApitoken';
  _avg?: Maybe<ApitokenAvgAggregate>;
  _count?: Maybe<ApitokenCountAggregate>;
  _max?: Maybe<ApitokenMaxAggregate>;
  _min?: Maybe<ApitokenMinAggregate>;
  _sum?: Maybe<ApitokenSumAggregate>;
};

export type AggregateArticles = {
  __typename?: 'AggregateArticles';
  _avg?: Maybe<ArticlesAvgAggregate>;
  _count?: Maybe<ArticlesCountAggregate>;
  _max?: Maybe<ArticlesMaxAggregate>;
  _min?: Maybe<ArticlesMinAggregate>;
  _sum?: Maybe<ArticlesSumAggregate>;
};

export type AggregateAttributes = {
  __typename?: 'AggregateAttributes';
  _avg?: Maybe<AttributesAvgAggregate>;
  _count?: Maybe<AttributesCountAggregate>;
  _max?: Maybe<AttributesMaxAggregate>;
  _min?: Maybe<AttributesMinAggregate>;
  _sum?: Maybe<AttributesSumAggregate>;
};

export type AggregateBrands = {
  __typename?: 'AggregateBrands';
  _avg?: Maybe<BrandsAvgAggregate>;
  _count?: Maybe<BrandsCountAggregate>;
  _max?: Maybe<BrandsMaxAggregate>;
  _min?: Maybe<BrandsMinAggregate>;
  _sum?: Maybe<BrandsSumAggregate>;
};

export type AggregateCart_Price_Rules = {
  __typename?: 'AggregateCart_price_rules';
  _avg?: Maybe<Cart_Price_RulesAvgAggregate>;
  _count?: Maybe<Cart_Price_RulesCountAggregate>;
  _max?: Maybe<Cart_Price_RulesMaxAggregate>;
  _min?: Maybe<Cart_Price_RulesMinAggregate>;
  _sum?: Maybe<Cart_Price_RulesSumAggregate>;
};

export type AggregateCases = {
  __typename?: 'AggregateCases';
  _avg?: Maybe<CasesAvgAggregate>;
  _count?: Maybe<CasesCountAggregate>;
  _max?: Maybe<CasesMaxAggregate>;
  _min?: Maybe<CasesMinAggregate>;
  _sum?: Maybe<CasesSumAggregate>;
};

export type AggregateCatalog_Price_Rule = {
  __typename?: 'AggregateCatalog_price_rule';
  _avg?: Maybe<Catalog_Price_RuleAvgAggregate>;
  _count?: Maybe<Catalog_Price_RuleCountAggregate>;
  _max?: Maybe<Catalog_Price_RuleMaxAggregate>;
  _min?: Maybe<Catalog_Price_RuleMinAggregate>;
  _sum?: Maybe<Catalog_Price_RuleSumAggregate>;
};

export type AggregateCategories = {
  __typename?: 'AggregateCategories';
  _avg?: Maybe<CategoriesAvgAggregate>;
  _count?: Maybe<CategoriesCountAggregate>;
  _max?: Maybe<CategoriesMaxAggregate>;
  _min?: Maybe<CategoriesMinAggregate>;
  _sum?: Maybe<CategoriesSumAggregate>;
};

export type AggregateChannels = {
  __typename?: 'AggregateChannels';
  _avg?: Maybe<ChannelsAvgAggregate>;
  _count?: Maybe<ChannelsCountAggregate>;
  _max?: Maybe<ChannelsMaxAggregate>;
  _min?: Maybe<ChannelsMinAggregate>;
  _sum?: Maybe<ChannelsSumAggregate>;
};

export type AggregateChecklist = {
  __typename?: 'AggregateChecklist';
  _avg?: Maybe<ChecklistAvgAggregate>;
  _count?: Maybe<ChecklistCountAggregate>;
  _max?: Maybe<ChecklistMaxAggregate>;
  _min?: Maybe<ChecklistMinAggregate>;
  _sum?: Maybe<ChecklistSumAggregate>;
};

export type AggregateCities = {
  __typename?: 'AggregateCities';
  _avg?: Maybe<CitiesAvgAggregate>;
  _count?: Maybe<CitiesCountAggregate>;
  _max?: Maybe<CitiesMaxAggregate>;
  _min?: Maybe<CitiesMinAggregate>;
  _sum?: Maybe<CitiesSumAggregate>;
};

export type AggregateCollections = {
  __typename?: 'AggregateCollections';
  _avg?: Maybe<CollectionsAvgAggregate>;
  _count?: Maybe<CollectionsCountAggregate>;
  _max?: Maybe<CollectionsMaxAggregate>;
  _min?: Maybe<CollectionsMinAggregate>;
  _sum?: Maybe<CollectionsSumAggregate>;
};

export type AggregateComments = {
  __typename?: 'AggregateComments';
  _avg?: Maybe<CommentsAvgAggregate>;
  _count?: Maybe<CommentsCountAggregate>;
  _max?: Maybe<CommentsMaxAggregate>;
  _min?: Maybe<CommentsMinAggregate>;
  _sum?: Maybe<CommentsSumAggregate>;
};

export type AggregateContent_Type = {
  __typename?: 'AggregateContent_type';
  _avg?: Maybe<Content_TypeAvgAggregate>;
  _count?: Maybe<Content_TypeCountAggregate>;
  _max?: Maybe<Content_TypeMaxAggregate>;
  _min?: Maybe<Content_TypeMinAggregate>;
  _sum?: Maybe<Content_TypeSumAggregate>;
};

export type AggregateContracts = {
  __typename?: 'AggregateContracts';
  _avg?: Maybe<ContractsAvgAggregate>;
  _count?: Maybe<ContractsCountAggregate>;
  _max?: Maybe<ContractsMaxAggregate>;
  _min?: Maybe<ContractsMinAggregate>;
  _sum?: Maybe<ContractsSumAggregate>;
};

export type AggregateCountries = {
  __typename?: 'AggregateCountries';
  _avg?: Maybe<CountriesAvgAggregate>;
  _count?: Maybe<CountriesCountAggregate>;
  _max?: Maybe<CountriesMaxAggregate>;
  _min?: Maybe<CountriesMinAggregate>;
  _sum?: Maybe<CountriesSumAggregate>;
};

export type AggregateCoupons = {
  __typename?: 'AggregateCoupons';
  _avg?: Maybe<CouponsAvgAggregate>;
  _count?: Maybe<CouponsCountAggregate>;
  _max?: Maybe<CouponsMaxAggregate>;
  _min?: Maybe<CouponsMinAggregate>;
  _sum?: Maybe<CouponsSumAggregate>;
};

export type AggregateCredit_Memos = {
  __typename?: 'AggregateCredit_memos';
  _avg?: Maybe<Credit_MemosAvgAggregate>;
  _count?: Maybe<Credit_MemosCountAggregate>;
  _max?: Maybe<Credit_MemosMaxAggregate>;
  _min?: Maybe<Credit_MemosMinAggregate>;
  _sum?: Maybe<Credit_MemosSumAggregate>;
};

export type AggregateCurrencies = {
  __typename?: 'AggregateCurrencies';
  _avg?: Maybe<CurrenciesAvgAggregate>;
  _count?: Maybe<CurrenciesCountAggregate>;
  _max?: Maybe<CurrenciesMaxAggregate>;
  _min?: Maybe<CurrenciesMinAggregate>;
  _sum?: Maybe<CurrenciesSumAggregate>;
};

export type AggregateCurrency_Rates = {
  __typename?: 'AggregateCurrency_rates';
  _avg?: Maybe<Currency_RatesAvgAggregate>;
  _count?: Maybe<Currency_RatesCountAggregate>;
  _max?: Maybe<Currency_RatesMaxAggregate>;
  _min?: Maybe<Currency_RatesMinAggregate>;
  _sum?: Maybe<Currency_RatesSumAggregate>;
};

export type AggregateCurrency_Symbols = {
  __typename?: 'AggregateCurrency_symbols';
  _avg?: Maybe<Currency_SymbolsAvgAggregate>;
  _count?: Maybe<Currency_SymbolsCountAggregate>;
  _max?: Maybe<Currency_SymbolsMaxAggregate>;
  _min?: Maybe<Currency_SymbolsMinAggregate>;
  _sum?: Maybe<Currency_SymbolsSumAggregate>;
};

export type AggregateCustomer_Group = {
  __typename?: 'AggregateCustomer_group';
  _avg?: Maybe<Customer_GroupAvgAggregate>;
  _count?: Maybe<Customer_GroupCountAggregate>;
  _max?: Maybe<Customer_GroupMaxAggregate>;
  _min?: Maybe<Customer_GroupMinAggregate>;
  _sum?: Maybe<Customer_GroupSumAggregate>;
};

export type AggregateCustomers = {
  __typename?: 'AggregateCustomers';
  _avg?: Maybe<CustomersAvgAggregate>;
  _count?: Maybe<CustomersCountAggregate>;
  _max?: Maybe<CustomersMaxAggregate>;
  _min?: Maybe<CustomersMinAggregate>;
  _sum?: Maybe<CustomersSumAggregate>;
};

export type AggregateCustomizations = {
  __typename?: 'AggregateCustomizations';
  _avg?: Maybe<CustomizationsAvgAggregate>;
  _count?: Maybe<CustomizationsCountAggregate>;
  _max?: Maybe<CustomizationsMaxAggregate>;
  _min?: Maybe<CustomizationsMinAggregate>;
  _sum?: Maybe<CustomizationsSumAggregate>;
};

export type AggregateDashboards = {
  __typename?: 'AggregateDashboards';
  _avg?: Maybe<DashboardsAvgAggregate>;
  _count?: Maybe<DashboardsCountAggregate>;
  _max?: Maybe<DashboardsMaxAggregate>;
  _min?: Maybe<DashboardsMinAggregate>;
  _sum?: Maybe<DashboardsSumAggregate>;
};

export type AggregateDeepdive = {
  __typename?: 'AggregateDeepdive';
  _avg?: Maybe<DeepdiveAvgAggregate>;
  _count?: Maybe<DeepdiveCountAggregate>;
  _max?: Maybe<DeepdiveMaxAggregate>;
  _min?: Maybe<DeepdiveMinAggregate>;
  _sum?: Maybe<DeepdiveSumAggregate>;
};

export type AggregateDigiboard = {
  __typename?: 'AggregateDigiboard';
  _avg?: Maybe<DigiboardAvgAggregate>;
  _count?: Maybe<DigiboardCountAggregate>;
  _max?: Maybe<DigiboardMaxAggregate>;
  _min?: Maybe<DigiboardMinAggregate>;
  _sum?: Maybe<DigiboardSumAggregate>;
};

export type AggregateEmails = {
  __typename?: 'AggregateEmails';
  _avg?: Maybe<EmailsAvgAggregate>;
  _count?: Maybe<EmailsCountAggregate>;
  _max?: Maybe<EmailsMaxAggregate>;
  _min?: Maybe<EmailsMinAggregate>;
  _sum?: Maybe<EmailsSumAggregate>;
};

export type AggregateEndofshift = {
  __typename?: 'AggregateEndofshift';
  _avg?: Maybe<EndofshiftAvgAggregate>;
  _count?: Maybe<EndofshiftCountAggregate>;
  _max?: Maybe<EndofshiftMaxAggregate>;
  _min?: Maybe<EndofshiftMinAggregate>;
  _sum?: Maybe<EndofshiftSumAggregate>;
};

export type AggregateEvents = {
  __typename?: 'AggregateEvents';
  _avg?: Maybe<EventsAvgAggregate>;
  _count?: Maybe<EventsCountAggregate>;
  _max?: Maybe<EventsMaxAggregate>;
  _min?: Maybe<EventsMinAggregate>;
  _sum?: Maybe<EventsSumAggregate>;
};

export type AggregateFullfillments = {
  __typename?: 'AggregateFullfillments';
  _avg?: Maybe<FullfillmentsAvgAggregate>;
  _count?: Maybe<FullfillmentsCountAggregate>;
  _max?: Maybe<FullfillmentsMaxAggregate>;
  _min?: Maybe<FullfillmentsMinAggregate>;
  _sum?: Maybe<FullfillmentsSumAggregate>;
};

export type AggregateGift_Certificates = {
  __typename?: 'AggregateGift_certificates';
  _avg?: Maybe<Gift_CertificatesAvgAggregate>;
  _count?: Maybe<Gift_CertificatesCountAggregate>;
  _max?: Maybe<Gift_CertificatesMaxAggregate>;
  _min?: Maybe<Gift_CertificatesMinAggregate>;
  _sum?: Maybe<Gift_CertificatesSumAggregate>;
};

export type AggregateGlossary = {
  __typename?: 'AggregateGlossary';
  _avg?: Maybe<GlossaryAvgAggregate>;
  _count?: Maybe<GlossaryCountAggregate>;
  _max?: Maybe<GlossaryMaxAggregate>;
  _min?: Maybe<GlossaryMinAggregate>;
  _sum?: Maybe<GlossarySumAggregate>;
};

export type AggregateImportm = {
  __typename?: 'AggregateImportm';
  _avg?: Maybe<ImportmAvgAggregate>;
  _count?: Maybe<ImportmCountAggregate>;
  _max?: Maybe<ImportmMaxAggregate>;
  _min?: Maybe<ImportmMinAggregate>;
  _sum?: Maybe<ImportmSumAggregate>;
};

export type AggregateIntegrations = {
  __typename?: 'AggregateIntegrations';
  _avg?: Maybe<IntegrationsAvgAggregate>;
  _count?: Maybe<IntegrationsCountAggregate>;
  _max?: Maybe<IntegrationsMaxAggregate>;
  _min?: Maybe<IntegrationsMinAggregate>;
  _sum?: Maybe<IntegrationsSumAggregate>;
};

export type AggregateInternalization = {
  __typename?: 'AggregateInternalization';
  _avg?: Maybe<InternalizationAvgAggregate>;
  _count?: Maybe<InternalizationCountAggregate>;
  _max?: Maybe<InternalizationMaxAggregate>;
  _min?: Maybe<InternalizationMinAggregate>;
  _sum?: Maybe<InternalizationSumAggregate>;
};

export type AggregateInvitations = {
  __typename?: 'AggregateInvitations';
  _avg?: Maybe<InvitationsAvgAggregate>;
  _count?: Maybe<InvitationsCountAggregate>;
  _max?: Maybe<InvitationsMaxAggregate>;
  _min?: Maybe<InvitationsMinAggregate>;
  _sum?: Maybe<InvitationsSumAggregate>;
};

export type AggregateInvoices = {
  __typename?: 'AggregateInvoices';
  _avg?: Maybe<InvoicesAvgAggregate>;
  _count?: Maybe<InvoicesCountAggregate>;
  _max?: Maybe<InvoicesMaxAggregate>;
  _min?: Maybe<InvoicesMinAggregate>;
  _sum?: Maybe<InvoicesSumAggregate>;
};

export type AggregateLeads = {
  __typename?: 'AggregateLeads';
  _avg?: Maybe<LeadsAvgAggregate>;
  _count?: Maybe<LeadsCountAggregate>;
  _max?: Maybe<LeadsMaxAggregate>;
  _min?: Maybe<LeadsMinAggregate>;
  _sum?: Maybe<LeadsSumAggregate>;
};

export type AggregateLogIn = {
  __typename?: 'AggregateLogIn';
  _avg?: Maybe<LogInAvgAggregate>;
  _count?: Maybe<LogInCountAggregate>;
  _max?: Maybe<LogInMaxAggregate>;
  _min?: Maybe<LogInMinAggregate>;
  _sum?: Maybe<LogInSumAggregate>;
};

export type AggregateManufacturer = {
  __typename?: 'AggregateManufacturer';
  _avg?: Maybe<ManufacturerAvgAggregate>;
  _count?: Maybe<ManufacturerCountAggregate>;
  _max?: Maybe<ManufacturerMaxAggregate>;
  _min?: Maybe<ManufacturerMinAggregate>;
  _sum?: Maybe<ManufacturerSumAggregate>;
};

export type AggregateMediamanager = {
  __typename?: 'AggregateMediamanager';
  _avg?: Maybe<MediamanagerAvgAggregate>;
  _count?: Maybe<MediamanagerCountAggregate>;
  _max?: Maybe<MediamanagerMaxAggregate>;
  _min?: Maybe<MediamanagerMinAggregate>;
  _sum?: Maybe<MediamanagerSumAggregate>;
};

export type AggregateMeeting = {
  __typename?: 'AggregateMeeting';
  _avg?: Maybe<MeetingAvgAggregate>;
  _count?: Maybe<MeetingCountAggregate>;
  _max?: Maybe<MeetingMaxAggregate>;
  _min?: Maybe<MeetingMinAggregate>;
  _sum?: Maybe<MeetingSumAggregate>;
};

export type AggregateMessages = {
  __typename?: 'AggregateMessages';
  _avg?: Maybe<MessagesAvgAggregate>;
  _count?: Maybe<MessagesCountAggregate>;
  _max?: Maybe<MessagesMaxAggregate>;
  _min?: Maybe<MessagesMinAggregate>;
  _sum?: Maybe<MessagesSumAggregate>;
};

export type AggregateNewsletters = {
  __typename?: 'AggregateNewsletters';
  _avg?: Maybe<NewslettersAvgAggregate>;
  _count?: Maybe<NewslettersCountAggregate>;
  _max?: Maybe<NewslettersMaxAggregate>;
  _min?: Maybe<NewslettersMinAggregate>;
  _sum?: Maybe<NewslettersSumAggregate>;
};

export type AggregateOoto = {
  __typename?: 'AggregateOoto';
  _avg?: Maybe<OotoAvgAggregate>;
  _count?: Maybe<OotoCountAggregate>;
  _max?: Maybe<OotoMaxAggregate>;
  _min?: Maybe<OotoMinAggregate>;
  _sum?: Maybe<OotoSumAggregate>;
};

export type AggregateOpportunities = {
  __typename?: 'AggregateOpportunities';
  _avg?: Maybe<OpportunitiesAvgAggregate>;
  _count?: Maybe<OpportunitiesCountAggregate>;
  _max?: Maybe<OpportunitiesMaxAggregate>;
  _min?: Maybe<OpportunitiesMinAggregate>;
  _sum?: Maybe<OpportunitiesSumAggregate>;
};

export type AggregateOrders = {
  __typename?: 'AggregateOrders';
  _avg?: Maybe<OrdersAvgAggregate>;
  _count?: Maybe<OrdersCountAggregate>;
  _max?: Maybe<OrdersMaxAggregate>;
  _min?: Maybe<OrdersMinAggregate>;
  _sum?: Maybe<OrdersSumAggregate>;
};

export type AggregatePages = {
  __typename?: 'AggregatePages';
  _avg?: Maybe<PagesAvgAggregate>;
  _count?: Maybe<PagesCountAggregate>;
  _max?: Maybe<PagesMaxAggregate>;
  _min?: Maybe<PagesMinAggregate>;
  _sum?: Maybe<PagesSumAggregate>;
};

export type AggregatePartners = {
  __typename?: 'AggregatePartners';
  _avg?: Maybe<PartnersAvgAggregate>;
  _count?: Maybe<PartnersCountAggregate>;
  _max?: Maybe<PartnersMaxAggregate>;
  _min?: Maybe<PartnersMinAggregate>;
  _sum?: Maybe<PartnersSumAggregate>;
};

export type AggregatePayments = {
  __typename?: 'AggregatePayments';
  _avg?: Maybe<PaymentsAvgAggregate>;
  _count?: Maybe<PaymentsCountAggregate>;
  _max?: Maybe<PaymentsMaxAggregate>;
  _min?: Maybe<PaymentsMinAggregate>;
  _sum?: Maybe<PaymentsSumAggregate>;
};

export type AggregatePermissions = {
  __typename?: 'AggregatePermissions';
  _avg?: Maybe<PermissionsAvgAggregate>;
  _count?: Maybe<PermissionsCountAggregate>;
  _max?: Maybe<PermissionsMaxAggregate>;
  _min?: Maybe<PermissionsMinAggregate>;
  _sum?: Maybe<PermissionsSumAggregate>;
};

export type AggregatePlugins = {
  __typename?: 'AggregatePlugins';
  _avg?: Maybe<PluginsAvgAggregate>;
  _count?: Maybe<PluginsCountAggregate>;
  _max?: Maybe<PluginsMaxAggregate>;
  _min?: Maybe<PluginsMinAggregate>;
  _sum?: Maybe<PluginsSumAggregate>;
};

export type AggregatePolls = {
  __typename?: 'AggregatePolls';
  _avg?: Maybe<PollsAvgAggregate>;
  _count?: Maybe<PollsCountAggregate>;
  _max?: Maybe<PollsMaxAggregate>;
  _min?: Maybe<PollsMinAggregate>;
  _sum?: Maybe<PollsSumAggregate>;
};

export type AggregateProduct_Types = {
  __typename?: 'AggregateProduct_types';
  _avg?: Maybe<Product_TypesAvgAggregate>;
  _count?: Maybe<Product_TypesCountAggregate>;
  _max?: Maybe<Product_TypesMaxAggregate>;
  _min?: Maybe<Product_TypesMinAggregate>;
  _sum?: Maybe<Product_TypesSumAggregate>;
};

export type AggregateProducts = {
  __typename?: 'AggregateProducts';
  _avg?: Maybe<ProductsAvgAggregate>;
  _count?: Maybe<ProductsCountAggregate>;
  _max?: Maybe<ProductsMaxAggregate>;
  _min?: Maybe<ProductsMinAggregate>;
  _sum?: Maybe<ProductsSumAggregate>;
};

export type AggregateProjects = {
  __typename?: 'AggregateProjects';
  _avg?: Maybe<ProjectsAvgAggregate>;
  _count?: Maybe<ProjectsCountAggregate>;
  _max?: Maybe<ProjectsMaxAggregate>;
  _min?: Maybe<ProjectsMinAggregate>;
  _sum?: Maybe<ProjectsSumAggregate>;
};

export type AggregateProviders = {
  __typename?: 'AggregateProviders';
  _avg?: Maybe<ProvidersAvgAggregate>;
  _count?: Maybe<ProvidersCountAggregate>;
  _max?: Maybe<ProvidersMaxAggregate>;
  _min?: Maybe<ProvidersMinAggregate>;
  _sum?: Maybe<ProvidersSumAggregate>;
};

export type AggregateQuotes = {
  __typename?: 'AggregateQuotes';
  _avg?: Maybe<QuotesAvgAggregate>;
  _count?: Maybe<QuotesCountAggregate>;
  _max?: Maybe<QuotesMaxAggregate>;
  _min?: Maybe<QuotesMinAggregate>;
  _sum?: Maybe<QuotesSumAggregate>;
};

export type AggregateRating = {
  __typename?: 'AggregateRating';
  _avg?: Maybe<RatingAvgAggregate>;
  _count?: Maybe<RatingCountAggregate>;
  _max?: Maybe<RatingMaxAggregate>;
  _min?: Maybe<RatingMinAggregate>;
  _sum?: Maybe<RatingSumAggregate>;
};

export type AggregateReports = {
  __typename?: 'AggregateReports';
  _avg?: Maybe<ReportsAvgAggregate>;
  _count?: Maybe<ReportsCountAggregate>;
  _max?: Maybe<ReportsMaxAggregate>;
  _min?: Maybe<ReportsMinAggregate>;
  _sum?: Maybe<ReportsSumAggregate>;
};

export type AggregateReturns = {
  __typename?: 'AggregateReturns';
  _avg?: Maybe<ReturnsAvgAggregate>;
  _count?: Maybe<ReturnsCountAggregate>;
  _max?: Maybe<ReturnsMaxAggregate>;
  _min?: Maybe<ReturnsMinAggregate>;
  _sum?: Maybe<ReturnsSumAggregate>;
};

export type AggregateReviews = {
  __typename?: 'AggregateReviews';
  _avg?: Maybe<ReviewsAvgAggregate>;
  _count?: Maybe<ReviewsCountAggregate>;
  _max?: Maybe<ReviewsMaxAggregate>;
  _min?: Maybe<ReviewsMinAggregate>;
  _sum?: Maybe<ReviewsSumAggregate>;
};

export type AggregateRewards = {
  __typename?: 'AggregateRewards';
  _avg?: Maybe<RewardsAvgAggregate>;
  _count?: Maybe<RewardsCountAggregate>;
  _max?: Maybe<RewardsMaxAggregate>;
  _min?: Maybe<RewardsMinAggregate>;
  _sum?: Maybe<RewardsSumAggregate>;
};

export type AggregateRoles = {
  __typename?: 'AggregateRoles';
  _avg?: Maybe<RolesAvgAggregate>;
  _count?: Maybe<RolesCountAggregate>;
  _max?: Maybe<RolesMaxAggregate>;
  _min?: Maybe<RolesMinAggregate>;
  _sum?: Maybe<RolesSumAggregate>;
};

export type AggregateScheduler = {
  __typename?: 'AggregateScheduler';
  _avg?: Maybe<SchedulerAvgAggregate>;
  _count?: Maybe<SchedulerCountAggregate>;
  _max?: Maybe<SchedulerMaxAggregate>;
  _min?: Maybe<SchedulerMinAggregate>;
  _sum?: Maybe<SchedulerSumAggregate>;
};

export type AggregateSegments = {
  __typename?: 'AggregateSegments';
  _avg?: Maybe<SegmentsAvgAggregate>;
  _count?: Maybe<SegmentsCountAggregate>;
  _max?: Maybe<SegmentsMaxAggregate>;
  _min?: Maybe<SegmentsMinAggregate>;
  _sum?: Maybe<SegmentsSumAggregate>;
};

export type AggregateSettings = {
  __typename?: 'AggregateSettings';
  _avg?: Maybe<SettingsAvgAggregate>;
  _count?: Maybe<SettingsCountAggregate>;
  _max?: Maybe<SettingsMaxAggregate>;
  _min?: Maybe<SettingsMinAggregate>;
  _sum?: Maybe<SettingsSumAggregate>;
};

export type AggregateShipments = {
  __typename?: 'AggregateShipments';
  _avg?: Maybe<ShipmentsAvgAggregate>;
  _count?: Maybe<ShipmentsCountAggregate>;
  _max?: Maybe<ShipmentsMaxAggregate>;
  _min?: Maybe<ShipmentsMinAggregate>;
  _sum?: Maybe<ShipmentsSumAggregate>;
};

export type AggregateSpecial_Discounts = {
  __typename?: 'AggregateSpecial_discounts';
  _avg?: Maybe<Special_DiscountsAvgAggregate>;
  _count?: Maybe<Special_DiscountsCountAggregate>;
  _max?: Maybe<Special_DiscountsMaxAggregate>;
  _min?: Maybe<Special_DiscountsMinAggregate>;
  _sum?: Maybe<Special_DiscountsSumAggregate>;
};

export type AggregateStates = {
  __typename?: 'AggregateStates';
  _avg?: Maybe<StatesAvgAggregate>;
  _count?: Maybe<StatesCountAggregate>;
  _max?: Maybe<StatesMaxAggregate>;
  _min?: Maybe<StatesMinAggregate>;
  _sum?: Maybe<StatesSumAggregate>;
};

export type AggregateStatistics = {
  __typename?: 'AggregateStatistics';
  _avg?: Maybe<StatisticsAvgAggregate>;
  _count?: Maybe<StatisticsCountAggregate>;
  _max?: Maybe<StatisticsMaxAggregate>;
  _min?: Maybe<StatisticsMinAggregate>;
  _sum?: Maybe<StatisticsSumAggregate>;
};

export type AggregateStocks = {
  __typename?: 'AggregateStocks';
  _avg?: Maybe<StocksAvgAggregate>;
  _count?: Maybe<StocksCountAggregate>;
  _max?: Maybe<StocksMaxAggregate>;
  _min?: Maybe<StocksMinAggregate>;
  _sum?: Maybe<StocksSumAggregate>;
};

export type AggregateTags = {
  __typename?: 'AggregateTags';
  _avg?: Maybe<TagsAvgAggregate>;
  _count?: Maybe<TagsCountAggregate>;
  _max?: Maybe<TagsMaxAggregate>;
  _min?: Maybe<TagsMinAggregate>;
  _sum?: Maybe<TagsSumAggregate>;
};

export type AggregateTargets = {
  __typename?: 'AggregateTargets';
  _avg?: Maybe<TargetsAvgAggregate>;
  _count?: Maybe<TargetsCountAggregate>;
  _max?: Maybe<TargetsMaxAggregate>;
  _min?: Maybe<TargetsMinAggregate>;
  _sum?: Maybe<TargetsSumAggregate>;
};

export type AggregateTax_Category = {
  __typename?: 'AggregateTax_category';
  _avg?: Maybe<Tax_CategoryAvgAggregate>;
  _count?: Maybe<Tax_CategoryCountAggregate>;
  _max?: Maybe<Tax_CategoryMaxAggregate>;
  _min?: Maybe<Tax_CategoryMinAggregate>;
  _sum?: Maybe<Tax_CategorySumAggregate>;
};

export type AggregateTax_Rate = {
  __typename?: 'AggregateTax_rate';
  _avg?: Maybe<Tax_RateAvgAggregate>;
  _count?: Maybe<Tax_RateCountAggregate>;
  _max?: Maybe<Tax_RateMaxAggregate>;
  _min?: Maybe<Tax_RateMinAggregate>;
  _sum?: Maybe<Tax_RateSumAggregate>;
};

export type AggregateTax_Rule = {
  __typename?: 'AggregateTax_rule';
  _avg?: Maybe<Tax_RuleAvgAggregate>;
  _count?: Maybe<Tax_RuleCountAggregate>;
  _max?: Maybe<Tax_RuleMaxAggregate>;
  _min?: Maybe<Tax_RuleMinAggregate>;
  _sum?: Maybe<Tax_RuleSumAggregate>;
};

export type AggregateTemplates = {
  __typename?: 'AggregateTemplates';
  _avg?: Maybe<TemplatesAvgAggregate>;
  _count?: Maybe<TemplatesCountAggregate>;
  _max?: Maybe<TemplatesMaxAggregate>;
  _min?: Maybe<TemplatesMinAggregate>;
  _sum?: Maybe<TemplatesSumAggregate>;
};

export type AggregateThemes = {
  __typename?: 'AggregateThemes';
  _avg?: Maybe<ThemesAvgAggregate>;
  _count?: Maybe<ThemesCountAggregate>;
  _max?: Maybe<ThemesMaxAggregate>;
  _min?: Maybe<ThemesMinAggregate>;
  _sum?: Maybe<ThemesSumAggregate>;
};

export type AggregateTicketing = {
  __typename?: 'AggregateTicketing';
  _avg?: Maybe<TicketingAvgAggregate>;
  _count?: Maybe<TicketingCountAggregate>;
  _max?: Maybe<TicketingMaxAggregate>;
  _min?: Maybe<TicketingMinAggregate>;
  _sum?: Maybe<TicketingSumAggregate>;
};

export type AggregateTransactions = {
  __typename?: 'AggregateTransactions';
  _avg?: Maybe<TransactionsAvgAggregate>;
  _count?: Maybe<TransactionsCountAggregate>;
  _max?: Maybe<TransactionsMaxAggregate>;
  _min?: Maybe<TransactionsMinAggregate>;
  _sum?: Maybe<TransactionsSumAggregate>;
};

export type AggregateUpload_File = {
  __typename?: 'AggregateUpload_file';
  _avg?: Maybe<Upload_FileAvgAggregate>;
  _count?: Maybe<Upload_FileCountAggregate>;
  _max?: Maybe<Upload_FileMaxAggregate>;
  _min?: Maybe<Upload_FileMinAggregate>;
  _sum?: Maybe<Upload_FileSumAggregate>;
};

export type AggregateUsers = {
  __typename?: 'AggregateUsers';
  _avg?: Maybe<UsersAvgAggregate>;
  _count?: Maybe<UsersCountAggregate>;
  _max?: Maybe<UsersMaxAggregate>;
  _min?: Maybe<UsersMinAggregate>;
  _sum?: Maybe<UsersSumAggregate>;
};

export type AggregateVendors = {
  __typename?: 'AggregateVendors';
  _avg?: Maybe<VendorsAvgAggregate>;
  _count?: Maybe<VendorsCountAggregate>;
  _max?: Maybe<VendorsMaxAggregate>;
  _min?: Maybe<VendorsMinAggregate>;
  _sum?: Maybe<VendorsSumAggregate>;
};

export type AggregateVisits = {
  __typename?: 'AggregateVisits';
  _avg?: Maybe<VisitsAvgAggregate>;
  _count?: Maybe<VisitsCountAggregate>;
  _max?: Maybe<VisitsMaxAggregate>;
  _min?: Maybe<VisitsMinAggregate>;
  _sum?: Maybe<VisitsSumAggregate>;
};

export type AggregateWarehouse = {
  __typename?: 'AggregateWarehouse';
  _avg?: Maybe<WarehouseAvgAggregate>;
  _count?: Maybe<WarehouseCountAggregate>;
  _max?: Maybe<WarehouseMaxAggregate>;
  _min?: Maybe<WarehouseMinAggregate>;
  _sum?: Maybe<WarehouseSumAggregate>;
};

export type AggregateWebhooks = {
  __typename?: 'AggregateWebhooks';
  _avg?: Maybe<WebhooksAvgAggregate>;
  _count?: Maybe<WebhooksCountAggregate>;
  _max?: Maybe<WebhooksMaxAggregate>;
  _min?: Maybe<WebhooksMinAggregate>;
  _sum?: Maybe<WebhooksSumAggregate>;
};

export type AggregateWebsites = {
  __typename?: 'AggregateWebsites';
  _avg?: Maybe<WebsitesAvgAggregate>;
  _count?: Maybe<WebsitesCountAggregate>;
  _max?: Maybe<WebsitesMaxAggregate>;
  _min?: Maybe<WebsitesMinAggregate>;
  _sum?: Maybe<WebsitesSumAggregate>;
};

export type AggregateWishlists = {
  __typename?: 'AggregateWishlists';
  _avg?: Maybe<WishlistsAvgAggregate>;
  _count?: Maybe<WishlistsCountAggregate>;
  _max?: Maybe<WishlistsMaxAggregate>;
  _min?: Maybe<WishlistsMinAggregate>;
  _sum?: Maybe<WishlistsSumAggregate>;
};

export type AggregateWorkspaces = {
  __typename?: 'AggregateWorkspaces';
  _avg?: Maybe<WorkspacesAvgAggregate>;
  _count?: Maybe<WorkspacesCountAggregate>;
  _max?: Maybe<WorkspacesMaxAggregate>;
  _min?: Maybe<WorkspacesMinAggregate>;
  _sum?: Maybe<WorkspacesSumAggregate>;
};

export type AggregateZones = {
  __typename?: 'AggregateZones';
  _avg?: Maybe<ZonesAvgAggregate>;
  _count?: Maybe<ZonesCountAggregate>;
  _max?: Maybe<ZonesMaxAggregate>;
  _min?: Maybe<ZonesMinAggregate>;
  _sum?: Maybe<ZonesSumAggregate>;
};

export type Agreements = {
  __typename?: 'Agreements';
  content?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  reference_id?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
  user_id?: Maybe<Scalars['String']>;
};

export type AgreementsAvgAggregate = {
  __typename?: 'AgreementsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type AgreementsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AgreementsCountAggregate = {
  __typename?: 'AgreementsCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  created: Scalars['Int'];
  excerpt: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  mediamanager: Scalars['Int'];
  name: Scalars['Int'];
  reference_id: Scalars['Int'];
  shop_id: Scalars['Int'];
  type: Scalars['Int'];
  updated: Scalars['Int'];
  user_id: Scalars['Int'];
};

export type AgreementsCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  reference_id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type AgreementsCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  excerpt?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  reference_id?: InputMaybe<Scalars['String']>;
  shop_id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated?: InputMaybe<Scalars['DateTime']>;
  user_id?: InputMaybe<Scalars['String']>;
};

export type AgreementsCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  excerpt?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  reference_id?: InputMaybe<Scalars['String']>;
  shop_id?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated?: InputMaybe<Scalars['DateTime']>;
  user_id?: InputMaybe<Scalars['String']>;
};

export type AgreementsGroupBy = {
  __typename?: 'AgreementsGroupBy';
  _avg?: Maybe<AgreementsAvgAggregate>;
  _count?: Maybe<AgreementsCountAggregate>;
  _max?: Maybe<AgreementsMaxAggregate>;
  _min?: Maybe<AgreementsMinAggregate>;
  _sum?: Maybe<AgreementsSumAggregate>;
  content?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  reference_id?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
  user_id?: Maybe<Scalars['String']>;
};

export type AgreementsMaxAggregate = {
  __typename?: 'AgreementsMaxAggregate';
  content?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  reference_id?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
  user_id?: Maybe<Scalars['String']>;
};

export type AgreementsMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  reference_id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type AgreementsMinAggregate = {
  __typename?: 'AgreementsMinAggregate';
  content?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  reference_id?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
  user_id?: Maybe<Scalars['String']>;
};

export type AgreementsMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  reference_id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export enum AgreementsOrderByRelevanceFieldEnum {
  Content = 'content',
  Excerpt = 'excerpt',
  Image = 'image',
  Mediamanager = 'mediamanager',
  Name = 'name',
  ReferenceId = 'reference_id',
  ShopId = 'shop_id',
  Type = 'type',
  UserId = 'user_id'
}

export type AgreementsOrderByRelevanceInput = {
  fields: Array<AgreementsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type AgreementsOrderByWithAggregationInput = {
  _avg?: InputMaybe<AgreementsAvgOrderByAggregateInput>;
  _count?: InputMaybe<AgreementsCountOrderByAggregateInput>;
  _max?: InputMaybe<AgreementsMaxOrderByAggregateInput>;
  _min?: InputMaybe<AgreementsMinOrderByAggregateInput>;
  _sum?: InputMaybe<AgreementsSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  reference_id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type AgreementsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<AgreementsOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  reference_id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export enum AgreementsScalarFieldEnum {
  Content = 'content',
  Created = 'created',
  Excerpt = 'excerpt',
  Id = 'id',
  Image = 'image',
  Mediamanager = 'mediamanager',
  Name = 'name',
  ReferenceId = 'reference_id',
  ShopId = 'shop_id',
  Type = 'type',
  Updated = 'updated',
  UserId = 'user_id'
}

export type AgreementsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AgreementsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AgreementsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AgreementsScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  reference_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  shop_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AgreementsSumAggregate = {
  __typename?: 'AgreementsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type AgreementsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AgreementsUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reference_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AgreementsUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reference_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AgreementsWhereInput = {
  AND?: InputMaybe<Array<AgreementsWhereInput>>;
  NOT?: InputMaybe<Array<AgreementsWhereInput>>;
  OR?: InputMaybe<Array<AgreementsWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  created?: InputMaybe<DateTimeNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  reference_id?: InputMaybe<StringNullableFilter>;
  shop_id?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updated?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringNullableFilter>;
};

export type AgreementsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Analytics = {
  __typename?: 'Analytics';
  category?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  data_collection?: Maybe<Scalars['Boolean']>;
  data_retention?: Maybe<Scalars['Boolean']>;
  default_view?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  property_hit?: Maybe<Scalars['String']>;
  property_name?: Maybe<Scalars['String']>;
  search_analytics?: Maybe<Scalars['String']>;
  share_data?: Maybe<Scalars['String']>;
  tracking_code?: Maybe<Scalars['String']>;
  tracking_id?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  website_name?: Maybe<Scalars['String']>;
};

export type AnalyticsAvgAggregate = {
  __typename?: 'AnalyticsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type AnalyticsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AnalyticsCountAggregate = {
  __typename?: 'AnalyticsCountAggregate';
  _all: Scalars['Int'];
  category: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  data_collection: Scalars['Int'];
  data_retention: Scalars['Int'];
  default_view: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  property_hit: Scalars['Int'];
  property_name: Scalars['Int'];
  search_analytics: Scalars['Int'];
  share_data: Scalars['Int'];
  tracking_code: Scalars['Int'];
  tracking_id: Scalars['Int'];
  url: Scalars['Int'];
  website_name: Scalars['Int'];
};

export type AnalyticsCountOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  data_collection?: InputMaybe<SortOrder>;
  data_retention?: InputMaybe<SortOrder>;
  default_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  property_hit?: InputMaybe<SortOrder>;
  property_name?: InputMaybe<SortOrder>;
  search_analytics?: InputMaybe<SortOrder>;
  share_data?: InputMaybe<SortOrder>;
  tracking_code?: InputMaybe<SortOrder>;
  tracking_id?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website_name?: InputMaybe<SortOrder>;
};

export type AnalyticsCreateInput = {
  category?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  data_collection?: InputMaybe<Scalars['Boolean']>;
  data_retention?: InputMaybe<Scalars['Boolean']>;
  default_view?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  property_hit?: InputMaybe<Scalars['String']>;
  property_name?: InputMaybe<Scalars['String']>;
  search_analytics?: InputMaybe<Scalars['String']>;
  share_data?: InputMaybe<Scalars['String']>;
  tracking_code?: InputMaybe<Scalars['String']>;
  tracking_id?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  website_name?: InputMaybe<Scalars['String']>;
};

export type AnalyticsCreateManyInput = {
  category?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  data_collection?: InputMaybe<Scalars['Boolean']>;
  data_retention?: InputMaybe<Scalars['Boolean']>;
  default_view?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  property_hit?: InputMaybe<Scalars['String']>;
  property_name?: InputMaybe<Scalars['String']>;
  search_analytics?: InputMaybe<Scalars['String']>;
  share_data?: InputMaybe<Scalars['String']>;
  tracking_code?: InputMaybe<Scalars['String']>;
  tracking_id?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  website_name?: InputMaybe<Scalars['String']>;
};

export type AnalyticsGroupBy = {
  __typename?: 'AnalyticsGroupBy';
  _avg?: Maybe<AnalyticsAvgAggregate>;
  _count?: Maybe<AnalyticsCountAggregate>;
  _max?: Maybe<AnalyticsMaxAggregate>;
  _min?: Maybe<AnalyticsMinAggregate>;
  _sum?: Maybe<AnalyticsSumAggregate>;
  category?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  data_collection?: Maybe<Scalars['Boolean']>;
  data_retention?: Maybe<Scalars['Boolean']>;
  default_view?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  property_hit?: Maybe<Scalars['String']>;
  property_name?: Maybe<Scalars['String']>;
  search_analytics?: Maybe<Scalars['String']>;
  share_data?: Maybe<Scalars['String']>;
  tracking_code?: Maybe<Scalars['String']>;
  tracking_id?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  website_name?: Maybe<Scalars['String']>;
};

export type AnalyticsMaxAggregate = {
  __typename?: 'AnalyticsMaxAggregate';
  category?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  data_collection?: Maybe<Scalars['Boolean']>;
  data_retention?: Maybe<Scalars['Boolean']>;
  default_view?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  property_hit?: Maybe<Scalars['String']>;
  property_name?: Maybe<Scalars['String']>;
  search_analytics?: Maybe<Scalars['String']>;
  share_data?: Maybe<Scalars['String']>;
  tracking_code?: Maybe<Scalars['String']>;
  tracking_id?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  website_name?: Maybe<Scalars['String']>;
};

export type AnalyticsMaxOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  data_collection?: InputMaybe<SortOrder>;
  data_retention?: InputMaybe<SortOrder>;
  default_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  property_hit?: InputMaybe<SortOrder>;
  property_name?: InputMaybe<SortOrder>;
  search_analytics?: InputMaybe<SortOrder>;
  share_data?: InputMaybe<SortOrder>;
  tracking_code?: InputMaybe<SortOrder>;
  tracking_id?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website_name?: InputMaybe<SortOrder>;
};

export type AnalyticsMinAggregate = {
  __typename?: 'AnalyticsMinAggregate';
  category?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  data_collection?: Maybe<Scalars['Boolean']>;
  data_retention?: Maybe<Scalars['Boolean']>;
  default_view?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  property_hit?: Maybe<Scalars['String']>;
  property_name?: Maybe<Scalars['String']>;
  search_analytics?: Maybe<Scalars['String']>;
  share_data?: Maybe<Scalars['String']>;
  tracking_code?: Maybe<Scalars['String']>;
  tracking_id?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  website_name?: Maybe<Scalars['String']>;
};

export type AnalyticsMinOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  data_collection?: InputMaybe<SortOrder>;
  data_retention?: InputMaybe<SortOrder>;
  default_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  property_hit?: InputMaybe<SortOrder>;
  property_name?: InputMaybe<SortOrder>;
  search_analytics?: InputMaybe<SortOrder>;
  share_data?: InputMaybe<SortOrder>;
  tracking_code?: InputMaybe<SortOrder>;
  tracking_id?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website_name?: InputMaybe<SortOrder>;
};

export enum AnalyticsOrderByRelevanceFieldEnum {
  Category = 'category',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  DefaultView = 'default_view',
  Name = 'name',
  PropertyHit = 'property_hit',
  PropertyName = 'property_name',
  SearchAnalytics = 'search_analytics',
  ShareData = 'share_data',
  TrackingCode = 'tracking_code',
  TrackingId = 'tracking_id',
  Url = 'url',
  WebsiteName = 'website_name'
}

export type AnalyticsOrderByRelevanceInput = {
  fields: Array<AnalyticsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type AnalyticsOrderByWithAggregationInput = {
  _avg?: InputMaybe<AnalyticsAvgOrderByAggregateInput>;
  _count?: InputMaybe<AnalyticsCountOrderByAggregateInput>;
  _max?: InputMaybe<AnalyticsMaxOrderByAggregateInput>;
  _min?: InputMaybe<AnalyticsMinOrderByAggregateInput>;
  _sum?: InputMaybe<AnalyticsSumOrderByAggregateInput>;
  category?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  data_collection?: InputMaybe<SortOrder>;
  data_retention?: InputMaybe<SortOrder>;
  default_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  property_hit?: InputMaybe<SortOrder>;
  property_name?: InputMaybe<SortOrder>;
  search_analytics?: InputMaybe<SortOrder>;
  share_data?: InputMaybe<SortOrder>;
  tracking_code?: InputMaybe<SortOrder>;
  tracking_id?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website_name?: InputMaybe<SortOrder>;
};

export type AnalyticsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<AnalyticsOrderByRelevanceInput>;
  category?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  data_collection?: InputMaybe<SortOrder>;
  data_retention?: InputMaybe<SortOrder>;
  default_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  property_hit?: InputMaybe<SortOrder>;
  property_name?: InputMaybe<SortOrder>;
  search_analytics?: InputMaybe<SortOrder>;
  share_data?: InputMaybe<SortOrder>;
  tracking_code?: InputMaybe<SortOrder>;
  tracking_id?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website_name?: InputMaybe<SortOrder>;
};

export enum AnalyticsScalarFieldEnum {
  Category = 'category',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  CreatedAt = 'created_at',
  DataCollection = 'data_collection',
  DataRetention = 'data_retention',
  DefaultView = 'default_view',
  Id = 'id',
  Name = 'name',
  PropertyHit = 'property_hit',
  PropertyName = 'property_name',
  SearchAnalytics = 'search_analytics',
  ShareData = 'share_data',
  TrackingCode = 'tracking_code',
  TrackingId = 'tracking_id',
  Url = 'url',
  WebsiteName = 'website_name'
}

export type AnalyticsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AnalyticsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AnalyticsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AnalyticsScalarWhereWithAggregatesInput>>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  data_collection?: InputMaybe<BoolNullableWithAggregatesFilter>;
  data_retention?: InputMaybe<BoolNullableWithAggregatesFilter>;
  default_view?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  property_hit?: InputMaybe<StringNullableWithAggregatesFilter>;
  property_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  search_analytics?: InputMaybe<StringNullableWithAggregatesFilter>;
  share_data?: InputMaybe<StringNullableWithAggregatesFilter>;
  tracking_code?: InputMaybe<StringNullableWithAggregatesFilter>;
  tracking_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  website_name?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type AnalyticsSumAggregate = {
  __typename?: 'AnalyticsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type AnalyticsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type AnalyticsUpdateInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  data_collection?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  data_retention?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  default_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  property_hit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  property_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  search_analytics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  share_data?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AnalyticsUpdateManyMutationInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  data_collection?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  data_retention?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  default_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  property_hit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  property_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  search_analytics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  share_data?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AnalyticsWhereInput = {
  AND?: InputMaybe<Array<AnalyticsWhereInput>>;
  NOT?: InputMaybe<Array<AnalyticsWhereInput>>;
  OR?: InputMaybe<Array<AnalyticsWhereInput>>;
  category?: InputMaybe<StringNullableFilter>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  data_collection?: InputMaybe<BoolNullableFilter>;
  data_retention?: InputMaybe<BoolNullableFilter>;
  default_view?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  property_hit?: InputMaybe<StringNullableFilter>;
  property_name?: InputMaybe<StringNullableFilter>;
  search_analytics?: InputMaybe<StringNullableFilter>;
  share_data?: InputMaybe<StringNullableFilter>;
  tracking_code?: InputMaybe<StringNullableFilter>;
  tracking_id?: InputMaybe<StringNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  website_name?: InputMaybe<StringNullableFilter>;
};

export type AnalyticsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Apitoken = {
  __typename?: 'Apitoken';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  token: Scalars['BigInt'];
  token_type?: Maybe<Scalars['String']>;
};

export type ApitokenAvgAggregate = {
  __typename?: 'ApitokenAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  token?: Maybe<Scalars['Float']>;
};

export type ApitokenAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
};

export type ApitokenCountAggregate = {
  __typename?: 'ApitokenCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  token: Scalars['Int'];
  token_type: Scalars['Int'];
};

export type ApitokenCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  token_type?: InputMaybe<SortOrder>;
};

export type ApitokenCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  token: Scalars['BigInt'];
  token_type?: InputMaybe<Scalars['String']>;
};

export type ApitokenCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  token: Scalars['BigInt'];
  token_type?: InputMaybe<Scalars['String']>;
};

export type ApitokenGroupBy = {
  __typename?: 'ApitokenGroupBy';
  _avg?: Maybe<ApitokenAvgAggregate>;
  _count?: Maybe<ApitokenCountAggregate>;
  _max?: Maybe<ApitokenMaxAggregate>;
  _min?: Maybe<ApitokenMinAggregate>;
  _sum?: Maybe<ApitokenSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  token: Scalars['BigInt'];
  token_type?: Maybe<Scalars['String']>;
};

export type ApitokenMaxAggregate = {
  __typename?: 'ApitokenMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['BigInt']>;
  token_type?: Maybe<Scalars['String']>;
};

export type ApitokenMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  token_type?: InputMaybe<SortOrder>;
};

export type ApitokenMinAggregate = {
  __typename?: 'ApitokenMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['BigInt']>;
  token_type?: Maybe<Scalars['String']>;
};

export type ApitokenMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  token_type?: InputMaybe<SortOrder>;
};

export enum ApitokenOrderByRelevanceFieldEnum {
  Description = 'description',
  Name = 'name',
  TokenType = 'token_type'
}

export type ApitokenOrderByRelevanceInput = {
  fields: Array<ApitokenOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ApitokenOrderByWithAggregationInput = {
  _avg?: InputMaybe<ApitokenAvgOrderByAggregateInput>;
  _count?: InputMaybe<ApitokenCountOrderByAggregateInput>;
  _max?: InputMaybe<ApitokenMaxOrderByAggregateInput>;
  _min?: InputMaybe<ApitokenMinOrderByAggregateInput>;
  _sum?: InputMaybe<ApitokenSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  token_type?: InputMaybe<SortOrder>;
};

export type ApitokenOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ApitokenOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  token_type?: InputMaybe<SortOrder>;
};

export enum ApitokenScalarFieldEnum {
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Name = 'name',
  Token = 'token',
  TokenType = 'token_type'
}

export type ApitokenScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ApitokenScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ApitokenScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ApitokenScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  token?: InputMaybe<BigIntWithAggregatesFilter>;
  token_type?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ApitokenSumAggregate = {
  __typename?: 'ApitokenSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  token?: Maybe<Scalars['BigInt']>;
};

export type ApitokenSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
};

export type ApitokenUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  token?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  token_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ApitokenUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  token?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  token_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ApitokenWhereInput = {
  AND?: InputMaybe<Array<ApitokenWhereInput>>;
  NOT?: InputMaybe<Array<ApitokenWhereInput>>;
  OR?: InputMaybe<Array<ApitokenWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringFilter>;
  token?: InputMaybe<BigIntFilter>;
  token_type?: InputMaybe<StringNullableFilter>;
};

export type ApitokenWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['BigInt']>;
};

export type Articles = {
  __typename?: 'Articles';
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type ArticlesAvgAggregate = {
  __typename?: 'ArticlesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ArticlesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ArticlesCountAggregate = {
  __typename?: 'ArticlesCountAggregate';
  _all: Scalars['Int'];
  categories: Scalars['Int'];
  content: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  excerpt: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  isPublic: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_name: Scalars['Int'];
  meta_url: Scalars['Int'];
  name: Scalars['Int'];
  published: Scalars['Int'];
  tags: Scalars['Int'];
  type: Scalars['Int'];
  users: Scalars['Int'];
};

export type ArticlesCountOrderByAggregateInput = {
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type ArticlesCreateInput = {
  categories?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  cust_id?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  isPublic?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_name?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type ArticlesCreateManyInput = {
  categories?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  cust_id?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  isPublic?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_name?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type ArticlesGroupBy = {
  __typename?: 'ArticlesGroupBy';
  _avg?: Maybe<ArticlesAvgAggregate>;
  _count?: Maybe<ArticlesCountAggregate>;
  _max?: Maybe<ArticlesMaxAggregate>;
  _min?: Maybe<ArticlesMinAggregate>;
  _sum?: Maybe<ArticlesSumAggregate>;
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type ArticlesMaxAggregate = {
  __typename?: 'ArticlesMaxAggregate';
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type ArticlesMaxOrderByAggregateInput = {
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type ArticlesMinAggregate = {
  __typename?: 'ArticlesMinAggregate';
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type ArticlesMinOrderByAggregateInput = {
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum ArticlesOrderByRelevanceFieldEnum {
  Categories = 'categories',
  Content = 'content',
  CustId = 'cust_id',
  Customers = 'customers',
  Excerpt = 'excerpt',
  Image = 'image',
  IsPublic = 'isPublic',
  MetaDescription = 'meta_description',
  MetaName = 'meta_name',
  MetaUrl = 'meta_url',
  Name = 'name',
  Published = 'published',
  Tags = 'tags',
  Type = 'type',
  Users = 'users'
}

export type ArticlesOrderByRelevanceInput = {
  fields: Array<ArticlesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ArticlesOrderByWithAggregationInput = {
  _avg?: InputMaybe<ArticlesAvgOrderByAggregateInput>;
  _count?: InputMaybe<ArticlesCountOrderByAggregateInput>;
  _max?: InputMaybe<ArticlesMaxOrderByAggregateInput>;
  _min?: InputMaybe<ArticlesMinOrderByAggregateInput>;
  _sum?: InputMaybe<ArticlesSumOrderByAggregateInput>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type ArticlesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ArticlesOrderByRelevanceInput>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum ArticlesScalarFieldEnum {
  Categories = 'categories',
  Content = 'content',
  CustId = 'cust_id',
  Customers = 'customers',
  Excerpt = 'excerpt',
  Id = 'id',
  Image = 'image',
  IsPublic = 'isPublic',
  MetaDescription = 'meta_description',
  MetaName = 'meta_name',
  MetaUrl = 'meta_url',
  Name = 'name',
  Published = 'published',
  Tags = 'tags',
  Type = 'type',
  Users = 'users'
}

export type ArticlesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ArticlesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ArticlesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ArticlesScalarWhereWithAggregatesInput>>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<StringNullableWithAggregatesFilter>;
  tags?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ArticlesSumAggregate = {
  __typename?: 'ArticlesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type ArticlesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ArticlesUpdateInput = {
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ArticlesUpdateManyMutationInput = {
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ArticlesWhereInput = {
  AND?: InputMaybe<Array<ArticlesWhereInput>>;
  NOT?: InputMaybe<Array<ArticlesWhereInput>>;
  OR?: InputMaybe<Array<ArticlesWhereInput>>;
  categories?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  cust_id?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_name?: InputMaybe<StringNullableFilter>;
  meta_url?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type ArticlesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Attributes = {
  __typename?: 'Attributes';
  allow_html_tags_storefront?: Maybe<Scalars['Boolean']>;
  attribute_class?: Maybe<Scalars['String']>;
  attribute_code?: Maybe<Scalars['String']>;
  attribute_value?: Maybe<Scalars['String']>;
  column_options?: Maybe<Scalars['String']>;
  default_label?: Maybe<Scalars['String']>;
  faceted_navigation?: Maybe<Scalars['Boolean']>;
  filter_options?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  isPublic?: Maybe<Scalars['String']>;
  layered_navigation?: Maybe<Scalars['Boolean']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['Boolean']>;
  meta_url?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_attribute_set?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  promo_rule_conditions?: Maybe<Scalars['Boolean']>;
  search_results_layered_navigation?: Maybe<Scalars['Boolean']>;
  use_search?: Maybe<Scalars['String']>;
  used_product_listing?: Maybe<Scalars['Boolean']>;
  used_sorting_product_listing?: Maybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: Maybe<Scalars['Boolean']>;
};

export type AttributesAvgAggregate = {
  __typename?: 'AttributesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type AttributesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type AttributesCountAggregate = {
  __typename?: 'AttributesCountAggregate';
  _all: Scalars['Int'];
  allow_html_tags_storefront: Scalars['Int'];
  attribute_class: Scalars['Int'];
  attribute_code: Scalars['Int'];
  attribute_value: Scalars['Int'];
  column_options: Scalars['Int'];
  default_label: Scalars['Int'];
  faceted_navigation: Scalars['Int'];
  filter_options: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  layered_navigation: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_name: Scalars['Int'];
  meta_url: Scalars['Int'];
  position: Scalars['Int'];
  prod_id: Scalars['Int'];
  product_attribute_set: Scalars['Int'];
  products: Scalars['Int'];
  promo_rule_conditions: Scalars['Int'];
  search_results_layered_navigation: Scalars['Int'];
  use_search: Scalars['Int'];
  used_product_listing: Scalars['Int'];
  used_sorting_product_listing: Scalars['Int'];
  visible_catalog_pages_storefront: Scalars['Int'];
};

export type AttributesCountOrderByAggregateInput = {
  allow_html_tags_storefront?: InputMaybe<SortOrder>;
  attribute_class?: InputMaybe<SortOrder>;
  attribute_code?: InputMaybe<SortOrder>;
  attribute_value?: InputMaybe<SortOrder>;
  column_options?: InputMaybe<SortOrder>;
  default_label?: InputMaybe<SortOrder>;
  faceted_navigation?: InputMaybe<SortOrder>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  layered_navigation?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_attribute_set?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  promo_rule_conditions?: InputMaybe<SortOrder>;
  search_results_layered_navigation?: InputMaybe<SortOrder>;
  use_search?: InputMaybe<SortOrder>;
  used_product_listing?: InputMaybe<SortOrder>;
  used_sorting_product_listing?: InputMaybe<SortOrder>;
  visible_catalog_pages_storefront?: InputMaybe<SortOrder>;
};

export type AttributesCreateInput = {
  allow_html_tags_storefront?: InputMaybe<Scalars['Boolean']>;
  attribute_class?: InputMaybe<Scalars['String']>;
  attribute_code?: InputMaybe<Scalars['String']>;
  attribute_value?: InputMaybe<Scalars['String']>;
  column_options?: InputMaybe<Scalars['String']>;
  default_label?: InputMaybe<Scalars['String']>;
  faceted_navigation?: InputMaybe<Scalars['Boolean']>;
  filter_options?: InputMaybe<Scalars['String']>;
  isPublic?: InputMaybe<Scalars['String']>;
  layered_navigation?: InputMaybe<Scalars['Boolean']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_name?: InputMaybe<Scalars['Boolean']>;
  meta_url?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_attribute_set?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  promo_rule_conditions?: InputMaybe<Scalars['Boolean']>;
  search_results_layered_navigation?: InputMaybe<Scalars['Boolean']>;
  use_search?: InputMaybe<Scalars['String']>;
  used_product_listing?: InputMaybe<Scalars['Boolean']>;
  used_sorting_product_listing?: InputMaybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: InputMaybe<Scalars['Boolean']>;
};

export type AttributesCreateManyInput = {
  allow_html_tags_storefront?: InputMaybe<Scalars['Boolean']>;
  attribute_class?: InputMaybe<Scalars['String']>;
  attribute_code?: InputMaybe<Scalars['String']>;
  attribute_value?: InputMaybe<Scalars['String']>;
  column_options?: InputMaybe<Scalars['String']>;
  default_label?: InputMaybe<Scalars['String']>;
  faceted_navigation?: InputMaybe<Scalars['Boolean']>;
  filter_options?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  isPublic?: InputMaybe<Scalars['String']>;
  layered_navigation?: InputMaybe<Scalars['Boolean']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_name?: InputMaybe<Scalars['Boolean']>;
  meta_url?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_attribute_set?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  promo_rule_conditions?: InputMaybe<Scalars['Boolean']>;
  search_results_layered_navigation?: InputMaybe<Scalars['Boolean']>;
  use_search?: InputMaybe<Scalars['String']>;
  used_product_listing?: InputMaybe<Scalars['Boolean']>;
  used_sorting_product_listing?: InputMaybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: InputMaybe<Scalars['Boolean']>;
};

export type AttributesGroupBy = {
  __typename?: 'AttributesGroupBy';
  _avg?: Maybe<AttributesAvgAggregate>;
  _count?: Maybe<AttributesCountAggregate>;
  _max?: Maybe<AttributesMaxAggregate>;
  _min?: Maybe<AttributesMinAggregate>;
  _sum?: Maybe<AttributesSumAggregate>;
  allow_html_tags_storefront?: Maybe<Scalars['Boolean']>;
  attribute_class?: Maybe<Scalars['String']>;
  attribute_code?: Maybe<Scalars['String']>;
  attribute_value?: Maybe<Scalars['String']>;
  column_options?: Maybe<Scalars['String']>;
  default_label?: Maybe<Scalars['String']>;
  faceted_navigation?: Maybe<Scalars['Boolean']>;
  filter_options?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  isPublic?: Maybe<Scalars['String']>;
  layered_navigation?: Maybe<Scalars['Boolean']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['Boolean']>;
  meta_url?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_attribute_set?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  promo_rule_conditions?: Maybe<Scalars['Boolean']>;
  search_results_layered_navigation?: Maybe<Scalars['Boolean']>;
  use_search?: Maybe<Scalars['String']>;
  used_product_listing?: Maybe<Scalars['Boolean']>;
  used_sorting_product_listing?: Maybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: Maybe<Scalars['Boolean']>;
};

export type AttributesMaxAggregate = {
  __typename?: 'AttributesMaxAggregate';
  allow_html_tags_storefront?: Maybe<Scalars['Boolean']>;
  attribute_class?: Maybe<Scalars['String']>;
  attribute_code?: Maybe<Scalars['String']>;
  attribute_value?: Maybe<Scalars['String']>;
  column_options?: Maybe<Scalars['String']>;
  default_label?: Maybe<Scalars['String']>;
  faceted_navigation?: Maybe<Scalars['Boolean']>;
  filter_options?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  isPublic?: Maybe<Scalars['String']>;
  layered_navigation?: Maybe<Scalars['Boolean']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['Boolean']>;
  meta_url?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  product_attribute_set?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  promo_rule_conditions?: Maybe<Scalars['Boolean']>;
  search_results_layered_navigation?: Maybe<Scalars['Boolean']>;
  use_search?: Maybe<Scalars['String']>;
  used_product_listing?: Maybe<Scalars['Boolean']>;
  used_sorting_product_listing?: Maybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: Maybe<Scalars['Boolean']>;
};

export type AttributesMaxOrderByAggregateInput = {
  allow_html_tags_storefront?: InputMaybe<SortOrder>;
  attribute_class?: InputMaybe<SortOrder>;
  attribute_code?: InputMaybe<SortOrder>;
  attribute_value?: InputMaybe<SortOrder>;
  column_options?: InputMaybe<SortOrder>;
  default_label?: InputMaybe<SortOrder>;
  faceted_navigation?: InputMaybe<SortOrder>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  layered_navigation?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_attribute_set?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  promo_rule_conditions?: InputMaybe<SortOrder>;
  search_results_layered_navigation?: InputMaybe<SortOrder>;
  use_search?: InputMaybe<SortOrder>;
  used_product_listing?: InputMaybe<SortOrder>;
  used_sorting_product_listing?: InputMaybe<SortOrder>;
  visible_catalog_pages_storefront?: InputMaybe<SortOrder>;
};

export type AttributesMinAggregate = {
  __typename?: 'AttributesMinAggregate';
  allow_html_tags_storefront?: Maybe<Scalars['Boolean']>;
  attribute_class?: Maybe<Scalars['String']>;
  attribute_code?: Maybe<Scalars['String']>;
  attribute_value?: Maybe<Scalars['String']>;
  column_options?: Maybe<Scalars['String']>;
  default_label?: Maybe<Scalars['String']>;
  faceted_navigation?: Maybe<Scalars['Boolean']>;
  filter_options?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  isPublic?: Maybe<Scalars['String']>;
  layered_navigation?: Maybe<Scalars['Boolean']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_name?: Maybe<Scalars['Boolean']>;
  meta_url?: Maybe<Scalars['String']>;
  position?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  product_attribute_set?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  promo_rule_conditions?: Maybe<Scalars['Boolean']>;
  search_results_layered_navigation?: Maybe<Scalars['Boolean']>;
  use_search?: Maybe<Scalars['String']>;
  used_product_listing?: Maybe<Scalars['Boolean']>;
  used_sorting_product_listing?: Maybe<Scalars['Boolean']>;
  visible_catalog_pages_storefront?: Maybe<Scalars['Boolean']>;
};

export type AttributesMinOrderByAggregateInput = {
  allow_html_tags_storefront?: InputMaybe<SortOrder>;
  attribute_class?: InputMaybe<SortOrder>;
  attribute_code?: InputMaybe<SortOrder>;
  attribute_value?: InputMaybe<SortOrder>;
  column_options?: InputMaybe<SortOrder>;
  default_label?: InputMaybe<SortOrder>;
  faceted_navigation?: InputMaybe<SortOrder>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  layered_navigation?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_attribute_set?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  promo_rule_conditions?: InputMaybe<SortOrder>;
  search_results_layered_navigation?: InputMaybe<SortOrder>;
  use_search?: InputMaybe<SortOrder>;
  used_product_listing?: InputMaybe<SortOrder>;
  used_sorting_product_listing?: InputMaybe<SortOrder>;
  visible_catalog_pages_storefront?: InputMaybe<SortOrder>;
};

export enum AttributesOrderByRelevanceFieldEnum {
  AttributeClass = 'attribute_class',
  AttributeCode = 'attribute_code',
  AttributeValue = 'attribute_value',
  ColumnOptions = 'column_options',
  DefaultLabel = 'default_label',
  FilterOptions = 'filter_options',
  IsPublic = 'isPublic',
  MetaDescription = 'meta_description',
  MetaUrl = 'meta_url',
  Position = 'position',
  ProductAttributeSet = 'product_attribute_set',
  Products = 'products',
  UseSearch = 'use_search'
}

export type AttributesOrderByRelevanceInput = {
  fields: Array<AttributesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type AttributesOrderByWithAggregationInput = {
  _avg?: InputMaybe<AttributesAvgOrderByAggregateInput>;
  _count?: InputMaybe<AttributesCountOrderByAggregateInput>;
  _max?: InputMaybe<AttributesMaxOrderByAggregateInput>;
  _min?: InputMaybe<AttributesMinOrderByAggregateInput>;
  _sum?: InputMaybe<AttributesSumOrderByAggregateInput>;
  allow_html_tags_storefront?: InputMaybe<SortOrder>;
  attribute_class?: InputMaybe<SortOrder>;
  attribute_code?: InputMaybe<SortOrder>;
  attribute_value?: InputMaybe<SortOrder>;
  column_options?: InputMaybe<SortOrder>;
  default_label?: InputMaybe<SortOrder>;
  faceted_navigation?: InputMaybe<SortOrder>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  layered_navigation?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_attribute_set?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  promo_rule_conditions?: InputMaybe<SortOrder>;
  search_results_layered_navigation?: InputMaybe<SortOrder>;
  use_search?: InputMaybe<SortOrder>;
  used_product_listing?: InputMaybe<SortOrder>;
  used_sorting_product_listing?: InputMaybe<SortOrder>;
  visible_catalog_pages_storefront?: InputMaybe<SortOrder>;
};

export type AttributesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<AttributesOrderByRelevanceInput>;
  allow_html_tags_storefront?: InputMaybe<SortOrder>;
  attribute_class?: InputMaybe<SortOrder>;
  attribute_code?: InputMaybe<SortOrder>;
  attribute_value?: InputMaybe<SortOrder>;
  column_options?: InputMaybe<SortOrder>;
  default_label?: InputMaybe<SortOrder>;
  faceted_navigation?: InputMaybe<SortOrder>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  layered_navigation?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_name?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  position?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_attribute_set?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  promo_rule_conditions?: InputMaybe<SortOrder>;
  search_results_layered_navigation?: InputMaybe<SortOrder>;
  use_search?: InputMaybe<SortOrder>;
  used_product_listing?: InputMaybe<SortOrder>;
  used_sorting_product_listing?: InputMaybe<SortOrder>;
  visible_catalog_pages_storefront?: InputMaybe<SortOrder>;
};

export enum AttributesScalarFieldEnum {
  AllowHtmlTagsStorefront = 'allow_html_tags_storefront',
  AttributeClass = 'attribute_class',
  AttributeCode = 'attribute_code',
  AttributeValue = 'attribute_value',
  ColumnOptions = 'column_options',
  DefaultLabel = 'default_label',
  FacetedNavigation = 'faceted_navigation',
  FilterOptions = 'filter_options',
  Id = 'id',
  IsPublic = 'isPublic',
  LayeredNavigation = 'layered_navigation',
  MetaDescription = 'meta_description',
  MetaName = 'meta_name',
  MetaUrl = 'meta_url',
  Position = 'position',
  ProdId = 'prod_id',
  ProductAttributeSet = 'product_attribute_set',
  Products = 'products',
  PromoRuleConditions = 'promo_rule_conditions',
  SearchResultsLayeredNavigation = 'search_results_layered_navigation',
  UseSearch = 'use_search',
  UsedProductListing = 'used_product_listing',
  UsedSortingProductListing = 'used_sorting_product_listing',
  VisibleCatalogPagesStorefront = 'visible_catalog_pages_storefront'
}

export type AttributesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AttributesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AttributesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AttributesScalarWhereWithAggregatesInput>>;
  allow_html_tags_storefront?: InputMaybe<BoolNullableWithAggregatesFilter>;
  attribute_class?: InputMaybe<StringNullableWithAggregatesFilter>;
  attribute_code?: InputMaybe<StringNullableWithAggregatesFilter>;
  attribute_value?: InputMaybe<StringNullableWithAggregatesFilter>;
  column_options?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_label?: InputMaybe<StringNullableWithAggregatesFilter>;
  faceted_navigation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  filter_options?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  layered_navigation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_name?: InputMaybe<BoolNullableWithAggregatesFilter>;
  meta_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  position?: InputMaybe<StringNullableWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  product_attribute_set?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  promo_rule_conditions?: InputMaybe<BoolNullableWithAggregatesFilter>;
  search_results_layered_navigation?: InputMaybe<BoolNullableWithAggregatesFilter>;
  use_search?: InputMaybe<StringNullableWithAggregatesFilter>;
  used_product_listing?: InputMaybe<BoolNullableWithAggregatesFilter>;
  used_sorting_product_listing?: InputMaybe<BoolNullableWithAggregatesFilter>;
  visible_catalog_pages_storefront?: InputMaybe<BoolNullableWithAggregatesFilter>;
};

export type AttributesSumAggregate = {
  __typename?: 'AttributesSumAggregate';
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type AttributesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type AttributesUpdateInput = {
  allow_html_tags_storefront?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attribute_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  attribute_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  attribute_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  column_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_label?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  faceted_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  filter_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  layered_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_name?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  position?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  product_attribute_set?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  promo_rule_conditions?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  search_results_layered_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  use_search?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  used_product_listing?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  used_sorting_product_listing?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  visible_catalog_pages_storefront?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type AttributesUpdateManyMutationInput = {
  allow_html_tags_storefront?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  attribute_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  attribute_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  attribute_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  column_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_label?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  faceted_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  filter_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  layered_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_name?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  position?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  product_attribute_set?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  promo_rule_conditions?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  search_results_layered_navigation?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  use_search?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  used_product_listing?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  used_sorting_product_listing?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  visible_catalog_pages_storefront?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type AttributesWhereInput = {
  AND?: InputMaybe<Array<AttributesWhereInput>>;
  NOT?: InputMaybe<Array<AttributesWhereInput>>;
  OR?: InputMaybe<Array<AttributesWhereInput>>;
  allow_html_tags_storefront?: InputMaybe<BoolNullableFilter>;
  attribute_class?: InputMaybe<StringNullableFilter>;
  attribute_code?: InputMaybe<StringNullableFilter>;
  attribute_value?: InputMaybe<StringNullableFilter>;
  column_options?: InputMaybe<StringNullableFilter>;
  default_label?: InputMaybe<StringNullableFilter>;
  faceted_navigation?: InputMaybe<BoolNullableFilter>;
  filter_options?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  layered_navigation?: InputMaybe<BoolNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_name?: InputMaybe<BoolNullableFilter>;
  meta_url?: InputMaybe<StringNullableFilter>;
  position?: InputMaybe<StringNullableFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  product_attribute_set?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  promo_rule_conditions?: InputMaybe<BoolNullableFilter>;
  search_results_layered_navigation?: InputMaybe<BoolNullableFilter>;
  use_search?: InputMaybe<StringNullableFilter>;
  used_product_listing?: InputMaybe<BoolNullableFilter>;
  used_sorting_product_listing?: InputMaybe<BoolNullableFilter>;
  visible_catalog_pages_storefront?: InputMaybe<BoolNullableFilter>;
};

export type AttributesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type BigIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['BigInt']>;
  divide?: InputMaybe<Scalars['BigInt']>;
  increment?: InputMaybe<Scalars['BigInt']>;
  multiply?: InputMaybe<Scalars['BigInt']>;
  set?: InputMaybe<Scalars['BigInt']>;
};

export type BigIntFilter = {
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type BigIntNullableFilter = {
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type BigIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBigIntNullableFilter>;
  _min?: InputMaybe<NestedBigIntNullableFilter>;
  _sum?: InputMaybe<NestedBigIntNullableFilter>;
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type BigIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBigIntFilter>;
  _min?: InputMaybe<NestedBigIntFilter>;
  _sum?: InputMaybe<NestedBigIntFilter>;
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type BoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type BoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export type Brands = {
  __typename?: 'Brands';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type BrandsAvgAggregate = {
  __typename?: 'BrandsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  product?: Maybe<Scalars['Float']>;
};

export type BrandsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type BrandsCountAggregate = {
  __typename?: 'BrandsCountAggregate';
  _all: Scalars['Int'];
  city: Scalars['Int'];
  code: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  media: Scalars['Int'];
  mediamanager: Scalars['Int'];
  name: Scalars['Int'];
  product: Scalars['Int'];
  products: Scalars['Int'];
  state: Scalars['Int'];
  workspaces: Scalars['Int'];
};

export type BrandsCountOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type BrandsCreateInput = {
  city?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['BigInt']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type BrandsCreateManyInput = {
  city?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['BigInt']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type BrandsGroupBy = {
  __typename?: 'BrandsGroupBy';
  _avg?: Maybe<BrandsAvgAggregate>;
  _count?: Maybe<BrandsCountAggregate>;
  _max?: Maybe<BrandsMaxAggregate>;
  _min?: Maybe<BrandsMinAggregate>;
  _sum?: Maybe<BrandsSumAggregate>;
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type BrandsMaxAggregate = {
  __typename?: 'BrandsMaxAggregate';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type BrandsMaxOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type BrandsMinAggregate = {
  __typename?: 'BrandsMinAggregate';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type BrandsMinOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum BrandsOrderByRelevanceFieldEnum {
  City = 'city',
  Code = 'code',
  Country = 'country',
  Description = 'description',
  IsPublic = 'isPublic',
  Media = 'media',
  Mediamanager = 'mediamanager',
  Name = 'name',
  Products = 'products',
  State = 'state',
  Workspaces = 'workspaces'
}

export type BrandsOrderByRelevanceInput = {
  fields: Array<BrandsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type BrandsOrderByWithAggregationInput = {
  _avg?: InputMaybe<BrandsAvgOrderByAggregateInput>;
  _count?: InputMaybe<BrandsCountOrderByAggregateInput>;
  _max?: InputMaybe<BrandsMaxOrderByAggregateInput>;
  _min?: InputMaybe<BrandsMinOrderByAggregateInput>;
  _sum?: InputMaybe<BrandsSumOrderByAggregateInput>;
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type BrandsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<BrandsOrderByRelevanceInput>;
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum BrandsScalarFieldEnum {
  City = 'city',
  Code = 'code',
  Country = 'country',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  IsPublic = 'isPublic',
  Media = 'media',
  Mediamanager = 'mediamanager',
  Name = 'name',
  Product = 'product',
  Products = 'products',
  State = 'state',
  Workspaces = 'workspaces'
}

export type BrandsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<BrandsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<BrandsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<BrandsScalarWhereWithAggregatesInput>>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type BrandsSumAggregate = {
  __typename?: 'BrandsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  product?: Maybe<Scalars['BigInt']>;
};

export type BrandsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type BrandsUpdateInput = {
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandsUpdateManyMutationInput = {
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandsWhereInput = {
  AND?: InputMaybe<Array<BrandsWhereInput>>;
  NOT?: InputMaybe<Array<BrandsWhereInput>>;
  OR?: InputMaybe<Array<BrandsWhereInput>>;
  city?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<BigIntNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
};

export type BrandsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Cart_Price_Rules = {
  __typename?: 'Cart_price_rules';
  actions_apply?: Maybe<Scalars['String']>;
  actions_apply_shipping_amount?: Maybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  coupon?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  uses_per_customer?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Cart_Price_RulesAvgAggregate = {
  __typename?: 'Cart_price_rulesAvgAggregate';
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Float']>;
};

export type Cart_Price_RulesAvgOrderByAggregateInput = {
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Cart_Price_RulesCountAggregate = {
  __typename?: 'Cart_price_rulesCountAggregate';
  _all: Scalars['Int'];
  actions_apply: Scalars['Int'];
  actions_apply_shipping_amount: Scalars['Int'];
  actions_discard_subsequent_rules: Scalars['Int'];
  actions_discount_amount: Scalars['Int'];
  actions_discount_qty_step: Scalars['Int'];
  actions_max_qty_discount_is_applied_to: Scalars['Int'];
  active: Scalars['Int'];
  coupon: Scalars['Int'];
  description: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  priority: Scalars['Int'];
  rule: Scalars['Int'];
  start_date: Scalars['Int'];
  status: Scalars['Int'];
  uses_per_customer: Scalars['Int'];
  website: Scalars['Int'];
};

export type Cart_Price_RulesCountOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_apply_shipping_amount?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  uses_per_customer?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Cart_Price_RulesCreateInput = {
  actions_apply?: InputMaybe<Scalars['String']>;
  actions_apply_shipping_amount?: InputMaybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: InputMaybe<Scalars['Boolean']>;
  actions_discount_amount?: InputMaybe<Scalars['Decimal']>;
  actions_discount_qty_step?: InputMaybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<Scalars['Decimal']>;
  active?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['DateTime']>;
  priority?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Scalars['String']>;
  uses_per_customer?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type Cart_Price_RulesCreateManyInput = {
  actions_apply?: InputMaybe<Scalars['String']>;
  actions_apply_shipping_amount?: InputMaybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: InputMaybe<Scalars['Boolean']>;
  actions_discount_amount?: InputMaybe<Scalars['Decimal']>;
  actions_discount_qty_step?: InputMaybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<Scalars['Decimal']>;
  active?: InputMaybe<Scalars['Boolean']>;
  coupon?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  priority?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Scalars['String']>;
  uses_per_customer?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type Cart_Price_RulesGroupBy = {
  __typename?: 'Cart_price_rulesGroupBy';
  _avg?: Maybe<Cart_Price_RulesAvgAggregate>;
  _count?: Maybe<Cart_Price_RulesCountAggregate>;
  _max?: Maybe<Cart_Price_RulesMaxAggregate>;
  _min?: Maybe<Cart_Price_RulesMinAggregate>;
  _sum?: Maybe<Cart_Price_RulesSumAggregate>;
  actions_apply?: Maybe<Scalars['String']>;
  actions_apply_shipping_amount?: Maybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  coupon?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  uses_per_customer?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Cart_Price_RulesMaxAggregate = {
  __typename?: 'Cart_price_rulesMaxAggregate';
  actions_apply?: Maybe<Scalars['String']>;
  actions_apply_shipping_amount?: Maybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  coupon?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  uses_per_customer?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Cart_Price_RulesMaxOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_apply_shipping_amount?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  uses_per_customer?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Cart_Price_RulesMinAggregate = {
  __typename?: 'Cart_price_rulesMinAggregate';
  actions_apply?: Maybe<Scalars['String']>;
  actions_apply_shipping_amount?: Maybe<Scalars['Boolean']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  coupon?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  uses_per_customer?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Cart_Price_RulesMinOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_apply_shipping_amount?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  uses_per_customer?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum Cart_Price_RulesOrderByRelevanceFieldEnum {
  ActionsApply = 'actions_apply',
  Coupon = 'coupon',
  Description = 'description',
  Priority = 'priority',
  Rule = 'rule',
  Status = 'status',
  UsesPerCustomer = 'uses_per_customer',
  Website = 'website'
}

export type Cart_Price_RulesOrderByRelevanceInput = {
  fields: Array<Cart_Price_RulesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Cart_Price_RulesOrderByWithAggregationInput = {
  _avg?: InputMaybe<Cart_Price_RulesAvgOrderByAggregateInput>;
  _count?: InputMaybe<Cart_Price_RulesCountOrderByAggregateInput>;
  _max?: InputMaybe<Cart_Price_RulesMaxOrderByAggregateInput>;
  _min?: InputMaybe<Cart_Price_RulesMinOrderByAggregateInput>;
  _sum?: InputMaybe<Cart_Price_RulesSumOrderByAggregateInput>;
  actions_apply?: InputMaybe<SortOrder>;
  actions_apply_shipping_amount?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  uses_per_customer?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Cart_Price_RulesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Cart_Price_RulesOrderByRelevanceInput>;
  actions_apply?: InputMaybe<SortOrder>;
  actions_apply_shipping_amount?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  uses_per_customer?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum Cart_Price_RulesScalarFieldEnum {
  ActionsApply = 'actions_apply',
  ActionsApplyShippingAmount = 'actions_apply_shipping_amount',
  ActionsDiscardSubsequentRules = 'actions_discard_subsequent_rules',
  ActionsDiscountAmount = 'actions_discount_amount',
  ActionsDiscountQtyStep = 'actions_discount_qty_step',
  ActionsMaxQtyDiscountIsAppliedTo = 'actions_max_qty_discount_is_applied_to',
  Active = 'active',
  Coupon = 'coupon',
  Description = 'description',
  EndDate = 'end_date',
  Id = 'id',
  Priority = 'priority',
  Rule = 'rule',
  StartDate = 'start_date',
  Status = 'status',
  UsesPerCustomer = 'uses_per_customer',
  Website = 'website'
}

export type Cart_Price_RulesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Cart_Price_RulesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Cart_Price_RulesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Cart_Price_RulesScalarWhereWithAggregatesInput>>;
  actions_apply?: InputMaybe<StringNullableWithAggregatesFilter>;
  actions_apply_shipping_amount?: InputMaybe<BoolNullableWithAggregatesFilter>;
  actions_discard_subsequent_rules?: InputMaybe<BoolNullableWithAggregatesFilter>;
  actions_discount_amount?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  actions_discount_qty_step?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  coupon?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  priority?: InputMaybe<StringNullableWithAggregatesFilter>;
  rule?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  uses_per_customer?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Cart_Price_RulesSumAggregate = {
  __typename?: 'Cart_price_rulesSumAggregate';
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  actions_discount_qty_step?: Maybe<Scalars['Decimal']>;
  actions_max_qty_discount_is_applied_to?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Int']>;
};

export type Cart_Price_RulesSumOrderByAggregateInput = {
  actions_discount_amount?: InputMaybe<SortOrder>;
  actions_discount_qty_step?: InputMaybe<SortOrder>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Cart_Price_RulesUpdateInput = {
  actions_apply?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  actions_apply_shipping_amount?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discard_subsequent_rules?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discount_amount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  actions_discount_qty_step?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  uses_per_customer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Cart_Price_RulesUpdateManyMutationInput = {
  actions_apply?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  actions_apply_shipping_amount?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discard_subsequent_rules?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discount_amount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  actions_discount_qty_step?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  coupon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  uses_per_customer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Cart_Price_RulesWhereInput = {
  AND?: InputMaybe<Array<Cart_Price_RulesWhereInput>>;
  NOT?: InputMaybe<Array<Cart_Price_RulesWhereInput>>;
  OR?: InputMaybe<Array<Cart_Price_RulesWhereInput>>;
  actions_apply?: InputMaybe<StringNullableFilter>;
  actions_apply_shipping_amount?: InputMaybe<BoolNullableFilter>;
  actions_discard_subsequent_rules?: InputMaybe<BoolNullableFilter>;
  actions_discount_amount?: InputMaybe<DecimalNullableFilter>;
  actions_discount_qty_step?: InputMaybe<DecimalNullableFilter>;
  actions_max_qty_discount_is_applied_to?: InputMaybe<DecimalNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  coupon?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<IntFilter>;
  priority?: InputMaybe<StringNullableFilter>;
  rule?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<DateTimeNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  uses_per_customer?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type Cart_Price_RulesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Cases = {
  __typename?: 'Cases';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  case_number?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  priority?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type CasesAvgAggregate = {
  __typename?: 'CasesAvgAggregate';
  case_number?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

export type CasesAvgOrderByAggregateInput = {
  case_number?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type CasesCountAggregate = {
  __typename?: 'CasesCountAggregate';
  _all: Scalars['Int'];
  account_name: Scalars['Int'];
  assigned_to: Scalars['Int'];
  case_number: Scalars['Int'];
  created_at: Scalars['Int'];
  date_modified: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  priority: Scalars['Int'];
  resolution: Scalars['Int'];
  state: Scalars['Int'];
  status: Scalars['Int'];
  subject: Scalars['Int'];
  type: Scalars['Int'];
};

export type CasesCountOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  case_number?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type CasesCreateInput = {
  account_name?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  case_number?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  date_modified?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  priority?: InputMaybe<Scalars['String']>;
  resolution?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type CasesCreateManyInput = {
  account_name?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  case_number?: InputMaybe<Scalars['Int']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  date_modified?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  priority?: InputMaybe<Scalars['String']>;
  resolution?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type CasesGroupBy = {
  __typename?: 'CasesGroupBy';
  _avg?: Maybe<CasesAvgAggregate>;
  _count?: Maybe<CasesCountAggregate>;
  _max?: Maybe<CasesMaxAggregate>;
  _min?: Maybe<CasesMinAggregate>;
  _sum?: Maybe<CasesSumAggregate>;
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  case_number?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  priority?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type CasesMaxAggregate = {
  __typename?: 'CasesMaxAggregate';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  case_number?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  priority?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type CasesMaxOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  case_number?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type CasesMinAggregate = {
  __typename?: 'CasesMinAggregate';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  case_number?: Maybe<Scalars['Int']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  priority?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type CasesMinOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  case_number?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum CasesOrderByRelevanceFieldEnum {
  AccountName = 'account_name',
  AssignedTo = 'assigned_to',
  Description = 'description',
  Priority = 'priority',
  Resolution = 'resolution',
  State = 'state',
  Status = 'status',
  Subject = 'subject',
  Type = 'type'
}

export type CasesOrderByRelevanceInput = {
  fields: Array<CasesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CasesOrderByWithAggregationInput = {
  _avg?: InputMaybe<CasesAvgOrderByAggregateInput>;
  _count?: InputMaybe<CasesCountOrderByAggregateInput>;
  _max?: InputMaybe<CasesMaxOrderByAggregateInput>;
  _min?: InputMaybe<CasesMinOrderByAggregateInput>;
  _sum?: InputMaybe<CasesSumOrderByAggregateInput>;
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  case_number?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type CasesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CasesOrderByRelevanceInput>;
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  case_number?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum CasesScalarFieldEnum {
  AccountName = 'account_name',
  AssignedTo = 'assigned_to',
  CaseNumber = 'case_number',
  CreatedAt = 'created_at',
  DateModified = 'date_modified',
  Description = 'description',
  Id = 'id',
  Priority = 'priority',
  Resolution = 'resolution',
  State = 'state',
  Status = 'status',
  Subject = 'subject',
  Type = 'type'
}

export type CasesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CasesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CasesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CasesScalarWhereWithAggregatesInput>>;
  account_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  case_number?: InputMaybe<IntNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  date_modified?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  priority?: InputMaybe<StringNullableWithAggregatesFilter>;
  resolution?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CasesSumAggregate = {
  __typename?: 'CasesSumAggregate';
  case_number?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['BigInt']>;
};

export type CasesSumOrderByAggregateInput = {
  case_number?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type CasesUpdateInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_modified?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resolution?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CasesUpdateManyMutationInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  case_number?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_modified?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resolution?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CasesWhereInput = {
  AND?: InputMaybe<Array<CasesWhereInput>>;
  NOT?: InputMaybe<Array<CasesWhereInput>>;
  OR?: InputMaybe<Array<CasesWhereInput>>;
  account_name?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  case_number?: InputMaybe<IntNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  date_modified?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  priority?: InputMaybe<StringNullableFilter>;
  resolution?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
};

export type CasesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Catalog_Price_Rule = {
  __typename?: 'Catalog_price_rule';
  actions_apply?: Maybe<Scalars['String']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  customer_groups?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Catalog_Price_RuleAvgAggregate = {
  __typename?: 'Catalog_price_ruleAvgAggregate';
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Float']>;
};

export type Catalog_Price_RuleAvgOrderByAggregateInput = {
  actions_discount_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Catalog_Price_RuleCountAggregate = {
  __typename?: 'Catalog_price_ruleCountAggregate';
  _all: Scalars['Int'];
  actions_apply: Scalars['Int'];
  actions_discard_subsequent_rules: Scalars['Int'];
  actions_discount_amount: Scalars['Int'];
  active: Scalars['Int'];
  customer_groups: Scalars['Int'];
  description: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  priority: Scalars['Int'];
  rule: Scalars['Int'];
  start_date: Scalars['Int'];
  status: Scalars['Int'];
  website: Scalars['Int'];
};

export type Catalog_Price_RuleCountOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  customer_groups?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Catalog_Price_RuleCreateInput = {
  actions_apply?: InputMaybe<Scalars['String']>;
  actions_discard_subsequent_rules?: InputMaybe<Scalars['Boolean']>;
  actions_discount_amount?: InputMaybe<Scalars['Decimal']>;
  active?: InputMaybe<Scalars['Boolean']>;
  customer_groups?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['DateTime']>;
  priority?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type Catalog_Price_RuleCreateManyInput = {
  actions_apply?: InputMaybe<Scalars['String']>;
  actions_discard_subsequent_rules?: InputMaybe<Scalars['Boolean']>;
  actions_discount_amount?: InputMaybe<Scalars['Decimal']>;
  active?: InputMaybe<Scalars['Boolean']>;
  customer_groups?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  priority?: InputMaybe<Scalars['String']>;
  rule?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['DateTime']>;
  status?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type Catalog_Price_RuleGroupBy = {
  __typename?: 'Catalog_price_ruleGroupBy';
  _avg?: Maybe<Catalog_Price_RuleAvgAggregate>;
  _count?: Maybe<Catalog_Price_RuleCountAggregate>;
  _max?: Maybe<Catalog_Price_RuleMaxAggregate>;
  _min?: Maybe<Catalog_Price_RuleMinAggregate>;
  _sum?: Maybe<Catalog_Price_RuleSumAggregate>;
  actions_apply?: Maybe<Scalars['String']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  customer_groups?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Catalog_Price_RuleMaxAggregate = {
  __typename?: 'Catalog_price_ruleMaxAggregate';
  actions_apply?: Maybe<Scalars['String']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  customer_groups?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Catalog_Price_RuleMaxOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  customer_groups?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Catalog_Price_RuleMinAggregate = {
  __typename?: 'Catalog_price_ruleMinAggregate';
  actions_apply?: Maybe<Scalars['String']>;
  actions_discard_subsequent_rules?: Maybe<Scalars['Boolean']>;
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  active?: Maybe<Scalars['Boolean']>;
  customer_groups?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['String']>;
  rule?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['DateTime']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type Catalog_Price_RuleMinOrderByAggregateInput = {
  actions_apply?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  customer_groups?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum Catalog_Price_RuleOrderByRelevanceFieldEnum {
  ActionsApply = 'actions_apply',
  CustomerGroups = 'customer_groups',
  Description = 'description',
  Priority = 'priority',
  Rule = 'rule',
  Status = 'status',
  Website = 'website'
}

export type Catalog_Price_RuleOrderByRelevanceInput = {
  fields: Array<Catalog_Price_RuleOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Catalog_Price_RuleOrderByWithAggregationInput = {
  _avg?: InputMaybe<Catalog_Price_RuleAvgOrderByAggregateInput>;
  _count?: InputMaybe<Catalog_Price_RuleCountOrderByAggregateInput>;
  _max?: InputMaybe<Catalog_Price_RuleMaxOrderByAggregateInput>;
  _min?: InputMaybe<Catalog_Price_RuleMinOrderByAggregateInput>;
  _sum?: InputMaybe<Catalog_Price_RuleSumOrderByAggregateInput>;
  actions_apply?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  customer_groups?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type Catalog_Price_RuleOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Catalog_Price_RuleOrderByRelevanceInput>;
  actions_apply?: InputMaybe<SortOrder>;
  actions_discard_subsequent_rules?: InputMaybe<SortOrder>;
  actions_discount_amount?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  customer_groups?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  rule?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum Catalog_Price_RuleScalarFieldEnum {
  ActionsApply = 'actions_apply',
  ActionsDiscardSubsequentRules = 'actions_discard_subsequent_rules',
  ActionsDiscountAmount = 'actions_discount_amount',
  Active = 'active',
  CustomerGroups = 'customer_groups',
  Description = 'description',
  EndDate = 'end_date',
  Id = 'id',
  Priority = 'priority',
  Rule = 'rule',
  StartDate = 'start_date',
  Status = 'status',
  Website = 'website'
}

export type Catalog_Price_RuleScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Catalog_Price_RuleScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Catalog_Price_RuleScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Catalog_Price_RuleScalarWhereWithAggregatesInput>>;
  actions_apply?: InputMaybe<StringNullableWithAggregatesFilter>;
  actions_discard_subsequent_rules?: InputMaybe<BoolNullableWithAggregatesFilter>;
  actions_discount_amount?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  customer_groups?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  priority?: InputMaybe<StringNullableWithAggregatesFilter>;
  rule?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Catalog_Price_RuleSumAggregate = {
  __typename?: 'Catalog_price_ruleSumAggregate';
  actions_discount_amount?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Int']>;
};

export type Catalog_Price_RuleSumOrderByAggregateInput = {
  actions_discount_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Catalog_Price_RuleUpdateInput = {
  actions_apply?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  actions_discard_subsequent_rules?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discount_amount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  customer_groups?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Catalog_Price_RuleUpdateManyMutationInput = {
  actions_apply?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  actions_discard_subsequent_rules?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  actions_discount_amount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  customer_groups?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Catalog_Price_RuleWhereInput = {
  AND?: InputMaybe<Array<Catalog_Price_RuleWhereInput>>;
  NOT?: InputMaybe<Array<Catalog_Price_RuleWhereInput>>;
  OR?: InputMaybe<Array<Catalog_Price_RuleWhereInput>>;
  actions_apply?: InputMaybe<StringNullableFilter>;
  actions_discard_subsequent_rules?: InputMaybe<BoolNullableFilter>;
  actions_discount_amount?: InputMaybe<DecimalNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  customer_groups?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<IntFilter>;
  priority?: InputMaybe<StringNullableFilter>;
  rule?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<DateTimeNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type Catalog_Price_RuleWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Categories = {
  __typename?: 'Categories';
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  product?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  thumbnail?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type CategoriesAvgAggregate = {
  __typename?: 'CategoriesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CategoriesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CategoriesCountAggregate = {
  __typename?: 'CategoriesCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  country: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_keywords: Scalars['Int'];
  meta_title: Scalars['Int'];
  meta_url: Scalars['Int'];
  name: Scalars['Int'];
  product: Scalars['Int'];
  status: Scalars['Int'];
  thumbnail: Scalars['Int'];
  visibility: Scalars['Int'];
  websites: Scalars['Int'];
  workspaces: Scalars['Int'];
};

export type CategoriesCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type CategoriesCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  product?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['Boolean']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type CategoriesCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  product?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['Boolean']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type CategoriesGroupBy = {
  __typename?: 'CategoriesGroupBy';
  _avg?: Maybe<CategoriesAvgAggregate>;
  _count?: Maybe<CategoriesCountAggregate>;
  _max?: Maybe<CategoriesMaxAggregate>;
  _min?: Maybe<CategoriesMinAggregate>;
  _sum?: Maybe<CategoriesSumAggregate>;
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  product?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  thumbnail?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type CategoriesMaxAggregate = {
  __typename?: 'CategoriesMaxAggregate';
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  thumbnail?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type CategoriesMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type CategoriesMinAggregate = {
  __typename?: 'CategoriesMinAggregate';
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  thumbnail?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type CategoriesMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum CategoriesOrderByRelevanceFieldEnum {
  Content = 'content',
  Country = 'country',
  Description = 'description',
  Image = 'image',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  MetaUrl = 'meta_url',
  Name = 'name',
  Product = 'product',
  Thumbnail = 'thumbnail',
  Visibility = 'visibility',
  Websites = 'websites',
  Workspaces = 'workspaces'
}

export type CategoriesOrderByRelevanceInput = {
  fields: Array<CategoriesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CategoriesOrderByWithAggregationInput = {
  _avg?: InputMaybe<CategoriesAvgOrderByAggregateInput>;
  _count?: InputMaybe<CategoriesCountOrderByAggregateInput>;
  _max?: InputMaybe<CategoriesMaxOrderByAggregateInput>;
  _min?: InputMaybe<CategoriesMinOrderByAggregateInput>;
  _sum?: InputMaybe<CategoriesSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type CategoriesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CategoriesOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum CategoriesScalarFieldEnum {
  Content = 'content',
  Country = 'country',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  MetaUrl = 'meta_url',
  Name = 'name',
  Product = 'product',
  Status = 'status',
  Thumbnail = 'thumbnail',
  Visibility = 'visibility',
  Websites = 'websites',
  Workspaces = 'workspaces'
}

export type CategoriesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CategoriesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CategoriesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CategoriesScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_keywords?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<BoolNullableWithAggregatesFilter>;
  thumbnail?: InputMaybe<StringNullableWithAggregatesFilter>;
  visibility?: InputMaybe<StringNullableWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CategoriesSumAggregate = {
  __typename?: 'CategoriesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type CategoriesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CategoriesUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoriesUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoriesWhereInput = {
  AND?: InputMaybe<Array<CategoriesWhereInput>>;
  NOT?: InputMaybe<Array<CategoriesWhereInput>>;
  OR?: InputMaybe<Array<CategoriesWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_keywords?: InputMaybe<StringNullableFilter>;
  meta_title?: InputMaybe<StringNullableFilter>;
  meta_url?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  product?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<BoolNullableFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  visibility?: InputMaybe<StringNullableFilter>;
  websites?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
};

export type CategoriesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Channels = {
  __typename?: 'Channels';
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  default_lang?: Maybe<Scalars['String']>;
  default_shipping?: Maybe<Scalars['String']>;
  default_zone?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  include_tax?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type ChannelsAvgAggregate = {
  __typename?: 'ChannelsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ChannelsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ChannelsCountAggregate = {
  __typename?: 'ChannelsCountAggregate';
  _all: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  code: Scalars['Int'];
  created_at: Scalars['Int'];
  currency: Scalars['Int'];
  default_lang: Scalars['Int'];
  default_shipping: Scalars['Int'];
  default_zone: Scalars['Int'];
  id: Scalars['Int'];
  include_tax: Scalars['Int'];
  name: Scalars['Int'];
};

export type ChannelsCountOrderByAggregateInput = {
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  default_lang?: InputMaybe<SortOrder>;
  default_shipping?: InputMaybe<SortOrder>;
  default_zone?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  include_tax?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type ChannelsCreateInput = {
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  default_lang?: InputMaybe<Scalars['String']>;
  default_shipping?: InputMaybe<Scalars['String']>;
  default_zone?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  include_tax?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ChannelsCreateManyInput = {
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  default_lang?: InputMaybe<Scalars['String']>;
  default_shipping?: InputMaybe<Scalars['String']>;
  default_zone?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  include_tax?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ChannelsGroupBy = {
  __typename?: 'ChannelsGroupBy';
  _avg?: Maybe<ChannelsAvgAggregate>;
  _count?: Maybe<ChannelsCountAggregate>;
  _max?: Maybe<ChannelsMaxAggregate>;
  _min?: Maybe<ChannelsMinAggregate>;
  _sum?: Maybe<ChannelsSumAggregate>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  default_lang?: Maybe<Scalars['String']>;
  default_shipping?: Maybe<Scalars['String']>;
  default_zone?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  include_tax?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type ChannelsMaxAggregate = {
  __typename?: 'ChannelsMaxAggregate';
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  default_lang?: Maybe<Scalars['String']>;
  default_shipping?: Maybe<Scalars['String']>;
  default_zone?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  include_tax?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type ChannelsMaxOrderByAggregateInput = {
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  default_lang?: InputMaybe<SortOrder>;
  default_shipping?: InputMaybe<SortOrder>;
  default_zone?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  include_tax?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type ChannelsMinAggregate = {
  __typename?: 'ChannelsMinAggregate';
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  default_lang?: Maybe<Scalars['String']>;
  default_shipping?: Maybe<Scalars['String']>;
  default_zone?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  include_tax?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type ChannelsMinOrderByAggregateInput = {
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  default_lang?: InputMaybe<SortOrder>;
  default_shipping?: InputMaybe<SortOrder>;
  default_zone?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  include_tax?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum ChannelsOrderByRelevanceFieldEnum {
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Code = 'code',
  Currency = 'currency',
  DefaultLang = 'default_lang',
  DefaultShipping = 'default_shipping',
  DefaultZone = 'default_zone',
  IncludeTax = 'include_tax',
  Name = 'name'
}

export type ChannelsOrderByRelevanceInput = {
  fields: Array<ChannelsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ChannelsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ChannelsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ChannelsCountOrderByAggregateInput>;
  _max?: InputMaybe<ChannelsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ChannelsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ChannelsSumOrderByAggregateInput>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  default_lang?: InputMaybe<SortOrder>;
  default_shipping?: InputMaybe<SortOrder>;
  default_zone?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  include_tax?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type ChannelsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ChannelsOrderByRelevanceInput>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  default_lang?: InputMaybe<SortOrder>;
  default_shipping?: InputMaybe<SortOrder>;
  default_zone?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  include_tax?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum ChannelsScalarFieldEnum {
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Code = 'code',
  CreatedAt = 'created_at',
  Currency = 'currency',
  DefaultLang = 'default_lang',
  DefaultShipping = 'default_shipping',
  DefaultZone = 'default_zone',
  Id = 'id',
  IncludeTax = 'include_tax',
  Name = 'name'
}

export type ChannelsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ChannelsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ChannelsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ChannelsScalarWhereWithAggregatesInput>>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_lang?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_shipping?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_zone?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  include_tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ChannelsSumAggregate = {
  __typename?: 'ChannelsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ChannelsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ChannelsUpdateInput = {
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_lang?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  include_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelsUpdateManyMutationInput = {
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_lang?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  include_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelsWhereInput = {
  AND?: InputMaybe<Array<ChannelsWhereInput>>;
  NOT?: InputMaybe<Array<ChannelsWhereInput>>;
  OR?: InputMaybe<Array<ChannelsWhereInput>>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  currency?: InputMaybe<StringNullableFilter>;
  default_lang?: InputMaybe<StringNullableFilter>;
  default_shipping?: InputMaybe<StringNullableFilter>;
  default_zone?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  include_tax?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type ChannelsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Checklist = {
  __typename?: 'Checklist';
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  manager?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['String']>;
  project?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  regional_manager?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type ChecklistAvgAggregate = {
  __typename?: 'ChecklistAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ChecklistAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ChecklistCountAggregate = {
  __typename?: 'ChecklistCountAggregate';
  _all: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  location: Scalars['Int'];
  manager: Scalars['Int'];
  media: Scalars['Int'];
  prod_id: Scalars['Int'];
  project: Scalars['Int'];
  region: Scalars['Int'];
  regional_manager: Scalars['Int'];
  task: Scalars['Int'];
  ticket: Scalars['Int'];
  trainings: Scalars['Int'];
  type: Scalars['Int'];
  username: Scalars['Int'];
};

export type ChecklistCountOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  manager?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  project?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  regional_manager?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  ticket?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type ChecklistCreateInput = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  manager?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  prod_id?: InputMaybe<Scalars['String']>;
  project?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  regional_manager?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Scalars['String']>;
  ticket?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

export type ChecklistCreateManyInput = {
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  manager?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  prod_id?: InputMaybe<Scalars['String']>;
  project?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  regional_manager?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Scalars['String']>;
  ticket?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

export type ChecklistGroupBy = {
  __typename?: 'ChecklistGroupBy';
  _avg?: Maybe<ChecklistAvgAggregate>;
  _count?: Maybe<ChecklistCountAggregate>;
  _max?: Maybe<ChecklistMaxAggregate>;
  _min?: Maybe<ChecklistMinAggregate>;
  _sum?: Maybe<ChecklistSumAggregate>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  manager?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['String']>;
  project?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  regional_manager?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type ChecklistMaxAggregate = {
  __typename?: 'ChecklistMaxAggregate';
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  manager?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['String']>;
  project?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  regional_manager?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type ChecklistMaxOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  manager?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  project?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  regional_manager?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  ticket?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type ChecklistMinAggregate = {
  __typename?: 'ChecklistMinAggregate';
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  manager?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['String']>;
  project?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  regional_manager?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type ChecklistMinOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  manager?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  project?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  regional_manager?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  ticket?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export enum ChecklistOrderByRelevanceFieldEnum {
  Country = 'country',
  Description = 'description',
  Location = 'location',
  Manager = 'manager',
  Media = 'media',
  ProdId = 'prod_id',
  Project = 'project',
  Region = 'region',
  RegionalManager = 'regional_manager',
  Task = 'task',
  Ticket = 'ticket',
  Trainings = 'trainings',
  Type = 'type',
  Username = 'username'
}

export type ChecklistOrderByRelevanceInput = {
  fields: Array<ChecklistOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ChecklistOrderByWithAggregationInput = {
  _avg?: InputMaybe<ChecklistAvgOrderByAggregateInput>;
  _count?: InputMaybe<ChecklistCountOrderByAggregateInput>;
  _max?: InputMaybe<ChecklistMaxOrderByAggregateInput>;
  _min?: InputMaybe<ChecklistMinOrderByAggregateInput>;
  _sum?: InputMaybe<ChecklistSumOrderByAggregateInput>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  manager?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  project?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  regional_manager?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  ticket?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type ChecklistOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ChecklistOrderByRelevanceInput>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  manager?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  project?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  regional_manager?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  ticket?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export enum ChecklistScalarFieldEnum {
  Country = 'country',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Location = 'location',
  Manager = 'manager',
  Media = 'media',
  ProdId = 'prod_id',
  Project = 'project',
  Region = 'region',
  RegionalManager = 'regional_manager',
  Task = 'task',
  Ticket = 'ticket',
  Trainings = 'trainings',
  Type = 'type',
  Username = 'username'
}

export type ChecklistScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ChecklistScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ChecklistScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ChecklistScalarWhereWithAggregatesInput>>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  manager?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  prod_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  project?: InputMaybe<StringNullableWithAggregatesFilter>;
  region?: InputMaybe<StringNullableWithAggregatesFilter>;
  regional_manager?: InputMaybe<StringNullableWithAggregatesFilter>;
  task?: InputMaybe<StringNullableWithAggregatesFilter>;
  ticket?: InputMaybe<StringNullableWithAggregatesFilter>;
  trainings?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  username?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ChecklistSumAggregate = {
  __typename?: 'ChecklistSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ChecklistSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ChecklistUpdateInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  regional_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChecklistUpdateManyMutationInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  regional_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChecklistWhereInput = {
  AND?: InputMaybe<Array<ChecklistWhereInput>>;
  NOT?: InputMaybe<Array<ChecklistWhereInput>>;
  OR?: InputMaybe<Array<ChecklistWhereInput>>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  location?: InputMaybe<StringNullableFilter>;
  manager?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  prod_id?: InputMaybe<StringNullableFilter>;
  project?: InputMaybe<StringNullableFilter>;
  region?: InputMaybe<StringNullableFilter>;
  regional_manager?: InputMaybe<StringNullableFilter>;
  task?: InputMaybe<StringNullableFilter>;
  ticket?: InputMaybe<StringNullableFilter>;
  trainings?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  username?: InputMaybe<StringNullableFilter>;
};

export type ChecklistWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Cities = {
  __typename?: 'Cities';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  postalCode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type CitiesAvgAggregate = {
  __typename?: 'CitiesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CitiesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CitiesCountAggregate = {
  __typename?: 'CitiesCountAggregate';
  _all: Scalars['Int'];
  country: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  postalCode: Scalars['Int'];
  state: Scalars['Int'];
};

export type CitiesCountOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalCode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type CitiesCreateInput = {
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  postalCode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type CitiesCreateManyInput = {
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  postalCode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type CitiesGroupBy = {
  __typename?: 'CitiesGroupBy';
  _avg?: Maybe<CitiesAvgAggregate>;
  _count?: Maybe<CitiesCountAggregate>;
  _max?: Maybe<CitiesMaxAggregate>;
  _min?: Maybe<CitiesMinAggregate>;
  _sum?: Maybe<CitiesSumAggregate>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  postalCode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type CitiesMaxAggregate = {
  __typename?: 'CitiesMaxAggregate';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalCode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type CitiesMaxOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalCode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type CitiesMinAggregate = {
  __typename?: 'CitiesMinAggregate';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalCode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type CitiesMinOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalCode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum CitiesOrderByRelevanceFieldEnum {
  Country = 'country',
  Description = 'description',
  Image = 'image',
  Name = 'name',
  PostalCode = 'postalCode',
  State = 'state'
}

export type CitiesOrderByRelevanceInput = {
  fields: Array<CitiesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CitiesOrderByWithAggregationInput = {
  _avg?: InputMaybe<CitiesAvgOrderByAggregateInput>;
  _count?: InputMaybe<CitiesCountOrderByAggregateInput>;
  _max?: InputMaybe<CitiesMaxOrderByAggregateInput>;
  _min?: InputMaybe<CitiesMinOrderByAggregateInput>;
  _sum?: InputMaybe<CitiesSumOrderByAggregateInput>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalCode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type CitiesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CitiesOrderByRelevanceInput>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalCode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum CitiesScalarFieldEnum {
  Country = 'country',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  PostalCode = 'postalCode',
  State = 'state'
}

export type CitiesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CitiesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CitiesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CitiesScalarWhereWithAggregatesInput>>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  postalCode?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CitiesSumAggregate = {
  __typename?: 'CitiesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type CitiesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CitiesUpdateInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  postalCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CitiesUpdateManyMutationInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  postalCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CitiesWhereInput = {
  AND?: InputMaybe<Array<CitiesWhereInput>>;
  NOT?: InputMaybe<Array<CitiesWhereInput>>;
  OR?: InputMaybe<Array<CitiesWhereInput>>;
  country?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  postalCode?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
};

export type CitiesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Collections = {
  __typename?: 'Collections';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
};

export type CollectionsAvgAggregate = {
  __typename?: 'CollectionsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CollectionsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CollectionsCountAggregate = {
  __typename?: 'CollectionsCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_keywords: Scalars['Int'];
  meta_title: Scalars['Int'];
  name: Scalars['Int'];
  product: Scalars['Int'];
};

export type CollectionsCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type CollectionsCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
};

export type CollectionsCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
};

export type CollectionsGroupBy = {
  __typename?: 'CollectionsGroupBy';
  _avg?: Maybe<CollectionsAvgAggregate>;
  _count?: Maybe<CollectionsCountAggregate>;
  _max?: Maybe<CollectionsMaxAggregate>;
  _min?: Maybe<CollectionsMinAggregate>;
  _sum?: Maybe<CollectionsSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
};

export type CollectionsMaxAggregate = {
  __typename?: 'CollectionsMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
};

export type CollectionsMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type CollectionsMinAggregate = {
  __typename?: 'CollectionsMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
};

export type CollectionsMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export enum CollectionsOrderByRelevanceFieldEnum {
  Description = 'description',
  Image = 'image',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  Name = 'name',
  Product = 'product'
}

export type CollectionsOrderByRelevanceInput = {
  fields: Array<CollectionsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CollectionsOrderByWithAggregationInput = {
  _avg?: InputMaybe<CollectionsAvgOrderByAggregateInput>;
  _count?: InputMaybe<CollectionsCountOrderByAggregateInput>;
  _max?: InputMaybe<CollectionsMaxOrderByAggregateInput>;
  _min?: InputMaybe<CollectionsMinOrderByAggregateInput>;
  _sum?: InputMaybe<CollectionsSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type CollectionsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CollectionsOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export enum CollectionsScalarFieldEnum {
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  Name = 'name',
  Product = 'product'
}

export type CollectionsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CollectionsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CollectionsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CollectionsScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_keywords?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CollectionsSumAggregate = {
  __typename?: 'CollectionsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type CollectionsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CollectionsUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionsUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionsWhereInput = {
  AND?: InputMaybe<Array<CollectionsWhereInput>>;
  NOT?: InputMaybe<Array<CollectionsWhereInput>>;
  OR?: InputMaybe<Array<CollectionsWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_keywords?: InputMaybe<StringNullableFilter>;
  meta_title?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<StringNullableFilter>;
};

export type CollectionsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Comments = {
  __typename?: 'Comments';
  cust_id: Scalars['Int'];
  customer_name: Scalars['String'];
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  response?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CommentsAvgAggregate = {
  __typename?: 'CommentsAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

export type CommentsAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type CommentsCountAggregate = {
  __typename?: 'CommentsCountAggregate';
  _all: Scalars['Int'];
  cust_id: Scalars['Int'];
  customer_name: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  mediamanager: Scalars['Int'];
  published: Scalars['Int'];
  response: Scalars['Int'];
  trainings: Scalars['Int'];
};

export type CommentsCountOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CommentsCreateInput = {
  cust_id: Scalars['Int'];
  customer_name: Scalars['String'];
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  response?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
};

export type CommentsCreateManyInput = {
  cust_id: Scalars['Int'];
  customer_name: Scalars['String'];
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  response?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
};

export type CommentsGroupBy = {
  __typename?: 'CommentsGroupBy';
  _avg?: Maybe<CommentsAvgAggregate>;
  _count?: Maybe<CommentsCountAggregate>;
  _max?: Maybe<CommentsMaxAggregate>;
  _min?: Maybe<CommentsMinAggregate>;
  _sum?: Maybe<CommentsSumAggregate>;
  cust_id: Scalars['Int'];
  customer_name: Scalars['String'];
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  response?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CommentsMaxAggregate = {
  __typename?: 'CommentsMaxAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  customer_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  response?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CommentsMaxOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CommentsMinAggregate = {
  __typename?: 'CommentsMinAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  customer_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  response?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CommentsMinOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum CommentsOrderByRelevanceFieldEnum {
  CustomerName = 'customer_name',
  Customers = 'customers',
  Description = 'description',
  Image = 'image',
  Mediamanager = 'mediamanager',
  Response = 'response',
  Trainings = 'trainings'
}

export type CommentsOrderByRelevanceInput = {
  fields: Array<CommentsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CommentsOrderByWithAggregationInput = {
  _avg?: InputMaybe<CommentsAvgOrderByAggregateInput>;
  _count?: InputMaybe<CommentsCountOrderByAggregateInput>;
  _max?: InputMaybe<CommentsMaxOrderByAggregateInput>;
  _min?: InputMaybe<CommentsMinOrderByAggregateInput>;
  _sum?: InputMaybe<CommentsSumOrderByAggregateInput>;
  cust_id?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CommentsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CommentsOrderByRelevanceInput>;
  cust_id?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum CommentsScalarFieldEnum {
  CustId = 'cust_id',
  CustomerName = 'customer_name',
  Customers = 'customers',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  Mediamanager = 'mediamanager',
  Published = 'published',
  Response = 'response',
  Trainings = 'trainings'
}

export type CommentsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CommentsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CommentsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CommentsScalarWhereWithAggregatesInput>>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customer_name?: InputMaybe<StringWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  response?: InputMaybe<StringNullableWithAggregatesFilter>;
  trainings?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CommentsSumAggregate = {
  __typename?: 'CommentsSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

export type CommentsSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type CommentsUpdateInput = {
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  response?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CommentsUpdateManyMutationInput = {
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  response?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CommentsWhereInput = {
  AND?: InputMaybe<Array<CommentsWhereInput>>;
  NOT?: InputMaybe<Array<CommentsWhereInput>>;
  OR?: InputMaybe<Array<CommentsWhereInput>>;
  cust_id?: InputMaybe<IntFilter>;
  customer_name?: InputMaybe<StringFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  response?: InputMaybe<StringNullableFilter>;
  trainings?: InputMaybe<StringNullableFilter>;
};

export type CommentsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Content_Type = {
  __typename?: 'Content_type';
  boolean?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  database_name?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  json?: Maybe<Scalars['JSON']>;
  link?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  number?: Maybe<Scalars['Decimal']>;
  password?: Maybe<Scalars['String']>;
  rich_text?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  time?: Maybe<Scalars['DateTime']>;
  timestamp?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['String']>;
};

export type Content_TypeAvgAggregate = {
  __typename?: 'Content_typeAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  number?: Maybe<Scalars['Decimal']>;
};

export type Content_TypeAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
};

export type Content_TypeCountAggregate = {
  __typename?: 'Content_typeCountAggregate';
  _all: Scalars['Int'];
  boolean: Scalars['Int'];
  created_at: Scalars['Int'];
  database_name: Scalars['Int'];
  date: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  json: Scalars['Int'];
  link: Scalars['Int'];
  media: Scalars['Int'];
  number: Scalars['Int'];
  password: Scalars['Int'];
  rich_text: Scalars['Int'];
  text: Scalars['Int'];
  time: Scalars['Int'];
  timestamp: Scalars['Int'];
  uid: Scalars['Int'];
};

export type Content_TypeCountOrderByAggregateInput = {
  boolean?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  database_name?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  json?: InputMaybe<SortOrder>;
  link?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  rich_text?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrder>;
  time?: InputMaybe<SortOrder>;
  timestamp?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export type Content_TypeCreateInput = {
  boolean?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  database_name?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  json?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['Decimal']>;
  password?: InputMaybe<Scalars['String']>;
  rich_text?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  time?: InputMaybe<Scalars['DateTime']>;
  timestamp?: InputMaybe<Scalars['DateTime']>;
  uid?: InputMaybe<Scalars['String']>;
};

export type Content_TypeCreateManyInput = {
  boolean?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  database_name?: InputMaybe<Scalars['String']>;
  date?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  json?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  number?: InputMaybe<Scalars['Decimal']>;
  password?: InputMaybe<Scalars['String']>;
  rich_text?: InputMaybe<Scalars['String']>;
  text?: InputMaybe<Scalars['String']>;
  time?: InputMaybe<Scalars['DateTime']>;
  timestamp?: InputMaybe<Scalars['DateTime']>;
  uid?: InputMaybe<Scalars['String']>;
};

export type Content_TypeGroupBy = {
  __typename?: 'Content_typeGroupBy';
  _avg?: Maybe<Content_TypeAvgAggregate>;
  _count?: Maybe<Content_TypeCountAggregate>;
  _max?: Maybe<Content_TypeMaxAggregate>;
  _min?: Maybe<Content_TypeMinAggregate>;
  _sum?: Maybe<Content_TypeSumAggregate>;
  boolean?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  database_name?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  json?: Maybe<Scalars['JSON']>;
  link?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  number?: Maybe<Scalars['Decimal']>;
  password?: Maybe<Scalars['String']>;
  rich_text?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  time?: Maybe<Scalars['DateTime']>;
  timestamp?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['String']>;
};

export type Content_TypeMaxAggregate = {
  __typename?: 'Content_typeMaxAggregate';
  boolean?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  database_name?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  link?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  number?: Maybe<Scalars['Decimal']>;
  password?: Maybe<Scalars['String']>;
  rich_text?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  time?: Maybe<Scalars['DateTime']>;
  timestamp?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['String']>;
};

export type Content_TypeMaxOrderByAggregateInput = {
  boolean?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  database_name?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  link?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  rich_text?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrder>;
  time?: InputMaybe<SortOrder>;
  timestamp?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export type Content_TypeMinAggregate = {
  __typename?: 'Content_typeMinAggregate';
  boolean?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  database_name?: Maybe<Scalars['String']>;
  date?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  link?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  number?: Maybe<Scalars['Decimal']>;
  password?: Maybe<Scalars['String']>;
  rich_text?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  time?: Maybe<Scalars['DateTime']>;
  timestamp?: Maybe<Scalars['DateTime']>;
  uid?: Maybe<Scalars['String']>;
};

export type Content_TypeMinOrderByAggregateInput = {
  boolean?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  database_name?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  link?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  rich_text?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrder>;
  time?: InputMaybe<SortOrder>;
  timestamp?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export enum Content_TypeOrderByRelevanceFieldEnum {
  DatabaseName = 'database_name',
  Email = 'email',
  Link = 'link',
  Media = 'media',
  Password = 'password',
  RichText = 'rich_text',
  Text = 'text',
  Uid = 'uid'
}

export type Content_TypeOrderByRelevanceInput = {
  fields: Array<Content_TypeOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Content_TypeOrderByWithAggregationInput = {
  _avg?: InputMaybe<Content_TypeAvgOrderByAggregateInput>;
  _count?: InputMaybe<Content_TypeCountOrderByAggregateInput>;
  _max?: InputMaybe<Content_TypeMaxOrderByAggregateInput>;
  _min?: InputMaybe<Content_TypeMinOrderByAggregateInput>;
  _sum?: InputMaybe<Content_TypeSumOrderByAggregateInput>;
  boolean?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  database_name?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  json?: InputMaybe<SortOrder>;
  link?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  rich_text?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrder>;
  time?: InputMaybe<SortOrder>;
  timestamp?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export type Content_TypeOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Content_TypeOrderByRelevanceInput>;
  boolean?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  database_name?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  json?: InputMaybe<SortOrder>;
  link?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  rich_text?: InputMaybe<SortOrder>;
  text?: InputMaybe<SortOrder>;
  time?: InputMaybe<SortOrder>;
  timestamp?: InputMaybe<SortOrder>;
  uid?: InputMaybe<SortOrder>;
};

export enum Content_TypeScalarFieldEnum {
  Boolean = 'boolean',
  CreatedAt = 'created_at',
  DatabaseName = 'database_name',
  Date = 'date',
  Email = 'email',
  Id = 'id',
  Json = 'json',
  Link = 'link',
  Media = 'media',
  Number = 'number',
  Password = 'password',
  RichText = 'rich_text',
  Text = 'text',
  Time = 'time',
  Timestamp = 'timestamp',
  Uid = 'uid'
}

export type Content_TypeScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Content_TypeScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Content_TypeScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Content_TypeScalarWhereWithAggregatesInput>>;
  boolean?: InputMaybe<BoolNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  database_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  json?: InputMaybe<JsonNullableWithAggregatesFilter>;
  link?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  number?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  rich_text?: InputMaybe<StringNullableWithAggregatesFilter>;
  text?: InputMaybe<StringNullableWithAggregatesFilter>;
  time?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  timestamp?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  uid?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Content_TypeSumAggregate = {
  __typename?: 'Content_typeSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  number?: Maybe<Scalars['Decimal']>;
};

export type Content_TypeSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  number?: InputMaybe<SortOrder>;
};

export type Content_TypeUpdateInput = {
  boolean?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  database_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  json?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  number?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rich_text?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  text?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  time?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  timestamp?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  uid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Content_TypeUpdateManyMutationInput = {
  boolean?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  database_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  json?: InputMaybe<Scalars['JSON']>;
  link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  number?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rich_text?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  text?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  time?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  timestamp?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  uid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Content_TypeWhereInput = {
  AND?: InputMaybe<Array<Content_TypeWhereInput>>;
  NOT?: InputMaybe<Array<Content_TypeWhereInput>>;
  OR?: InputMaybe<Array<Content_TypeWhereInput>>;
  boolean?: InputMaybe<BoolNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  database_name?: InputMaybe<StringNullableFilter>;
  date?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  json?: InputMaybe<JsonNullableFilter>;
  link?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  number?: InputMaybe<DecimalNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  rich_text?: InputMaybe<StringNullableFilter>;
  text?: InputMaybe<StringNullableFilter>;
  time?: InputMaybe<DateTimeNullableFilter>;
  timestamp?: InputMaybe<DateTimeNullableFilter>;
  uid?: InputMaybe<StringNullableFilter>;
};

export type Content_TypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Contracts = {
  __typename?: 'Contracts';
  account?: Maybe<Scalars['String']>;
  company_signed_date?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  contract_manager?: Maybe<Scalars['String']>;
  contract_title?: Maybe<Scalars['String']>;
  contract_type?: Maybe<Scalars['String']>;
  contract_value?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  customer_signed_date?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  line_items?: Maybe<Scalars['String']>;
  opportunity?: Maybe<Scalars['String']>;
  renewal_reminder?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
};

export type ContractsAvgAggregate = {
  __typename?: 'ContractsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ContractsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ContractsCountAggregate = {
  __typename?: 'ContractsCountAggregate';
  _all: Scalars['Int'];
  account: Scalars['Int'];
  company_signed_date: Scalars['Int'];
  contact: Scalars['Int'];
  contract_manager: Scalars['Int'];
  contract_title: Scalars['Int'];
  contract_type: Scalars['Int'];
  contract_value: Scalars['Int'];
  created_at: Scalars['Int'];
  currency: Scalars['Int'];
  customer_signed_date: Scalars['Int'];
  description: Scalars['Int'];
  discount: Scalars['Int'];
  end_date: Scalars['Int'];
  grand_total: Scalars['Int'];
  id: Scalars['Int'];
  line_items: Scalars['Int'];
  opportunity: Scalars['Int'];
  renewal_reminder: Scalars['Int'];
  shipping: Scalars['Int'];
  shipping_tax: Scalars['Int'];
  start_date: Scalars['Int'];
  status: Scalars['Int'];
  subtotal: Scalars['Int'];
  tax: Scalars['Int'];
  total: Scalars['Int'];
};

export type ContractsCountOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  company_signed_date?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  contract_manager?: InputMaybe<SortOrder>;
  contract_title?: InputMaybe<SortOrder>;
  contract_type?: InputMaybe<SortOrder>;
  contract_value?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  customer_signed_date?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line_items?: InputMaybe<SortOrder>;
  opportunity?: InputMaybe<SortOrder>;
  renewal_reminder?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type ContractsCreateInput = {
  account?: InputMaybe<Scalars['String']>;
  company_signed_date?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<Scalars['String']>;
  contract_manager?: InputMaybe<Scalars['String']>;
  contract_title?: InputMaybe<Scalars['String']>;
  contract_type?: InputMaybe<Scalars['String']>;
  contract_value?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  customer_signed_date?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  grand_total?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  line_items?: InputMaybe<Scalars['String']>;
  opportunity?: InputMaybe<Scalars['String']>;
  renewal_reminder?: InputMaybe<Scalars['String']>;
  shipping?: InputMaybe<Scalars['String']>;
  shipping_tax?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
  tax?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['String']>;
};

export type ContractsCreateManyInput = {
  account?: InputMaybe<Scalars['String']>;
  company_signed_date?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<Scalars['String']>;
  contract_manager?: InputMaybe<Scalars['String']>;
  contract_title?: InputMaybe<Scalars['String']>;
  contract_type?: InputMaybe<Scalars['String']>;
  contract_value?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  customer_signed_date?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  grand_total?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  line_items?: InputMaybe<Scalars['String']>;
  opportunity?: InputMaybe<Scalars['String']>;
  renewal_reminder?: InputMaybe<Scalars['String']>;
  shipping?: InputMaybe<Scalars['String']>;
  shipping_tax?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
  tax?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['String']>;
};

export type ContractsGroupBy = {
  __typename?: 'ContractsGroupBy';
  _avg?: Maybe<ContractsAvgAggregate>;
  _count?: Maybe<ContractsCountAggregate>;
  _max?: Maybe<ContractsMaxAggregate>;
  _min?: Maybe<ContractsMinAggregate>;
  _sum?: Maybe<ContractsSumAggregate>;
  account?: Maybe<Scalars['String']>;
  company_signed_date?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  contract_manager?: Maybe<Scalars['String']>;
  contract_title?: Maybe<Scalars['String']>;
  contract_type?: Maybe<Scalars['String']>;
  contract_value?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  customer_signed_date?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  line_items?: Maybe<Scalars['String']>;
  opportunity?: Maybe<Scalars['String']>;
  renewal_reminder?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
};

export type ContractsMaxAggregate = {
  __typename?: 'ContractsMaxAggregate';
  account?: Maybe<Scalars['String']>;
  company_signed_date?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  contract_manager?: Maybe<Scalars['String']>;
  contract_title?: Maybe<Scalars['String']>;
  contract_type?: Maybe<Scalars['String']>;
  contract_value?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  customer_signed_date?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  line_items?: Maybe<Scalars['String']>;
  opportunity?: Maybe<Scalars['String']>;
  renewal_reminder?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
};

export type ContractsMaxOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  company_signed_date?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  contract_manager?: InputMaybe<SortOrder>;
  contract_title?: InputMaybe<SortOrder>;
  contract_type?: InputMaybe<SortOrder>;
  contract_value?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  customer_signed_date?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line_items?: InputMaybe<SortOrder>;
  opportunity?: InputMaybe<SortOrder>;
  renewal_reminder?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type ContractsMinAggregate = {
  __typename?: 'ContractsMinAggregate';
  account?: Maybe<Scalars['String']>;
  company_signed_date?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  contract_manager?: Maybe<Scalars['String']>;
  contract_title?: Maybe<Scalars['String']>;
  contract_type?: Maybe<Scalars['String']>;
  contract_value?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  customer_signed_date?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  line_items?: Maybe<Scalars['String']>;
  opportunity?: Maybe<Scalars['String']>;
  renewal_reminder?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
};

export type ContractsMinOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  company_signed_date?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  contract_manager?: InputMaybe<SortOrder>;
  contract_title?: InputMaybe<SortOrder>;
  contract_type?: InputMaybe<SortOrder>;
  contract_value?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  customer_signed_date?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line_items?: InputMaybe<SortOrder>;
  opportunity?: InputMaybe<SortOrder>;
  renewal_reminder?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export enum ContractsOrderByRelevanceFieldEnum {
  Account = 'account',
  CompanySignedDate = 'company_signed_date',
  Contact = 'contact',
  ContractManager = 'contract_manager',
  ContractTitle = 'contract_title',
  ContractType = 'contract_type',
  ContractValue = 'contract_value',
  Currency = 'currency',
  CustomerSignedDate = 'customer_signed_date',
  Description = 'description',
  Discount = 'discount',
  EndDate = 'end_date',
  GrandTotal = 'grand_total',
  LineItems = 'line_items',
  Opportunity = 'opportunity',
  RenewalReminder = 'renewal_reminder',
  Shipping = 'shipping',
  ShippingTax = 'shipping_tax',
  StartDate = 'start_date',
  Status = 'status',
  Subtotal = 'subtotal',
  Tax = 'tax',
  Total = 'total'
}

export type ContractsOrderByRelevanceInput = {
  fields: Array<ContractsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ContractsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ContractsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ContractsCountOrderByAggregateInput>;
  _max?: InputMaybe<ContractsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ContractsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ContractsSumOrderByAggregateInput>;
  account?: InputMaybe<SortOrder>;
  company_signed_date?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  contract_manager?: InputMaybe<SortOrder>;
  contract_title?: InputMaybe<SortOrder>;
  contract_type?: InputMaybe<SortOrder>;
  contract_value?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  customer_signed_date?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line_items?: InputMaybe<SortOrder>;
  opportunity?: InputMaybe<SortOrder>;
  renewal_reminder?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type ContractsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ContractsOrderByRelevanceInput>;
  account?: InputMaybe<SortOrder>;
  company_signed_date?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  contract_manager?: InputMaybe<SortOrder>;
  contract_title?: InputMaybe<SortOrder>;
  contract_type?: InputMaybe<SortOrder>;
  contract_value?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  customer_signed_date?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line_items?: InputMaybe<SortOrder>;
  opportunity?: InputMaybe<SortOrder>;
  renewal_reminder?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export enum ContractsScalarFieldEnum {
  Account = 'account',
  CompanySignedDate = 'company_signed_date',
  Contact = 'contact',
  ContractManager = 'contract_manager',
  ContractTitle = 'contract_title',
  ContractType = 'contract_type',
  ContractValue = 'contract_value',
  CreatedAt = 'created_at',
  Currency = 'currency',
  CustomerSignedDate = 'customer_signed_date',
  Description = 'description',
  Discount = 'discount',
  EndDate = 'end_date',
  GrandTotal = 'grand_total',
  Id = 'id',
  LineItems = 'line_items',
  Opportunity = 'opportunity',
  RenewalReminder = 'renewal_reminder',
  Shipping = 'shipping',
  ShippingTax = 'shipping_tax',
  StartDate = 'start_date',
  Status = 'status',
  Subtotal = 'subtotal',
  Tax = 'tax',
  Total = 'total'
}

export type ContractsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ContractsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ContractsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ContractsScalarWhereWithAggregatesInput>>;
  account?: InputMaybe<StringNullableWithAggregatesFilter>;
  company_signed_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  contact?: InputMaybe<StringNullableWithAggregatesFilter>;
  contract_manager?: InputMaybe<StringNullableWithAggregatesFilter>;
  contract_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  contract_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  contract_value?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_signed_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  grand_total?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  line_items?: InputMaybe<StringNullableWithAggregatesFilter>;
  opportunity?: InputMaybe<StringNullableWithAggregatesFilter>;
  renewal_reminder?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  subtotal?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  total?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ContractsSumAggregate = {
  __typename?: 'ContractsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ContractsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ContractsUpdateInput = {
  account?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company_signed_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_signed_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  line_items?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  opportunity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  renewal_reminder?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContractsUpdateManyMutationInput = {
  account?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company_signed_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_signed_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  line_items?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  opportunity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  renewal_reminder?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContractsWhereInput = {
  AND?: InputMaybe<Array<ContractsWhereInput>>;
  NOT?: InputMaybe<Array<ContractsWhereInput>>;
  OR?: InputMaybe<Array<ContractsWhereInput>>;
  account?: InputMaybe<StringNullableFilter>;
  company_signed_date?: InputMaybe<StringNullableFilter>;
  contact?: InputMaybe<StringNullableFilter>;
  contract_manager?: InputMaybe<StringNullableFilter>;
  contract_title?: InputMaybe<StringNullableFilter>;
  contract_type?: InputMaybe<StringNullableFilter>;
  contract_value?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  currency?: InputMaybe<StringNullableFilter>;
  customer_signed_date?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  grand_total?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  line_items?: InputMaybe<StringNullableFilter>;
  opportunity?: InputMaybe<StringNullableFilter>;
  renewal_reminder?: InputMaybe<StringNullableFilter>;
  shipping?: InputMaybe<StringNullableFilter>;
  shipping_tax?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subtotal?: InputMaybe<StringNullableFilter>;
  tax?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<StringNullableFilter>;
};

export type ContractsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Countries = {
  __typename?: 'Countries';
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  region?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CountriesAvgAggregate = {
  __typename?: 'CountriesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CountriesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CountriesCountAggregate = {
  __typename?: 'CountriesCountAggregate';
  _all: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  region: Scalars['Int'];
  trainings: Scalars['Int'];
};

export type CountriesCountOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CountriesCreateInput = {
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  region?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
};

export type CountriesCreateManyInput = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  region?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
};

export type CountriesGroupBy = {
  __typename?: 'CountriesGroupBy';
  _avg?: Maybe<CountriesAvgAggregate>;
  _count?: Maybe<CountriesCountAggregate>;
  _max?: Maybe<CountriesMaxAggregate>;
  _min?: Maybe<CountriesMinAggregate>;
  _sum?: Maybe<CountriesSumAggregate>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  region?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CountriesMaxAggregate = {
  __typename?: 'CountriesMaxAggregate';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CountriesMaxOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CountriesMinAggregate = {
  __typename?: 'CountriesMinAggregate';
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type CountriesMinOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum CountriesOrderByRelevanceFieldEnum {
  Description = 'description',
  Image = 'image',
  Name = 'name',
  Region = 'region',
  Trainings = 'trainings'
}

export type CountriesOrderByRelevanceInput = {
  fields: Array<CountriesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CountriesOrderByWithAggregationInput = {
  _avg?: InputMaybe<CountriesAvgOrderByAggregateInput>;
  _count?: InputMaybe<CountriesCountOrderByAggregateInput>;
  _max?: InputMaybe<CountriesMaxOrderByAggregateInput>;
  _min?: InputMaybe<CountriesMinOrderByAggregateInput>;
  _sum?: InputMaybe<CountriesSumOrderByAggregateInput>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type CountriesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CountriesOrderByRelevanceInput>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum CountriesScalarFieldEnum {
  Description = 'description',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Region = 'region',
  Trainings = 'trainings'
}

export type CountriesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CountriesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CountriesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CountriesScalarWhereWithAggregatesInput>>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  region?: InputMaybe<StringNullableWithAggregatesFilter>;
  trainings?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CountriesSumAggregate = {
  __typename?: 'CountriesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type CountriesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CountriesUpdateInput = {
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CountriesUpdateManyMutationInput = {
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CountriesWhereInput = {
  AND?: InputMaybe<Array<CountriesWhereInput>>;
  NOT?: InputMaybe<Array<CountriesWhereInput>>;
  OR?: InputMaybe<Array<CountriesWhereInput>>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  region?: InputMaybe<StringNullableFilter>;
  trainings?: InputMaybe<StringNullableFilter>;
};

export type CountriesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Coupons = {
  __typename?: 'Coupons';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  products_couponsToproducts?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  users?: Maybe<Scalars['String']>;
};

export type CouponsAvgAggregate = {
  __typename?: 'CouponsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type CouponsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type CouponsCountAggregate = {
  __typename?: 'CouponsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  customers: Scalars['Int'];
  discount: Scalars['Int'];
  excerpt: Scalars['Int'];
  expiration: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  products_couponsToproducts: Scalars['Int'];
  published: Scalars['Int'];
  users: Scalars['Int'];
};

export type CouponsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_couponsToproducts?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type CouponsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  products_couponsToproducts?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  users?: InputMaybe<Scalars['String']>;
};

export type CouponsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  products_couponsToproducts?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  users?: InputMaybe<Scalars['String']>;
};

export type CouponsGroupBy = {
  __typename?: 'CouponsGroupBy';
  _avg?: Maybe<CouponsAvgAggregate>;
  _count?: Maybe<CouponsCountAggregate>;
  _max?: Maybe<CouponsMaxAggregate>;
  _min?: Maybe<CouponsMinAggregate>;
  _sum?: Maybe<CouponsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  products_couponsToproducts?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  users?: Maybe<Scalars['String']>;
};

export type CouponsMaxAggregate = {
  __typename?: 'CouponsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  products_couponsToproducts?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  users?: Maybe<Scalars['String']>;
};

export type CouponsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_couponsToproducts?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type CouponsMinAggregate = {
  __typename?: 'CouponsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  products_couponsToproducts?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  users?: Maybe<Scalars['String']>;
};

export type CouponsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_couponsToproducts?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum CouponsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Discount = 'discount',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  ProductsCouponsToproducts = 'products_couponsToproducts',
  Users = 'users'
}

export type CouponsOrderByRelevanceInput = {
  fields: Array<CouponsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CouponsOrderByWithAggregationInput = {
  _avg?: InputMaybe<CouponsAvgOrderByAggregateInput>;
  _count?: InputMaybe<CouponsCountOrderByAggregateInput>;
  _max?: InputMaybe<CouponsMaxOrderByAggregateInput>;
  _min?: InputMaybe<CouponsMinOrderByAggregateInput>;
  _sum?: InputMaybe<CouponsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_couponsToproducts?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type CouponsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CouponsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_couponsToproducts?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum CouponsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Discount = 'discount',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  ProdId = 'prod_id',
  Products = 'products',
  ProductsCouponsToproducts = 'products_couponsToproducts',
  Published = 'published',
  Users = 'users'
}

export type CouponsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CouponsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CouponsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CouponsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  products_couponsToproducts?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CouponsSumAggregate = {
  __typename?: 'CouponsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type CouponsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type CouponsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products_couponsToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products_couponsToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponsWhereInput = {
  AND?: InputMaybe<Array<CouponsWhereInput>>;
  NOT?: InputMaybe<Array<CouponsWhereInput>>;
  OR?: InputMaybe<Array<CouponsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  expiration?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  products_couponsToproducts?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type CouponsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Credit_Memos = {
  __typename?: 'Credit_memos';
  action?: Maybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  created?: Maybe<Scalars['DateTime']>;
  credit_memo: Scalars['String'];
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  order_number: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  refunded?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type Credit_MemosAvgAggregate = {
  __typename?: 'Credit_memosAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_number?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type Credit_MemosAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Credit_MemosCountAggregate = {
  __typename?: 'Credit_memosCountAggregate';
  _all: Scalars['Int'];
  action: Scalars['Int'];
  bill_to_name: Scalars['Int'];
  created: Scalars['Int'];
  credit_memo: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  id: Scalars['Int'];
  order_number: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  refunded: Scalars['Int'];
  status: Scalars['Int'];
};

export type Credit_MemosCountOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  credit_memo?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  refunded?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type Credit_MemosCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  created?: InputMaybe<Scalars['DateTime']>;
  credit_memo: Scalars['String'];
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  id: Scalars['BigInt'];
  order_number: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  refunded?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type Credit_MemosCreateManyInput = {
  action?: InputMaybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  created?: InputMaybe<Scalars['DateTime']>;
  credit_memo: Scalars['String'];
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  id: Scalars['BigInt'];
  order_number: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  refunded?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type Credit_MemosGroupBy = {
  __typename?: 'Credit_memosGroupBy';
  _avg?: Maybe<Credit_MemosAvgAggregate>;
  _count?: Maybe<Credit_MemosCountAggregate>;
  _max?: Maybe<Credit_MemosMaxAggregate>;
  _min?: Maybe<Credit_MemosMinAggregate>;
  _sum?: Maybe<Credit_MemosSumAggregate>;
  action?: Maybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  created?: Maybe<Scalars['DateTime']>;
  credit_memo: Scalars['String'];
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  order_number: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  refunded?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type Credit_MemosMaxAggregate = {
  __typename?: 'Credit_memosMaxAggregate';
  action?: Maybe<Scalars['String']>;
  bill_to_name?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  credit_memo?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  order_number?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  refunded?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type Credit_MemosMaxOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  credit_memo?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  refunded?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type Credit_MemosMinAggregate = {
  __typename?: 'Credit_memosMinAggregate';
  action?: Maybe<Scalars['String']>;
  bill_to_name?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  credit_memo?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  order_number?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  refunded?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type Credit_MemosMinOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  credit_memo?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  refunded?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum Credit_MemosOrderByRelevanceFieldEnum {
  Action = 'action',
  BillToName = 'bill_to_name',
  CreditMemo = 'credit_memo',
  Customers = 'customers',
  Products = 'products',
  Refunded = 'refunded',
  Status = 'status'
}

export type Credit_MemosOrderByRelevanceInput = {
  fields: Array<Credit_MemosOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Credit_MemosOrderByWithAggregationInput = {
  _avg?: InputMaybe<Credit_MemosAvgOrderByAggregateInput>;
  _count?: InputMaybe<Credit_MemosCountOrderByAggregateInput>;
  _max?: InputMaybe<Credit_MemosMaxOrderByAggregateInput>;
  _min?: InputMaybe<Credit_MemosMinOrderByAggregateInput>;
  _sum?: InputMaybe<Credit_MemosSumOrderByAggregateInput>;
  action?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  credit_memo?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  refunded?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type Credit_MemosOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Credit_MemosOrderByRelevanceInput>;
  action?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  credit_memo?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  refunded?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum Credit_MemosScalarFieldEnum {
  Action = 'action',
  BillToName = 'bill_to_name',
  Created = 'created',
  CreditMemo = 'credit_memo',
  CustId = 'cust_id',
  Customers = 'customers',
  Id = 'id',
  OrderNumber = 'order_number',
  ProdId = 'prod_id',
  Products = 'products',
  Refunded = 'refunded',
  Status = 'status'
}

export type Credit_MemosScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Credit_MemosScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Credit_MemosScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Credit_MemosScalarWhereWithAggregatesInput>>;
  action?: InputMaybe<StringNullableWithAggregatesFilter>;
  bill_to_name?: InputMaybe<StringWithAggregatesFilter>;
  created?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  credit_memo?: InputMaybe<StringWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  order_number?: InputMaybe<IntWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  refunded?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Credit_MemosSumAggregate = {
  __typename?: 'Credit_memosSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['BigInt']>;
  order_number?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type Credit_MemosSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Credit_MemosUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  credit_memo?: InputMaybe<StringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  order_number?: InputMaybe<IntFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refunded?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Credit_MemosUpdateManyMutationInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  credit_memo?: InputMaybe<StringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  order_number?: InputMaybe<IntFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refunded?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Credit_MemosWhereInput = {
  AND?: InputMaybe<Array<Credit_MemosWhereInput>>;
  NOT?: InputMaybe<Array<Credit_MemosWhereInput>>;
  OR?: InputMaybe<Array<Credit_MemosWhereInput>>;
  action?: InputMaybe<StringNullableFilter>;
  bill_to_name?: InputMaybe<StringFilter>;
  created?: InputMaybe<DateTimeNullableFilter>;
  credit_memo?: InputMaybe<StringFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  order_number?: InputMaybe<IntFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  refunded?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
};

export type Credit_MemosWhereUniqueInput = {
  credit_memo_id?: InputMaybe<Credit_MemosCredit_MemoIdCompoundUniqueInput>;
};

export type Currencies = {
  __typename?: 'Currencies';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
};

export type CurrenciesAvgAggregate = {
  __typename?: 'CurrenciesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CurrenciesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CurrenciesCountAggregate = {
  __typename?: 'CurrenciesCountAggregate';
  _all: Scalars['Int'];
  code: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  region: Scalars['Int'];
};

export type CurrenciesCountOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
};

export type CurrenciesCreateInput = {
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
};

export type CurrenciesCreateManyInput = {
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
};

export type CurrenciesGroupBy = {
  __typename?: 'CurrenciesGroupBy';
  _avg?: Maybe<CurrenciesAvgAggregate>;
  _count?: Maybe<CurrenciesCountAggregate>;
  _max?: Maybe<CurrenciesMaxAggregate>;
  _min?: Maybe<CurrenciesMinAggregate>;
  _sum?: Maybe<CurrenciesSumAggregate>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
};

export type CurrenciesMaxAggregate = {
  __typename?: 'CurrenciesMaxAggregate';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
};

export type CurrenciesMaxOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
};

export type CurrenciesMinAggregate = {
  __typename?: 'CurrenciesMinAggregate';
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
};

export type CurrenciesMinOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
};

export enum CurrenciesOrderByRelevanceFieldEnum {
  Code = 'code',
  Name = 'name',
  Region = 'region'
}

export type CurrenciesOrderByRelevanceInput = {
  fields: Array<CurrenciesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CurrenciesOrderByWithAggregationInput = {
  _avg?: InputMaybe<CurrenciesAvgOrderByAggregateInput>;
  _count?: InputMaybe<CurrenciesCountOrderByAggregateInput>;
  _max?: InputMaybe<CurrenciesMaxOrderByAggregateInput>;
  _min?: InputMaybe<CurrenciesMinOrderByAggregateInput>;
  _sum?: InputMaybe<CurrenciesSumOrderByAggregateInput>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
};

export type CurrenciesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CurrenciesOrderByRelevanceInput>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
};

export enum CurrenciesScalarFieldEnum {
  Code = 'code',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Region = 'region'
}

export type CurrenciesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CurrenciesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CurrenciesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CurrenciesScalarWhereWithAggregatesInput>>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  region?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CurrenciesSumAggregate = {
  __typename?: 'CurrenciesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type CurrenciesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CurrenciesUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CurrenciesUpdateManyMutationInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CurrenciesWhereInput = {
  AND?: InputMaybe<Array<CurrenciesWhereInput>>;
  NOT?: InputMaybe<Array<CurrenciesWhereInput>>;
  OR?: InputMaybe<Array<CurrenciesWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  region?: InputMaybe<StringNullableFilter>;
};

export type CurrenciesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Currency_Rates = {
  __typename?: 'Currency_rates';
  id: Scalars['BigInt'];
  import_service: Scalars['String'];
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesAvgAggregate = {
  __typename?: 'Currency_ratesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export type Currency_RatesCountAggregate = {
  __typename?: 'Currency_ratesCountAggregate';
  _all: Scalars['Int'];
  id: Scalars['Int'];
  import_service: Scalars['Int'];
  usd: Scalars['Int'];
};

export type Currency_RatesCountOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  import_service?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export type Currency_RatesCreateInput = {
  id: Scalars['BigInt'];
  import_service: Scalars['String'];
  usd?: InputMaybe<Scalars['Decimal']>;
};

export type Currency_RatesCreateManyInput = {
  id: Scalars['BigInt'];
  import_service: Scalars['String'];
  usd?: InputMaybe<Scalars['Decimal']>;
};

export type Currency_RatesGroupBy = {
  __typename?: 'Currency_ratesGroupBy';
  _avg?: Maybe<Currency_RatesAvgAggregate>;
  _count?: Maybe<Currency_RatesCountAggregate>;
  _max?: Maybe<Currency_RatesMaxAggregate>;
  _min?: Maybe<Currency_RatesMinAggregate>;
  _sum?: Maybe<Currency_RatesSumAggregate>;
  id: Scalars['BigInt'];
  import_service: Scalars['String'];
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesMaxAggregate = {
  __typename?: 'Currency_ratesMaxAggregate';
  id?: Maybe<Scalars['BigInt']>;
  import_service?: Maybe<Scalars['String']>;
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesMaxOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  import_service?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export type Currency_RatesMinAggregate = {
  __typename?: 'Currency_ratesMinAggregate';
  id?: Maybe<Scalars['BigInt']>;
  import_service?: Maybe<Scalars['String']>;
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesMinOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  import_service?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export enum Currency_RatesOrderByRelevanceFieldEnum {
  ImportService = 'import_service'
}

export type Currency_RatesOrderByRelevanceInput = {
  fields: Array<Currency_RatesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Currency_RatesOrderByWithAggregationInput = {
  _avg?: InputMaybe<Currency_RatesAvgOrderByAggregateInput>;
  _count?: InputMaybe<Currency_RatesCountOrderByAggregateInput>;
  _max?: InputMaybe<Currency_RatesMaxOrderByAggregateInput>;
  _min?: InputMaybe<Currency_RatesMinOrderByAggregateInput>;
  _sum?: InputMaybe<Currency_RatesSumOrderByAggregateInput>;
  id?: InputMaybe<SortOrder>;
  import_service?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export type Currency_RatesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Currency_RatesOrderByRelevanceInput>;
  id?: InputMaybe<SortOrder>;
  import_service?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export enum Currency_RatesScalarFieldEnum {
  Id = 'id',
  ImportService = 'import_service',
  Usd = 'usd'
}

export type Currency_RatesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Currency_RatesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Currency_RatesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Currency_RatesScalarWhereWithAggregatesInput>>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  import_service?: InputMaybe<StringWithAggregatesFilter>;
  usd?: InputMaybe<DecimalNullableWithAggregatesFilter>;
};

export type Currency_RatesSumAggregate = {
  __typename?: 'Currency_ratesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  usd?: Maybe<Scalars['Decimal']>;
};

export type Currency_RatesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  usd?: InputMaybe<SortOrder>;
};

export type Currency_RatesUpdateInput = {
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  import_service?: InputMaybe<StringFieldUpdateOperationsInput>;
  usd?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type Currency_RatesUpdateManyMutationInput = {
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  import_service?: InputMaybe<StringFieldUpdateOperationsInput>;
  usd?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type Currency_RatesWhereInput = {
  AND?: InputMaybe<Array<Currency_RatesWhereInput>>;
  NOT?: InputMaybe<Array<Currency_RatesWhereInput>>;
  OR?: InputMaybe<Array<Currency_RatesWhereInput>>;
  id?: InputMaybe<BigIntFilter>;
  import_service?: InputMaybe<StringFilter>;
  usd?: InputMaybe<DecimalNullableFilter>;
};

export type Currency_RatesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  import_service?: InputMaybe<Scalars['String']>;
};

export type Currency_Symbols = {
  __typename?: 'Currency_symbols';
  id: Scalars['BigInt'];
  symbol: Scalars['String'];
  use_standard?: Maybe<Scalars['Boolean']>;
};

export type Currency_SymbolsAvgAggregate = {
  __typename?: 'Currency_symbolsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type Currency_SymbolsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Currency_SymbolsCountAggregate = {
  __typename?: 'Currency_symbolsCountAggregate';
  _all: Scalars['Int'];
  id: Scalars['Int'];
  symbol: Scalars['Int'];
  use_standard: Scalars['Int'];
};

export type Currency_SymbolsCountOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  use_standard?: InputMaybe<SortOrder>;
};

export type Currency_SymbolsCreateInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  symbol: Scalars['String'];
  use_standard?: InputMaybe<Scalars['Boolean']>;
};

export type Currency_SymbolsCreateManyInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  symbol: Scalars['String'];
  use_standard?: InputMaybe<Scalars['Boolean']>;
};

export type Currency_SymbolsGroupBy = {
  __typename?: 'Currency_symbolsGroupBy';
  _avg?: Maybe<Currency_SymbolsAvgAggregate>;
  _count?: Maybe<Currency_SymbolsCountAggregate>;
  _max?: Maybe<Currency_SymbolsMaxAggregate>;
  _min?: Maybe<Currency_SymbolsMinAggregate>;
  _sum?: Maybe<Currency_SymbolsSumAggregate>;
  id: Scalars['BigInt'];
  symbol: Scalars['String'];
  use_standard?: Maybe<Scalars['Boolean']>;
};

export type Currency_SymbolsMaxAggregate = {
  __typename?: 'Currency_symbolsMaxAggregate';
  id?: Maybe<Scalars['BigInt']>;
  symbol?: Maybe<Scalars['String']>;
  use_standard?: Maybe<Scalars['Boolean']>;
};

export type Currency_SymbolsMaxOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  use_standard?: InputMaybe<SortOrder>;
};

export type Currency_SymbolsMinAggregate = {
  __typename?: 'Currency_symbolsMinAggregate';
  id?: Maybe<Scalars['BigInt']>;
  symbol?: Maybe<Scalars['String']>;
  use_standard?: Maybe<Scalars['Boolean']>;
};

export type Currency_SymbolsMinOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  use_standard?: InputMaybe<SortOrder>;
};

export enum Currency_SymbolsOrderByRelevanceFieldEnum {
  Symbol = 'symbol'
}

export type Currency_SymbolsOrderByRelevanceInput = {
  fields: Array<Currency_SymbolsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Currency_SymbolsOrderByWithAggregationInput = {
  _avg?: InputMaybe<Currency_SymbolsAvgOrderByAggregateInput>;
  _count?: InputMaybe<Currency_SymbolsCountOrderByAggregateInput>;
  _max?: InputMaybe<Currency_SymbolsMaxOrderByAggregateInput>;
  _min?: InputMaybe<Currency_SymbolsMinOrderByAggregateInput>;
  _sum?: InputMaybe<Currency_SymbolsSumOrderByAggregateInput>;
  id?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  use_standard?: InputMaybe<SortOrder>;
};

export type Currency_SymbolsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Currency_SymbolsOrderByRelevanceInput>;
  id?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  use_standard?: InputMaybe<SortOrder>;
};

export enum Currency_SymbolsScalarFieldEnum {
  Id = 'id',
  Symbol = 'symbol',
  UseStandard = 'use_standard'
}

export type Currency_SymbolsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Currency_SymbolsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Currency_SymbolsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Currency_SymbolsScalarWhereWithAggregatesInput>>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  symbol?: InputMaybe<StringWithAggregatesFilter>;
  use_standard?: InputMaybe<BoolNullableWithAggregatesFilter>;
};

export type Currency_SymbolsSumAggregate = {
  __typename?: 'Currency_symbolsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type Currency_SymbolsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Currency_SymbolsUpdateInput = {
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  symbol?: InputMaybe<StringFieldUpdateOperationsInput>;
  use_standard?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type Currency_SymbolsUpdateManyMutationInput = {
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  symbol?: InputMaybe<StringFieldUpdateOperationsInput>;
  use_standard?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type Currency_SymbolsWhereInput = {
  AND?: InputMaybe<Array<Currency_SymbolsWhereInput>>;
  NOT?: InputMaybe<Array<Currency_SymbolsWhereInput>>;
  OR?: InputMaybe<Array<Currency_SymbolsWhereInput>>;
  id?: InputMaybe<BigIntFilter>;
  symbol?: InputMaybe<StringFilter>;
  use_standard?: InputMaybe<BoolNullableFilter>;
};

export type Currency_SymbolsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  symbol?: InputMaybe<Scalars['String']>;
};

export type Customer_Group = {
  __typename?: 'Customer_group';
  content?: Maybe<Scalars['String']>;
  coverPhoto?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
};

export type Customer_GroupAvgAggregate = {
  __typename?: 'Customer_groupAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

export type Customer_GroupAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Customer_GroupCountAggregate = {
  __typename?: 'Customer_groupCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  coverPhoto: Scalars['Int'];
  created_at: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  tax_class: Scalars['Int'];
};

export type Customer_GroupCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  coverPhoto?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
};

export type Customer_GroupCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  coverPhoto?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tax_class?: InputMaybe<Scalars['String']>;
};

export type Customer_GroupCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  coverPhoto?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  tax_class?: InputMaybe<Scalars['String']>;
};

export type Customer_GroupGroupBy = {
  __typename?: 'Customer_groupGroupBy';
  _avg?: Maybe<Customer_GroupAvgAggregate>;
  _count?: Maybe<Customer_GroupCountAggregate>;
  _max?: Maybe<Customer_GroupMaxAggregate>;
  _min?: Maybe<Customer_GroupMinAggregate>;
  _sum?: Maybe<Customer_GroupSumAggregate>;
  content?: Maybe<Scalars['String']>;
  coverPhoto?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
};

export type Customer_GroupMaxAggregate = {
  __typename?: 'Customer_groupMaxAggregate';
  content?: Maybe<Scalars['String']>;
  coverPhoto?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
};

export type Customer_GroupMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  coverPhoto?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
};

export type Customer_GroupMinAggregate = {
  __typename?: 'Customer_groupMinAggregate';
  content?: Maybe<Scalars['String']>;
  coverPhoto?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
};

export type Customer_GroupMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  coverPhoto?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
};

export enum Customer_GroupOrderByRelevanceFieldEnum {
  Content = 'content',
  CoverPhoto = 'coverPhoto',
  Customers = 'customers',
  Image = 'image',
  Name = 'name',
  TaxClass = 'tax_class'
}

export type Customer_GroupOrderByRelevanceInput = {
  fields: Array<Customer_GroupOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Customer_GroupOrderByWithAggregationInput = {
  _avg?: InputMaybe<Customer_GroupAvgOrderByAggregateInput>;
  _count?: InputMaybe<Customer_GroupCountOrderByAggregateInput>;
  _max?: InputMaybe<Customer_GroupMaxOrderByAggregateInput>;
  _min?: InputMaybe<Customer_GroupMinOrderByAggregateInput>;
  _sum?: InputMaybe<Customer_GroupSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  coverPhoto?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
};

export type Customer_GroupOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Customer_GroupOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  coverPhoto?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
};

export enum Customer_GroupScalarFieldEnum {
  Content = 'content',
  CoverPhoto = 'coverPhoto',
  CreatedAt = 'created_at',
  CustId = 'cust_id',
  Customers = 'customers',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  TaxClass = 'tax_class'
}

export type Customer_GroupScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Customer_GroupScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Customer_GroupScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Customer_GroupScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  coverPhoto?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_class?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Customer_GroupSumAggregate = {
  __typename?: 'Customer_groupSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['BigInt']>;
};

export type Customer_GroupSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Customer_GroupUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coverPhoto?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Customer_GroupUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coverPhoto?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Customer_GroupWhereInput = {
  AND?: InputMaybe<Array<Customer_GroupWhereInput>>;
  NOT?: InputMaybe<Array<Customer_GroupWhereInput>>;
  OR?: InputMaybe<Array<Customer_GroupWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  coverPhoto?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  tax_class?: InputMaybe<StringNullableFilter>;
};

export type Customer_GroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Customers = {
  __typename?: 'Customers';
  Address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  confirmed_email?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_payment?: Maybe<Scalars['String']>;
  customer_since?: Maybe<Scalars['DateTime']>;
  date_of_birth?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email: Scalars['String'];
  emails?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  gender?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  last_name: Scalars['String'];
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  middle_name?: Maybe<Scalars['String']>;
  name_prefix?: Maybe<Scalars['String']>;
  name_suffix?: Maybe<Scalars['String']>;
  newsletter_subscribers?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  payment_type?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  returns?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_vat_number?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type CustomersAvgAggregate = {
  __typename?: 'CustomersAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CustomersAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CustomersCountAggregate = {
  __typename?: 'CustomersCountAggregate';
  Address: Scalars['Int'];
  _all: Scalars['Int'];
  address_two: Scalars['Int'];
  comments: Scalars['Int'];
  confirmed_email: Scalars['Int'];
  country: Scalars['Int'];
  credit_memos: Scalars['Int'];
  customer_group: Scalars['Int'];
  customer_payment: Scalars['Int'];
  customer_since: Scalars['Int'];
  date_of_birth: Scalars['Int'];
  description: Scalars['Int'];
  email: Scalars['Int'];
  emails: Scalars['Int'];
  first_name: Scalars['Int'];
  gender: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  last_name: Scalars['Int'];
  mediamanager: Scalars['Int'];
  messages: Scalars['Int'];
  middle_name: Scalars['Int'];
  name_prefix: Scalars['Int'];
  name_suffix: Scalars['Int'];
  newsletter_subscribers: Scalars['Int'];
  orders: Scalars['Int'];
  password: Scalars['Int'];
  payment_type: Scalars['Int'];
  phone: Scalars['Int'];
  product: Scalars['Int'];
  projects: Scalars['Int'];
  quotes: Scalars['Int'];
  returns: Scalars['Int'];
  short_description: Scalars['Int'];
  state: Scalars['Int'];
  tax_vat_number: Scalars['Int'];
  thumbnail: Scalars['Int'];
  username: Scalars['Int'];
  websites: Scalars['Int'];
  workspaces: Scalars['Int'];
  zipcode: Scalars['Int'];
};

export type CustomersCountOrderByAggregateInput = {
  Address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  confirmed_email?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  customer_since?: InputMaybe<SortOrder>;
  date_of_birth?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  middle_name?: InputMaybe<SortOrder>;
  name_prefix?: InputMaybe<SortOrder>;
  name_suffix?: InputMaybe<SortOrder>;
  newsletter_subscribers?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  payment_type?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_vat_number?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type CustomersCreateInput = {
  Address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  confirmed_email?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  credit_memos?: InputMaybe<Scalars['String']>;
  customer_group?: InputMaybe<Scalars['String']>;
  customer_payment?: InputMaybe<Scalars['String']>;
  customer_since?: InputMaybe<Scalars['DateTime']>;
  date_of_birth?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  emails?: InputMaybe<Scalars['String']>;
  first_name: Scalars['String'];
  gender?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  last_name: Scalars['String'];
  mediamanager?: InputMaybe<Scalars['String']>;
  messages?: InputMaybe<Scalars['String']>;
  middle_name?: InputMaybe<Scalars['String']>;
  name_prefix?: InputMaybe<Scalars['String']>;
  name_suffix?: InputMaybe<Scalars['String']>;
  newsletter_subscribers?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  payment_type?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  returns?: InputMaybe<Scalars['String']>;
  short_description?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tax_vat_number?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type CustomersCreateManyInput = {
  Address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  confirmed_email?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  credit_memos?: InputMaybe<Scalars['String']>;
  customer_group?: InputMaybe<Scalars['String']>;
  customer_payment?: InputMaybe<Scalars['String']>;
  customer_since?: InputMaybe<Scalars['DateTime']>;
  date_of_birth?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  emails?: InputMaybe<Scalars['String']>;
  first_name: Scalars['String'];
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  last_name: Scalars['String'];
  mediamanager?: InputMaybe<Scalars['String']>;
  messages?: InputMaybe<Scalars['String']>;
  middle_name?: InputMaybe<Scalars['String']>;
  name_prefix?: InputMaybe<Scalars['String']>;
  name_suffix?: InputMaybe<Scalars['String']>;
  newsletter_subscribers?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  payment_type?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  returns?: InputMaybe<Scalars['String']>;
  short_description?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tax_vat_number?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type CustomersGroupBy = {
  __typename?: 'CustomersGroupBy';
  Address?: Maybe<Scalars['String']>;
  _avg?: Maybe<CustomersAvgAggregate>;
  _count?: Maybe<CustomersCountAggregate>;
  _max?: Maybe<CustomersMaxAggregate>;
  _min?: Maybe<CustomersMinAggregate>;
  _sum?: Maybe<CustomersSumAggregate>;
  address_two?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  confirmed_email?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_payment?: Maybe<Scalars['String']>;
  customer_since?: Maybe<Scalars['DateTime']>;
  date_of_birth?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email: Scalars['String'];
  emails?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  gender?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  last_name: Scalars['String'];
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  middle_name?: Maybe<Scalars['String']>;
  name_prefix?: Maybe<Scalars['String']>;
  name_suffix?: Maybe<Scalars['String']>;
  newsletter_subscribers?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  payment_type?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  returns?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_vat_number?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type CustomersMaxAggregate = {
  __typename?: 'CustomersMaxAggregate';
  Address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  confirmed_email?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_payment?: Maybe<Scalars['String']>;
  customer_since?: Maybe<Scalars['DateTime']>;
  date_of_birth?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  emails?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  middle_name?: Maybe<Scalars['String']>;
  name_prefix?: Maybe<Scalars['String']>;
  name_suffix?: Maybe<Scalars['String']>;
  newsletter_subscribers?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  payment_type?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  returns?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_vat_number?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type CustomersMaxOrderByAggregateInput = {
  Address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  confirmed_email?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  customer_since?: InputMaybe<SortOrder>;
  date_of_birth?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  middle_name?: InputMaybe<SortOrder>;
  name_prefix?: InputMaybe<SortOrder>;
  name_suffix?: InputMaybe<SortOrder>;
  newsletter_subscribers?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  payment_type?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_vat_number?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type CustomersMinAggregate = {
  __typename?: 'CustomersMinAggregate';
  Address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  confirmed_email?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_payment?: Maybe<Scalars['String']>;
  customer_since?: Maybe<Scalars['DateTime']>;
  date_of_birth?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  emails?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  middle_name?: Maybe<Scalars['String']>;
  name_prefix?: Maybe<Scalars['String']>;
  name_suffix?: Maybe<Scalars['String']>;
  newsletter_subscribers?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  payment_type?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  returns?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_vat_number?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type CustomersMinOrderByAggregateInput = {
  Address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  confirmed_email?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  customer_since?: InputMaybe<SortOrder>;
  date_of_birth?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  middle_name?: InputMaybe<SortOrder>;
  name_prefix?: InputMaybe<SortOrder>;
  name_suffix?: InputMaybe<SortOrder>;
  newsletter_subscribers?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  payment_type?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_vat_number?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum CustomersOrderByRelevanceFieldEnum {
  Address = 'Address',
  AddressTwo = 'address_two',
  Comments = 'comments',
  ConfirmedEmail = 'confirmed_email',
  Country = 'country',
  CreditMemos = 'credit_memos',
  CustomerGroup = 'customer_group',
  CustomerPayment = 'customer_payment',
  DateOfBirth = 'date_of_birth',
  Description = 'description',
  Email = 'email',
  Emails = 'emails',
  FirstName = 'first_name',
  Gender = 'gender',
  Image = 'image',
  LastName = 'last_name',
  Mediamanager = 'mediamanager',
  Messages = 'messages',
  MiddleName = 'middle_name',
  NamePrefix = 'name_prefix',
  NameSuffix = 'name_suffix',
  NewsletterSubscribers = 'newsletter_subscribers',
  Orders = 'orders',
  Password = 'password',
  PaymentType = 'payment_type',
  Phone = 'phone',
  Product = 'product',
  Projects = 'projects',
  Quotes = 'quotes',
  Returns = 'returns',
  ShortDescription = 'short_description',
  State = 'state',
  TaxVatNumber = 'tax_vat_number',
  Thumbnail = 'thumbnail',
  Username = 'username',
  Websites = 'websites',
  Workspaces = 'workspaces',
  Zipcode = 'zipcode'
}

export type CustomersOrderByRelevanceInput = {
  fields: Array<CustomersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CustomersOrderByWithAggregationInput = {
  Address?: InputMaybe<SortOrder>;
  _avg?: InputMaybe<CustomersAvgOrderByAggregateInput>;
  _count?: InputMaybe<CustomersCountOrderByAggregateInput>;
  _max?: InputMaybe<CustomersMaxOrderByAggregateInput>;
  _min?: InputMaybe<CustomersMinOrderByAggregateInput>;
  _sum?: InputMaybe<CustomersSumOrderByAggregateInput>;
  address_two?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  confirmed_email?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  customer_since?: InputMaybe<SortOrder>;
  date_of_birth?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  middle_name?: InputMaybe<SortOrder>;
  name_prefix?: InputMaybe<SortOrder>;
  name_suffix?: InputMaybe<SortOrder>;
  newsletter_subscribers?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  payment_type?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_vat_number?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type CustomersOrderByWithRelationAndSearchRelevanceInput = {
  Address?: InputMaybe<SortOrder>;
  _relevance?: InputMaybe<CustomersOrderByRelevanceInput>;
  address_two?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  confirmed_email?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  customer_since?: InputMaybe<SortOrder>;
  date_of_birth?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  middle_name?: InputMaybe<SortOrder>;
  name_prefix?: InputMaybe<SortOrder>;
  name_suffix?: InputMaybe<SortOrder>;
  newsletter_subscribers?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  payment_type?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_vat_number?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum CustomersScalarFieldEnum {
  Address = 'Address',
  AddressTwo = 'address_two',
  Comments = 'comments',
  ConfirmedEmail = 'confirmed_email',
  Country = 'country',
  CreditMemos = 'credit_memos',
  CustomerGroup = 'customer_group',
  CustomerPayment = 'customer_payment',
  CustomerSince = 'customer_since',
  DateOfBirth = 'date_of_birth',
  Description = 'description',
  Email = 'email',
  Emails = 'emails',
  FirstName = 'first_name',
  Gender = 'gender',
  Id = 'id',
  Image = 'image',
  LastName = 'last_name',
  Mediamanager = 'mediamanager',
  Messages = 'messages',
  MiddleName = 'middle_name',
  NamePrefix = 'name_prefix',
  NameSuffix = 'name_suffix',
  NewsletterSubscribers = 'newsletter_subscribers',
  Orders = 'orders',
  Password = 'password',
  PaymentType = 'payment_type',
  Phone = 'phone',
  Product = 'product',
  Projects = 'projects',
  Quotes = 'quotes',
  Returns = 'returns',
  ShortDescription = 'short_description',
  State = 'state',
  TaxVatNumber = 'tax_vat_number',
  Thumbnail = 'thumbnail',
  Username = 'username',
  Websites = 'websites',
  Workspaces = 'workspaces',
  Zipcode = 'zipcode'
}

export type CustomersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CustomersScalarWhereWithAggregatesInput>>;
  Address?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<CustomersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CustomersScalarWhereWithAggregatesInput>>;
  address_two?: InputMaybe<StringNullableWithAggregatesFilter>;
  comments?: InputMaybe<StringNullableWithAggregatesFilter>;
  confirmed_email?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  credit_memos?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_group?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_payment?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_since?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  date_of_birth?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringWithAggregatesFilter>;
  emails?: InputMaybe<StringNullableWithAggregatesFilter>;
  first_name?: InputMaybe<StringWithAggregatesFilter>;
  gender?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  last_name?: InputMaybe<StringWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  messages?: InputMaybe<StringNullableWithAggregatesFilter>;
  middle_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  name_prefix?: InputMaybe<StringNullableWithAggregatesFilter>;
  name_suffix?: InputMaybe<StringNullableWithAggregatesFilter>;
  newsletter_subscribers?: InputMaybe<StringNullableWithAggregatesFilter>;
  orders?: InputMaybe<StringNullableWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<StringNullableWithAggregatesFilter>;
  quotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  returns?: InputMaybe<StringNullableWithAggregatesFilter>;
  short_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_vat_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  thumbnail?: InputMaybe<StringNullableWithAggregatesFilter>;
  username?: InputMaybe<StringNullableWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  zipcode?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CustomersSumAggregate = {
  __typename?: 'CustomersSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type CustomersSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CustomersUpdateInput = {
  Address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  confirmed_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  credit_memos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_group?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_payment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_since?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_of_birth?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  emails?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  messages?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  middle_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name_suffix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  newsletter_subscribers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  returns?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  short_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_vat_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomersUpdateManyMutationInput = {
  Address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  confirmed_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  credit_memos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_group?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_payment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_since?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date_of_birth?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  emails?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  messages?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  middle_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name_suffix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  newsletter_subscribers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  returns?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  short_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_vat_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomersWhereInput = {
  AND?: InputMaybe<Array<CustomersWhereInput>>;
  Address?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<CustomersWhereInput>>;
  OR?: InputMaybe<Array<CustomersWhereInput>>;
  address_two?: InputMaybe<StringNullableFilter>;
  comments?: InputMaybe<StringNullableFilter>;
  confirmed_email?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  credit_memos?: InputMaybe<StringNullableFilter>;
  customer_group?: InputMaybe<StringNullableFilter>;
  customer_payment?: InputMaybe<StringNullableFilter>;
  customer_since?: InputMaybe<DateTimeNullableFilter>;
  date_of_birth?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringFilter>;
  emails?: InputMaybe<StringNullableFilter>;
  first_name?: InputMaybe<StringFilter>;
  gender?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  last_name?: InputMaybe<StringFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  messages?: InputMaybe<StringNullableFilter>;
  middle_name?: InputMaybe<StringNullableFilter>;
  name_prefix?: InputMaybe<StringNullableFilter>;
  name_suffix?: InputMaybe<StringNullableFilter>;
  newsletter_subscribers?: InputMaybe<StringNullableFilter>;
  orders?: InputMaybe<StringNullableFilter>;
  password?: InputMaybe<StringNullableFilter>;
  payment_type?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<StringNullableFilter>;
  quotes?: InputMaybe<StringNullableFilter>;
  returns?: InputMaybe<StringNullableFilter>;
  short_description?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  tax_vat_number?: InputMaybe<StringNullableFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  username?: InputMaybe<StringNullableFilter>;
  websites?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
  zipcode?: InputMaybe<StringNullableFilter>;
};

export type CustomersWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Customizations = {
  __typename?: 'Customizations';
  allow_signup?: Maybe<Scalars['String']>;
  announcement?: Maybe<Scalars['String']>;
  banner?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  footer_link?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  nav_link?: Maybe<Scalars['String']>;
  notification?: Maybe<Scalars['String']>;
  site_name?: Maybe<Scalars['String']>;
  site_url?: Maybe<Scalars['String']>;
};

export type CustomizationsAvgAggregate = {
  __typename?: 'CustomizationsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type CustomizationsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CustomizationsCountAggregate = {
  __typename?: 'CustomizationsCountAggregate';
  _all: Scalars['Int'];
  allow_signup: Scalars['Int'];
  announcement: Scalars['Int'];
  banner: Scalars['Int'];
  created_at: Scalars['Int'];
  email: Scalars['Int'];
  footer_link: Scalars['Int'];
  id: Scalars['Int'];
  nav_link: Scalars['Int'];
  notification: Scalars['Int'];
  site_name: Scalars['Int'];
  site_url: Scalars['Int'];
};

export type CustomizationsCountOrderByAggregateInput = {
  allow_signup?: InputMaybe<SortOrder>;
  announcement?: InputMaybe<SortOrder>;
  banner?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  footer_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  nav_link?: InputMaybe<SortOrder>;
  notification?: InputMaybe<SortOrder>;
  site_name?: InputMaybe<SortOrder>;
  site_url?: InputMaybe<SortOrder>;
};

export type CustomizationsCreateInput = {
  allow_signup?: InputMaybe<Scalars['String']>;
  announcement?: InputMaybe<Scalars['String']>;
  banner?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  footer_link?: InputMaybe<Scalars['String']>;
  nav_link?: InputMaybe<Scalars['String']>;
  notification?: InputMaybe<Scalars['String']>;
  site_name?: InputMaybe<Scalars['String']>;
  site_url?: InputMaybe<Scalars['String']>;
};

export type CustomizationsCreateManyInput = {
  allow_signup?: InputMaybe<Scalars['String']>;
  announcement?: InputMaybe<Scalars['String']>;
  banner?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  footer_link?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  nav_link?: InputMaybe<Scalars['String']>;
  notification?: InputMaybe<Scalars['String']>;
  site_name?: InputMaybe<Scalars['String']>;
  site_url?: InputMaybe<Scalars['String']>;
};

export type CustomizationsGroupBy = {
  __typename?: 'CustomizationsGroupBy';
  _avg?: Maybe<CustomizationsAvgAggregate>;
  _count?: Maybe<CustomizationsCountAggregate>;
  _max?: Maybe<CustomizationsMaxAggregate>;
  _min?: Maybe<CustomizationsMinAggregate>;
  _sum?: Maybe<CustomizationsSumAggregate>;
  allow_signup?: Maybe<Scalars['String']>;
  announcement?: Maybe<Scalars['String']>;
  banner?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  footer_link?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  nav_link?: Maybe<Scalars['String']>;
  notification?: Maybe<Scalars['String']>;
  site_name?: Maybe<Scalars['String']>;
  site_url?: Maybe<Scalars['String']>;
};

export type CustomizationsMaxAggregate = {
  __typename?: 'CustomizationsMaxAggregate';
  allow_signup?: Maybe<Scalars['String']>;
  announcement?: Maybe<Scalars['String']>;
  banner?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  footer_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nav_link?: Maybe<Scalars['String']>;
  notification?: Maybe<Scalars['String']>;
  site_name?: Maybe<Scalars['String']>;
  site_url?: Maybe<Scalars['String']>;
};

export type CustomizationsMaxOrderByAggregateInput = {
  allow_signup?: InputMaybe<SortOrder>;
  announcement?: InputMaybe<SortOrder>;
  banner?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  footer_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  nav_link?: InputMaybe<SortOrder>;
  notification?: InputMaybe<SortOrder>;
  site_name?: InputMaybe<SortOrder>;
  site_url?: InputMaybe<SortOrder>;
};

export type CustomizationsMinAggregate = {
  __typename?: 'CustomizationsMinAggregate';
  allow_signup?: Maybe<Scalars['String']>;
  announcement?: Maybe<Scalars['String']>;
  banner?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  footer_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  nav_link?: Maybe<Scalars['String']>;
  notification?: Maybe<Scalars['String']>;
  site_name?: Maybe<Scalars['String']>;
  site_url?: Maybe<Scalars['String']>;
};

export type CustomizationsMinOrderByAggregateInput = {
  allow_signup?: InputMaybe<SortOrder>;
  announcement?: InputMaybe<SortOrder>;
  banner?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  footer_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  nav_link?: InputMaybe<SortOrder>;
  notification?: InputMaybe<SortOrder>;
  site_name?: InputMaybe<SortOrder>;
  site_url?: InputMaybe<SortOrder>;
};

export enum CustomizationsOrderByRelevanceFieldEnum {
  AllowSignup = 'allow_signup',
  Announcement = 'announcement',
  Banner = 'banner',
  Email = 'email',
  FooterLink = 'footer_link',
  NavLink = 'nav_link',
  Notification = 'notification',
  SiteName = 'site_name',
  SiteUrl = 'site_url'
}

export type CustomizationsOrderByRelevanceInput = {
  fields: Array<CustomizationsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type CustomizationsOrderByWithAggregationInput = {
  _avg?: InputMaybe<CustomizationsAvgOrderByAggregateInput>;
  _count?: InputMaybe<CustomizationsCountOrderByAggregateInput>;
  _max?: InputMaybe<CustomizationsMaxOrderByAggregateInput>;
  _min?: InputMaybe<CustomizationsMinOrderByAggregateInput>;
  _sum?: InputMaybe<CustomizationsSumOrderByAggregateInput>;
  allow_signup?: InputMaybe<SortOrder>;
  announcement?: InputMaybe<SortOrder>;
  banner?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  footer_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  nav_link?: InputMaybe<SortOrder>;
  notification?: InputMaybe<SortOrder>;
  site_name?: InputMaybe<SortOrder>;
  site_url?: InputMaybe<SortOrder>;
};

export type CustomizationsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<CustomizationsOrderByRelevanceInput>;
  allow_signup?: InputMaybe<SortOrder>;
  announcement?: InputMaybe<SortOrder>;
  banner?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  footer_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  nav_link?: InputMaybe<SortOrder>;
  notification?: InputMaybe<SortOrder>;
  site_name?: InputMaybe<SortOrder>;
  site_url?: InputMaybe<SortOrder>;
};

export enum CustomizationsScalarFieldEnum {
  AllowSignup = 'allow_signup',
  Announcement = 'announcement',
  Banner = 'banner',
  CreatedAt = 'created_at',
  Email = 'email',
  FooterLink = 'footer_link',
  Id = 'id',
  NavLink = 'nav_link',
  Notification = 'notification',
  SiteName = 'site_name',
  SiteUrl = 'site_url'
}

export type CustomizationsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CustomizationsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CustomizationsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CustomizationsScalarWhereWithAggregatesInput>>;
  allow_signup?: InputMaybe<StringNullableWithAggregatesFilter>;
  announcement?: InputMaybe<StringNullableWithAggregatesFilter>;
  banner?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  footer_link?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  nav_link?: InputMaybe<StringNullableWithAggregatesFilter>;
  notification?: InputMaybe<StringNullableWithAggregatesFilter>;
  site_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  site_url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CustomizationsSumAggregate = {
  __typename?: 'CustomizationsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type CustomizationsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type CustomizationsUpdateInput = {
  allow_signup?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  announcement?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  banner?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  footer_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nav_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notification?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  site_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  site_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomizationsUpdateManyMutationInput = {
  allow_signup?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  announcement?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  banner?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  footer_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  nav_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notification?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  site_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  site_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomizationsWhereInput = {
  AND?: InputMaybe<Array<CustomizationsWhereInput>>;
  NOT?: InputMaybe<Array<CustomizationsWhereInput>>;
  OR?: InputMaybe<Array<CustomizationsWhereInput>>;
  allow_signup?: InputMaybe<StringNullableFilter>;
  announcement?: InputMaybe<StringNullableFilter>;
  banner?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  footer_link?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  nav_link?: InputMaybe<StringNullableFilter>;
  notification?: InputMaybe<StringNullableFilter>;
  site_name?: InputMaybe<StringNullableFilter>;
  site_url?: InputMaybe<StringNullableFilter>;
};

export type CustomizationsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Dashboards = {
  __typename?: 'Dashboards';
  articles?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  checklists?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  logo?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privacy?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  sales?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  visits?: Maybe<Scalars['String']>;
};

export type DashboardsAvgAggregate = {
  __typename?: 'DashboardsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type DashboardsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DashboardsCountAggregate = {
  __typename?: 'DashboardsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  category: Scalars['Int'];
  checklists: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  id: Scalars['Int'];
  logo: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
  privacy: Scalars['Int'];
  products: Scalars['Int'];
  projects: Scalars['Int'];
  published: Scalars['Int'];
  reports: Scalars['Int'];
  sales: Scalars['Int'];
  tasks: Scalars['Int'];
  tickets: Scalars['Int'];
  url: Scalars['Int'];
  users: Scalars['Int'];
  visits: Scalars['Int'];
};

export type DashboardsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  checklists?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  privacy?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  sales?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  visits?: InputMaybe<SortOrder>;
};

export type DashboardsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['String']>;
  checklists?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  logo?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  privacy?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['String']>;
  reports?: InputMaybe<Scalars['String']>;
  sales?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  visits?: InputMaybe<Scalars['String']>;
};

export type DashboardsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['String']>;
  checklists?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  logo?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  privacy?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['String']>;
  reports?: InputMaybe<Scalars['String']>;
  sales?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  visits?: InputMaybe<Scalars['String']>;
};

export type DashboardsGroupBy = {
  __typename?: 'DashboardsGroupBy';
  _avg?: Maybe<DashboardsAvgAggregate>;
  _count?: Maybe<DashboardsCountAggregate>;
  _max?: Maybe<DashboardsMaxAggregate>;
  _min?: Maybe<DashboardsMinAggregate>;
  _sum?: Maybe<DashboardsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  checklists?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  logo?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privacy?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  sales?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  visits?: Maybe<Scalars['String']>;
};

export type DashboardsMaxAggregate = {
  __typename?: 'DashboardsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  checklists?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  logo?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privacy?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  sales?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  visits?: Maybe<Scalars['String']>;
};

export type DashboardsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  checklists?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  privacy?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  sales?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  visits?: InputMaybe<SortOrder>;
};

export type DashboardsMinAggregate = {
  __typename?: 'DashboardsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['String']>;
  checklists?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  logo?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  privacy?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  sales?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  visits?: Maybe<Scalars['String']>;
};

export type DashboardsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  checklists?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  privacy?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  sales?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  visits?: InputMaybe<SortOrder>;
};

export enum DashboardsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Category = 'category',
  Checklists = 'checklists',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Content = 'content',
  Customers = 'customers',
  Logo = 'logo',
  Media = 'media',
  Name = 'name',
  Privacy = 'privacy',
  Products = 'products',
  Projects = 'projects',
  Published = 'published',
  Reports = 'reports',
  Sales = 'sales',
  Tasks = 'tasks',
  Tickets = 'tickets',
  Url = 'url',
  Users = 'users',
  Visits = 'visits'
}

export type DashboardsOrderByRelevanceInput = {
  fields: Array<DashboardsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type DashboardsOrderByWithAggregationInput = {
  _avg?: InputMaybe<DashboardsAvgOrderByAggregateInput>;
  _count?: InputMaybe<DashboardsCountOrderByAggregateInput>;
  _max?: InputMaybe<DashboardsMaxOrderByAggregateInput>;
  _min?: InputMaybe<DashboardsMinOrderByAggregateInput>;
  _sum?: InputMaybe<DashboardsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  checklists?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  privacy?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  sales?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  visits?: InputMaybe<SortOrder>;
};

export type DashboardsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<DashboardsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  checklists?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  privacy?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  sales?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  visits?: InputMaybe<SortOrder>;
};

export enum DashboardsScalarFieldEnum {
  Articles = 'articles',
  Category = 'category',
  Checklists = 'checklists',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Content = 'content',
  CreatedAt = 'created_at',
  Customers = 'customers',
  Id = 'id',
  Logo = 'logo',
  Media = 'media',
  Name = 'name',
  Privacy = 'privacy',
  Products = 'products',
  Projects = 'projects',
  Published = 'published',
  Reports = 'reports',
  Sales = 'sales',
  Tasks = 'tasks',
  Tickets = 'tickets',
  Url = 'url',
  Users = 'users',
  Visits = 'visits'
}

export type DashboardsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DashboardsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DashboardsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DashboardsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  checklists?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  logo?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  privacy?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<StringNullableWithAggregatesFilter>;
  reports?: InputMaybe<StringNullableWithAggregatesFilter>;
  sales?: InputMaybe<StringNullableWithAggregatesFilter>;
  tasks?: InputMaybe<StringNullableWithAggregatesFilter>;
  tickets?: InputMaybe<StringNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
  visits?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type DashboardsSumAggregate = {
  __typename?: 'DashboardsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type DashboardsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DashboardsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  checklists?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  logo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  privacy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visits?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DashboardsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  checklists?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  logo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  privacy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visits?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DashboardsWhereInput = {
  AND?: InputMaybe<Array<DashboardsWhereInput>>;
  NOT?: InputMaybe<Array<DashboardsWhereInput>>;
  OR?: InputMaybe<Array<DashboardsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  category?: InputMaybe<StringNullableFilter>;
  checklists?: InputMaybe<StringNullableFilter>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  logo?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  privacy?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<StringNullableFilter>;
  reports?: InputMaybe<StringNullableFilter>;
  sales?: InputMaybe<StringNullableFilter>;
  tasks?: InputMaybe<StringNullableFilter>;
  tickets?: InputMaybe<StringNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
  visits?: InputMaybe<StringNullableFilter>;
};

export type DashboardsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
};

export type DateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type DateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type DateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type DateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type DecimalFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Decimal']>;
  divide?: InputMaybe<Scalars['Decimal']>;
  increment?: InputMaybe<Scalars['Decimal']>;
  multiply?: InputMaybe<Scalars['Decimal']>;
  set?: InputMaybe<Scalars['Decimal']>;
};

export type DecimalFilter = {
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type DecimalNullableFilter = {
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type DecimalNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDecimalNullableFilter>;
  _min?: InputMaybe<NestedDecimalNullableFilter>;
  _sum?: InputMaybe<NestedDecimalNullableFilter>;
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type DecimalWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDecimalFilter>;
  _min?: InputMaybe<NestedDecimalFilter>;
  _sum?: InputMaybe<NestedDecimalFilter>;
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type Deepdive = {
  __typename?: 'Deepdive';
  attendees?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  login?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type DeepdiveAvgAggregate = {
  __typename?: 'DeepdiveAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type DeepdiveAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DeepdiveCountAggregate = {
  __typename?: 'DeepdiveCountAggregate';
  _all: Scalars['Int'];
  attendees: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  login: Scalars['Int'];
  start_date: Scalars['Int'];
  whid: Scalars['Int'];
};

export type DeepdiveCountOrderByAggregateInput = {
  attendees?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type DeepdiveCreateInput = {
  attendees?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  login?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type DeepdiveCreateManyInput = {
  attendees?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  login?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type DeepdiveGroupBy = {
  __typename?: 'DeepdiveGroupBy';
  _avg?: Maybe<DeepdiveAvgAggregate>;
  _count?: Maybe<DeepdiveCountAggregate>;
  _max?: Maybe<DeepdiveMaxAggregate>;
  _min?: Maybe<DeepdiveMinAggregate>;
  _sum?: Maybe<DeepdiveSumAggregate>;
  attendees?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  login?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type DeepdiveMaxAggregate = {
  __typename?: 'DeepdiveMaxAggregate';
  attendees?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  login?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type DeepdiveMaxOrderByAggregateInput = {
  attendees?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type DeepdiveMinAggregate = {
  __typename?: 'DeepdiveMinAggregate';
  attendees?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  login?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type DeepdiveMinOrderByAggregateInput = {
  attendees?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum DeepdiveOrderByRelevanceFieldEnum {
  Attendees = 'attendees',
  Content = 'content',
  EndDate = 'end_date',
  Login = 'login',
  StartDate = 'start_date',
  Whid = 'whid'
}

export type DeepdiveOrderByRelevanceInput = {
  fields: Array<DeepdiveOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type DeepdiveOrderByWithAggregationInput = {
  _avg?: InputMaybe<DeepdiveAvgOrderByAggregateInput>;
  _count?: InputMaybe<DeepdiveCountOrderByAggregateInput>;
  _max?: InputMaybe<DeepdiveMaxOrderByAggregateInput>;
  _min?: InputMaybe<DeepdiveMinOrderByAggregateInput>;
  _sum?: InputMaybe<DeepdiveSumOrderByAggregateInput>;
  attendees?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type DeepdiveOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<DeepdiveOrderByRelevanceInput>;
  attendees?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum DeepdiveScalarFieldEnum {
  Attendees = 'attendees',
  Content = 'content',
  CreatedAt = 'created_at',
  EndDate = 'end_date',
  Id = 'id',
  Login = 'login',
  StartDate = 'start_date',
  Whid = 'whid'
}

export type DeepdiveScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DeepdiveScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DeepdiveScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DeepdiveScalarWhereWithAggregatesInput>>;
  attendees?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  login?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  whid?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type DeepdiveSumAggregate = {
  __typename?: 'DeepdiveSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type DeepdiveSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DeepdiveUpdateInput = {
  attendees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DeepdiveUpdateManyMutationInput = {
  attendees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DeepdiveWhereInput = {
  AND?: InputMaybe<Array<DeepdiveWhereInput>>;
  NOT?: InputMaybe<Array<DeepdiveWhereInput>>;
  OR?: InputMaybe<Array<DeepdiveWhereInput>>;
  attendees?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  login?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  whid?: InputMaybe<StringNullableFilter>;
};

export type DeepdiveWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Digiboard = {
  __typename?: 'Digiboard';
  board?: Maybe<Scalars['String']>;
  course?: Maybe<Scalars['String']>;
  created_at: Scalars['DateTime'];
  id: Scalars['Int'];
  name: Scalars['String'];
  student?: Maybe<Scalars['String']>;
};

export type DigiboardAvgAggregate = {
  __typename?: 'DigiboardAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type DigiboardAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DigiboardCountAggregate = {
  __typename?: 'DigiboardCountAggregate';
  _all: Scalars['Int'];
  board: Scalars['Int'];
  course: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  student: Scalars['Int'];
};

export type DigiboardCountOrderByAggregateInput = {
  board?: InputMaybe<SortOrder>;
  course?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  student?: InputMaybe<SortOrder>;
};

export type DigiboardCreateInput = {
  board?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  name: Scalars['String'];
  student?: InputMaybe<Scalars['String']>;
};

export type DigiboardCreateManyInput = {
  board?: InputMaybe<Scalars['String']>;
  course?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
  student?: InputMaybe<Scalars['String']>;
};

export type DigiboardGroupBy = {
  __typename?: 'DigiboardGroupBy';
  _avg?: Maybe<DigiboardAvgAggregate>;
  _count?: Maybe<DigiboardCountAggregate>;
  _max?: Maybe<DigiboardMaxAggregate>;
  _min?: Maybe<DigiboardMinAggregate>;
  _sum?: Maybe<DigiboardSumAggregate>;
  board?: Maybe<Scalars['String']>;
  course?: Maybe<Scalars['String']>;
  created_at: Scalars['DateTime'];
  id: Scalars['Int'];
  name: Scalars['String'];
  student?: Maybe<Scalars['String']>;
};

export type DigiboardMaxAggregate = {
  __typename?: 'DigiboardMaxAggregate';
  board?: Maybe<Scalars['String']>;
  course?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  student?: Maybe<Scalars['String']>;
};

export type DigiboardMaxOrderByAggregateInput = {
  board?: InputMaybe<SortOrder>;
  course?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  student?: InputMaybe<SortOrder>;
};

export type DigiboardMinAggregate = {
  __typename?: 'DigiboardMinAggregate';
  board?: Maybe<Scalars['String']>;
  course?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  student?: Maybe<Scalars['String']>;
};

export type DigiboardMinOrderByAggregateInput = {
  board?: InputMaybe<SortOrder>;
  course?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  student?: InputMaybe<SortOrder>;
};

export enum DigiboardOrderByRelevanceFieldEnum {
  Board = 'board',
  Course = 'course',
  Name = 'name',
  Student = 'student'
}

export type DigiboardOrderByRelevanceInput = {
  fields: Array<DigiboardOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type DigiboardOrderByWithAggregationInput = {
  _avg?: InputMaybe<DigiboardAvgOrderByAggregateInput>;
  _count?: InputMaybe<DigiboardCountOrderByAggregateInput>;
  _max?: InputMaybe<DigiboardMaxOrderByAggregateInput>;
  _min?: InputMaybe<DigiboardMinOrderByAggregateInput>;
  _sum?: InputMaybe<DigiboardSumOrderByAggregateInput>;
  board?: InputMaybe<SortOrder>;
  course?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  student?: InputMaybe<SortOrder>;
};

export type DigiboardOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<DigiboardOrderByRelevanceInput>;
  board?: InputMaybe<SortOrder>;
  course?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  student?: InputMaybe<SortOrder>;
};

export enum DigiboardScalarFieldEnum {
  Board = 'board',
  Course = 'course',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Student = 'student'
}

export type DigiboardScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DigiboardScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DigiboardScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DigiboardScalarWhereWithAggregatesInput>>;
  board?: InputMaybe<StringNullableWithAggregatesFilter>;
  course?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  student?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type DigiboardSumAggregate = {
  __typename?: 'DigiboardSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type DigiboardSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type DigiboardUpdateInput = {
  board?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  course?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  student?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DigiboardUpdateManyMutationInput = {
  board?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  course?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  student?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DigiboardWhereInput = {
  AND?: InputMaybe<Array<DigiboardWhereInput>>;
  NOT?: InputMaybe<Array<DigiboardWhereInput>>;
  OR?: InputMaybe<Array<DigiboardWhereInput>>;
  board?: InputMaybe<StringNullableFilter>;
  course?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  student?: InputMaybe<StringNullableFilter>;
};

export type DigiboardWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Emails = {
  __typename?: 'Emails';
  bcc?: Maybe<Scalars['String']>;
  cc?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  media?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type EmailsAvgAggregate = {
  __typename?: 'EmailsAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  staff_id?: Maybe<Scalars['Float']>;
};

export type EmailsAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
};

export type EmailsCountAggregate = {
  __typename?: 'EmailsCountAggregate';
  _all: Scalars['Int'];
  bcc: Scalars['Int'];
  cc: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  from: Scalars['Int'];
  id: Scalars['Int'];
  media: Scalars['Int'];
  staff_id: Scalars['Int'];
  subject: Scalars['Int'];
  users: Scalars['Int'];
};

export type EmailsCountOrderByAggregateInput = {
  bcc?: InputMaybe<SortOrder>;
  cc?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type EmailsCreateInput = {
  bcc?: InputMaybe<Scalars['String']>;
  cc?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type EmailsCreateManyInput = {
  bcc?: InputMaybe<Scalars['String']>;
  cc?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  media?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type EmailsGroupBy = {
  __typename?: 'EmailsGroupBy';
  _avg?: Maybe<EmailsAvgAggregate>;
  _count?: Maybe<EmailsCountAggregate>;
  _max?: Maybe<EmailsMaxAggregate>;
  _min?: Maybe<EmailsMinAggregate>;
  _sum?: Maybe<EmailsSumAggregate>;
  bcc?: Maybe<Scalars['String']>;
  cc?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  media?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type EmailsMaxAggregate = {
  __typename?: 'EmailsMaxAggregate';
  bcc?: Maybe<Scalars['String']>;
  cc?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  media?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type EmailsMaxOrderByAggregateInput = {
  bcc?: InputMaybe<SortOrder>;
  cc?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type EmailsMinAggregate = {
  __typename?: 'EmailsMinAggregate';
  bcc?: Maybe<Scalars['String']>;
  cc?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  media?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type EmailsMinOrderByAggregateInput = {
  bcc?: InputMaybe<SortOrder>;
  cc?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum EmailsOrderByRelevanceFieldEnum {
  Bcc = 'bcc',
  Cc = 'cc',
  Content = 'content',
  Customers = 'customers',
  From = 'from',
  Media = 'media',
  Subject = 'subject',
  Users = 'users'
}

export type EmailsOrderByRelevanceInput = {
  fields: Array<EmailsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type EmailsOrderByWithAggregationInput = {
  _avg?: InputMaybe<EmailsAvgOrderByAggregateInput>;
  _count?: InputMaybe<EmailsCountOrderByAggregateInput>;
  _max?: InputMaybe<EmailsMaxOrderByAggregateInput>;
  _min?: InputMaybe<EmailsMinOrderByAggregateInput>;
  _sum?: InputMaybe<EmailsSumOrderByAggregateInput>;
  bcc?: InputMaybe<SortOrder>;
  cc?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type EmailsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<EmailsOrderByRelevanceInput>;
  bcc?: InputMaybe<SortOrder>;
  cc?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum EmailsScalarFieldEnum {
  Bcc = 'bcc',
  Cc = 'cc',
  Content = 'content',
  CreatedAt = 'created_at',
  CustId = 'cust_id',
  Customers = 'customers',
  From = 'from',
  Id = 'id',
  Media = 'media',
  StaffId = 'staff_id',
  Subject = 'subject',
  Users = 'users'
}

export type EmailsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<EmailsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<EmailsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<EmailsScalarWhereWithAggregatesInput>>;
  bcc?: InputMaybe<StringNullableWithAggregatesFilter>;
  cc?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  from?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  staff_id?: InputMaybe<IntNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EmailsSumAggregate = {
  __typename?: 'EmailsSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  staff_id?: Maybe<Scalars['Int']>;
};

export type EmailsSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
};

export type EmailsUpdateInput = {
  bcc?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cc?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  from?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmailsUpdateManyMutationInput = {
  bcc?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cc?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  from?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmailsWhereInput = {
  AND?: InputMaybe<Array<EmailsWhereInput>>;
  NOT?: InputMaybe<Array<EmailsWhereInput>>;
  OR?: InputMaybe<Array<EmailsWhereInput>>;
  bcc?: InputMaybe<StringNullableFilter>;
  cc?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  from?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  media?: InputMaybe<StringNullableFilter>;
  staff_id?: InputMaybe<IntNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type EmailsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Endofshift = {
  __typename?: 'Endofshift';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  login?: Maybe<Scalars['String']>;
  mcms?: Maybe<Scalars['String']>;
  next_shift?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type EndofshiftAvgAggregate = {
  __typename?: 'EndofshiftAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type EndofshiftAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type EndofshiftCountAggregate = {
  __typename?: 'EndofshiftCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  login: Scalars['Int'];
  mcms: Scalars['Int'];
  next_shift: Scalars['Int'];
  projects: Scalars['Int'];
  tickets: Scalars['Int'];
  whid: Scalars['Int'];
};

export type EndofshiftCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  mcms?: InputMaybe<SortOrder>;
  next_shift?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type EndofshiftCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  login?: InputMaybe<Scalars['String']>;
  mcms?: InputMaybe<Scalars['String']>;
  next_shift?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type EndofshiftCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  login?: InputMaybe<Scalars['String']>;
  mcms?: InputMaybe<Scalars['String']>;
  next_shift?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type EndofshiftGroupBy = {
  __typename?: 'EndofshiftGroupBy';
  _avg?: Maybe<EndofshiftAvgAggregate>;
  _count?: Maybe<EndofshiftCountAggregate>;
  _max?: Maybe<EndofshiftMaxAggregate>;
  _min?: Maybe<EndofshiftMinAggregate>;
  _sum?: Maybe<EndofshiftSumAggregate>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  login?: Maybe<Scalars['String']>;
  mcms?: Maybe<Scalars['String']>;
  next_shift?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type EndofshiftMaxAggregate = {
  __typename?: 'EndofshiftMaxAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  login?: Maybe<Scalars['String']>;
  mcms?: Maybe<Scalars['String']>;
  next_shift?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type EndofshiftMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  mcms?: InputMaybe<SortOrder>;
  next_shift?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type EndofshiftMinAggregate = {
  __typename?: 'EndofshiftMinAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  login?: Maybe<Scalars['String']>;
  mcms?: Maybe<Scalars['String']>;
  next_shift?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type EndofshiftMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  mcms?: InputMaybe<SortOrder>;
  next_shift?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum EndofshiftOrderByRelevanceFieldEnum {
  Content = 'content',
  Login = 'login',
  Mcms = 'mcms',
  NextShift = 'next_shift',
  Projects = 'projects',
  Tickets = 'tickets',
  Whid = 'whid'
}

export type EndofshiftOrderByRelevanceInput = {
  fields: Array<EndofshiftOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type EndofshiftOrderByWithAggregationInput = {
  _avg?: InputMaybe<EndofshiftAvgOrderByAggregateInput>;
  _count?: InputMaybe<EndofshiftCountOrderByAggregateInput>;
  _max?: InputMaybe<EndofshiftMaxOrderByAggregateInput>;
  _min?: InputMaybe<EndofshiftMinOrderByAggregateInput>;
  _sum?: InputMaybe<EndofshiftSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  mcms?: InputMaybe<SortOrder>;
  next_shift?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type EndofshiftOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<EndofshiftOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  mcms?: InputMaybe<SortOrder>;
  next_shift?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum EndofshiftScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'created_at',
  Id = 'id',
  Login = 'login',
  Mcms = 'mcms',
  NextShift = 'next_shift',
  Projects = 'projects',
  Tickets = 'tickets',
  Whid = 'whid'
}

export type EndofshiftScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<EndofshiftScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<EndofshiftScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<EndofshiftScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  login?: InputMaybe<StringNullableWithAggregatesFilter>;
  mcms?: InputMaybe<StringNullableWithAggregatesFilter>;
  next_shift?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<StringNullableWithAggregatesFilter>;
  tickets?: InputMaybe<StringNullableWithAggregatesFilter>;
  whid?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EndofshiftSumAggregate = {
  __typename?: 'EndofshiftSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type EndofshiftSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type EndofshiftUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mcms?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  next_shift?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EndofshiftUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mcms?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  next_shift?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EndofshiftWhereInput = {
  AND?: InputMaybe<Array<EndofshiftWhereInput>>;
  NOT?: InputMaybe<Array<EndofshiftWhereInput>>;
  OR?: InputMaybe<Array<EndofshiftWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  login?: InputMaybe<StringNullableFilter>;
  mcms?: InputMaybe<StringNullableFilter>;
  next_shift?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<StringNullableFilter>;
  tickets?: InputMaybe<StringNullableFilter>;
  whid?: InputMaybe<StringNullableFilter>;
};

export type EndofshiftWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Events = {
  __typename?: 'Events';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
};

export type EventsAvgAggregate = {
  __typename?: 'EventsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type EventsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type EventsCountAggregate = {
  __typename?: 'EventsCountAggregate';
  _all: Scalars['Int'];
  category: Scalars['Int'];
  city: Scalars['Int'];
  content: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  end: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  postalcode: Scalars['Int'];
  start: Scalars['Int'];
  state: Scalars['Int'];
  tickets: Scalars['Int'];
};

export type EventsCountOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  start?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
};

export type EventsCreateInput = {
  category?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  end?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  start?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
};

export type EventsCreateManyInput = {
  category?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  end?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  start?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tickets?: InputMaybe<Scalars['String']>;
};

export type EventsGroupBy = {
  __typename?: 'EventsGroupBy';
  _avg?: Maybe<EventsAvgAggregate>;
  _count?: Maybe<EventsCountAggregate>;
  _max?: Maybe<EventsMaxAggregate>;
  _min?: Maybe<EventsMinAggregate>;
  _sum?: Maybe<EventsSumAggregate>;
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
};

export type EventsMaxAggregate = {
  __typename?: 'EventsMaxAggregate';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
};

export type EventsMaxOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  start?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
};

export type EventsMinAggregate = {
  __typename?: 'EventsMinAggregate';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  end?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  start?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tickets?: Maybe<Scalars['String']>;
};

export type EventsMinOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  start?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
};

export enum EventsOrderByRelevanceFieldEnum {
  Category = 'category',
  City = 'city',
  Content = 'content',
  Country = 'country',
  End = 'end',
  Image = 'image',
  Name = 'name',
  Postalcode = 'postalcode',
  Start = 'start',
  State = 'state',
  Tickets = 'tickets'
}

export type EventsOrderByRelevanceInput = {
  fields: Array<EventsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type EventsOrderByWithAggregationInput = {
  _avg?: InputMaybe<EventsAvgOrderByAggregateInput>;
  _count?: InputMaybe<EventsCountOrderByAggregateInput>;
  _max?: InputMaybe<EventsMaxOrderByAggregateInput>;
  _min?: InputMaybe<EventsMinOrderByAggregateInput>;
  _sum?: InputMaybe<EventsSumOrderByAggregateInput>;
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  start?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
};

export type EventsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<EventsOrderByRelevanceInput>;
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  end?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  start?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tickets?: InputMaybe<SortOrder>;
};

export enum EventsScalarFieldEnum {
  Category = 'category',
  City = 'city',
  Content = 'content',
  Country = 'country',
  CreatedAt = 'created_at',
  End = 'end',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Postalcode = 'postalcode',
  Start = 'start',
  State = 'state',
  Tickets = 'tickets'
}

export type EventsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<EventsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<EventsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<EventsScalarWhereWithAggregatesInput>>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  end?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  start?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  tickets?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EventsSumAggregate = {
  __typename?: 'EventsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type EventsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type EventsUpdateInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventsUpdateManyMutationInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tickets?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventsWhereInput = {
  AND?: InputMaybe<Array<EventsWhereInput>>;
  NOT?: InputMaybe<Array<EventsWhereInput>>;
  OR?: InputMaybe<Array<EventsWhereInput>>;
  category?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  end?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  postalcode?: InputMaybe<StringNullableFilter>;
  start?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  tickets?: InputMaybe<StringNullableFilter>;
};

export type EventsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Fullfillments = {
  __typename?: 'Fullfillments';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  country_area?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pickup?: Maybe<Scalars['String']>;
  shipping_zones?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type FullfillmentsAvgAggregate = {
  __typename?: 'FullfillmentsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type FullfillmentsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type FullfillmentsCountAggregate = {
  __typename?: 'FullfillmentsCountAggregate';
  _all: Scalars['Int'];
  address: Scalars['Int'];
  address_two: Scalars['Int'];
  city: Scalars['Int'];
  company: Scalars['Int'];
  country: Scalars['Int'];
  country_area: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  phone: Scalars['Int'];
  pickup: Scalars['Int'];
  shipping_zones: Scalars['Int'];
  state: Scalars['Int'];
  stock: Scalars['Int'];
  zipcode: Scalars['Int'];
};

export type FullfillmentsCountOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  country_area?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pickup?: InputMaybe<SortOrder>;
  shipping_zones?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type FullfillmentsCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  country_area?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pickup?: InputMaybe<Scalars['String']>;
  shipping_zones?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type FullfillmentsCreateManyInput = {
  address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  country_area?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pickup?: InputMaybe<Scalars['String']>;
  shipping_zones?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type FullfillmentsGroupBy = {
  __typename?: 'FullfillmentsGroupBy';
  _avg?: Maybe<FullfillmentsAvgAggregate>;
  _count?: Maybe<FullfillmentsCountAggregate>;
  _max?: Maybe<FullfillmentsMaxAggregate>;
  _min?: Maybe<FullfillmentsMinAggregate>;
  _sum?: Maybe<FullfillmentsSumAggregate>;
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  country_area?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pickup?: Maybe<Scalars['String']>;
  shipping_zones?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type FullfillmentsMaxAggregate = {
  __typename?: 'FullfillmentsMaxAggregate';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  country_area?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pickup?: Maybe<Scalars['String']>;
  shipping_zones?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type FullfillmentsMaxOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  country_area?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pickup?: InputMaybe<SortOrder>;
  shipping_zones?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type FullfillmentsMinAggregate = {
  __typename?: 'FullfillmentsMinAggregate';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  country_area?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pickup?: Maybe<Scalars['String']>;
  shipping_zones?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type FullfillmentsMinOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  country_area?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pickup?: InputMaybe<SortOrder>;
  shipping_zones?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum FullfillmentsOrderByRelevanceFieldEnum {
  Address = 'address',
  AddressTwo = 'address_two',
  City = 'city',
  Company = 'company',
  Country = 'country',
  CountryArea = 'country_area',
  Name = 'name',
  Phone = 'phone',
  Pickup = 'pickup',
  ShippingZones = 'shipping_zones',
  State = 'state',
  Stock = 'stock',
  Zipcode = 'zipcode'
}

export type FullfillmentsOrderByRelevanceInput = {
  fields: Array<FullfillmentsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type FullfillmentsOrderByWithAggregationInput = {
  _avg?: InputMaybe<FullfillmentsAvgOrderByAggregateInput>;
  _count?: InputMaybe<FullfillmentsCountOrderByAggregateInput>;
  _max?: InputMaybe<FullfillmentsMaxOrderByAggregateInput>;
  _min?: InputMaybe<FullfillmentsMinOrderByAggregateInput>;
  _sum?: InputMaybe<FullfillmentsSumOrderByAggregateInput>;
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  country_area?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pickup?: InputMaybe<SortOrder>;
  shipping_zones?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type FullfillmentsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<FullfillmentsOrderByRelevanceInput>;
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  country_area?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pickup?: InputMaybe<SortOrder>;
  shipping_zones?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum FullfillmentsScalarFieldEnum {
  Address = 'address',
  AddressTwo = 'address_two',
  City = 'city',
  Company = 'company',
  Country = 'country',
  CountryArea = 'country_area',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Phone = 'phone',
  Pickup = 'pickup',
  ShippingZones = 'shipping_zones',
  State = 'state',
  Stock = 'stock',
  Zipcode = 'zipcode'
}

export type FullfillmentsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<FullfillmentsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<FullfillmentsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<FullfillmentsScalarWhereWithAggregatesInput>>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  address_two?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  company?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  country_area?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  pickup?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_zones?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  stock?: InputMaybe<StringNullableWithAggregatesFilter>;
  zipcode?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type FullfillmentsSumAggregate = {
  __typename?: 'FullfillmentsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type FullfillmentsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type FullfillmentsUpdateInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country_area?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pickup?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_zones?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type FullfillmentsUpdateManyMutationInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country_area?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pickup?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_zones?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type FullfillmentsWhereInput = {
  AND?: InputMaybe<Array<FullfillmentsWhereInput>>;
  NOT?: InputMaybe<Array<FullfillmentsWhereInput>>;
  OR?: InputMaybe<Array<FullfillmentsWhereInput>>;
  address?: InputMaybe<StringNullableFilter>;
  address_two?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  company?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  country_area?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pickup?: InputMaybe<StringNullableFilter>;
  shipping_zones?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<StringNullableFilter>;
  zipcode?: InputMaybe<StringNullableFilter>;
};

export type FullfillmentsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Gift_Certificates = {
  __typename?: 'Gift_certificates';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Gift_CertificatesAvgAggregate = {
  __typename?: 'Gift_certificatesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type Gift_CertificatesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Gift_CertificatesCountAggregate = {
  __typename?: 'Gift_certificatesCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  discount: Scalars['Int'];
  excerpt: Scalars['Int'];
  expiration: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  published: Scalars['Int'];
  rewards: Scalars['Int'];
  special_offers: Scalars['Int'];
  type: Scalars['Int'];
  users: Scalars['Int'];
};

export type Gift_CertificatesCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Gift_CertificatesCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  rewards?: InputMaybe<Scalars['String']>;
  special_offers?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type Gift_CertificatesCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  rewards?: InputMaybe<Scalars['String']>;
  special_offers?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type Gift_CertificatesGroupBy = {
  __typename?: 'Gift_certificatesGroupBy';
  _avg?: Maybe<Gift_CertificatesAvgAggregate>;
  _count?: Maybe<Gift_CertificatesCountAggregate>;
  _max?: Maybe<Gift_CertificatesMaxAggregate>;
  _min?: Maybe<Gift_CertificatesMinAggregate>;
  _sum?: Maybe<Gift_CertificatesSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Gift_CertificatesMaxAggregate = {
  __typename?: 'Gift_certificatesMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Gift_CertificatesMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Gift_CertificatesMinAggregate = {
  __typename?: 'Gift_certificatesMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Gift_CertificatesMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum Gift_CertificatesOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Discount = 'discount',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Rewards = 'rewards',
  SpecialOffers = 'special_offers',
  Type = 'type',
  Users = 'users'
}

export type Gift_CertificatesOrderByRelevanceInput = {
  fields: Array<Gift_CertificatesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Gift_CertificatesOrderByWithAggregationInput = {
  _avg?: InputMaybe<Gift_CertificatesAvgOrderByAggregateInput>;
  _count?: InputMaybe<Gift_CertificatesCountOrderByAggregateInput>;
  _max?: InputMaybe<Gift_CertificatesMaxOrderByAggregateInput>;
  _min?: InputMaybe<Gift_CertificatesMinOrderByAggregateInput>;
  _sum?: InputMaybe<Gift_CertificatesSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Gift_CertificatesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Gift_CertificatesOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum Gift_CertificatesScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Discount = 'discount',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Published = 'published',
  Rewards = 'rewards',
  SpecialOffers = 'special_offers',
  Type = 'type',
  Users = 'users'
}

export type Gift_CertificatesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Gift_CertificatesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Gift_CertificatesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Gift_CertificatesScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  rewards?: InputMaybe<StringNullableWithAggregatesFilter>;
  special_offers?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Gift_CertificatesSumAggregate = {
  __typename?: 'Gift_certificatesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type Gift_CertificatesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Gift_CertificatesUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_offers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Gift_CertificatesUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_offers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Gift_CertificatesWhereInput = {
  AND?: InputMaybe<Array<Gift_CertificatesWhereInput>>;
  NOT?: InputMaybe<Array<Gift_CertificatesWhereInput>>;
  OR?: InputMaybe<Array<Gift_CertificatesWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  expiration?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  rewards?: InputMaybe<StringNullableFilter>;
  special_offers?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type Gift_CertificatesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Glossary = {
  __typename?: 'Glossary';
  content?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  published?: Maybe<Scalars['DateTime']>;
};

export type GlossaryAvgAggregate = {
  __typename?: 'GlossaryAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type GlossaryAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type GlossaryCountAggregate = {
  __typename?: 'GlossaryCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  published: Scalars['Int'];
};

export type GlossaryCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
};

export type GlossaryCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  published?: InputMaybe<Scalars['DateTime']>;
};

export type GlossaryCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  published?: InputMaybe<Scalars['DateTime']>;
};

export type GlossaryGroupBy = {
  __typename?: 'GlossaryGroupBy';
  _avg?: Maybe<GlossaryAvgAggregate>;
  _count?: Maybe<GlossaryCountAggregate>;
  _max?: Maybe<GlossaryMaxAggregate>;
  _min?: Maybe<GlossaryMinAggregate>;
  _sum?: Maybe<GlossarySumAggregate>;
  content?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  published?: Maybe<Scalars['DateTime']>;
};

export type GlossaryMaxAggregate = {
  __typename?: 'GlossaryMaxAggregate';
  content?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
};

export type GlossaryMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
};

export type GlossaryMinAggregate = {
  __typename?: 'GlossaryMinAggregate';
  content?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
};

export type GlossaryMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
};

export enum GlossaryOrderByRelevanceFieldEnum {
  Content = 'content',
  Image = 'image',
  Name = 'name'
}

export type GlossaryOrderByRelevanceInput = {
  fields: Array<GlossaryOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type GlossaryOrderByWithAggregationInput = {
  _avg?: InputMaybe<GlossaryAvgOrderByAggregateInput>;
  _count?: InputMaybe<GlossaryCountOrderByAggregateInput>;
  _max?: InputMaybe<GlossaryMaxOrderByAggregateInput>;
  _min?: InputMaybe<GlossaryMinOrderByAggregateInput>;
  _sum?: InputMaybe<GlossarySumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
};

export type GlossaryOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<GlossaryOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
};

export enum GlossaryScalarFieldEnum {
  Content = 'content',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Published = 'published'
}

export type GlossaryScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<GlossaryScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<GlossaryScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<GlossaryScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type GlossarySumAggregate = {
  __typename?: 'GlossarySumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type GlossarySumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type GlossaryUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type GlossaryUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type GlossaryWhereInput = {
  AND?: InputMaybe<Array<GlossaryWhereInput>>;
  NOT?: InputMaybe<Array<GlossaryWhereInput>>;
  OR?: InputMaybe<Array<GlossaryWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
};

export type GlossaryWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Importm = {
  __typename?: 'Importm';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type ImportmAvgAggregate = {
  __typename?: 'ImportmAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ImportmAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ImportmCountAggregate = {
  __typename?: 'ImportmCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  file: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  url: Scalars['Int'];
};

export type ImportmCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type ImportmCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type ImportmCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type ImportmGroupBy = {
  __typename?: 'ImportmGroupBy';
  _avg?: Maybe<ImportmAvgAggregate>;
  _count?: Maybe<ImportmCountAggregate>;
  _max?: Maybe<ImportmMaxAggregate>;
  _min?: Maybe<ImportmMinAggregate>;
  _sum?: Maybe<ImportmSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type ImportmMaxAggregate = {
  __typename?: 'ImportmMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type ImportmMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type ImportmMinAggregate = {
  __typename?: 'ImportmMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type ImportmMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum ImportmOrderByRelevanceFieldEnum {
  Description = 'description',
  File = 'file',
  Image = 'image',
  Name = 'name',
  Url = 'url'
}

export type ImportmOrderByRelevanceInput = {
  fields: Array<ImportmOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ImportmOrderByWithAggregationInput = {
  _avg?: InputMaybe<ImportmAvgOrderByAggregateInput>;
  _count?: InputMaybe<ImportmCountOrderByAggregateInput>;
  _max?: InputMaybe<ImportmMaxOrderByAggregateInput>;
  _min?: InputMaybe<ImportmMinOrderByAggregateInput>;
  _sum?: InputMaybe<ImportmSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type ImportmOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ImportmOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum ImportmScalarFieldEnum {
  CreatedAt = 'created_at',
  Description = 'description',
  File = 'file',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Url = 'url'
}

export type ImportmScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ImportmScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ImportmScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ImportmScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  file?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ImportmSumAggregate = {
  __typename?: 'ImportmSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ImportmSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ImportmUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ImportmUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ImportmWhereInput = {
  AND?: InputMaybe<Array<ImportmWhereInput>>;
  NOT?: InputMaybe<Array<ImportmWhereInput>>;
  OR?: InputMaybe<Array<ImportmWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  file?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type ImportmWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type IntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type IntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type Integrations = {
  __typename?: 'Integrations';
  category?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type IntegrationsAvgAggregate = {
  __typename?: 'IntegrationsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type IntegrationsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type IntegrationsCountAggregate = {
  __typename?: 'IntegrationsCountAggregate';
  _all: Scalars['Int'];
  category: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  location: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
};

export type IntegrationsCountOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type IntegrationsCreateInput = {
  category?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type IntegrationsCreateManyInput = {
  category?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type IntegrationsGroupBy = {
  __typename?: 'IntegrationsGroupBy';
  _avg?: Maybe<IntegrationsAvgAggregate>;
  _count?: Maybe<IntegrationsCountAggregate>;
  _max?: Maybe<IntegrationsMaxAggregate>;
  _min?: Maybe<IntegrationsMinAggregate>;
  _sum?: Maybe<IntegrationsSumAggregate>;
  category?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type IntegrationsMaxAggregate = {
  __typename?: 'IntegrationsMaxAggregate';
  category?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type IntegrationsMaxOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type IntegrationsMinAggregate = {
  __typename?: 'IntegrationsMinAggregate';
  category?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

export type IntegrationsMinOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum IntegrationsOrderByRelevanceFieldEnum {
  Category = 'category',
  Content = 'content',
  Location = 'location',
  Media = 'media',
  Name = 'name'
}

export type IntegrationsOrderByRelevanceInput = {
  fields: Array<IntegrationsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type IntegrationsOrderByWithAggregationInput = {
  _avg?: InputMaybe<IntegrationsAvgOrderByAggregateInput>;
  _count?: InputMaybe<IntegrationsCountOrderByAggregateInput>;
  _max?: InputMaybe<IntegrationsMaxOrderByAggregateInput>;
  _min?: InputMaybe<IntegrationsMinOrderByAggregateInput>;
  _sum?: InputMaybe<IntegrationsSumOrderByAggregateInput>;
  category?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type IntegrationsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<IntegrationsOrderByRelevanceInput>;
  category?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum IntegrationsScalarFieldEnum {
  Category = 'category',
  Content = 'content',
  CreatedAt = 'created_at',
  Id = 'id',
  Location = 'location',
  Media = 'media',
  Name = 'name'
}

export type IntegrationsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<IntegrationsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<IntegrationsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<IntegrationsScalarWhereWithAggregatesInput>>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type IntegrationsSumAggregate = {
  __typename?: 'IntegrationsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type IntegrationsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type IntegrationsUpdateInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type IntegrationsUpdateManyMutationInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type IntegrationsWhereInput = {
  AND?: InputMaybe<Array<IntegrationsWhereInput>>;
  NOT?: InputMaybe<Array<IntegrationsWhereInput>>;
  OR?: InputMaybe<Array<IntegrationsWhereInput>>;
  category?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  location?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type IntegrationsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Internalization = {
  __typename?: 'Internalization';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type InternalizationAvgAggregate = {
  __typename?: 'InternalizationAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type InternalizationAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type InternalizationCountAggregate = {
  __typename?: 'InternalizationCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  default: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  region: Scalars['Int'];
  website: Scalars['Int'];
};

export type InternalizationCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type InternalizationCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  default?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type InternalizationCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  default?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type InternalizationGroupBy = {
  __typename?: 'InternalizationGroupBy';
  _avg?: Maybe<InternalizationAvgAggregate>;
  _count?: Maybe<InternalizationCountAggregate>;
  _max?: Maybe<InternalizationMaxAggregate>;
  _min?: Maybe<InternalizationMinAggregate>;
  _sum?: Maybe<InternalizationSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type InternalizationMaxAggregate = {
  __typename?: 'InternalizationMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type InternalizationMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type InternalizationMinAggregate = {
  __typename?: 'InternalizationMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type InternalizationMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum InternalizationOrderByRelevanceFieldEnum {
  Default = 'default',
  Description = 'description',
  Name = 'name',
  Region = 'region',
  Website = 'website'
}

export type InternalizationOrderByRelevanceInput = {
  fields: Array<InternalizationOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type InternalizationOrderByWithAggregationInput = {
  _avg?: InputMaybe<InternalizationAvgOrderByAggregateInput>;
  _count?: InputMaybe<InternalizationCountOrderByAggregateInput>;
  _max?: InputMaybe<InternalizationMaxOrderByAggregateInput>;
  _min?: InputMaybe<InternalizationMinOrderByAggregateInput>;
  _sum?: InputMaybe<InternalizationSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type InternalizationOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<InternalizationOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum InternalizationScalarFieldEnum {
  CreatedAt = 'created_at',
  Default = 'default',
  Description = 'description',
  Id = 'id',
  Name = 'name',
  Region = 'region',
  Website = 'website'
}

export type InternalizationScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InternalizationScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<InternalizationScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<InternalizationScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  default?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  region?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type InternalizationSumAggregate = {
  __typename?: 'InternalizationSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type InternalizationSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type InternalizationUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  default?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InternalizationUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  default?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InternalizationWhereInput = {
  AND?: InputMaybe<Array<InternalizationWhereInput>>;
  NOT?: InputMaybe<Array<InternalizationWhereInput>>;
  OR?: InputMaybe<Array<InternalizationWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  default?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  region?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type InternalizationWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Invitations = {
  __typename?: 'Invitations';
  billingAddress?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  grandTotalPurchased?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invoiceDate?: Maybe<Scalars['DateTime']>;
  media?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<Scalars['String']>;
  shippingAddress?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type InvitationsAvgAggregate = {
  __typename?: 'InvitationsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type InvitationsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type InvitationsCountAggregate = {
  __typename?: 'InvitationsCountAggregate';
  _all: Scalars['Int'];
  billingAddress: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  email: Scalars['Int'];
  grandTotalPurchased: Scalars['Int'];
  id: Scalars['Int'];
  invoiceDate: Scalars['Int'];
  media: Scalars['Int'];
  orderNumber: Scalars['Int'];
  paymentMethod: Scalars['Int'];
  shippingAddress: Scalars['Int'];
  status: Scalars['Int'];
};

export type InvitationsCountOrderByAggregateInput = {
  billingAddress?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grandTotalPurchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoiceDate?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  shippingAddress?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type InvitationsCreateInput = {
  billingAddress?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  grandTotalPurchased?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invoiceDate?: InputMaybe<Scalars['DateTime']>;
  media?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  paymentMethod?: InputMaybe<Scalars['String']>;
  shippingAddress?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type InvitationsCreateManyInput = {
  billingAddress?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  grandTotalPurchased?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invoiceDate?: InputMaybe<Scalars['DateTime']>;
  media?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  paymentMethod?: InputMaybe<Scalars['String']>;
  shippingAddress?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type InvitationsGroupBy = {
  __typename?: 'InvitationsGroupBy';
  _avg?: Maybe<InvitationsAvgAggregate>;
  _count?: Maybe<InvitationsCountAggregate>;
  _max?: Maybe<InvitationsMaxAggregate>;
  _min?: Maybe<InvitationsMinAggregate>;
  _sum?: Maybe<InvitationsSumAggregate>;
  billingAddress?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  grandTotalPurchased?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invoiceDate?: Maybe<Scalars['DateTime']>;
  media?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<Scalars['String']>;
  shippingAddress?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type InvitationsMaxAggregate = {
  __typename?: 'InvitationsMaxAggregate';
  billingAddress?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  grandTotalPurchased?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invoiceDate?: Maybe<Scalars['DateTime']>;
  media?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<Scalars['String']>;
  shippingAddress?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type InvitationsMaxOrderByAggregateInput = {
  billingAddress?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grandTotalPurchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoiceDate?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  shippingAddress?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type InvitationsMinAggregate = {
  __typename?: 'InvitationsMinAggregate';
  billingAddress?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  grandTotalPurchased?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invoiceDate?: Maybe<Scalars['DateTime']>;
  media?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<Scalars['String']>;
  shippingAddress?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type InvitationsMinOrderByAggregateInput = {
  billingAddress?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grandTotalPurchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoiceDate?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  shippingAddress?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum InvitationsOrderByRelevanceFieldEnum {
  BillingAddress = 'billingAddress',
  Content = 'content',
  Email = 'email',
  GrandTotalPurchased = 'grandTotalPurchased',
  Media = 'media',
  OrderNumber = 'orderNumber',
  PaymentMethod = 'paymentMethod',
  ShippingAddress = 'shippingAddress',
  Status = 'status'
}

export type InvitationsOrderByRelevanceInput = {
  fields: Array<InvitationsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type InvitationsOrderByWithAggregationInput = {
  _avg?: InputMaybe<InvitationsAvgOrderByAggregateInput>;
  _count?: InputMaybe<InvitationsCountOrderByAggregateInput>;
  _max?: InputMaybe<InvitationsMaxOrderByAggregateInput>;
  _min?: InputMaybe<InvitationsMinOrderByAggregateInput>;
  _sum?: InputMaybe<InvitationsSumOrderByAggregateInput>;
  billingAddress?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grandTotalPurchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoiceDate?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  shippingAddress?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type InvitationsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<InvitationsOrderByRelevanceInput>;
  billingAddress?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grandTotalPurchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoiceDate?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  shippingAddress?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum InvitationsScalarFieldEnum {
  BillingAddress = 'billingAddress',
  Content = 'content',
  CreatedAt = 'created_at',
  Email = 'email',
  GrandTotalPurchased = 'grandTotalPurchased',
  Id = 'id',
  InvoiceDate = 'invoiceDate',
  Media = 'media',
  OrderNumber = 'orderNumber',
  PaymentMethod = 'paymentMethod',
  ShippingAddress = 'shippingAddress',
  Status = 'status'
}

export type InvitationsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InvitationsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<InvitationsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<InvitationsScalarWhereWithAggregatesInput>>;
  billingAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  grandTotalPurchased?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  invoiceDate?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  orderNumber?: InputMaybe<StringNullableWithAggregatesFilter>;
  paymentMethod?: InputMaybe<StringNullableWithAggregatesFilter>;
  shippingAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type InvitationsSumAggregate = {
  __typename?: 'InvitationsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type InvitationsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type InvitationsUpdateInput = {
  billingAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grandTotalPurchased?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invoiceDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentMethod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InvitationsUpdateManyMutationInput = {
  billingAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grandTotalPurchased?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invoiceDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentMethod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InvitationsWhereInput = {
  AND?: InputMaybe<Array<InvitationsWhereInput>>;
  NOT?: InputMaybe<Array<InvitationsWhereInput>>;
  OR?: InputMaybe<Array<InvitationsWhereInput>>;
  billingAddress?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  grandTotalPurchased?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  invoiceDate?: InputMaybe<DateTimeNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  orderNumber?: InputMaybe<StringNullableFilter>;
  paymentMethod?: InputMaybe<StringNullableFilter>;
  shippingAddress?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
};

export type InvitationsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Invoices = {
  __typename?: 'Invoices';
  bill_to_name: Scalars['String'];
  billing_address?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['String']>;
  grand_total_purchased?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invoice: Scalars['Int'];
  invoice_date?: Maybe<Scalars['DateTime']>;
  order_number: Scalars['BigInt'];
  payment_method?: Maybe<Scalars['String']>;
  shipping_address?: Maybe<Scalars['String']>;
  shipping_and_handling?: Maybe<Scalars['String']>;
  shipping_information?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
};

export type InvoicesAvgAggregate = {
  __typename?: 'InvoicesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  invoice?: Maybe<Scalars['Float']>;
  order_number?: Maybe<Scalars['Float']>;
};

export type InvoicesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
};

export type InvoicesCountAggregate = {
  __typename?: 'InvoicesCountAggregate';
  _all: Scalars['Int'];
  bill_to_name: Scalars['Int'];
  billing_address: Scalars['Int'];
  customer_group: Scalars['Int'];
  customer_name: Scalars['Int'];
  email: Scalars['Int'];
  grand_total_base: Scalars['Int'];
  grand_total_purchased: Scalars['Int'];
  id: Scalars['Int'];
  invoice: Scalars['Int'];
  invoice_date: Scalars['Int'];
  order_number: Scalars['Int'];
  payment_method: Scalars['Int'];
  shipping_address: Scalars['Int'];
  shipping_and_handling: Scalars['Int'];
  shipping_information: Scalars['Int'];
  status: Scalars['Int'];
  subtotal: Scalars['Int'];
};

export type InvoicesCountOrderByAggregateInput = {
  bill_to_name?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  invoice_date?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shipping_and_handling?: InputMaybe<SortOrder>;
  shipping_information?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
};

export type InvoicesCreateInput = {
  bill_to_name: Scalars['String'];
  billing_address?: InputMaybe<Scalars['String']>;
  customer_group?: InputMaybe<Scalars['String']>;
  customer_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  grand_total_base?: InputMaybe<Scalars['String']>;
  grand_total_purchased?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invoice: Scalars['Int'];
  invoice_date?: InputMaybe<Scalars['DateTime']>;
  order_number: Scalars['BigInt'];
  payment_method?: InputMaybe<Scalars['String']>;
  shipping_address?: InputMaybe<Scalars['String']>;
  shipping_and_handling?: InputMaybe<Scalars['String']>;
  shipping_information?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
};

export type InvoicesCreateManyInput = {
  bill_to_name: Scalars['String'];
  billing_address?: InputMaybe<Scalars['String']>;
  customer_group?: InputMaybe<Scalars['String']>;
  customer_name?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  grand_total_base?: InputMaybe<Scalars['String']>;
  grand_total_purchased?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invoice: Scalars['Int'];
  invoice_date?: InputMaybe<Scalars['DateTime']>;
  order_number: Scalars['BigInt'];
  payment_method?: InputMaybe<Scalars['String']>;
  shipping_address?: InputMaybe<Scalars['String']>;
  shipping_and_handling?: InputMaybe<Scalars['String']>;
  shipping_information?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
};

export type InvoicesGroupBy = {
  __typename?: 'InvoicesGroupBy';
  _avg?: Maybe<InvoicesAvgAggregate>;
  _count?: Maybe<InvoicesCountAggregate>;
  _max?: Maybe<InvoicesMaxAggregate>;
  _min?: Maybe<InvoicesMinAggregate>;
  _sum?: Maybe<InvoicesSumAggregate>;
  bill_to_name: Scalars['String'];
  billing_address?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['String']>;
  grand_total_purchased?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invoice: Scalars['Int'];
  invoice_date?: Maybe<Scalars['DateTime']>;
  order_number: Scalars['BigInt'];
  payment_method?: Maybe<Scalars['String']>;
  shipping_address?: Maybe<Scalars['String']>;
  shipping_and_handling?: Maybe<Scalars['String']>;
  shipping_information?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
};

export type InvoicesMaxAggregate = {
  __typename?: 'InvoicesMaxAggregate';
  bill_to_name?: Maybe<Scalars['String']>;
  billing_address?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['String']>;
  grand_total_purchased?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invoice?: Maybe<Scalars['Int']>;
  invoice_date?: Maybe<Scalars['DateTime']>;
  order_number?: Maybe<Scalars['BigInt']>;
  payment_method?: Maybe<Scalars['String']>;
  shipping_address?: Maybe<Scalars['String']>;
  shipping_and_handling?: Maybe<Scalars['String']>;
  shipping_information?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
};

export type InvoicesMaxOrderByAggregateInput = {
  bill_to_name?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  invoice_date?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shipping_and_handling?: InputMaybe<SortOrder>;
  shipping_information?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
};

export type InvoicesMinAggregate = {
  __typename?: 'InvoicesMinAggregate';
  bill_to_name?: Maybe<Scalars['String']>;
  billing_address?: Maybe<Scalars['String']>;
  customer_group?: Maybe<Scalars['String']>;
  customer_name?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['String']>;
  grand_total_purchased?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invoice?: Maybe<Scalars['Int']>;
  invoice_date?: Maybe<Scalars['DateTime']>;
  order_number?: Maybe<Scalars['BigInt']>;
  payment_method?: Maybe<Scalars['String']>;
  shipping_address?: Maybe<Scalars['String']>;
  shipping_and_handling?: Maybe<Scalars['String']>;
  shipping_information?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
};

export type InvoicesMinOrderByAggregateInput = {
  bill_to_name?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  invoice_date?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shipping_and_handling?: InputMaybe<SortOrder>;
  shipping_information?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
};

export enum InvoicesOrderByRelevanceFieldEnum {
  BillToName = 'bill_to_name',
  BillingAddress = 'billing_address',
  CustomerGroup = 'customer_group',
  CustomerName = 'customer_name',
  Email = 'email',
  GrandTotalBase = 'grand_total_base',
  GrandTotalPurchased = 'grand_total_purchased',
  PaymentMethod = 'payment_method',
  ShippingAddress = 'shipping_address',
  ShippingAndHandling = 'shipping_and_handling',
  ShippingInformation = 'shipping_information',
  Status = 'status',
  Subtotal = 'subtotal'
}

export type InvoicesOrderByRelevanceInput = {
  fields: Array<InvoicesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type InvoicesOrderByWithAggregationInput = {
  _avg?: InputMaybe<InvoicesAvgOrderByAggregateInput>;
  _count?: InputMaybe<InvoicesCountOrderByAggregateInput>;
  _max?: InputMaybe<InvoicesMaxOrderByAggregateInput>;
  _min?: InputMaybe<InvoicesMinOrderByAggregateInput>;
  _sum?: InputMaybe<InvoicesSumOrderByAggregateInput>;
  bill_to_name?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  invoice_date?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shipping_and_handling?: InputMaybe<SortOrder>;
  shipping_information?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
};

export type InvoicesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<InvoicesOrderByRelevanceInput>;
  bill_to_name?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  customer_group?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  invoice_date?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shipping_and_handling?: InputMaybe<SortOrder>;
  shipping_information?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
};

export enum InvoicesScalarFieldEnum {
  BillToName = 'bill_to_name',
  BillingAddress = 'billing_address',
  CustomerGroup = 'customer_group',
  CustomerName = 'customer_name',
  Email = 'email',
  GrandTotalBase = 'grand_total_base',
  GrandTotalPurchased = 'grand_total_purchased',
  Id = 'id',
  Invoice = 'invoice',
  InvoiceDate = 'invoice_date',
  OrderNumber = 'order_number',
  PaymentMethod = 'payment_method',
  ShippingAddress = 'shipping_address',
  ShippingAndHandling = 'shipping_and_handling',
  ShippingInformation = 'shipping_information',
  Status = 'status',
  Subtotal = 'subtotal'
}

export type InvoicesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InvoicesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<InvoicesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<InvoicesScalarWhereWithAggregatesInput>>;
  bill_to_name?: InputMaybe<StringWithAggregatesFilter>;
  billing_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_group?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  grand_total_base?: InputMaybe<StringNullableWithAggregatesFilter>;
  grand_total_purchased?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  invoice?: InputMaybe<IntWithAggregatesFilter>;
  invoice_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  order_number?: InputMaybe<BigIntWithAggregatesFilter>;
  payment_method?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_and_handling?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_information?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  subtotal?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type InvoicesSumAggregate = {
  __typename?: 'InvoicesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  invoice?: Maybe<Scalars['Int']>;
  order_number?: Maybe<Scalars['BigInt']>;
};

export type InvoicesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  invoice?: InputMaybe<SortOrder>;
  order_number?: InputMaybe<SortOrder>;
};

export type InvoicesUpdateInput = {
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_group?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_base?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_purchased?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invoice?: InputMaybe<IntFieldUpdateOperationsInput>;
  invoice_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  order_number?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_and_handling?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_information?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InvoicesUpdateManyMutationInput = {
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_group?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_base?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_purchased?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invoice?: InputMaybe<IntFieldUpdateOperationsInput>;
  invoice_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  order_number?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_and_handling?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_information?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type InvoicesWhereInput = {
  AND?: InputMaybe<Array<InvoicesWhereInput>>;
  NOT?: InputMaybe<Array<InvoicesWhereInput>>;
  OR?: InputMaybe<Array<InvoicesWhereInput>>;
  bill_to_name?: InputMaybe<StringFilter>;
  billing_address?: InputMaybe<StringNullableFilter>;
  customer_group?: InputMaybe<StringNullableFilter>;
  customer_name?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  grand_total_base?: InputMaybe<StringNullableFilter>;
  grand_total_purchased?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  invoice?: InputMaybe<IntFilter>;
  invoice_date?: InputMaybe<DateTimeNullableFilter>;
  order_number?: InputMaybe<BigIntFilter>;
  payment_method?: InputMaybe<StringNullableFilter>;
  shipping_address?: InputMaybe<StringNullableFilter>;
  shipping_and_handling?: InputMaybe<StringNullableFilter>;
  shipping_information?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subtotal?: InputMaybe<StringNullableFilter>;
};

export type InvoicesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type JsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['JSON']>;
  array_ends_with?: InputMaybe<Scalars['JSON']>;
  array_starts_with?: InputMaybe<Scalars['JSON']>;
  equals?: InputMaybe<Scalars['JSON']>;
  gt?: InputMaybe<Scalars['JSON']>;
  gte?: InputMaybe<Scalars['JSON']>;
  lt?: InputMaybe<Scalars['JSON']>;
  lte?: InputMaybe<Scalars['JSON']>;
  not?: InputMaybe<Scalars['JSON']>;
  path?: InputMaybe<Array<Scalars['String']>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type JsonNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedJsonNullableFilter>;
  _min?: InputMaybe<NestedJsonNullableFilter>;
  array_contains?: InputMaybe<Scalars['JSON']>;
  array_ends_with?: InputMaybe<Scalars['JSON']>;
  array_starts_with?: InputMaybe<Scalars['JSON']>;
  equals?: InputMaybe<Scalars['JSON']>;
  gt?: InputMaybe<Scalars['JSON']>;
  gte?: InputMaybe<Scalars['JSON']>;
  lt?: InputMaybe<Scalars['JSON']>;
  lte?: InputMaybe<Scalars['JSON']>;
  not?: InputMaybe<Scalars['JSON']>;
  path?: InputMaybe<Array<Scalars['String']>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type Leads = {
  __typename?: 'Leads';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  lead_source?: Maybe<Scalars['String']>;
  lead_source_description?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  opportunity_amount?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  referred_by?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  status_description?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type LeadsAvgAggregate = {
  __typename?: 'LeadsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type LeadsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type LeadsCountAggregate = {
  __typename?: 'LeadsCountAggregate';
  Prefix: Scalars['Int'];
  _all: Scalars['Int'];
  account_name: Scalars['Int'];
  address: Scalars['Int'];
  alt_address: Scalars['Int'];
  alt_city: Scalars['Int'];
  alt_country: Scalars['Int'];
  alt_postalcode: Scalars['Int'];
  alt_state: Scalars['Int'];
  campaign: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  customer_name: Scalars['Int'];
  department: Scalars['Int'];
  description: Scalars['Int'];
  email: Scalars['Int'];
  fax: Scalars['Int'];
  first_name: Scalars['Int'];
  id: Scalars['Int'];
  job_title: Scalars['Int'];
  last_name: Scalars['Int'];
  lead_source: Scalars['Int'];
  lead_source_description: Scalars['Int'];
  mobile: Scalars['Int'];
  office_phone: Scalars['Int'];
  opportunity_amount: Scalars['Int'];
  postalcode: Scalars['Int'];
  referred_by: Scalars['Int'];
  state: Scalars['Int'];
  status: Scalars['Int'];
  status_description: Scalars['Int'];
  website: Scalars['Int'];
};

export type LeadsCountOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  lead_source_description?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  opportunity_amount?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  referred_by?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  status_description?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type LeadsCreateInput = {
  Prefix?: InputMaybe<Scalars['String']>;
  account_name?: InputMaybe<Scalars['String']>;
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customer_name?: InputMaybe<Scalars['String']>;
  department?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  job_title?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  lead_source?: InputMaybe<Scalars['String']>;
  lead_source_description?: InputMaybe<Scalars['String']>;
  mobile?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  opportunity_amount?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  referred_by?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  status_description?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type LeadsCreateManyInput = {
  Prefix?: InputMaybe<Scalars['String']>;
  account_name?: InputMaybe<Scalars['String']>;
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customer_name?: InputMaybe<Scalars['String']>;
  department?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  job_title?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  lead_source?: InputMaybe<Scalars['String']>;
  lead_source_description?: InputMaybe<Scalars['String']>;
  mobile?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  opportunity_amount?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  referred_by?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  status_description?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type LeadsGroupBy = {
  __typename?: 'LeadsGroupBy';
  Prefix?: Maybe<Scalars['String']>;
  _avg?: Maybe<LeadsAvgAggregate>;
  _count?: Maybe<LeadsCountAggregate>;
  _max?: Maybe<LeadsMaxAggregate>;
  _min?: Maybe<LeadsMinAggregate>;
  _sum?: Maybe<LeadsSumAggregate>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  lead_source?: Maybe<Scalars['String']>;
  lead_source_description?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  opportunity_amount?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  referred_by?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  status_description?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type LeadsMaxAggregate = {
  __typename?: 'LeadsMaxAggregate';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  lead_source?: Maybe<Scalars['String']>;
  lead_source_description?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  opportunity_amount?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  referred_by?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  status_description?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type LeadsMaxOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  lead_source_description?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  opportunity_amount?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  referred_by?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  status_description?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type LeadsMinAggregate = {
  __typename?: 'LeadsMinAggregate';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  lead_source?: Maybe<Scalars['String']>;
  lead_source_description?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  opportunity_amount?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  referred_by?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  status_description?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type LeadsMinOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  lead_source_description?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  opportunity_amount?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  referred_by?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  status_description?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum LeadsOrderByRelevanceFieldEnum {
  Prefix = 'Prefix',
  AccountName = 'account_name',
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  Campaign = 'campaign',
  City = 'city',
  Country = 'country',
  CustomerName = 'customer_name',
  Department = 'department',
  Description = 'description',
  Email = 'email',
  Fax = 'fax',
  FirstName = 'first_name',
  JobTitle = 'job_title',
  LastName = 'last_name',
  LeadSource = 'lead_source',
  LeadSourceDescription = 'lead_source_description',
  Mobile = 'mobile',
  OfficePhone = 'office_phone',
  OpportunityAmount = 'opportunity_amount',
  Postalcode = 'postalcode',
  ReferredBy = 'referred_by',
  State = 'state',
  Status = 'status',
  StatusDescription = 'status_description',
  Website = 'website'
}

export type LeadsOrderByRelevanceInput = {
  fields: Array<LeadsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type LeadsOrderByWithAggregationInput = {
  Prefix?: InputMaybe<SortOrder>;
  _avg?: InputMaybe<LeadsAvgOrderByAggregateInput>;
  _count?: InputMaybe<LeadsCountOrderByAggregateInput>;
  _max?: InputMaybe<LeadsMaxOrderByAggregateInput>;
  _min?: InputMaybe<LeadsMinOrderByAggregateInput>;
  _sum?: InputMaybe<LeadsSumOrderByAggregateInput>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  lead_source_description?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  opportunity_amount?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  referred_by?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  status_description?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type LeadsOrderByWithRelationAndSearchRelevanceInput = {
  Prefix?: InputMaybe<SortOrder>;
  _relevance?: InputMaybe<LeadsOrderByRelevanceInput>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  lead_source_description?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  opportunity_amount?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  referred_by?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  status_description?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum LeadsScalarFieldEnum {
  Prefix = 'Prefix',
  AccountName = 'account_name',
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  Campaign = 'campaign',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  CustomerName = 'customer_name',
  Department = 'department',
  Description = 'description',
  Email = 'email',
  Fax = 'fax',
  FirstName = 'first_name',
  Id = 'id',
  JobTitle = 'job_title',
  LastName = 'last_name',
  LeadSource = 'lead_source',
  LeadSourceDescription = 'lead_source_description',
  Mobile = 'mobile',
  OfficePhone = 'office_phone',
  OpportunityAmount = 'opportunity_amount',
  Postalcode = 'postalcode',
  ReferredBy = 'referred_by',
  State = 'state',
  Status = 'status',
  StatusDescription = 'status_description',
  Website = 'website'
}

export type LeadsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<LeadsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<LeadsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<LeadsScalarWhereWithAggregatesInput>>;
  Prefix?: InputMaybe<StringNullableWithAggregatesFilter>;
  account_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_city?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  campaign?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customer_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  department?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  fax?: InputMaybe<StringNullableWithAggregatesFilter>;
  first_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  job_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  last_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  lead_source?: InputMaybe<StringNullableWithAggregatesFilter>;
  lead_source_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  mobile?: InputMaybe<StringNullableWithAggregatesFilter>;
  office_phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  opportunity_amount?: InputMaybe<StringNullableWithAggregatesFilter>;
  postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  referred_by?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  status_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type LeadsSumAggregate = {
  __typename?: 'LeadsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type LeadsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type LeadsUpdateInput = {
  Prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  job_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lead_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lead_source_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  opportunity_amount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  referred_by?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LeadsUpdateManyMutationInput = {
  Prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  job_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lead_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  lead_source_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  opportunity_amount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  referred_by?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LeadsWhereInput = {
  AND?: InputMaybe<Array<LeadsWhereInput>>;
  NOT?: InputMaybe<Array<LeadsWhereInput>>;
  OR?: InputMaybe<Array<LeadsWhereInput>>;
  Prefix?: InputMaybe<StringNullableFilter>;
  account_name?: InputMaybe<StringNullableFilter>;
  address?: InputMaybe<StringNullableFilter>;
  alt_address?: InputMaybe<StringNullableFilter>;
  alt_city?: InputMaybe<StringNullableFilter>;
  alt_country?: InputMaybe<StringNullableFilter>;
  alt_postalcode?: InputMaybe<StringNullableFilter>;
  alt_state?: InputMaybe<StringNullableFilter>;
  campaign?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customer_name?: InputMaybe<StringNullableFilter>;
  department?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  fax?: InputMaybe<StringNullableFilter>;
  first_name?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  job_title?: InputMaybe<StringNullableFilter>;
  last_name?: InputMaybe<StringNullableFilter>;
  lead_source?: InputMaybe<StringNullableFilter>;
  lead_source_description?: InputMaybe<StringNullableFilter>;
  mobile?: InputMaybe<StringNullableFilter>;
  office_phone?: InputMaybe<StringNullableFilter>;
  opportunity_amount?: InputMaybe<StringNullableFilter>;
  postalcode?: InputMaybe<StringNullableFilter>;
  referred_by?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  status_description?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type LeadsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type LogIn = {
  __typename?: 'LogIn';
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  expiresIn?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  password?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type LogInAvgAggregate = {
  __typename?: 'LogInAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type LogInAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type LogInCountAggregate = {
  __typename?: 'LogInCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  email: Scalars['Int'];
  expiresIn: Scalars['Int'];
  id: Scalars['Int'];
  password: Scalars['Int'];
  token: Scalars['Int'];
  username: Scalars['Int'];
  users: Scalars['Int'];
};

export type LogInCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expiresIn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type LogInCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  expiresIn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  password?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type LogInCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  expiresIn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  password?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type LogInGroupBy = {
  __typename?: 'LogInGroupBy';
  _avg?: Maybe<LogInAvgAggregate>;
  _count?: Maybe<LogInCountAggregate>;
  _max?: Maybe<LogInMaxAggregate>;
  _min?: Maybe<LogInMinAggregate>;
  _sum?: Maybe<LogInSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  expiresIn?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  password?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type LogInMaxAggregate = {
  __typename?: 'LogInMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  expiresIn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  password?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type LogInMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expiresIn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type LogInMinAggregate = {
  __typename?: 'LogInMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  expiresIn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  password?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type LogInMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expiresIn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum LogInOrderByRelevanceFieldEnum {
  Email = 'email',
  ExpiresIn = 'expiresIn',
  Password = 'password',
  Token = 'token',
  Username = 'username',
  Users = 'users'
}

export type LogInOrderByRelevanceInput = {
  fields: Array<LogInOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type LogInOrderByWithAggregationInput = {
  _avg?: InputMaybe<LogInAvgOrderByAggregateInput>;
  _count?: InputMaybe<LogInCountOrderByAggregateInput>;
  _max?: InputMaybe<LogInMaxOrderByAggregateInput>;
  _min?: InputMaybe<LogInMinOrderByAggregateInput>;
  _sum?: InputMaybe<LogInSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expiresIn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type LogInOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<LogInOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expiresIn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  token?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum LogInScalarFieldEnum {
  CreatedAt = 'created_at',
  Email = 'email',
  ExpiresIn = 'expiresIn',
  Id = 'id',
  Password = 'password',
  Token = 'token',
  Username = 'username',
  Users = 'users'
}

export type LogInScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<LogInScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<LogInScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<LogInScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiresIn?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  token?: InputMaybe<StringNullableWithAggregatesFilter>;
  username?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type LogInSumAggregate = {
  __typename?: 'LogInSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type LogInSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type LogInUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresIn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  token?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LogInUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresIn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  token?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LogInWhereInput = {
  AND?: InputMaybe<Array<LogInWhereInput>>;
  NOT?: InputMaybe<Array<LogInWhereInput>>;
  OR?: InputMaybe<Array<LogInWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  expiresIn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  password?: InputMaybe<StringNullableFilter>;
  token?: InputMaybe<StringNullableFilter>;
  username?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type LogInWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Manufacturer = {
  __typename?: 'Manufacturer';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type ManufacturerAvgAggregate = {
  __typename?: 'ManufacturerAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  product?: Maybe<Scalars['Float']>;
};

export type ManufacturerAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type ManufacturerCountAggregate = {
  __typename?: 'ManufacturerCountAggregate';
  _all: Scalars['Int'];
  city: Scalars['Int'];
  code: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
  product: Scalars['Int'];
  products: Scalars['Int'];
  state: Scalars['Int'];
};

export type ManufacturerCountOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type ManufacturerCreateInput = {
  city?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['BigInt']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type ManufacturerCreateManyInput = {
  city?: InputMaybe<Scalars['String']>;
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['BigInt']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type ManufacturerGroupBy = {
  __typename?: 'ManufacturerGroupBy';
  _avg?: Maybe<ManufacturerAvgAggregate>;
  _count?: Maybe<ManufacturerCountAggregate>;
  _max?: Maybe<ManufacturerMaxAggregate>;
  _min?: Maybe<ManufacturerMinAggregate>;
  _sum?: Maybe<ManufacturerSumAggregate>;
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type ManufacturerMaxAggregate = {
  __typename?: 'ManufacturerMaxAggregate';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type ManufacturerMaxOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type ManufacturerMinAggregate = {
  __typename?: 'ManufacturerMinAggregate';
  city?: Maybe<Scalars['String']>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type ManufacturerMinOrderByAggregateInput = {
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum ManufacturerOrderByRelevanceFieldEnum {
  City = 'city',
  Code = 'code',
  Country = 'country',
  Description = 'description',
  IsPublic = 'isPublic',
  Media = 'media',
  Name = 'name',
  Products = 'products',
  State = 'state'
}

export type ManufacturerOrderByRelevanceInput = {
  fields: Array<ManufacturerOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ManufacturerOrderByWithAggregationInput = {
  _avg?: InputMaybe<ManufacturerAvgOrderByAggregateInput>;
  _count?: InputMaybe<ManufacturerCountOrderByAggregateInput>;
  _max?: InputMaybe<ManufacturerMaxOrderByAggregateInput>;
  _min?: InputMaybe<ManufacturerMinOrderByAggregateInput>;
  _sum?: InputMaybe<ManufacturerSumOrderByAggregateInput>;
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type ManufacturerOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ManufacturerOrderByRelevanceInput>;
  city?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum ManufacturerScalarFieldEnum {
  City = 'city',
  Code = 'code',
  Country = 'country',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  IsPublic = 'isPublic',
  Media = 'media',
  Name = 'name',
  Product = 'product',
  Products = 'products',
  State = 'state'
}

export type ManufacturerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ManufacturerScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ManufacturerScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ManufacturerScalarWhereWithAggregatesInput>>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ManufacturerSumAggregate = {
  __typename?: 'ManufacturerSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  product?: Maybe<Scalars['BigInt']>;
};

export type ManufacturerSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
};

export type ManufacturerUpdateInput = {
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ManufacturerUpdateManyMutationInput = {
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ManufacturerWhereInput = {
  AND?: InputMaybe<Array<ManufacturerWhereInput>>;
  NOT?: InputMaybe<Array<ManufacturerWhereInput>>;
  OR?: InputMaybe<Array<ManufacturerWhereInput>>;
  city?: InputMaybe<StringNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<BigIntNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
};

export type ManufacturerWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Mediamanager = {
  __typename?: 'Mediamanager';
  agreements?: Maybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: Maybe<Scalars['String']>;
  albums?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['Int']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['Int']>;
  comments?: Maybe<Scalars['String']>;
  content_type?: Maybe<Scalars['String']>;
  copyright?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  dimensions?: Maybe<Scalars['String']>;
  expiration_date?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  keywords?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_description?: Maybe<Scalars['String']>;
  task_name?: Maybe<Scalars['BigInt']>;
  task_type?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  versions?: Maybe<Scalars['String']>;
  watermark_description?: Maybe<Scalars['String']>;
  watermark_media?: Maybe<Scalars['String']>;
  watermark_name?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};

export type MediamanagerAvgAggregate = {
  __typename?: 'MediamanagerAvgAggregate';
  agreements?: Maybe<Scalars['Float']>;
  author?: Maybe<Scalars['Float']>;
  brands?: Maybe<Scalars['Float']>;
  comment?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  members?: Maybe<Scalars['Float']>;
  products?: Maybe<Scalars['Float']>;
  task_name?: Maybe<Scalars['Float']>;
};

export type MediamanagerAvgOrderByAggregateInput = {
  agreements?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
};

export type MediamanagerCountAggregate = {
  __typename?: 'MediamanagerCountAggregate';
  _all: Scalars['Int'];
  agreements: Scalars['Int'];
  agreements_agreementsTomediamanager: Scalars['Int'];
  albums: Scalars['Int'];
  author: Scalars['Int'];
  brands: Scalars['Int'];
  brands_brandsTomediamanager: Scalars['Int'];
  comment: Scalars['Int'];
  comments: Scalars['Int'];
  content_type: Scalars['Int'];
  copyright: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  dimensions: Scalars['Int'];
  expiration_date: Scalars['Int'];
  id: Scalars['Int'];
  keywords: Scalars['Int'];
  media: Scalars['Int'];
  members: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  products_mediamanagerToproducts: Scalars['Int'];
  status: Scalars['Int'];
  tags: Scalars['Int'];
  task_description: Scalars['Int'];
  task_name: Scalars['Int'];
  task_type: Scalars['Int'];
  tasks: Scalars['Int'];
  users: Scalars['Int'];
  versions: Scalars['Int'];
  watermark_description: Scalars['Int'];
  watermark_media: Scalars['Int'];
  watermark_name: Scalars['Int'];
  workspace: Scalars['Int'];
};

export type MediamanagerCountOrderByAggregateInput = {
  agreements?: InputMaybe<SortOrder>;
  agreements_agreementsTomediamanager?: InputMaybe<SortOrder>;
  albums?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsTomediamanager?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  content_type?: InputMaybe<SortOrder>;
  copyright?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  dimensions?: InputMaybe<SortOrder>;
  expiration_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  keywords?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_mediamanagerToproducts?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_description?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
  task_type?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  versions?: InputMaybe<SortOrder>;
  watermark_description?: InputMaybe<SortOrder>;
  watermark_media?: InputMaybe<SortOrder>;
  watermark_name?: InputMaybe<SortOrder>;
  workspace?: InputMaybe<SortOrder>;
};

export type MediamanagerCreateInput = {
  agreements?: InputMaybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: InputMaybe<Scalars['String']>;
  albums?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['Int']>;
  brands?: InputMaybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['Int']>;
  comments?: InputMaybe<Scalars['String']>;
  content_type?: InputMaybe<Scalars['String']>;
  copyright?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  dimensions?: InputMaybe<Scalars['String']>;
  expiration_date?: InputMaybe<Scalars['String']>;
  keywords?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  members?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  task_description?: InputMaybe<Scalars['String']>;
  task_name?: InputMaybe<Scalars['BigInt']>;
  task_type?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  versions?: InputMaybe<Scalars['String']>;
  watermark_description?: InputMaybe<Scalars['String']>;
  watermark_media?: InputMaybe<Scalars['String']>;
  watermark_name?: InputMaybe<Scalars['String']>;
  workspace?: InputMaybe<Scalars['String']>;
};

export type MediamanagerCreateManyInput = {
  agreements?: InputMaybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: InputMaybe<Scalars['String']>;
  albums?: InputMaybe<Scalars['String']>;
  author?: InputMaybe<Scalars['Int']>;
  brands?: InputMaybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['Int']>;
  comments?: InputMaybe<Scalars['String']>;
  content_type?: InputMaybe<Scalars['String']>;
  copyright?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  dimensions?: InputMaybe<Scalars['String']>;
  expiration_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  keywords?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  members?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  task_description?: InputMaybe<Scalars['String']>;
  task_name?: InputMaybe<Scalars['BigInt']>;
  task_type?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  versions?: InputMaybe<Scalars['String']>;
  watermark_description?: InputMaybe<Scalars['String']>;
  watermark_media?: InputMaybe<Scalars['String']>;
  watermark_name?: InputMaybe<Scalars['String']>;
  workspace?: InputMaybe<Scalars['String']>;
};

export type MediamanagerGroupBy = {
  __typename?: 'MediamanagerGroupBy';
  _avg?: Maybe<MediamanagerAvgAggregate>;
  _count?: Maybe<MediamanagerCountAggregate>;
  _max?: Maybe<MediamanagerMaxAggregate>;
  _min?: Maybe<MediamanagerMinAggregate>;
  _sum?: Maybe<MediamanagerSumAggregate>;
  agreements?: Maybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: Maybe<Scalars['String']>;
  albums?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['Int']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['Int']>;
  comments?: Maybe<Scalars['String']>;
  content_type?: Maybe<Scalars['String']>;
  copyright?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  dimensions?: Maybe<Scalars['String']>;
  expiration_date?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  keywords?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_description?: Maybe<Scalars['String']>;
  task_name?: Maybe<Scalars['BigInt']>;
  task_type?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  versions?: Maybe<Scalars['String']>;
  watermark_description?: Maybe<Scalars['String']>;
  watermark_media?: Maybe<Scalars['String']>;
  watermark_name?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};

export type MediamanagerMaxAggregate = {
  __typename?: 'MediamanagerMaxAggregate';
  agreements?: Maybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: Maybe<Scalars['String']>;
  albums?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['Int']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['Int']>;
  comments?: Maybe<Scalars['String']>;
  content_type?: Maybe<Scalars['String']>;
  copyright?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  dimensions?: Maybe<Scalars['String']>;
  expiration_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  keywords?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_description?: Maybe<Scalars['String']>;
  task_name?: Maybe<Scalars['BigInt']>;
  task_type?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  versions?: Maybe<Scalars['String']>;
  watermark_description?: Maybe<Scalars['String']>;
  watermark_media?: Maybe<Scalars['String']>;
  watermark_name?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};

export type MediamanagerMaxOrderByAggregateInput = {
  agreements?: InputMaybe<SortOrder>;
  agreements_agreementsTomediamanager?: InputMaybe<SortOrder>;
  albums?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsTomediamanager?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  content_type?: InputMaybe<SortOrder>;
  copyright?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  dimensions?: InputMaybe<SortOrder>;
  expiration_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  keywords?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_mediamanagerToproducts?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_description?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
  task_type?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  versions?: InputMaybe<SortOrder>;
  watermark_description?: InputMaybe<SortOrder>;
  watermark_media?: InputMaybe<SortOrder>;
  watermark_name?: InputMaybe<SortOrder>;
  workspace?: InputMaybe<SortOrder>;
};

export type MediamanagerMinAggregate = {
  __typename?: 'MediamanagerMinAggregate';
  agreements?: Maybe<Scalars['Int']>;
  agreements_agreementsTomediamanager?: Maybe<Scalars['String']>;
  albums?: Maybe<Scalars['String']>;
  author?: Maybe<Scalars['Int']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsTomediamanager?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['Int']>;
  comments?: Maybe<Scalars['String']>;
  content_type?: Maybe<Scalars['String']>;
  copyright?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  dimensions?: Maybe<Scalars['String']>;
  expiration_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  keywords?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_mediamanagerToproducts?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_description?: Maybe<Scalars['String']>;
  task_name?: Maybe<Scalars['BigInt']>;
  task_type?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  versions?: Maybe<Scalars['String']>;
  watermark_description?: Maybe<Scalars['String']>;
  watermark_media?: Maybe<Scalars['String']>;
  watermark_name?: Maybe<Scalars['String']>;
  workspace?: Maybe<Scalars['String']>;
};

export type MediamanagerMinOrderByAggregateInput = {
  agreements?: InputMaybe<SortOrder>;
  agreements_agreementsTomediamanager?: InputMaybe<SortOrder>;
  albums?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsTomediamanager?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  content_type?: InputMaybe<SortOrder>;
  copyright?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  dimensions?: InputMaybe<SortOrder>;
  expiration_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  keywords?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_mediamanagerToproducts?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_description?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
  task_type?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  versions?: InputMaybe<SortOrder>;
  watermark_description?: InputMaybe<SortOrder>;
  watermark_media?: InputMaybe<SortOrder>;
  watermark_name?: InputMaybe<SortOrder>;
  workspace?: InputMaybe<SortOrder>;
};

export enum MediamanagerOrderByRelevanceFieldEnum {
  AgreementsAgreementsTomediamanager = 'agreements_agreementsTomediamanager',
  Albums = 'albums',
  BrandsBrandsTomediamanager = 'brands_brandsTomediamanager',
  Comments = 'comments',
  ContentType = 'content_type',
  Copyright = 'copyright',
  Customers = 'customers',
  Description = 'description',
  Dimensions = 'dimensions',
  ExpirationDate = 'expiration_date',
  Keywords = 'keywords',
  Media = 'media',
  Name = 'name',
  ProductsMediamanagerToproducts = 'products_mediamanagerToproducts',
  Status = 'status',
  Tags = 'tags',
  TaskDescription = 'task_description',
  TaskType = 'task_type',
  Tasks = 'tasks',
  Users = 'users',
  Versions = 'versions',
  WatermarkDescription = 'watermark_description',
  WatermarkMedia = 'watermark_media',
  WatermarkName = 'watermark_name',
  Workspace = 'workspace'
}

export type MediamanagerOrderByRelevanceInput = {
  fields: Array<MediamanagerOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type MediamanagerOrderByWithAggregationInput = {
  _avg?: InputMaybe<MediamanagerAvgOrderByAggregateInput>;
  _count?: InputMaybe<MediamanagerCountOrderByAggregateInput>;
  _max?: InputMaybe<MediamanagerMaxOrderByAggregateInput>;
  _min?: InputMaybe<MediamanagerMinOrderByAggregateInput>;
  _sum?: InputMaybe<MediamanagerSumOrderByAggregateInput>;
  agreements?: InputMaybe<SortOrder>;
  agreements_agreementsTomediamanager?: InputMaybe<SortOrder>;
  albums?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsTomediamanager?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  content_type?: InputMaybe<SortOrder>;
  copyright?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  dimensions?: InputMaybe<SortOrder>;
  expiration_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  keywords?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_mediamanagerToproducts?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_description?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
  task_type?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  versions?: InputMaybe<SortOrder>;
  watermark_description?: InputMaybe<SortOrder>;
  watermark_media?: InputMaybe<SortOrder>;
  watermark_name?: InputMaybe<SortOrder>;
  workspace?: InputMaybe<SortOrder>;
};

export type MediamanagerOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<MediamanagerOrderByRelevanceInput>;
  agreements?: InputMaybe<SortOrder>;
  agreements_agreementsTomediamanager?: InputMaybe<SortOrder>;
  albums?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsTomediamanager?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  content_type?: InputMaybe<SortOrder>;
  copyright?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  dimensions?: InputMaybe<SortOrder>;
  expiration_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  keywords?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_mediamanagerToproducts?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_description?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
  task_type?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  versions?: InputMaybe<SortOrder>;
  watermark_description?: InputMaybe<SortOrder>;
  watermark_media?: InputMaybe<SortOrder>;
  watermark_name?: InputMaybe<SortOrder>;
  workspace?: InputMaybe<SortOrder>;
};

export enum MediamanagerScalarFieldEnum {
  Agreements = 'agreements',
  AgreementsAgreementsTomediamanager = 'agreements_agreementsTomediamanager',
  Albums = 'albums',
  Author = 'author',
  Brands = 'brands',
  BrandsBrandsTomediamanager = 'brands_brandsTomediamanager',
  Comment = 'comment',
  Comments = 'comments',
  ContentType = 'content_type',
  Copyright = 'copyright',
  CreatedAt = 'created_at',
  Customers = 'customers',
  Description = 'description',
  Dimensions = 'dimensions',
  ExpirationDate = 'expiration_date',
  Id = 'id',
  Keywords = 'keywords',
  Media = 'media',
  Members = 'members',
  Name = 'name',
  Products = 'products',
  ProductsMediamanagerToproducts = 'products_mediamanagerToproducts',
  Status = 'status',
  Tags = 'tags',
  TaskDescription = 'task_description',
  TaskName = 'task_name',
  TaskType = 'task_type',
  Tasks = 'tasks',
  Users = 'users',
  Versions = 'versions',
  WatermarkDescription = 'watermark_description',
  WatermarkMedia = 'watermark_media',
  WatermarkName = 'watermark_name',
  Workspace = 'workspace'
}

export type MediamanagerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<MediamanagerScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<MediamanagerScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<MediamanagerScalarWhereWithAggregatesInput>>;
  agreements?: InputMaybe<IntNullableWithAggregatesFilter>;
  agreements_agreementsTomediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  albums?: InputMaybe<StringNullableWithAggregatesFilter>;
  author?: InputMaybe<IntNullableWithAggregatesFilter>;
  brands?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  brands_brandsTomediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  comment?: InputMaybe<IntNullableWithAggregatesFilter>;
  comments?: InputMaybe<StringNullableWithAggregatesFilter>;
  content_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  copyright?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  dimensions?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  keywords?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  members?: InputMaybe<IntNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  products_mediamanagerToproducts?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  tags?: InputMaybe<StringNullableWithAggregatesFilter>;
  task_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  task_name?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  task_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  tasks?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
  versions?: InputMaybe<StringNullableWithAggregatesFilter>;
  watermark_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  watermark_media?: InputMaybe<StringNullableWithAggregatesFilter>;
  watermark_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspace?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type MediamanagerSumAggregate = {
  __typename?: 'MediamanagerSumAggregate';
  agreements?: Maybe<Scalars['Int']>;
  author?: Maybe<Scalars['Int']>;
  brands?: Maybe<Scalars['BigInt']>;
  comment?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  members?: Maybe<Scalars['Int']>;
  products?: Maybe<Scalars['BigInt']>;
  task_name?: Maybe<Scalars['BigInt']>;
};

export type MediamanagerSumOrderByAggregateInput = {
  agreements?: InputMaybe<SortOrder>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  members?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  task_name?: InputMaybe<SortOrder>;
};

export type MediamanagerUpdateInput = {
  agreements?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  agreements_agreementsTomediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  albums?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  author?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  brands_brandsTomediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  copyright?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dimensions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  members?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products_mediamanagerToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_name?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  task_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  versions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspace?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MediamanagerUpdateManyMutationInput = {
  agreements?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  agreements_agreementsTomediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  albums?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  author?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  brands_brandsTomediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  copyright?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  dimensions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  members?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products_mediamanagerToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_name?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  task_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  versions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  watermark_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspace?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MediamanagerWhereInput = {
  AND?: InputMaybe<Array<MediamanagerWhereInput>>;
  NOT?: InputMaybe<Array<MediamanagerWhereInput>>;
  OR?: InputMaybe<Array<MediamanagerWhereInput>>;
  agreements?: InputMaybe<IntNullableFilter>;
  agreements_agreementsTomediamanager?: InputMaybe<StringNullableFilter>;
  albums?: InputMaybe<StringNullableFilter>;
  author?: InputMaybe<IntNullableFilter>;
  brands?: InputMaybe<BigIntNullableFilter>;
  brands_brandsTomediamanager?: InputMaybe<StringNullableFilter>;
  comment?: InputMaybe<IntNullableFilter>;
  comments?: InputMaybe<StringNullableFilter>;
  content_type?: InputMaybe<StringNullableFilter>;
  copyright?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  dimensions?: InputMaybe<StringNullableFilter>;
  expiration_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  keywords?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  members?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<BigIntNullableFilter>;
  products_mediamanagerToproducts?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  task_description?: InputMaybe<StringNullableFilter>;
  task_name?: InputMaybe<BigIntNullableFilter>;
  task_type?: InputMaybe<StringNullableFilter>;
  tasks?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
  versions?: InputMaybe<StringNullableFilter>;
  watermark_description?: InputMaybe<StringNullableFilter>;
  watermark_media?: InputMaybe<StringNullableFilter>;
  watermark_name?: InputMaybe<StringNullableFilter>;
  workspace?: InputMaybe<StringNullableFilter>;
};

export type MediamanagerWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Meeting = {
  __typename?: 'Meeting';
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  duration?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invitees?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['String']>;
  reminders?: Maybe<Scalars['String']>;
  scheduling?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
};

export type MeetingAvgAggregate = {
  __typename?: 'MeetingAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type MeetingAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type MeetingCountAggregate = {
  __typename?: 'MeetingCountAggregate';
  _all: Scalars['Int'];
  assigned_to: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  duration: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  invitees: Scalars['Int'];
  related_to: Scalars['Int'];
  reminders: Scalars['Int'];
  scheduling: Scalars['Int'];
  start_date: Scalars['Int'];
  status: Scalars['Int'];
  subject: Scalars['Int'];
};

export type MeetingCountOrderByAggregateInput = {
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invitees?: InputMaybe<SortOrder>;
  related_to?: InputMaybe<SortOrder>;
  reminders?: InputMaybe<SortOrder>;
  scheduling?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
};

export type MeetingCreateInput = {
  assigned_to?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  duration?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invitees?: InputMaybe<Scalars['String']>;
  related_to?: InputMaybe<Scalars['String']>;
  reminders?: InputMaybe<Scalars['String']>;
  scheduling?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
};

export type MeetingCreateManyInput = {
  assigned_to?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  duration?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  invitees?: InputMaybe<Scalars['String']>;
  related_to?: InputMaybe<Scalars['String']>;
  reminders?: InputMaybe<Scalars['String']>;
  scheduling?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subject?: InputMaybe<Scalars['String']>;
};

export type MeetingGroupBy = {
  __typename?: 'MeetingGroupBy';
  _avg?: Maybe<MeetingAvgAggregate>;
  _count?: Maybe<MeetingCountAggregate>;
  _max?: Maybe<MeetingMaxAggregate>;
  _min?: Maybe<MeetingMinAggregate>;
  _sum?: Maybe<MeetingSumAggregate>;
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  duration?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  invitees?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['String']>;
  reminders?: Maybe<Scalars['String']>;
  scheduling?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
};

export type MeetingMaxAggregate = {
  __typename?: 'MeetingMaxAggregate';
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  duration?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invitees?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['String']>;
  reminders?: Maybe<Scalars['String']>;
  scheduling?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
};

export type MeetingMaxOrderByAggregateInput = {
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invitees?: InputMaybe<SortOrder>;
  related_to?: InputMaybe<SortOrder>;
  reminders?: InputMaybe<SortOrder>;
  scheduling?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
};

export type MeetingMinAggregate = {
  __typename?: 'MeetingMinAggregate';
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  duration?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  invitees?: Maybe<Scalars['String']>;
  related_to?: Maybe<Scalars['String']>;
  reminders?: Maybe<Scalars['String']>;
  scheduling?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
};

export type MeetingMinOrderByAggregateInput = {
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invitees?: InputMaybe<SortOrder>;
  related_to?: InputMaybe<SortOrder>;
  reminders?: InputMaybe<SortOrder>;
  scheduling?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
};

export enum MeetingOrderByRelevanceFieldEnum {
  AssignedTo = 'assigned_to',
  Content = 'content',
  Duration = 'duration',
  EndDate = 'end_date',
  Invitees = 'invitees',
  RelatedTo = 'related_to',
  Reminders = 'reminders',
  Scheduling = 'scheduling',
  StartDate = 'start_date',
  Status = 'status',
  Subject = 'subject'
}

export type MeetingOrderByRelevanceInput = {
  fields: Array<MeetingOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type MeetingOrderByWithAggregationInput = {
  _avg?: InputMaybe<MeetingAvgOrderByAggregateInput>;
  _count?: InputMaybe<MeetingCountOrderByAggregateInput>;
  _max?: InputMaybe<MeetingMaxOrderByAggregateInput>;
  _min?: InputMaybe<MeetingMinOrderByAggregateInput>;
  _sum?: InputMaybe<MeetingSumOrderByAggregateInput>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invitees?: InputMaybe<SortOrder>;
  related_to?: InputMaybe<SortOrder>;
  reminders?: InputMaybe<SortOrder>;
  scheduling?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
};

export type MeetingOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<MeetingOrderByRelevanceInput>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  duration?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invitees?: InputMaybe<SortOrder>;
  related_to?: InputMaybe<SortOrder>;
  reminders?: InputMaybe<SortOrder>;
  scheduling?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
};

export enum MeetingScalarFieldEnum {
  AssignedTo = 'assigned_to',
  Content = 'content',
  CreatedAt = 'created_at',
  Duration = 'duration',
  EndDate = 'end_date',
  Id = 'id',
  Invitees = 'invitees',
  RelatedTo = 'related_to',
  Reminders = 'reminders',
  Scheduling = 'scheduling',
  StartDate = 'start_date',
  Status = 'status',
  Subject = 'subject'
}

export type MeetingScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<MeetingScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<MeetingScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<MeetingScalarWhereWithAggregatesInput>>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  duration?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  invitees?: InputMaybe<StringNullableWithAggregatesFilter>;
  related_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  reminders?: InputMaybe<StringNullableWithAggregatesFilter>;
  scheduling?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type MeetingSumAggregate = {
  __typename?: 'MeetingSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type MeetingSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type MeetingUpdateInput = {
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invitees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reminders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  scheduling?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MeetingUpdateManyMutationInput = {
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  duration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  invitees?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  related_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reminders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  scheduling?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MeetingWhereInput = {
  AND?: InputMaybe<Array<MeetingWhereInput>>;
  NOT?: InputMaybe<Array<MeetingWhereInput>>;
  OR?: InputMaybe<Array<MeetingWhereInput>>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  duration?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  invitees?: InputMaybe<StringNullableFilter>;
  related_to?: InputMaybe<StringNullableFilter>;
  reminders?: InputMaybe<StringNullableFilter>;
  scheduling?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
};

export type MeetingWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Messages = {
  __typename?: 'Messages';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  media?: Maybe<Scalars['String']>;
  sender?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type MessagesAvgAggregate = {
  __typename?: 'MessagesAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  staff_id?: Maybe<Scalars['Float']>;
};

export type MessagesAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
};

export type MessagesCountAggregate = {
  __typename?: 'MessagesCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  from: Scalars['Int'];
  id: Scalars['Int'];
  media: Scalars['Int'];
  sender: Scalars['Int'];
  staff_id: Scalars['Int'];
  subject: Scalars['Int'];
  users: Scalars['Int'];
};

export type MessagesCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  sender?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type MessagesCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  sender?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type MessagesCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  from?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  media?: InputMaybe<Scalars['String']>;
  sender?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  subject?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type MessagesGroupBy = {
  __typename?: 'MessagesGroupBy';
  _avg?: Maybe<MessagesAvgAggregate>;
  _count?: Maybe<MessagesCountAggregate>;
  _max?: Maybe<MessagesMaxAggregate>;
  _min?: Maybe<MessagesMinAggregate>;
  _sum?: Maybe<MessagesSumAggregate>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  media?: Maybe<Scalars['String']>;
  sender?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type MessagesMaxAggregate = {
  __typename?: 'MessagesMaxAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  media?: Maybe<Scalars['String']>;
  sender?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type MessagesMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  sender?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type MessagesMinAggregate = {
  __typename?: 'MessagesMinAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  from?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  media?: Maybe<Scalars['String']>;
  sender?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  subject?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type MessagesMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  sender?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum MessagesOrderByRelevanceFieldEnum {
  Content = 'content',
  Customers = 'customers',
  From = 'from',
  Media = 'media',
  Sender = 'sender',
  Subject = 'subject',
  Users = 'users'
}

export type MessagesOrderByRelevanceInput = {
  fields: Array<MessagesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type MessagesOrderByWithAggregationInput = {
  _avg?: InputMaybe<MessagesAvgOrderByAggregateInput>;
  _count?: InputMaybe<MessagesCountOrderByAggregateInput>;
  _max?: InputMaybe<MessagesMaxOrderByAggregateInput>;
  _min?: InputMaybe<MessagesMinOrderByAggregateInput>;
  _sum?: InputMaybe<MessagesSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  sender?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type MessagesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<MessagesOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  from?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  sender?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum MessagesScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'created_at',
  CustId = 'cust_id',
  Customers = 'customers',
  From = 'from',
  Id = 'id',
  Media = 'media',
  Sender = 'sender',
  StaffId = 'staff_id',
  Subject = 'subject',
  Users = 'users'
}

export type MessagesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<MessagesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<MessagesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<MessagesScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  from?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  sender?: InputMaybe<StringNullableWithAggregatesFilter>;
  staff_id?: InputMaybe<IntNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type MessagesSumAggregate = {
  __typename?: 'MessagesSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  staff_id?: Maybe<Scalars['Int']>;
};

export type MessagesSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
};

export type MessagesUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  from?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MessagesUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  from?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  subject?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type MessagesWhereInput = {
  AND?: InputMaybe<Array<MessagesWhereInput>>;
  NOT?: InputMaybe<Array<MessagesWhereInput>>;
  OR?: InputMaybe<Array<MessagesWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  from?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  media?: InputMaybe<StringNullableFilter>;
  sender?: InputMaybe<StringNullableFilter>;
  staff_id?: InputMaybe<IntNullableFilter>;
  subject?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type MessagesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  createManyAccounts: AffectedRowsOutput;
  createManyAgreements: AffectedRowsOutput;
  createManyAnalytics: AffectedRowsOutput;
  createManyApitoken: AffectedRowsOutput;
  createManyArticles: AffectedRowsOutput;
  createManyAttributes: AffectedRowsOutput;
  createManyBrands: AffectedRowsOutput;
  createManyCart_price_rules: AffectedRowsOutput;
  createManyCases: AffectedRowsOutput;
  createManyCatalog_price_rule: AffectedRowsOutput;
  createManyCategories: AffectedRowsOutput;
  createManyChannels: AffectedRowsOutput;
  createManyChecklist: AffectedRowsOutput;
  createManyCities: AffectedRowsOutput;
  createManyCollections: AffectedRowsOutput;
  createManyComments: AffectedRowsOutput;
  createManyContent_type: AffectedRowsOutput;
  createManyContracts: AffectedRowsOutput;
  createManyCountries: AffectedRowsOutput;
  createManyCoupons: AffectedRowsOutput;
  createManyCredit_memos: AffectedRowsOutput;
  createManyCurrencies: AffectedRowsOutput;
  createManyCurrency_rates: AffectedRowsOutput;
  createManyCurrency_symbols: AffectedRowsOutput;
  createManyCustomer_group: AffectedRowsOutput;
  createManyCustomers: AffectedRowsOutput;
  createManyCustomizations: AffectedRowsOutput;
  createManyDashboards: AffectedRowsOutput;
  createManyDeepdive: AffectedRowsOutput;
  createManyDigiboard: AffectedRowsOutput;
  createManyEmails: AffectedRowsOutput;
  createManyEndofshift: AffectedRowsOutput;
  createManyEvents: AffectedRowsOutput;
  createManyFullfillments: AffectedRowsOutput;
  createManyGift_certificates: AffectedRowsOutput;
  createManyGlossary: AffectedRowsOutput;
  createManyImportm: AffectedRowsOutput;
  createManyIntegrations: AffectedRowsOutput;
  createManyInternalization: AffectedRowsOutput;
  createManyInvitations: AffectedRowsOutput;
  createManyInvoices: AffectedRowsOutput;
  createManyLeads: AffectedRowsOutput;
  createManyLogIn: AffectedRowsOutput;
  createManyManufacturer: AffectedRowsOutput;
  createManyMediamanager: AffectedRowsOutput;
  createManyMeeting: AffectedRowsOutput;
  createManyMessages: AffectedRowsOutput;
  createManyNewsletters: AffectedRowsOutput;
  createManyOoto: AffectedRowsOutput;
  createManyOpportunities: AffectedRowsOutput;
  createManyOrders: AffectedRowsOutput;
  createManyPages: AffectedRowsOutput;
  createManyPartners: AffectedRowsOutput;
  createManyPayments: AffectedRowsOutput;
  createManyPermissions: AffectedRowsOutput;
  createManyPlugins: AffectedRowsOutput;
  createManyPolls: AffectedRowsOutput;
  createManyProduct_types: AffectedRowsOutput;
  createManyProducts: AffectedRowsOutput;
  createManyProjects: AffectedRowsOutput;
  createManyProviders: AffectedRowsOutput;
  createManyQuotes: AffectedRowsOutput;
  createManyRating: AffectedRowsOutput;
  createManyReports: AffectedRowsOutput;
  createManyReturns: AffectedRowsOutput;
  createManyReviews: AffectedRowsOutput;
  createManyRewards: AffectedRowsOutput;
  createManyRoles: AffectedRowsOutput;
  createManyScheduler: AffectedRowsOutput;
  createManySegments: AffectedRowsOutput;
  createManySettings: AffectedRowsOutput;
  createManyShipments: AffectedRowsOutput;
  createManySpecial_discounts: AffectedRowsOutput;
  createManyStates: AffectedRowsOutput;
  createManyStatistics: AffectedRowsOutput;
  createManyStocks: AffectedRowsOutput;
  createManyTags: AffectedRowsOutput;
  createManyTargets: AffectedRowsOutput;
  createManyTax_category: AffectedRowsOutput;
  createManyTax_rate: AffectedRowsOutput;
  createManyTax_rule: AffectedRowsOutput;
  createManyTemplates: AffectedRowsOutput;
  createManyThemes: AffectedRowsOutput;
  createManyTicketing: AffectedRowsOutput;
  createManyTransactions: AffectedRowsOutput;
  createManyUpload_file: AffectedRowsOutput;
  createManyUsers: AffectedRowsOutput;
  createManyVendors: AffectedRowsOutput;
  createManyVisits: AffectedRowsOutput;
  createManyWarehouse: AffectedRowsOutput;
  createManyWebhooks: AffectedRowsOutput;
  createManyWebsites: AffectedRowsOutput;
  createManyWishlists: AffectedRowsOutput;
  createManyWorkspaces: AffectedRowsOutput;
  createManyZones: AffectedRowsOutput;
  createOneAccounts: Accounts;
  createOneAgreements: Agreements;
  createOneAnalytics: Analytics;
  createOneApitoken: Apitoken;
  createOneArticles: Articles;
  createOneAttributes: Attributes;
  createOneBrands: Brands;
  createOneCart_price_rules: Cart_Price_Rules;
  createOneCases: Cases;
  createOneCatalog_price_rule: Catalog_Price_Rule;
  createOneCategories: Categories;
  createOneChannels: Channels;
  createOneChecklist: Checklist;
  createOneCities: Cities;
  createOneCollections: Collections;
  createOneComments: Comments;
  createOneContent_type: Content_Type;
  createOneContracts: Contracts;
  createOneCountries: Countries;
  createOneCoupons: Coupons;
  createOneCredit_memos: Credit_Memos;
  createOneCurrencies: Currencies;
  createOneCurrency_rates: Currency_Rates;
  createOneCurrency_symbols: Currency_Symbols;
  createOneCustomer_group: Customer_Group;
  createOneCustomers: Customers;
  createOneCustomizations: Customizations;
  createOneDashboards: Dashboards;
  createOneDeepdive: Deepdive;
  createOneDigiboard: Digiboard;
  createOneEmails: Emails;
  createOneEndofshift: Endofshift;
  createOneEvents: Events;
  createOneFullfillments: Fullfillments;
  createOneGift_certificates: Gift_Certificates;
  createOneGlossary: Glossary;
  createOneImportm: Importm;
  createOneIntegrations: Integrations;
  createOneInternalization: Internalization;
  createOneInvitations: Invitations;
  createOneInvoices: Invoices;
  createOneLeads: Leads;
  createOneLogIn: LogIn;
  createOneManufacturer: Manufacturer;
  createOneMediamanager: Mediamanager;
  createOneMeeting: Meeting;
  createOneMessages: Messages;
  createOneNewsletters: Newsletters;
  createOneOoto: Ooto;
  createOneOpportunities: Opportunities;
  createOneOrders: Orders;
  createOnePages: Pages;
  createOnePartners: Partners;
  createOnePayments: Payments;
  createOnePermissions: Permissions;
  createOnePlugins: Plugins;
  createOnePolls: Polls;
  createOneProduct_types: Product_Types;
  createOneProducts: Products;
  createOneProjects: Projects;
  createOneProviders: Providers;
  createOneQuotes: Quotes;
  createOneRating: Rating;
  createOneReports: Reports;
  createOneReturns: Returns;
  createOneReviews: Reviews;
  createOneRewards: Rewards;
  createOneRoles: Roles;
  createOneScheduler: Scheduler;
  createOneSegments: Segments;
  createOneSettings: Settings;
  createOneShipments: Shipments;
  createOneSpecial_discounts: Special_Discounts;
  createOneStates: States;
  createOneStatistics: Statistics;
  createOneStocks: Stocks;
  createOneTags: Tags;
  createOneTargets: Targets;
  createOneTax_category: Tax_Category;
  createOneTax_rate: Tax_Rate;
  createOneTax_rule: Tax_Rule;
  createOneTemplates: Templates;
  createOneThemes: Themes;
  createOneTicketing: Ticketing;
  createOneTransactions: Transactions;
  createOneUpload_file: Upload_File;
  createOneUsers: Users;
  createOneVendors: Vendors;
  createOneVisits: Visits;
  createOneWarehouse: Warehouse;
  createOneWebhooks: Webhooks;
  createOneWebsites: Websites;
  createOneWishlists: Wishlists;
  createOneWorkspaces: Workspaces;
  createOneZones: Zones;
  deleteManyAccounts: AffectedRowsOutput;
  deleteManyAgreements: AffectedRowsOutput;
  deleteManyAnalytics: AffectedRowsOutput;
  deleteManyApitoken: AffectedRowsOutput;
  deleteManyArticles: AffectedRowsOutput;
  deleteManyAttributes: AffectedRowsOutput;
  deleteManyBrands: AffectedRowsOutput;
  deleteManyCart_price_rules: AffectedRowsOutput;
  deleteManyCases: AffectedRowsOutput;
  deleteManyCatalog_price_rule: AffectedRowsOutput;
  deleteManyCategories: AffectedRowsOutput;
  deleteManyChannels: AffectedRowsOutput;
  deleteManyChecklist: AffectedRowsOutput;
  deleteManyCities: AffectedRowsOutput;
  deleteManyCollections: AffectedRowsOutput;
  deleteManyComments: AffectedRowsOutput;
  deleteManyContent_type: AffectedRowsOutput;
  deleteManyContracts: AffectedRowsOutput;
  deleteManyCountries: AffectedRowsOutput;
  deleteManyCoupons: AffectedRowsOutput;
  deleteManyCredit_memos: AffectedRowsOutput;
  deleteManyCurrencies: AffectedRowsOutput;
  deleteManyCurrency_rates: AffectedRowsOutput;
  deleteManyCurrency_symbols: AffectedRowsOutput;
  deleteManyCustomer_group: AffectedRowsOutput;
  deleteManyCustomers: AffectedRowsOutput;
  deleteManyCustomizations: AffectedRowsOutput;
  deleteManyDashboards: AffectedRowsOutput;
  deleteManyDeepdive: AffectedRowsOutput;
  deleteManyDigiboard: AffectedRowsOutput;
  deleteManyEmails: AffectedRowsOutput;
  deleteManyEndofshift: AffectedRowsOutput;
  deleteManyEvents: AffectedRowsOutput;
  deleteManyFullfillments: AffectedRowsOutput;
  deleteManyGift_certificates: AffectedRowsOutput;
  deleteManyGlossary: AffectedRowsOutput;
  deleteManyImportm: AffectedRowsOutput;
  deleteManyIntegrations: AffectedRowsOutput;
  deleteManyInternalization: AffectedRowsOutput;
  deleteManyInvitations: AffectedRowsOutput;
  deleteManyInvoices: AffectedRowsOutput;
  deleteManyLeads: AffectedRowsOutput;
  deleteManyLogIn: AffectedRowsOutput;
  deleteManyManufacturer: AffectedRowsOutput;
  deleteManyMediamanager: AffectedRowsOutput;
  deleteManyMeeting: AffectedRowsOutput;
  deleteManyMessages: AffectedRowsOutput;
  deleteManyNewsletters: AffectedRowsOutput;
  deleteManyOoto: AffectedRowsOutput;
  deleteManyOpportunities: AffectedRowsOutput;
  deleteManyOrders: AffectedRowsOutput;
  deleteManyPages: AffectedRowsOutput;
  deleteManyPartners: AffectedRowsOutput;
  deleteManyPayments: AffectedRowsOutput;
  deleteManyPermissions: AffectedRowsOutput;
  deleteManyPlugins: AffectedRowsOutput;
  deleteManyPolls: AffectedRowsOutput;
  deleteManyProduct_types: AffectedRowsOutput;
  deleteManyProducts: AffectedRowsOutput;
  deleteManyProjects: AffectedRowsOutput;
  deleteManyProviders: AffectedRowsOutput;
  deleteManyQuotes: AffectedRowsOutput;
  deleteManyRating: AffectedRowsOutput;
  deleteManyReports: AffectedRowsOutput;
  deleteManyReturns: AffectedRowsOutput;
  deleteManyReviews: AffectedRowsOutput;
  deleteManyRewards: AffectedRowsOutput;
  deleteManyRoles: AffectedRowsOutput;
  deleteManyScheduler: AffectedRowsOutput;
  deleteManySegments: AffectedRowsOutput;
  deleteManySettings: AffectedRowsOutput;
  deleteManyShipments: AffectedRowsOutput;
  deleteManySpecial_discounts: AffectedRowsOutput;
  deleteManyStates: AffectedRowsOutput;
  deleteManyStatistics: AffectedRowsOutput;
  deleteManyStocks: AffectedRowsOutput;
  deleteManyTags: AffectedRowsOutput;
  deleteManyTargets: AffectedRowsOutput;
  deleteManyTax_category: AffectedRowsOutput;
  deleteManyTax_rate: AffectedRowsOutput;
  deleteManyTax_rule: AffectedRowsOutput;
  deleteManyTemplates: AffectedRowsOutput;
  deleteManyThemes: AffectedRowsOutput;
  deleteManyTicketing: AffectedRowsOutput;
  deleteManyTransactions: AffectedRowsOutput;
  deleteManyUpload_file: AffectedRowsOutput;
  deleteManyUsers: AffectedRowsOutput;
  deleteManyVendors: AffectedRowsOutput;
  deleteManyVisits: AffectedRowsOutput;
  deleteManyWarehouse: AffectedRowsOutput;
  deleteManyWebhooks: AffectedRowsOutput;
  deleteManyWebsites: AffectedRowsOutput;
  deleteManyWishlists: AffectedRowsOutput;
  deleteManyWorkspaces: AffectedRowsOutput;
  deleteManyZones: AffectedRowsOutput;
  deleteOneAccounts?: Maybe<Accounts>;
  deleteOneAgreements?: Maybe<Agreements>;
  deleteOneAnalytics?: Maybe<Analytics>;
  deleteOneApitoken?: Maybe<Apitoken>;
  deleteOneArticles?: Maybe<Articles>;
  deleteOneAttributes?: Maybe<Attributes>;
  deleteOneBrands?: Maybe<Brands>;
  deleteOneCart_price_rules?: Maybe<Cart_Price_Rules>;
  deleteOneCases?: Maybe<Cases>;
  deleteOneCatalog_price_rule?: Maybe<Catalog_Price_Rule>;
  deleteOneCategories?: Maybe<Categories>;
  deleteOneChannels?: Maybe<Channels>;
  deleteOneChecklist?: Maybe<Checklist>;
  deleteOneCities?: Maybe<Cities>;
  deleteOneCollections?: Maybe<Collections>;
  deleteOneComments?: Maybe<Comments>;
  deleteOneContent_type?: Maybe<Content_Type>;
  deleteOneContracts?: Maybe<Contracts>;
  deleteOneCountries?: Maybe<Countries>;
  deleteOneCoupons?: Maybe<Coupons>;
  deleteOneCredit_memos?: Maybe<Credit_Memos>;
  deleteOneCurrencies?: Maybe<Currencies>;
  deleteOneCurrency_rates?: Maybe<Currency_Rates>;
  deleteOneCurrency_symbols?: Maybe<Currency_Symbols>;
  deleteOneCustomer_group?: Maybe<Customer_Group>;
  deleteOneCustomers?: Maybe<Customers>;
  deleteOneCustomizations?: Maybe<Customizations>;
  deleteOneDashboards?: Maybe<Dashboards>;
  deleteOneDeepdive?: Maybe<Deepdive>;
  deleteOneDigiboard?: Maybe<Digiboard>;
  deleteOneEmails?: Maybe<Emails>;
  deleteOneEndofshift?: Maybe<Endofshift>;
  deleteOneEvents?: Maybe<Events>;
  deleteOneFullfillments?: Maybe<Fullfillments>;
  deleteOneGift_certificates?: Maybe<Gift_Certificates>;
  deleteOneGlossary?: Maybe<Glossary>;
  deleteOneImportm?: Maybe<Importm>;
  deleteOneIntegrations?: Maybe<Integrations>;
  deleteOneInternalization?: Maybe<Internalization>;
  deleteOneInvitations?: Maybe<Invitations>;
  deleteOneInvoices?: Maybe<Invoices>;
  deleteOneLeads?: Maybe<Leads>;
  deleteOneLogIn?: Maybe<LogIn>;
  deleteOneManufacturer?: Maybe<Manufacturer>;
  deleteOneMediamanager?: Maybe<Mediamanager>;
  deleteOneMeeting?: Maybe<Meeting>;
  deleteOneMessages?: Maybe<Messages>;
  deleteOneNewsletters?: Maybe<Newsletters>;
  deleteOneOoto?: Maybe<Ooto>;
  deleteOneOpportunities?: Maybe<Opportunities>;
  deleteOneOrders?: Maybe<Orders>;
  deleteOnePages?: Maybe<Pages>;
  deleteOnePartners?: Maybe<Partners>;
  deleteOnePayments?: Maybe<Payments>;
  deleteOnePermissions?: Maybe<Permissions>;
  deleteOnePlugins?: Maybe<Plugins>;
  deleteOnePolls?: Maybe<Polls>;
  deleteOneProduct_types?: Maybe<Product_Types>;
  deleteOneProducts?: Maybe<Products>;
  deleteOneProjects?: Maybe<Projects>;
  deleteOneProviders?: Maybe<Providers>;
  deleteOneQuotes?: Maybe<Quotes>;
  deleteOneRating?: Maybe<Rating>;
  deleteOneReports?: Maybe<Reports>;
  deleteOneReturns?: Maybe<Returns>;
  deleteOneReviews?: Maybe<Reviews>;
  deleteOneRewards?: Maybe<Rewards>;
  deleteOneRoles?: Maybe<Roles>;
  deleteOneScheduler?: Maybe<Scheduler>;
  deleteOneSegments?: Maybe<Segments>;
  deleteOneSettings?: Maybe<Settings>;
  deleteOneShipments?: Maybe<Shipments>;
  deleteOneSpecial_discounts?: Maybe<Special_Discounts>;
  deleteOneStates?: Maybe<States>;
  deleteOneStatistics?: Maybe<Statistics>;
  deleteOneStocks?: Maybe<Stocks>;
  deleteOneTags?: Maybe<Tags>;
  deleteOneTargets?: Maybe<Targets>;
  deleteOneTax_category?: Maybe<Tax_Category>;
  deleteOneTax_rate?: Maybe<Tax_Rate>;
  deleteOneTax_rule?: Maybe<Tax_Rule>;
  deleteOneTemplates?: Maybe<Templates>;
  deleteOneThemes?: Maybe<Themes>;
  deleteOneTicketing?: Maybe<Ticketing>;
  deleteOneTransactions?: Maybe<Transactions>;
  deleteOneUpload_file?: Maybe<Upload_File>;
  deleteOneUsers?: Maybe<Users>;
  deleteOneVendors?: Maybe<Vendors>;
  deleteOneVisits?: Maybe<Visits>;
  deleteOneWarehouse?: Maybe<Warehouse>;
  deleteOneWebhooks?: Maybe<Webhooks>;
  deleteOneWebsites?: Maybe<Websites>;
  deleteOneWishlists?: Maybe<Wishlists>;
  deleteOneWorkspaces?: Maybe<Workspaces>;
  deleteOneZones?: Maybe<Zones>;
  updateManyAccounts: AffectedRowsOutput;
  updateManyAgreements: AffectedRowsOutput;
  updateManyAnalytics: AffectedRowsOutput;
  updateManyApitoken: AffectedRowsOutput;
  updateManyArticles: AffectedRowsOutput;
  updateManyAttributes: AffectedRowsOutput;
  updateManyBrands: AffectedRowsOutput;
  updateManyCart_price_rules: AffectedRowsOutput;
  updateManyCases: AffectedRowsOutput;
  updateManyCatalog_price_rule: AffectedRowsOutput;
  updateManyCategories: AffectedRowsOutput;
  updateManyChannels: AffectedRowsOutput;
  updateManyChecklist: AffectedRowsOutput;
  updateManyCities: AffectedRowsOutput;
  updateManyCollections: AffectedRowsOutput;
  updateManyComments: AffectedRowsOutput;
  updateManyContent_type: AffectedRowsOutput;
  updateManyContracts: AffectedRowsOutput;
  updateManyCountries: AffectedRowsOutput;
  updateManyCoupons: AffectedRowsOutput;
  updateManyCredit_memos: AffectedRowsOutput;
  updateManyCurrencies: AffectedRowsOutput;
  updateManyCurrency_rates: AffectedRowsOutput;
  updateManyCurrency_symbols: AffectedRowsOutput;
  updateManyCustomer_group: AffectedRowsOutput;
  updateManyCustomers: AffectedRowsOutput;
  updateManyCustomizations: AffectedRowsOutput;
  updateManyDashboards: AffectedRowsOutput;
  updateManyDeepdive: AffectedRowsOutput;
  updateManyDigiboard: AffectedRowsOutput;
  updateManyEmails: AffectedRowsOutput;
  updateManyEndofshift: AffectedRowsOutput;
  updateManyEvents: AffectedRowsOutput;
  updateManyFullfillments: AffectedRowsOutput;
  updateManyGift_certificates: AffectedRowsOutput;
  updateManyGlossary: AffectedRowsOutput;
  updateManyImportm: AffectedRowsOutput;
  updateManyIntegrations: AffectedRowsOutput;
  updateManyInternalization: AffectedRowsOutput;
  updateManyInvitations: AffectedRowsOutput;
  updateManyInvoices: AffectedRowsOutput;
  updateManyLeads: AffectedRowsOutput;
  updateManyLogIn: AffectedRowsOutput;
  updateManyManufacturer: AffectedRowsOutput;
  updateManyMediamanager: AffectedRowsOutput;
  updateManyMeeting: AffectedRowsOutput;
  updateManyMessages: AffectedRowsOutput;
  updateManyNewsletters: AffectedRowsOutput;
  updateManyOoto: AffectedRowsOutput;
  updateManyOpportunities: AffectedRowsOutput;
  updateManyOrders: AffectedRowsOutput;
  updateManyPages: AffectedRowsOutput;
  updateManyPartners: AffectedRowsOutput;
  updateManyPayments: AffectedRowsOutput;
  updateManyPermissions: AffectedRowsOutput;
  updateManyPlugins: AffectedRowsOutput;
  updateManyPolls: AffectedRowsOutput;
  updateManyProduct_types: AffectedRowsOutput;
  updateManyProducts: AffectedRowsOutput;
  updateManyProjects: AffectedRowsOutput;
  updateManyProviders: AffectedRowsOutput;
  updateManyQuotes: AffectedRowsOutput;
  updateManyRating: AffectedRowsOutput;
  updateManyReports: AffectedRowsOutput;
  updateManyReturns: AffectedRowsOutput;
  updateManyReviews: AffectedRowsOutput;
  updateManyRewards: AffectedRowsOutput;
  updateManyRoles: AffectedRowsOutput;
  updateManyScheduler: AffectedRowsOutput;
  updateManySegments: AffectedRowsOutput;
  updateManySettings: AffectedRowsOutput;
  updateManyShipments: AffectedRowsOutput;
  updateManySpecial_discounts: AffectedRowsOutput;
  updateManyStates: AffectedRowsOutput;
  updateManyStatistics: AffectedRowsOutput;
  updateManyStocks: AffectedRowsOutput;
  updateManyTags: AffectedRowsOutput;
  updateManyTargets: AffectedRowsOutput;
  updateManyTax_category: AffectedRowsOutput;
  updateManyTax_rate: AffectedRowsOutput;
  updateManyTax_rule: AffectedRowsOutput;
  updateManyTemplates: AffectedRowsOutput;
  updateManyThemes: AffectedRowsOutput;
  updateManyTicketing: AffectedRowsOutput;
  updateManyTransactions: AffectedRowsOutput;
  updateManyUpload_file: AffectedRowsOutput;
  updateManyUsers: AffectedRowsOutput;
  updateManyVendors: AffectedRowsOutput;
  updateManyVisits: AffectedRowsOutput;
  updateManyWarehouse: AffectedRowsOutput;
  updateManyWebhooks: AffectedRowsOutput;
  updateManyWebsites: AffectedRowsOutput;
  updateManyWishlists: AffectedRowsOutput;
  updateManyWorkspaces: AffectedRowsOutput;
  updateManyZones: AffectedRowsOutput;
  updateOneAccounts?: Maybe<Accounts>;
  updateOneAgreements?: Maybe<Agreements>;
  updateOneAnalytics?: Maybe<Analytics>;
  updateOneApitoken?: Maybe<Apitoken>;
  updateOneArticles?: Maybe<Articles>;
  updateOneAttributes?: Maybe<Attributes>;
  updateOneBrands?: Maybe<Brands>;
  updateOneCart_price_rules?: Maybe<Cart_Price_Rules>;
  updateOneCases?: Maybe<Cases>;
  updateOneCatalog_price_rule?: Maybe<Catalog_Price_Rule>;
  updateOneCategories?: Maybe<Categories>;
  updateOneChannels?: Maybe<Channels>;
  updateOneChecklist?: Maybe<Checklist>;
  updateOneCities?: Maybe<Cities>;
  updateOneCollections?: Maybe<Collections>;
  updateOneComments?: Maybe<Comments>;
  updateOneContent_type?: Maybe<Content_Type>;
  updateOneContracts?: Maybe<Contracts>;
  updateOneCountries?: Maybe<Countries>;
  updateOneCoupons?: Maybe<Coupons>;
  updateOneCredit_memos?: Maybe<Credit_Memos>;
  updateOneCurrencies?: Maybe<Currencies>;
  updateOneCurrency_rates?: Maybe<Currency_Rates>;
  updateOneCurrency_symbols?: Maybe<Currency_Symbols>;
  updateOneCustomer_group?: Maybe<Customer_Group>;
  updateOneCustomers?: Maybe<Customers>;
  updateOneCustomizations?: Maybe<Customizations>;
  updateOneDashboards?: Maybe<Dashboards>;
  updateOneDeepdive?: Maybe<Deepdive>;
  updateOneDigiboard?: Maybe<Digiboard>;
  updateOneEmails?: Maybe<Emails>;
  updateOneEndofshift?: Maybe<Endofshift>;
  updateOneEvents?: Maybe<Events>;
  updateOneFullfillments?: Maybe<Fullfillments>;
  updateOneGift_certificates?: Maybe<Gift_Certificates>;
  updateOneGlossary?: Maybe<Glossary>;
  updateOneImportm?: Maybe<Importm>;
  updateOneIntegrations?: Maybe<Integrations>;
  updateOneInternalization?: Maybe<Internalization>;
  updateOneInvitations?: Maybe<Invitations>;
  updateOneInvoices?: Maybe<Invoices>;
  updateOneLeads?: Maybe<Leads>;
  updateOneLogIn?: Maybe<LogIn>;
  updateOneManufacturer?: Maybe<Manufacturer>;
  updateOneMediamanager?: Maybe<Mediamanager>;
  updateOneMeeting?: Maybe<Meeting>;
  updateOneMessages?: Maybe<Messages>;
  updateOneNewsletters?: Maybe<Newsletters>;
  updateOneOoto?: Maybe<Ooto>;
  updateOneOpportunities?: Maybe<Opportunities>;
  updateOneOrders?: Maybe<Orders>;
  updateOnePages?: Maybe<Pages>;
  updateOnePartners?: Maybe<Partners>;
  updateOnePayments?: Maybe<Payments>;
  updateOnePermissions?: Maybe<Permissions>;
  updateOnePlugins?: Maybe<Plugins>;
  updateOnePolls?: Maybe<Polls>;
  updateOneProduct_types?: Maybe<Product_Types>;
  updateOneProducts?: Maybe<Products>;
  updateOneProjects?: Maybe<Projects>;
  updateOneProviders?: Maybe<Providers>;
  updateOneQuotes?: Maybe<Quotes>;
  updateOneRating?: Maybe<Rating>;
  updateOneReports?: Maybe<Reports>;
  updateOneReturns?: Maybe<Returns>;
  updateOneReviews?: Maybe<Reviews>;
  updateOneRewards?: Maybe<Rewards>;
  updateOneRoles?: Maybe<Roles>;
  updateOneScheduler?: Maybe<Scheduler>;
  updateOneSegments?: Maybe<Segments>;
  updateOneSettings?: Maybe<Settings>;
  updateOneShipments?: Maybe<Shipments>;
  updateOneSpecial_discounts?: Maybe<Special_Discounts>;
  updateOneStates?: Maybe<States>;
  updateOneStatistics?: Maybe<Statistics>;
  updateOneStocks?: Maybe<Stocks>;
  updateOneTags?: Maybe<Tags>;
  updateOneTargets?: Maybe<Targets>;
  updateOneTax_category?: Maybe<Tax_Category>;
  updateOneTax_rate?: Maybe<Tax_Rate>;
  updateOneTax_rule?: Maybe<Tax_Rule>;
  updateOneTemplates?: Maybe<Templates>;
  updateOneThemes?: Maybe<Themes>;
  updateOneTicketing?: Maybe<Ticketing>;
  updateOneTransactions?: Maybe<Transactions>;
  updateOneUpload_file?: Maybe<Upload_File>;
  updateOneUsers?: Maybe<Users>;
  updateOneVendors?: Maybe<Vendors>;
  updateOneVisits?: Maybe<Visits>;
  updateOneWarehouse?: Maybe<Warehouse>;
  updateOneWebhooks?: Maybe<Webhooks>;
  updateOneWebsites?: Maybe<Websites>;
  updateOneWishlists?: Maybe<Wishlists>;
  updateOneWorkspaces?: Maybe<Workspaces>;
  updateOneZones?: Maybe<Zones>;
  upsertOneAccounts: Accounts;
  upsertOneAgreements: Agreements;
  upsertOneAnalytics: Analytics;
  upsertOneApitoken: Apitoken;
  upsertOneArticles: Articles;
  upsertOneAttributes: Attributes;
  upsertOneBrands: Brands;
  upsertOneCart_price_rules: Cart_Price_Rules;
  upsertOneCases: Cases;
  upsertOneCatalog_price_rule: Catalog_Price_Rule;
  upsertOneCategories: Categories;
  upsertOneChannels: Channels;
  upsertOneChecklist: Checklist;
  upsertOneCities: Cities;
  upsertOneCollections: Collections;
  upsertOneComments: Comments;
  upsertOneContent_type: Content_Type;
  upsertOneContracts: Contracts;
  upsertOneCountries: Countries;
  upsertOneCoupons: Coupons;
  upsertOneCredit_memos: Credit_Memos;
  upsertOneCurrencies: Currencies;
  upsertOneCurrency_rates: Currency_Rates;
  upsertOneCurrency_symbols: Currency_Symbols;
  upsertOneCustomer_group: Customer_Group;
  upsertOneCustomers: Customers;
  upsertOneCustomizations: Customizations;
  upsertOneDashboards: Dashboards;
  upsertOneDeepdive: Deepdive;
  upsertOneDigiboard: Digiboard;
  upsertOneEmails: Emails;
  upsertOneEndofshift: Endofshift;
  upsertOneEvents: Events;
  upsertOneFullfillments: Fullfillments;
  upsertOneGift_certificates: Gift_Certificates;
  upsertOneGlossary: Glossary;
  upsertOneImportm: Importm;
  upsertOneIntegrations: Integrations;
  upsertOneInternalization: Internalization;
  upsertOneInvitations: Invitations;
  upsertOneInvoices: Invoices;
  upsertOneLeads: Leads;
  upsertOneLogIn: LogIn;
  upsertOneManufacturer: Manufacturer;
  upsertOneMediamanager: Mediamanager;
  upsertOneMeeting: Meeting;
  upsertOneMessages: Messages;
  upsertOneNewsletters: Newsletters;
  upsertOneOoto: Ooto;
  upsertOneOpportunities: Opportunities;
  upsertOneOrders: Orders;
  upsertOnePages: Pages;
  upsertOnePartners: Partners;
  upsertOnePayments: Payments;
  upsertOnePermissions: Permissions;
  upsertOnePlugins: Plugins;
  upsertOnePolls: Polls;
  upsertOneProduct_types: Product_Types;
  upsertOneProducts: Products;
  upsertOneProjects: Projects;
  upsertOneProviders: Providers;
  upsertOneQuotes: Quotes;
  upsertOneRating: Rating;
  upsertOneReports: Reports;
  upsertOneReturns: Returns;
  upsertOneReviews: Reviews;
  upsertOneRewards: Rewards;
  upsertOneRoles: Roles;
  upsertOneScheduler: Scheduler;
  upsertOneSegments: Segments;
  upsertOneSettings: Settings;
  upsertOneShipments: Shipments;
  upsertOneSpecial_discounts: Special_Discounts;
  upsertOneStates: States;
  upsertOneStatistics: Statistics;
  upsertOneStocks: Stocks;
  upsertOneTags: Tags;
  upsertOneTargets: Targets;
  upsertOneTax_category: Tax_Category;
  upsertOneTax_rate: Tax_Rate;
  upsertOneTax_rule: Tax_Rule;
  upsertOneTemplates: Templates;
  upsertOneThemes: Themes;
  upsertOneTicketing: Ticketing;
  upsertOneTransactions: Transactions;
  upsertOneUpload_file: Upload_File;
  upsertOneUsers: Users;
  upsertOneVendors: Vendors;
  upsertOneVisits: Visits;
  upsertOneWarehouse: Warehouse;
  upsertOneWebhooks: Webhooks;
  upsertOneWebsites: Websites;
  upsertOneWishlists: Wishlists;
  upsertOneWorkspaces: Workspaces;
  upsertOneZones: Zones;
};


export type MutationCreateManyAccountsArgs = {
  data: Array<AccountsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyAgreementsArgs = {
  data: Array<AgreementsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyAnalyticsArgs = {
  data: Array<AnalyticsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyApitokenArgs = {
  data: Array<ApitokenCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyArticlesArgs = {
  data: Array<ArticlesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyAttributesArgs = {
  data: Array<AttributesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyBrandsArgs = {
  data: Array<BrandsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCart_Price_RulesArgs = {
  data: Array<Cart_Price_RulesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCasesArgs = {
  data: Array<CasesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCatalog_Price_RuleArgs = {
  data: Array<Catalog_Price_RuleCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCategoriesArgs = {
  data: Array<CategoriesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyChannelsArgs = {
  data: Array<ChannelsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyChecklistArgs = {
  data: Array<ChecklistCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCitiesArgs = {
  data: Array<CitiesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCollectionsArgs = {
  data: Array<CollectionsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCommentsArgs = {
  data: Array<CommentsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyContent_TypeArgs = {
  data: Array<Content_TypeCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyContractsArgs = {
  data: Array<ContractsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCountriesArgs = {
  data: Array<CountriesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCouponsArgs = {
  data: Array<CouponsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCredit_MemosArgs = {
  data: Array<Credit_MemosCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCurrenciesArgs = {
  data: Array<CurrenciesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCurrency_RatesArgs = {
  data: Array<Currency_RatesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCurrency_SymbolsArgs = {
  data: Array<Currency_SymbolsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCustomer_GroupArgs = {
  data: Array<Customer_GroupCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCustomersArgs = {
  data: Array<CustomersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyCustomizationsArgs = {
  data: Array<CustomizationsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyDashboardsArgs = {
  data: Array<DashboardsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyDeepdiveArgs = {
  data: Array<DeepdiveCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyDigiboardArgs = {
  data: Array<DigiboardCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyEmailsArgs = {
  data: Array<EmailsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyEndofshiftArgs = {
  data: Array<EndofshiftCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyEventsArgs = {
  data: Array<EventsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyFullfillmentsArgs = {
  data: Array<FullfillmentsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyGift_CertificatesArgs = {
  data: Array<Gift_CertificatesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyGlossaryArgs = {
  data: Array<GlossaryCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyImportmArgs = {
  data: Array<ImportmCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyIntegrationsArgs = {
  data: Array<IntegrationsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyInternalizationArgs = {
  data: Array<InternalizationCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyInvitationsArgs = {
  data: Array<InvitationsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyInvoicesArgs = {
  data: Array<InvoicesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyLeadsArgs = {
  data: Array<LeadsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyLogInArgs = {
  data: Array<LogInCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyManufacturerArgs = {
  data: Array<ManufacturerCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyMediamanagerArgs = {
  data: Array<MediamanagerCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyMeetingArgs = {
  data: Array<MeetingCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyMessagesArgs = {
  data: Array<MessagesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyNewslettersArgs = {
  data: Array<NewslettersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyOotoArgs = {
  data: Array<OotoCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyOpportunitiesArgs = {
  data: Array<OpportunitiesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyOrdersArgs = {
  data: Array<OrdersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPagesArgs = {
  data: Array<PagesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPartnersArgs = {
  data: Array<PartnersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPaymentsArgs = {
  data: Array<PaymentsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPermissionsArgs = {
  data: Array<PermissionsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPluginsArgs = {
  data: Array<PluginsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyPollsArgs = {
  data: Array<PollsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyProduct_TypesArgs = {
  data: Array<Product_TypesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyProductsArgs = {
  data: Array<ProductsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyProjectsArgs = {
  data: Array<ProjectsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyProvidersArgs = {
  data: Array<ProvidersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyQuotesArgs = {
  data: Array<QuotesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyRatingArgs = {
  data: Array<RatingCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyReportsArgs = {
  data: Array<ReportsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyReturnsArgs = {
  data: Array<ReturnsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyReviewsArgs = {
  data: Array<ReviewsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyRewardsArgs = {
  data: Array<RewardsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyRolesArgs = {
  data: Array<RolesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManySchedulerArgs = {
  data: Array<SchedulerCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManySegmentsArgs = {
  data: Array<SegmentsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManySettingsArgs = {
  data: Array<SettingsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyShipmentsArgs = {
  data: Array<ShipmentsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManySpecial_DiscountsArgs = {
  data: Array<Special_DiscountsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyStatesArgs = {
  data: Array<StatesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyStatisticsArgs = {
  data: Array<StatisticsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyStocksArgs = {
  data: Array<StocksCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTagsArgs = {
  data: Array<TagsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTargetsArgs = {
  data: Array<TargetsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTax_CategoryArgs = {
  data: Array<Tax_CategoryCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTax_RateArgs = {
  data: Array<Tax_RateCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTax_RuleArgs = {
  data: Array<Tax_RuleCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTemplatesArgs = {
  data: Array<TemplatesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyThemesArgs = {
  data: Array<ThemesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTicketingArgs = {
  data: Array<TicketingCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyTransactionsArgs = {
  data: Array<TransactionsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyUpload_FileArgs = {
  data: Array<Upload_FileCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyUsersArgs = {
  data: Array<UsersCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyVendorsArgs = {
  data: Array<VendorsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyVisitsArgs = {
  data: Array<VisitsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyWarehouseArgs = {
  data: Array<WarehouseCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyWebhooksArgs = {
  data: Array<WebhooksCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyWebsitesArgs = {
  data: Array<WebsitesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyWishlistsArgs = {
  data: Array<WishlistsCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyWorkspacesArgs = {
  data: Array<WorkspacesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateManyZonesArgs = {
  data: Array<ZonesCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};


export type MutationCreateOneAccountsArgs = {
  data: AccountsCreateInput;
};


export type MutationCreateOneAgreementsArgs = {
  data: AgreementsCreateInput;
};


export type MutationCreateOneAnalyticsArgs = {
  data: AnalyticsCreateInput;
};


export type MutationCreateOneApitokenArgs = {
  data: ApitokenCreateInput;
};


export type MutationCreateOneArticlesArgs = {
  data: ArticlesCreateInput;
};


export type MutationCreateOneAttributesArgs = {
  data: AttributesCreateInput;
};


export type MutationCreateOneBrandsArgs = {
  data: BrandsCreateInput;
};


export type MutationCreateOneCart_Price_RulesArgs = {
  data: Cart_Price_RulesCreateInput;
};


export type MutationCreateOneCasesArgs = {
  data: CasesCreateInput;
};


export type MutationCreateOneCatalog_Price_RuleArgs = {
  data: Catalog_Price_RuleCreateInput;
};


export type MutationCreateOneCategoriesArgs = {
  data: CategoriesCreateInput;
};


export type MutationCreateOneChannelsArgs = {
  data: ChannelsCreateInput;
};


export type MutationCreateOneChecklistArgs = {
  data: ChecklistCreateInput;
};


export type MutationCreateOneCitiesArgs = {
  data: CitiesCreateInput;
};


export type MutationCreateOneCollectionsArgs = {
  data: CollectionsCreateInput;
};


export type MutationCreateOneCommentsArgs = {
  data: CommentsCreateInput;
};


export type MutationCreateOneContent_TypeArgs = {
  data: Content_TypeCreateInput;
};


export type MutationCreateOneContractsArgs = {
  data: ContractsCreateInput;
};


export type MutationCreateOneCountriesArgs = {
  data: CountriesCreateInput;
};


export type MutationCreateOneCouponsArgs = {
  data: CouponsCreateInput;
};


export type MutationCreateOneCredit_MemosArgs = {
  data: Credit_MemosCreateInput;
};


export type MutationCreateOneCurrenciesArgs = {
  data: CurrenciesCreateInput;
};


export type MutationCreateOneCurrency_RatesArgs = {
  data: Currency_RatesCreateInput;
};


export type MutationCreateOneCurrency_SymbolsArgs = {
  data: Currency_SymbolsCreateInput;
};


export type MutationCreateOneCustomer_GroupArgs = {
  data: Customer_GroupCreateInput;
};


export type MutationCreateOneCustomersArgs = {
  data: CustomersCreateInput;
};


export type MutationCreateOneCustomizationsArgs = {
  data: CustomizationsCreateInput;
};


export type MutationCreateOneDashboardsArgs = {
  data: DashboardsCreateInput;
};


export type MutationCreateOneDeepdiveArgs = {
  data: DeepdiveCreateInput;
};


export type MutationCreateOneDigiboardArgs = {
  data: DigiboardCreateInput;
};


export type MutationCreateOneEmailsArgs = {
  data: EmailsCreateInput;
};


export type MutationCreateOneEndofshiftArgs = {
  data: EndofshiftCreateInput;
};


export type MutationCreateOneEventsArgs = {
  data: EventsCreateInput;
};


export type MutationCreateOneFullfillmentsArgs = {
  data: FullfillmentsCreateInput;
};


export type MutationCreateOneGift_CertificatesArgs = {
  data: Gift_CertificatesCreateInput;
};


export type MutationCreateOneGlossaryArgs = {
  data: GlossaryCreateInput;
};


export type MutationCreateOneImportmArgs = {
  data: ImportmCreateInput;
};


export type MutationCreateOneIntegrationsArgs = {
  data: IntegrationsCreateInput;
};


export type MutationCreateOneInternalizationArgs = {
  data: InternalizationCreateInput;
};


export type MutationCreateOneInvitationsArgs = {
  data: InvitationsCreateInput;
};


export type MutationCreateOneInvoicesArgs = {
  data: InvoicesCreateInput;
};


export type MutationCreateOneLeadsArgs = {
  data: LeadsCreateInput;
};


export type MutationCreateOneLogInArgs = {
  data: LogInCreateInput;
};


export type MutationCreateOneManufacturerArgs = {
  data: ManufacturerCreateInput;
};


export type MutationCreateOneMediamanagerArgs = {
  data: MediamanagerCreateInput;
};


export type MutationCreateOneMeetingArgs = {
  data: MeetingCreateInput;
};


export type MutationCreateOneMessagesArgs = {
  data: MessagesCreateInput;
};


export type MutationCreateOneNewslettersArgs = {
  data: NewslettersCreateInput;
};


export type MutationCreateOneOotoArgs = {
  data: OotoCreateInput;
};


export type MutationCreateOneOpportunitiesArgs = {
  data: OpportunitiesCreateInput;
};


export type MutationCreateOneOrdersArgs = {
  data: OrdersCreateInput;
};


export type MutationCreateOnePagesArgs = {
  data: PagesCreateInput;
};


export type MutationCreateOnePartnersArgs = {
  data: PartnersCreateInput;
};


export type MutationCreateOnePaymentsArgs = {
  data: PaymentsCreateInput;
};


export type MutationCreateOnePermissionsArgs = {
  data: PermissionsCreateInput;
};


export type MutationCreateOnePluginsArgs = {
  data: PluginsCreateInput;
};


export type MutationCreateOnePollsArgs = {
  data: PollsCreateInput;
};


export type MutationCreateOneProduct_TypesArgs = {
  data: Product_TypesCreateInput;
};


export type MutationCreateOneProductsArgs = {
  data: ProductsCreateInput;
};


export type MutationCreateOneProjectsArgs = {
  data: ProjectsCreateInput;
};


export type MutationCreateOneProvidersArgs = {
  data: ProvidersCreateInput;
};


export type MutationCreateOneQuotesArgs = {
  data: QuotesCreateInput;
};


export type MutationCreateOneRatingArgs = {
  data: RatingCreateInput;
};


export type MutationCreateOneReportsArgs = {
  data: ReportsCreateInput;
};


export type MutationCreateOneReturnsArgs = {
  data: ReturnsCreateInput;
};


export type MutationCreateOneReviewsArgs = {
  data: ReviewsCreateInput;
};


export type MutationCreateOneRewardsArgs = {
  data: RewardsCreateInput;
};


export type MutationCreateOneRolesArgs = {
  data: RolesCreateInput;
};


export type MutationCreateOneSchedulerArgs = {
  data: SchedulerCreateInput;
};


export type MutationCreateOneSegmentsArgs = {
  data: SegmentsCreateInput;
};


export type MutationCreateOneSettingsArgs = {
  data: SettingsCreateInput;
};


export type MutationCreateOneShipmentsArgs = {
  data: ShipmentsCreateInput;
};


export type MutationCreateOneSpecial_DiscountsArgs = {
  data: Special_DiscountsCreateInput;
};


export type MutationCreateOneStatesArgs = {
  data: StatesCreateInput;
};


export type MutationCreateOneStatisticsArgs = {
  data: StatisticsCreateInput;
};


export type MutationCreateOneStocksArgs = {
  data: StocksCreateInput;
};


export type MutationCreateOneTagsArgs = {
  data: TagsCreateInput;
};


export type MutationCreateOneTargetsArgs = {
  data: TargetsCreateInput;
};


export type MutationCreateOneTax_CategoryArgs = {
  data: Tax_CategoryCreateInput;
};


export type MutationCreateOneTax_RateArgs = {
  data: Tax_RateCreateInput;
};


export type MutationCreateOneTax_RuleArgs = {
  data: Tax_RuleCreateInput;
};


export type MutationCreateOneTemplatesArgs = {
  data: TemplatesCreateInput;
};


export type MutationCreateOneThemesArgs = {
  data: ThemesCreateInput;
};


export type MutationCreateOneTicketingArgs = {
  data: TicketingCreateInput;
};


export type MutationCreateOneTransactionsArgs = {
  data: TransactionsCreateInput;
};


export type MutationCreateOneUpload_FileArgs = {
  data: Upload_FileCreateInput;
};


export type MutationCreateOneUsersArgs = {
  data: UsersCreateInput;
};


export type MutationCreateOneVendorsArgs = {
  data: VendorsCreateInput;
};


export type MutationCreateOneVisitsArgs = {
  data: VisitsCreateInput;
};


export type MutationCreateOneWarehouseArgs = {
  data: WarehouseCreateInput;
};


export type MutationCreateOneWebhooksArgs = {
  data: WebhooksCreateInput;
};


export type MutationCreateOneWebsitesArgs = {
  data: WebsitesCreateInput;
};


export type MutationCreateOneWishlistsArgs = {
  data: WishlistsCreateInput;
};


export type MutationCreateOneWorkspacesArgs = {
  data: WorkspacesCreateInput;
};


export type MutationCreateOneZonesArgs = {
  data: ZonesCreateInput;
};


export type MutationDeleteManyAccountsArgs = {
  where?: InputMaybe<AccountsWhereInput>;
};


export type MutationDeleteManyAgreementsArgs = {
  where?: InputMaybe<AgreementsWhereInput>;
};


export type MutationDeleteManyAnalyticsArgs = {
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type MutationDeleteManyApitokenArgs = {
  where?: InputMaybe<ApitokenWhereInput>;
};


export type MutationDeleteManyArticlesArgs = {
  where?: InputMaybe<ArticlesWhereInput>;
};


export type MutationDeleteManyAttributesArgs = {
  where?: InputMaybe<AttributesWhereInput>;
};


export type MutationDeleteManyBrandsArgs = {
  where?: InputMaybe<BrandsWhereInput>;
};


export type MutationDeleteManyCart_Price_RulesArgs = {
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type MutationDeleteManyCasesArgs = {
  where?: InputMaybe<CasesWhereInput>;
};


export type MutationDeleteManyCatalog_Price_RuleArgs = {
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type MutationDeleteManyCategoriesArgs = {
  where?: InputMaybe<CategoriesWhereInput>;
};


export type MutationDeleteManyChannelsArgs = {
  where?: InputMaybe<ChannelsWhereInput>;
};


export type MutationDeleteManyChecklistArgs = {
  where?: InputMaybe<ChecklistWhereInput>;
};


export type MutationDeleteManyCitiesArgs = {
  where?: InputMaybe<CitiesWhereInput>;
};


export type MutationDeleteManyCollectionsArgs = {
  where?: InputMaybe<CollectionsWhereInput>;
};


export type MutationDeleteManyCommentsArgs = {
  where?: InputMaybe<CommentsWhereInput>;
};


export type MutationDeleteManyContent_TypeArgs = {
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type MutationDeleteManyContractsArgs = {
  where?: InputMaybe<ContractsWhereInput>;
};


export type MutationDeleteManyCountriesArgs = {
  where?: InputMaybe<CountriesWhereInput>;
};


export type MutationDeleteManyCouponsArgs = {
  where?: InputMaybe<CouponsWhereInput>;
};


export type MutationDeleteManyCredit_MemosArgs = {
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type MutationDeleteManyCurrenciesArgs = {
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type MutationDeleteManyCurrency_RatesArgs = {
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type MutationDeleteManyCurrency_SymbolsArgs = {
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type MutationDeleteManyCustomer_GroupArgs = {
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type MutationDeleteManyCustomersArgs = {
  where?: InputMaybe<CustomersWhereInput>;
};


export type MutationDeleteManyCustomizationsArgs = {
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type MutationDeleteManyDashboardsArgs = {
  where?: InputMaybe<DashboardsWhereInput>;
};


export type MutationDeleteManyDeepdiveArgs = {
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type MutationDeleteManyDigiboardArgs = {
  where?: InputMaybe<DigiboardWhereInput>;
};


export type MutationDeleteManyEmailsArgs = {
  where?: InputMaybe<EmailsWhereInput>;
};


export type MutationDeleteManyEndofshiftArgs = {
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type MutationDeleteManyEventsArgs = {
  where?: InputMaybe<EventsWhereInput>;
};


export type MutationDeleteManyFullfillmentsArgs = {
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type MutationDeleteManyGift_CertificatesArgs = {
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type MutationDeleteManyGlossaryArgs = {
  where?: InputMaybe<GlossaryWhereInput>;
};


export type MutationDeleteManyImportmArgs = {
  where?: InputMaybe<ImportmWhereInput>;
};


export type MutationDeleteManyIntegrationsArgs = {
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type MutationDeleteManyInternalizationArgs = {
  where?: InputMaybe<InternalizationWhereInput>;
};


export type MutationDeleteManyInvitationsArgs = {
  where?: InputMaybe<InvitationsWhereInput>;
};


export type MutationDeleteManyInvoicesArgs = {
  where?: InputMaybe<InvoicesWhereInput>;
};


export type MutationDeleteManyLeadsArgs = {
  where?: InputMaybe<LeadsWhereInput>;
};


export type MutationDeleteManyLogInArgs = {
  where?: InputMaybe<LogInWhereInput>;
};


export type MutationDeleteManyManufacturerArgs = {
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type MutationDeleteManyMediamanagerArgs = {
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type MutationDeleteManyMeetingArgs = {
  where?: InputMaybe<MeetingWhereInput>;
};


export type MutationDeleteManyMessagesArgs = {
  where?: InputMaybe<MessagesWhereInput>;
};


export type MutationDeleteManyNewslettersArgs = {
  where?: InputMaybe<NewslettersWhereInput>;
};


export type MutationDeleteManyOotoArgs = {
  where?: InputMaybe<OotoWhereInput>;
};


export type MutationDeleteManyOpportunitiesArgs = {
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type MutationDeleteManyOrdersArgs = {
  where?: InputMaybe<OrdersWhereInput>;
};


export type MutationDeleteManyPagesArgs = {
  where?: InputMaybe<PagesWhereInput>;
};


export type MutationDeleteManyPartnersArgs = {
  where?: InputMaybe<PartnersWhereInput>;
};


export type MutationDeleteManyPaymentsArgs = {
  where?: InputMaybe<PaymentsWhereInput>;
};


export type MutationDeleteManyPermissionsArgs = {
  where?: InputMaybe<PermissionsWhereInput>;
};


export type MutationDeleteManyPluginsArgs = {
  where?: InputMaybe<PluginsWhereInput>;
};


export type MutationDeleteManyPollsArgs = {
  where?: InputMaybe<PollsWhereInput>;
};


export type MutationDeleteManyProduct_TypesArgs = {
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type MutationDeleteManyProductsArgs = {
  where?: InputMaybe<ProductsWhereInput>;
};


export type MutationDeleteManyProjectsArgs = {
  where?: InputMaybe<ProjectsWhereInput>;
};


export type MutationDeleteManyProvidersArgs = {
  where?: InputMaybe<ProvidersWhereInput>;
};


export type MutationDeleteManyQuotesArgs = {
  where?: InputMaybe<QuotesWhereInput>;
};


export type MutationDeleteManyRatingArgs = {
  where?: InputMaybe<RatingWhereInput>;
};


export type MutationDeleteManyReportsArgs = {
  where?: InputMaybe<ReportsWhereInput>;
};


export type MutationDeleteManyReturnsArgs = {
  where?: InputMaybe<ReturnsWhereInput>;
};


export type MutationDeleteManyReviewsArgs = {
  where?: InputMaybe<ReviewsWhereInput>;
};


export type MutationDeleteManyRewardsArgs = {
  where?: InputMaybe<RewardsWhereInput>;
};


export type MutationDeleteManyRolesArgs = {
  where?: InputMaybe<RolesWhereInput>;
};


export type MutationDeleteManySchedulerArgs = {
  where?: InputMaybe<SchedulerWhereInput>;
};


export type MutationDeleteManySegmentsArgs = {
  where?: InputMaybe<SegmentsWhereInput>;
};


export type MutationDeleteManySettingsArgs = {
  where?: InputMaybe<SettingsWhereInput>;
};


export type MutationDeleteManyShipmentsArgs = {
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type MutationDeleteManySpecial_DiscountsArgs = {
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type MutationDeleteManyStatesArgs = {
  where?: InputMaybe<StatesWhereInput>;
};


export type MutationDeleteManyStatisticsArgs = {
  where?: InputMaybe<StatisticsWhereInput>;
};


export type MutationDeleteManyStocksArgs = {
  where?: InputMaybe<StocksWhereInput>;
};


export type MutationDeleteManyTagsArgs = {
  where?: InputMaybe<TagsWhereInput>;
};


export type MutationDeleteManyTargetsArgs = {
  where?: InputMaybe<TargetsWhereInput>;
};


export type MutationDeleteManyTax_CategoryArgs = {
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type MutationDeleteManyTax_RateArgs = {
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type MutationDeleteManyTax_RuleArgs = {
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type MutationDeleteManyTemplatesArgs = {
  where?: InputMaybe<TemplatesWhereInput>;
};


export type MutationDeleteManyThemesArgs = {
  where?: InputMaybe<ThemesWhereInput>;
};


export type MutationDeleteManyTicketingArgs = {
  where?: InputMaybe<TicketingWhereInput>;
};


export type MutationDeleteManyTransactionsArgs = {
  where?: InputMaybe<TransactionsWhereInput>;
};


export type MutationDeleteManyUpload_FileArgs = {
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type MutationDeleteManyUsersArgs = {
  where?: InputMaybe<UsersWhereInput>;
};


export type MutationDeleteManyVendorsArgs = {
  where?: InputMaybe<VendorsWhereInput>;
};


export type MutationDeleteManyVisitsArgs = {
  where?: InputMaybe<VisitsWhereInput>;
};


export type MutationDeleteManyWarehouseArgs = {
  where?: InputMaybe<WarehouseWhereInput>;
};


export type MutationDeleteManyWebhooksArgs = {
  where?: InputMaybe<WebhooksWhereInput>;
};


export type MutationDeleteManyWebsitesArgs = {
  where?: InputMaybe<WebsitesWhereInput>;
};


export type MutationDeleteManyWishlistsArgs = {
  where?: InputMaybe<WishlistsWhereInput>;
};


export type MutationDeleteManyWorkspacesArgs = {
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type MutationDeleteManyZonesArgs = {
  where?: InputMaybe<ZonesWhereInput>;
};


export type MutationDeleteOneAccountsArgs = {
  where: AccountsWhereUniqueInput;
};


export type MutationDeleteOneAgreementsArgs = {
  where: AgreementsWhereUniqueInput;
};


export type MutationDeleteOneAnalyticsArgs = {
  where: AnalyticsWhereUniqueInput;
};


export type MutationDeleteOneApitokenArgs = {
  where: ApitokenWhereUniqueInput;
};


export type MutationDeleteOneArticlesArgs = {
  where: ArticlesWhereUniqueInput;
};


export type MutationDeleteOneAttributesArgs = {
  where: AttributesWhereUniqueInput;
};


export type MutationDeleteOneBrandsArgs = {
  where: BrandsWhereUniqueInput;
};


export type MutationDeleteOneCart_Price_RulesArgs = {
  where: Cart_Price_RulesWhereUniqueInput;
};


export type MutationDeleteOneCasesArgs = {
  where: CasesWhereUniqueInput;
};


export type MutationDeleteOneCatalog_Price_RuleArgs = {
  where: Catalog_Price_RuleWhereUniqueInput;
};


export type MutationDeleteOneCategoriesArgs = {
  where: CategoriesWhereUniqueInput;
};


export type MutationDeleteOneChannelsArgs = {
  where: ChannelsWhereUniqueInput;
};


export type MutationDeleteOneChecklistArgs = {
  where: ChecklistWhereUniqueInput;
};


export type MutationDeleteOneCitiesArgs = {
  where: CitiesWhereUniqueInput;
};


export type MutationDeleteOneCollectionsArgs = {
  where: CollectionsWhereUniqueInput;
};


export type MutationDeleteOneCommentsArgs = {
  where: CommentsWhereUniqueInput;
};


export type MutationDeleteOneContent_TypeArgs = {
  where: Content_TypeWhereUniqueInput;
};


export type MutationDeleteOneContractsArgs = {
  where: ContractsWhereUniqueInput;
};


export type MutationDeleteOneCountriesArgs = {
  where: CountriesWhereUniqueInput;
};


export type MutationDeleteOneCouponsArgs = {
  where: CouponsWhereUniqueInput;
};


export type MutationDeleteOneCredit_MemosArgs = {
  where: Credit_MemosWhereUniqueInput;
};


export type MutationDeleteOneCurrenciesArgs = {
  where: CurrenciesWhereUniqueInput;
};


export type MutationDeleteOneCurrency_RatesArgs = {
  where: Currency_RatesWhereUniqueInput;
};


export type MutationDeleteOneCurrency_SymbolsArgs = {
  where: Currency_SymbolsWhereUniqueInput;
};


export type MutationDeleteOneCustomer_GroupArgs = {
  where: Customer_GroupWhereUniqueInput;
};


export type MutationDeleteOneCustomersArgs = {
  where: CustomersWhereUniqueInput;
};


export type MutationDeleteOneCustomizationsArgs = {
  where: CustomizationsWhereUniqueInput;
};


export type MutationDeleteOneDashboardsArgs = {
  where: DashboardsWhereUniqueInput;
};


export type MutationDeleteOneDeepdiveArgs = {
  where: DeepdiveWhereUniqueInput;
};


export type MutationDeleteOneDigiboardArgs = {
  where: DigiboardWhereUniqueInput;
};


export type MutationDeleteOneEmailsArgs = {
  where: EmailsWhereUniqueInput;
};


export type MutationDeleteOneEndofshiftArgs = {
  where: EndofshiftWhereUniqueInput;
};


export type MutationDeleteOneEventsArgs = {
  where: EventsWhereUniqueInput;
};


export type MutationDeleteOneFullfillmentsArgs = {
  where: FullfillmentsWhereUniqueInput;
};


export type MutationDeleteOneGift_CertificatesArgs = {
  where: Gift_CertificatesWhereUniqueInput;
};


export type MutationDeleteOneGlossaryArgs = {
  where: GlossaryWhereUniqueInput;
};


export type MutationDeleteOneImportmArgs = {
  where: ImportmWhereUniqueInput;
};


export type MutationDeleteOneIntegrationsArgs = {
  where: IntegrationsWhereUniqueInput;
};


export type MutationDeleteOneInternalizationArgs = {
  where: InternalizationWhereUniqueInput;
};


export type MutationDeleteOneInvitationsArgs = {
  where: InvitationsWhereUniqueInput;
};


export type MutationDeleteOneInvoicesArgs = {
  where: InvoicesWhereUniqueInput;
};


export type MutationDeleteOneLeadsArgs = {
  where: LeadsWhereUniqueInput;
};


export type MutationDeleteOneLogInArgs = {
  where: LogInWhereUniqueInput;
};


export type MutationDeleteOneManufacturerArgs = {
  where: ManufacturerWhereUniqueInput;
};


export type MutationDeleteOneMediamanagerArgs = {
  where: MediamanagerWhereUniqueInput;
};


export type MutationDeleteOneMeetingArgs = {
  where: MeetingWhereUniqueInput;
};


export type MutationDeleteOneMessagesArgs = {
  where: MessagesWhereUniqueInput;
};


export type MutationDeleteOneNewslettersArgs = {
  where: NewslettersWhereUniqueInput;
};


export type MutationDeleteOneOotoArgs = {
  where: OotoWhereUniqueInput;
};


export type MutationDeleteOneOpportunitiesArgs = {
  where: OpportunitiesWhereUniqueInput;
};


export type MutationDeleteOneOrdersArgs = {
  where: OrdersWhereUniqueInput;
};


export type MutationDeleteOnePagesArgs = {
  where: PagesWhereUniqueInput;
};


export type MutationDeleteOnePartnersArgs = {
  where: PartnersWhereUniqueInput;
};


export type MutationDeleteOnePaymentsArgs = {
  where: PaymentsWhereUniqueInput;
};


export type MutationDeleteOnePermissionsArgs = {
  where: PermissionsWhereUniqueInput;
};


export type MutationDeleteOnePluginsArgs = {
  where: PluginsWhereUniqueInput;
};


export type MutationDeleteOnePollsArgs = {
  where: PollsWhereUniqueInput;
};


export type MutationDeleteOneProduct_TypesArgs = {
  where: Product_TypesWhereUniqueInput;
};


export type MutationDeleteOneProductsArgs = {
  where: ProductsWhereUniqueInput;
};


export type MutationDeleteOneProjectsArgs = {
  where: ProjectsWhereUniqueInput;
};


export type MutationDeleteOneProvidersArgs = {
  where: ProvidersWhereUniqueInput;
};


export type MutationDeleteOneQuotesArgs = {
  where: QuotesWhereUniqueInput;
};


export type MutationDeleteOneRatingArgs = {
  where: RatingWhereUniqueInput;
};


export type MutationDeleteOneReportsArgs = {
  where: ReportsWhereUniqueInput;
};


export type MutationDeleteOneReturnsArgs = {
  where: ReturnsWhereUniqueInput;
};


export type MutationDeleteOneReviewsArgs = {
  where: ReviewsWhereUniqueInput;
};


export type MutationDeleteOneRewardsArgs = {
  where: RewardsWhereUniqueInput;
};


export type MutationDeleteOneRolesArgs = {
  where: RolesWhereUniqueInput;
};


export type MutationDeleteOneSchedulerArgs = {
  where: SchedulerWhereUniqueInput;
};


export type MutationDeleteOneSegmentsArgs = {
  where: SegmentsWhereUniqueInput;
};


export type MutationDeleteOneSettingsArgs = {
  where: SettingsWhereUniqueInput;
};


export type MutationDeleteOneShipmentsArgs = {
  where: ShipmentsWhereUniqueInput;
};


export type MutationDeleteOneSpecial_DiscountsArgs = {
  where: Special_DiscountsWhereUniqueInput;
};


export type MutationDeleteOneStatesArgs = {
  where: StatesWhereUniqueInput;
};


export type MutationDeleteOneStatisticsArgs = {
  where: StatisticsWhereUniqueInput;
};


export type MutationDeleteOneStocksArgs = {
  where: StocksWhereUniqueInput;
};


export type MutationDeleteOneTagsArgs = {
  where: TagsWhereUniqueInput;
};


export type MutationDeleteOneTargetsArgs = {
  where: TargetsWhereUniqueInput;
};


export type MutationDeleteOneTax_CategoryArgs = {
  where: Tax_CategoryWhereUniqueInput;
};


export type MutationDeleteOneTax_RateArgs = {
  where: Tax_RateWhereUniqueInput;
};


export type MutationDeleteOneTax_RuleArgs = {
  where: Tax_RuleWhereUniqueInput;
};


export type MutationDeleteOneTemplatesArgs = {
  where: TemplatesWhereUniqueInput;
};


export type MutationDeleteOneThemesArgs = {
  where: ThemesWhereUniqueInput;
};


export type MutationDeleteOneTicketingArgs = {
  where: TicketingWhereUniqueInput;
};


export type MutationDeleteOneTransactionsArgs = {
  where: TransactionsWhereUniqueInput;
};


export type MutationDeleteOneUpload_FileArgs = {
  where: Upload_FileWhereUniqueInput;
};


export type MutationDeleteOneUsersArgs = {
  where: UsersWhereUniqueInput;
};


export type MutationDeleteOneVendorsArgs = {
  where: VendorsWhereUniqueInput;
};


export type MutationDeleteOneVisitsArgs = {
  where: VisitsWhereUniqueInput;
};


export type MutationDeleteOneWarehouseArgs = {
  where: WarehouseWhereUniqueInput;
};


export type MutationDeleteOneWebhooksArgs = {
  where: WebhooksWhereUniqueInput;
};


export type MutationDeleteOneWebsitesArgs = {
  where: WebsitesWhereUniqueInput;
};


export type MutationDeleteOneWishlistsArgs = {
  where: WishlistsWhereUniqueInput;
};


export type MutationDeleteOneWorkspacesArgs = {
  where: WorkspacesWhereUniqueInput;
};


export type MutationDeleteOneZonesArgs = {
  where: ZonesWhereUniqueInput;
};


export type MutationUpdateManyAccountsArgs = {
  data: AccountsUpdateManyMutationInput;
  where?: InputMaybe<AccountsWhereInput>;
};


export type MutationUpdateManyAgreementsArgs = {
  data: AgreementsUpdateManyMutationInput;
  where?: InputMaybe<AgreementsWhereInput>;
};


export type MutationUpdateManyAnalyticsArgs = {
  data: AnalyticsUpdateManyMutationInput;
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type MutationUpdateManyApitokenArgs = {
  data: ApitokenUpdateManyMutationInput;
  where?: InputMaybe<ApitokenWhereInput>;
};


export type MutationUpdateManyArticlesArgs = {
  data: ArticlesUpdateManyMutationInput;
  where?: InputMaybe<ArticlesWhereInput>;
};


export type MutationUpdateManyAttributesArgs = {
  data: AttributesUpdateManyMutationInput;
  where?: InputMaybe<AttributesWhereInput>;
};


export type MutationUpdateManyBrandsArgs = {
  data: BrandsUpdateManyMutationInput;
  where?: InputMaybe<BrandsWhereInput>;
};


export type MutationUpdateManyCart_Price_RulesArgs = {
  data: Cart_Price_RulesUpdateManyMutationInput;
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type MutationUpdateManyCasesArgs = {
  data: CasesUpdateManyMutationInput;
  where?: InputMaybe<CasesWhereInput>;
};


export type MutationUpdateManyCatalog_Price_RuleArgs = {
  data: Catalog_Price_RuleUpdateManyMutationInput;
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type MutationUpdateManyCategoriesArgs = {
  data: CategoriesUpdateManyMutationInput;
  where?: InputMaybe<CategoriesWhereInput>;
};


export type MutationUpdateManyChannelsArgs = {
  data: ChannelsUpdateManyMutationInput;
  where?: InputMaybe<ChannelsWhereInput>;
};


export type MutationUpdateManyChecklistArgs = {
  data: ChecklistUpdateManyMutationInput;
  where?: InputMaybe<ChecklistWhereInput>;
};


export type MutationUpdateManyCitiesArgs = {
  data: CitiesUpdateManyMutationInput;
  where?: InputMaybe<CitiesWhereInput>;
};


export type MutationUpdateManyCollectionsArgs = {
  data: CollectionsUpdateManyMutationInput;
  where?: InputMaybe<CollectionsWhereInput>;
};


export type MutationUpdateManyCommentsArgs = {
  data: CommentsUpdateManyMutationInput;
  where?: InputMaybe<CommentsWhereInput>;
};


export type MutationUpdateManyContent_TypeArgs = {
  data: Content_TypeUpdateManyMutationInput;
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type MutationUpdateManyContractsArgs = {
  data: ContractsUpdateManyMutationInput;
  where?: InputMaybe<ContractsWhereInput>;
};


export type MutationUpdateManyCountriesArgs = {
  data: CountriesUpdateManyMutationInput;
  where?: InputMaybe<CountriesWhereInput>;
};


export type MutationUpdateManyCouponsArgs = {
  data: CouponsUpdateManyMutationInput;
  where?: InputMaybe<CouponsWhereInput>;
};


export type MutationUpdateManyCredit_MemosArgs = {
  data: Credit_MemosUpdateManyMutationInput;
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type MutationUpdateManyCurrenciesArgs = {
  data: CurrenciesUpdateManyMutationInput;
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type MutationUpdateManyCurrency_RatesArgs = {
  data: Currency_RatesUpdateManyMutationInput;
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type MutationUpdateManyCurrency_SymbolsArgs = {
  data: Currency_SymbolsUpdateManyMutationInput;
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type MutationUpdateManyCustomer_GroupArgs = {
  data: Customer_GroupUpdateManyMutationInput;
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type MutationUpdateManyCustomersArgs = {
  data: CustomersUpdateManyMutationInput;
  where?: InputMaybe<CustomersWhereInput>;
};


export type MutationUpdateManyCustomizationsArgs = {
  data: CustomizationsUpdateManyMutationInput;
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type MutationUpdateManyDashboardsArgs = {
  data: DashboardsUpdateManyMutationInput;
  where?: InputMaybe<DashboardsWhereInput>;
};


export type MutationUpdateManyDeepdiveArgs = {
  data: DeepdiveUpdateManyMutationInput;
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type MutationUpdateManyDigiboardArgs = {
  data: DigiboardUpdateManyMutationInput;
  where?: InputMaybe<DigiboardWhereInput>;
};


export type MutationUpdateManyEmailsArgs = {
  data: EmailsUpdateManyMutationInput;
  where?: InputMaybe<EmailsWhereInput>;
};


export type MutationUpdateManyEndofshiftArgs = {
  data: EndofshiftUpdateManyMutationInput;
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type MutationUpdateManyEventsArgs = {
  data: EventsUpdateManyMutationInput;
  where?: InputMaybe<EventsWhereInput>;
};


export type MutationUpdateManyFullfillmentsArgs = {
  data: FullfillmentsUpdateManyMutationInput;
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type MutationUpdateManyGift_CertificatesArgs = {
  data: Gift_CertificatesUpdateManyMutationInput;
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type MutationUpdateManyGlossaryArgs = {
  data: GlossaryUpdateManyMutationInput;
  where?: InputMaybe<GlossaryWhereInput>;
};


export type MutationUpdateManyImportmArgs = {
  data: ImportmUpdateManyMutationInput;
  where?: InputMaybe<ImportmWhereInput>;
};


export type MutationUpdateManyIntegrationsArgs = {
  data: IntegrationsUpdateManyMutationInput;
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type MutationUpdateManyInternalizationArgs = {
  data: InternalizationUpdateManyMutationInput;
  where?: InputMaybe<InternalizationWhereInput>;
};


export type MutationUpdateManyInvitationsArgs = {
  data: InvitationsUpdateManyMutationInput;
  where?: InputMaybe<InvitationsWhereInput>;
};


export type MutationUpdateManyInvoicesArgs = {
  data: InvoicesUpdateManyMutationInput;
  where?: InputMaybe<InvoicesWhereInput>;
};


export type MutationUpdateManyLeadsArgs = {
  data: LeadsUpdateManyMutationInput;
  where?: InputMaybe<LeadsWhereInput>;
};


export type MutationUpdateManyLogInArgs = {
  data: LogInUpdateManyMutationInput;
  where?: InputMaybe<LogInWhereInput>;
};


export type MutationUpdateManyManufacturerArgs = {
  data: ManufacturerUpdateManyMutationInput;
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type MutationUpdateManyMediamanagerArgs = {
  data: MediamanagerUpdateManyMutationInput;
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type MutationUpdateManyMeetingArgs = {
  data: MeetingUpdateManyMutationInput;
  where?: InputMaybe<MeetingWhereInput>;
};


export type MutationUpdateManyMessagesArgs = {
  data: MessagesUpdateManyMutationInput;
  where?: InputMaybe<MessagesWhereInput>;
};


export type MutationUpdateManyNewslettersArgs = {
  data: NewslettersUpdateManyMutationInput;
  where?: InputMaybe<NewslettersWhereInput>;
};


export type MutationUpdateManyOotoArgs = {
  data: OotoUpdateManyMutationInput;
  where?: InputMaybe<OotoWhereInput>;
};


export type MutationUpdateManyOpportunitiesArgs = {
  data: OpportunitiesUpdateManyMutationInput;
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type MutationUpdateManyOrdersArgs = {
  data: OrdersUpdateManyMutationInput;
  where?: InputMaybe<OrdersWhereInput>;
};


export type MutationUpdateManyPagesArgs = {
  data: PagesUpdateManyMutationInput;
  where?: InputMaybe<PagesWhereInput>;
};


export type MutationUpdateManyPartnersArgs = {
  data: PartnersUpdateManyMutationInput;
  where?: InputMaybe<PartnersWhereInput>;
};


export type MutationUpdateManyPaymentsArgs = {
  data: PaymentsUpdateManyMutationInput;
  where?: InputMaybe<PaymentsWhereInput>;
};


export type MutationUpdateManyPermissionsArgs = {
  data: PermissionsUpdateManyMutationInput;
  where?: InputMaybe<PermissionsWhereInput>;
};


export type MutationUpdateManyPluginsArgs = {
  data: PluginsUpdateManyMutationInput;
  where?: InputMaybe<PluginsWhereInput>;
};


export type MutationUpdateManyPollsArgs = {
  data: PollsUpdateManyMutationInput;
  where?: InputMaybe<PollsWhereInput>;
};


export type MutationUpdateManyProduct_TypesArgs = {
  data: Product_TypesUpdateManyMutationInput;
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type MutationUpdateManyProductsArgs = {
  data: ProductsUpdateManyMutationInput;
  where?: InputMaybe<ProductsWhereInput>;
};


export type MutationUpdateManyProjectsArgs = {
  data: ProjectsUpdateManyMutationInput;
  where?: InputMaybe<ProjectsWhereInput>;
};


export type MutationUpdateManyProvidersArgs = {
  data: ProvidersUpdateManyMutationInput;
  where?: InputMaybe<ProvidersWhereInput>;
};


export type MutationUpdateManyQuotesArgs = {
  data: QuotesUpdateManyMutationInput;
  where?: InputMaybe<QuotesWhereInput>;
};


export type MutationUpdateManyRatingArgs = {
  data: RatingUpdateManyMutationInput;
  where?: InputMaybe<RatingWhereInput>;
};


export type MutationUpdateManyReportsArgs = {
  data: ReportsUpdateManyMutationInput;
  where?: InputMaybe<ReportsWhereInput>;
};


export type MutationUpdateManyReturnsArgs = {
  data: ReturnsUpdateManyMutationInput;
  where?: InputMaybe<ReturnsWhereInput>;
};


export type MutationUpdateManyReviewsArgs = {
  data: ReviewsUpdateManyMutationInput;
  where?: InputMaybe<ReviewsWhereInput>;
};


export type MutationUpdateManyRewardsArgs = {
  data: RewardsUpdateManyMutationInput;
  where?: InputMaybe<RewardsWhereInput>;
};


export type MutationUpdateManyRolesArgs = {
  data: RolesUpdateManyMutationInput;
  where?: InputMaybe<RolesWhereInput>;
};


export type MutationUpdateManySchedulerArgs = {
  data: SchedulerUpdateManyMutationInput;
  where?: InputMaybe<SchedulerWhereInput>;
};


export type MutationUpdateManySegmentsArgs = {
  data: SegmentsUpdateManyMutationInput;
  where?: InputMaybe<SegmentsWhereInput>;
};


export type MutationUpdateManySettingsArgs = {
  data: SettingsUpdateManyMutationInput;
  where?: InputMaybe<SettingsWhereInput>;
};


export type MutationUpdateManyShipmentsArgs = {
  data: ShipmentsUpdateManyMutationInput;
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type MutationUpdateManySpecial_DiscountsArgs = {
  data: Special_DiscountsUpdateManyMutationInput;
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type MutationUpdateManyStatesArgs = {
  data: StatesUpdateManyMutationInput;
  where?: InputMaybe<StatesWhereInput>;
};


export type MutationUpdateManyStatisticsArgs = {
  data: StatisticsUpdateManyMutationInput;
  where?: InputMaybe<StatisticsWhereInput>;
};


export type MutationUpdateManyStocksArgs = {
  data: StocksUpdateManyMutationInput;
  where?: InputMaybe<StocksWhereInput>;
};


export type MutationUpdateManyTagsArgs = {
  data: TagsUpdateManyMutationInput;
  where?: InputMaybe<TagsWhereInput>;
};


export type MutationUpdateManyTargetsArgs = {
  data: TargetsUpdateManyMutationInput;
  where?: InputMaybe<TargetsWhereInput>;
};


export type MutationUpdateManyTax_CategoryArgs = {
  data: Tax_CategoryUpdateManyMutationInput;
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type MutationUpdateManyTax_RateArgs = {
  data: Tax_RateUpdateManyMutationInput;
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type MutationUpdateManyTax_RuleArgs = {
  data: Tax_RuleUpdateManyMutationInput;
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type MutationUpdateManyTemplatesArgs = {
  data: TemplatesUpdateManyMutationInput;
  where?: InputMaybe<TemplatesWhereInput>;
};


export type MutationUpdateManyThemesArgs = {
  data: ThemesUpdateManyMutationInput;
  where?: InputMaybe<ThemesWhereInput>;
};


export type MutationUpdateManyTicketingArgs = {
  data: TicketingUpdateManyMutationInput;
  where?: InputMaybe<TicketingWhereInput>;
};


export type MutationUpdateManyTransactionsArgs = {
  data: TransactionsUpdateManyMutationInput;
  where?: InputMaybe<TransactionsWhereInput>;
};


export type MutationUpdateManyUpload_FileArgs = {
  data: Upload_FileUpdateManyMutationInput;
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type MutationUpdateManyUsersArgs = {
  data: UsersUpdateManyMutationInput;
  where?: InputMaybe<UsersWhereInput>;
};


export type MutationUpdateManyVendorsArgs = {
  data: VendorsUpdateManyMutationInput;
  where?: InputMaybe<VendorsWhereInput>;
};


export type MutationUpdateManyVisitsArgs = {
  data: VisitsUpdateManyMutationInput;
  where?: InputMaybe<VisitsWhereInput>;
};


export type MutationUpdateManyWarehouseArgs = {
  data: WarehouseUpdateManyMutationInput;
  where?: InputMaybe<WarehouseWhereInput>;
};


export type MutationUpdateManyWebhooksArgs = {
  data: WebhooksUpdateManyMutationInput;
  where?: InputMaybe<WebhooksWhereInput>;
};


export type MutationUpdateManyWebsitesArgs = {
  data: WebsitesUpdateManyMutationInput;
  where?: InputMaybe<WebsitesWhereInput>;
};


export type MutationUpdateManyWishlistsArgs = {
  data: WishlistsUpdateManyMutationInput;
  where?: InputMaybe<WishlistsWhereInput>;
};


export type MutationUpdateManyWorkspacesArgs = {
  data: WorkspacesUpdateManyMutationInput;
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type MutationUpdateManyZonesArgs = {
  data: ZonesUpdateManyMutationInput;
  where?: InputMaybe<ZonesWhereInput>;
};


export type MutationUpdateOneAccountsArgs = {
  data: AccountsUpdateInput;
  where: AccountsWhereUniqueInput;
};


export type MutationUpdateOneAgreementsArgs = {
  data: AgreementsUpdateInput;
  where: AgreementsWhereUniqueInput;
};


export type MutationUpdateOneAnalyticsArgs = {
  data: AnalyticsUpdateInput;
  where: AnalyticsWhereUniqueInput;
};


export type MutationUpdateOneApitokenArgs = {
  data: ApitokenUpdateInput;
  where: ApitokenWhereUniqueInput;
};


export type MutationUpdateOneArticlesArgs = {
  data: ArticlesUpdateInput;
  where: ArticlesWhereUniqueInput;
};


export type MutationUpdateOneAttributesArgs = {
  data: AttributesUpdateInput;
  where: AttributesWhereUniqueInput;
};


export type MutationUpdateOneBrandsArgs = {
  data: BrandsUpdateInput;
  where: BrandsWhereUniqueInput;
};


export type MutationUpdateOneCart_Price_RulesArgs = {
  data: Cart_Price_RulesUpdateInput;
  where: Cart_Price_RulesWhereUniqueInput;
};


export type MutationUpdateOneCasesArgs = {
  data: CasesUpdateInput;
  where: CasesWhereUniqueInput;
};


export type MutationUpdateOneCatalog_Price_RuleArgs = {
  data: Catalog_Price_RuleUpdateInput;
  where: Catalog_Price_RuleWhereUniqueInput;
};


export type MutationUpdateOneCategoriesArgs = {
  data: CategoriesUpdateInput;
  where: CategoriesWhereUniqueInput;
};


export type MutationUpdateOneChannelsArgs = {
  data: ChannelsUpdateInput;
  where: ChannelsWhereUniqueInput;
};


export type MutationUpdateOneChecklistArgs = {
  data: ChecklistUpdateInput;
  where: ChecklistWhereUniqueInput;
};


export type MutationUpdateOneCitiesArgs = {
  data: CitiesUpdateInput;
  where: CitiesWhereUniqueInput;
};


export type MutationUpdateOneCollectionsArgs = {
  data: CollectionsUpdateInput;
  where: CollectionsWhereUniqueInput;
};


export type MutationUpdateOneCommentsArgs = {
  data: CommentsUpdateInput;
  where: CommentsWhereUniqueInput;
};


export type MutationUpdateOneContent_TypeArgs = {
  data: Content_TypeUpdateInput;
  where: Content_TypeWhereUniqueInput;
};


export type MutationUpdateOneContractsArgs = {
  data: ContractsUpdateInput;
  where: ContractsWhereUniqueInput;
};


export type MutationUpdateOneCountriesArgs = {
  data: CountriesUpdateInput;
  where: CountriesWhereUniqueInput;
};


export type MutationUpdateOneCouponsArgs = {
  data: CouponsUpdateInput;
  where: CouponsWhereUniqueInput;
};


export type MutationUpdateOneCredit_MemosArgs = {
  data: Credit_MemosUpdateInput;
  where: Credit_MemosWhereUniqueInput;
};


export type MutationUpdateOneCurrenciesArgs = {
  data: CurrenciesUpdateInput;
  where: CurrenciesWhereUniqueInput;
};


export type MutationUpdateOneCurrency_RatesArgs = {
  data: Currency_RatesUpdateInput;
  where: Currency_RatesWhereUniqueInput;
};


export type MutationUpdateOneCurrency_SymbolsArgs = {
  data: Currency_SymbolsUpdateInput;
  where: Currency_SymbolsWhereUniqueInput;
};


export type MutationUpdateOneCustomer_GroupArgs = {
  data: Customer_GroupUpdateInput;
  where: Customer_GroupWhereUniqueInput;
};


export type MutationUpdateOneCustomersArgs = {
  data: CustomersUpdateInput;
  where: CustomersWhereUniqueInput;
};


export type MutationUpdateOneCustomizationsArgs = {
  data: CustomizationsUpdateInput;
  where: CustomizationsWhereUniqueInput;
};


export type MutationUpdateOneDashboardsArgs = {
  data: DashboardsUpdateInput;
  where: DashboardsWhereUniqueInput;
};


export type MutationUpdateOneDeepdiveArgs = {
  data: DeepdiveUpdateInput;
  where: DeepdiveWhereUniqueInput;
};


export type MutationUpdateOneDigiboardArgs = {
  data: DigiboardUpdateInput;
  where: DigiboardWhereUniqueInput;
};


export type MutationUpdateOneEmailsArgs = {
  data: EmailsUpdateInput;
  where: EmailsWhereUniqueInput;
};


export type MutationUpdateOneEndofshiftArgs = {
  data: EndofshiftUpdateInput;
  where: EndofshiftWhereUniqueInput;
};


export type MutationUpdateOneEventsArgs = {
  data: EventsUpdateInput;
  where: EventsWhereUniqueInput;
};


export type MutationUpdateOneFullfillmentsArgs = {
  data: FullfillmentsUpdateInput;
  where: FullfillmentsWhereUniqueInput;
};


export type MutationUpdateOneGift_CertificatesArgs = {
  data: Gift_CertificatesUpdateInput;
  where: Gift_CertificatesWhereUniqueInput;
};


export type MutationUpdateOneGlossaryArgs = {
  data: GlossaryUpdateInput;
  where: GlossaryWhereUniqueInput;
};


export type MutationUpdateOneImportmArgs = {
  data: ImportmUpdateInput;
  where: ImportmWhereUniqueInput;
};


export type MutationUpdateOneIntegrationsArgs = {
  data: IntegrationsUpdateInput;
  where: IntegrationsWhereUniqueInput;
};


export type MutationUpdateOneInternalizationArgs = {
  data: InternalizationUpdateInput;
  where: InternalizationWhereUniqueInput;
};


export type MutationUpdateOneInvitationsArgs = {
  data: InvitationsUpdateInput;
  where: InvitationsWhereUniqueInput;
};


export type MutationUpdateOneInvoicesArgs = {
  data: InvoicesUpdateInput;
  where: InvoicesWhereUniqueInput;
};


export type MutationUpdateOneLeadsArgs = {
  data: LeadsUpdateInput;
  where: LeadsWhereUniqueInput;
};


export type MutationUpdateOneLogInArgs = {
  data: LogInUpdateInput;
  where: LogInWhereUniqueInput;
};


export type MutationUpdateOneManufacturerArgs = {
  data: ManufacturerUpdateInput;
  where: ManufacturerWhereUniqueInput;
};


export type MutationUpdateOneMediamanagerArgs = {
  data: MediamanagerUpdateInput;
  where: MediamanagerWhereUniqueInput;
};


export type MutationUpdateOneMeetingArgs = {
  data: MeetingUpdateInput;
  where: MeetingWhereUniqueInput;
};


export type MutationUpdateOneMessagesArgs = {
  data: MessagesUpdateInput;
  where: MessagesWhereUniqueInput;
};


export type MutationUpdateOneNewslettersArgs = {
  data: NewslettersUpdateInput;
  where: NewslettersWhereUniqueInput;
};


export type MutationUpdateOneOotoArgs = {
  data: OotoUpdateInput;
  where: OotoWhereUniqueInput;
};


export type MutationUpdateOneOpportunitiesArgs = {
  data: OpportunitiesUpdateInput;
  where: OpportunitiesWhereUniqueInput;
};


export type MutationUpdateOneOrdersArgs = {
  data: OrdersUpdateInput;
  where: OrdersWhereUniqueInput;
};


export type MutationUpdateOnePagesArgs = {
  data: PagesUpdateInput;
  where: PagesWhereUniqueInput;
};


export type MutationUpdateOnePartnersArgs = {
  data: PartnersUpdateInput;
  where: PartnersWhereUniqueInput;
};


export type MutationUpdateOnePaymentsArgs = {
  data: PaymentsUpdateInput;
  where: PaymentsWhereUniqueInput;
};


export type MutationUpdateOnePermissionsArgs = {
  data: PermissionsUpdateInput;
  where: PermissionsWhereUniqueInput;
};


export type MutationUpdateOnePluginsArgs = {
  data: PluginsUpdateInput;
  where: PluginsWhereUniqueInput;
};


export type MutationUpdateOnePollsArgs = {
  data: PollsUpdateInput;
  where: PollsWhereUniqueInput;
};


export type MutationUpdateOneProduct_TypesArgs = {
  data: Product_TypesUpdateInput;
  where: Product_TypesWhereUniqueInput;
};


export type MutationUpdateOneProductsArgs = {
  data: ProductsUpdateInput;
  where: ProductsWhereUniqueInput;
};


export type MutationUpdateOneProjectsArgs = {
  data: ProjectsUpdateInput;
  where: ProjectsWhereUniqueInput;
};


export type MutationUpdateOneProvidersArgs = {
  data: ProvidersUpdateInput;
  where: ProvidersWhereUniqueInput;
};


export type MutationUpdateOneQuotesArgs = {
  data: QuotesUpdateInput;
  where: QuotesWhereUniqueInput;
};


export type MutationUpdateOneRatingArgs = {
  data: RatingUpdateInput;
  where: RatingWhereUniqueInput;
};


export type MutationUpdateOneReportsArgs = {
  data: ReportsUpdateInput;
  where: ReportsWhereUniqueInput;
};


export type MutationUpdateOneReturnsArgs = {
  data: ReturnsUpdateInput;
  where: ReturnsWhereUniqueInput;
};


export type MutationUpdateOneReviewsArgs = {
  data: ReviewsUpdateInput;
  where: ReviewsWhereUniqueInput;
};


export type MutationUpdateOneRewardsArgs = {
  data: RewardsUpdateInput;
  where: RewardsWhereUniqueInput;
};


export type MutationUpdateOneRolesArgs = {
  data: RolesUpdateInput;
  where: RolesWhereUniqueInput;
};


export type MutationUpdateOneSchedulerArgs = {
  data: SchedulerUpdateInput;
  where: SchedulerWhereUniqueInput;
};


export type MutationUpdateOneSegmentsArgs = {
  data: SegmentsUpdateInput;
  where: SegmentsWhereUniqueInput;
};


export type MutationUpdateOneSettingsArgs = {
  data: SettingsUpdateInput;
  where: SettingsWhereUniqueInput;
};


export type MutationUpdateOneShipmentsArgs = {
  data: ShipmentsUpdateInput;
  where: ShipmentsWhereUniqueInput;
};


export type MutationUpdateOneSpecial_DiscountsArgs = {
  data: Special_DiscountsUpdateInput;
  where: Special_DiscountsWhereUniqueInput;
};


export type MutationUpdateOneStatesArgs = {
  data: StatesUpdateInput;
  where: StatesWhereUniqueInput;
};


export type MutationUpdateOneStatisticsArgs = {
  data: StatisticsUpdateInput;
  where: StatisticsWhereUniqueInput;
};


export type MutationUpdateOneStocksArgs = {
  data: StocksUpdateInput;
  where: StocksWhereUniqueInput;
};


export type MutationUpdateOneTagsArgs = {
  data: TagsUpdateInput;
  where: TagsWhereUniqueInput;
};


export type MutationUpdateOneTargetsArgs = {
  data: TargetsUpdateInput;
  where: TargetsWhereUniqueInput;
};


export type MutationUpdateOneTax_CategoryArgs = {
  data: Tax_CategoryUpdateInput;
  where: Tax_CategoryWhereUniqueInput;
};


export type MutationUpdateOneTax_RateArgs = {
  data: Tax_RateUpdateInput;
  where: Tax_RateWhereUniqueInput;
};


export type MutationUpdateOneTax_RuleArgs = {
  data: Tax_RuleUpdateInput;
  where: Tax_RuleWhereUniqueInput;
};


export type MutationUpdateOneTemplatesArgs = {
  data: TemplatesUpdateInput;
  where: TemplatesWhereUniqueInput;
};


export type MutationUpdateOneThemesArgs = {
  data: ThemesUpdateInput;
  where: ThemesWhereUniqueInput;
};


export type MutationUpdateOneTicketingArgs = {
  data: TicketingUpdateInput;
  where: TicketingWhereUniqueInput;
};


export type MutationUpdateOneTransactionsArgs = {
  data: TransactionsUpdateInput;
  where: TransactionsWhereUniqueInput;
};


export type MutationUpdateOneUpload_FileArgs = {
  data: Upload_FileUpdateInput;
  where: Upload_FileWhereUniqueInput;
};


export type MutationUpdateOneUsersArgs = {
  data: UsersUpdateInput;
  where: UsersWhereUniqueInput;
};


export type MutationUpdateOneVendorsArgs = {
  data: VendorsUpdateInput;
  where: VendorsWhereUniqueInput;
};


export type MutationUpdateOneVisitsArgs = {
  data: VisitsUpdateInput;
  where: VisitsWhereUniqueInput;
};


export type MutationUpdateOneWarehouseArgs = {
  data: WarehouseUpdateInput;
  where: WarehouseWhereUniqueInput;
};


export type MutationUpdateOneWebhooksArgs = {
  data: WebhooksUpdateInput;
  where: WebhooksWhereUniqueInput;
};


export type MutationUpdateOneWebsitesArgs = {
  data: WebsitesUpdateInput;
  where: WebsitesWhereUniqueInput;
};


export type MutationUpdateOneWishlistsArgs = {
  data: WishlistsUpdateInput;
  where: WishlistsWhereUniqueInput;
};


export type MutationUpdateOneWorkspacesArgs = {
  data: WorkspacesUpdateInput;
  where: WorkspacesWhereUniqueInput;
};


export type MutationUpdateOneZonesArgs = {
  data: ZonesUpdateInput;
  where: ZonesWhereUniqueInput;
};


export type MutationUpsertOneAccountsArgs = {
  create: AccountsCreateInput;
  update: AccountsUpdateInput;
  where: AccountsWhereUniqueInput;
};


export type MutationUpsertOneAgreementsArgs = {
  create: AgreementsCreateInput;
  update: AgreementsUpdateInput;
  where: AgreementsWhereUniqueInput;
};


export type MutationUpsertOneAnalyticsArgs = {
  create: AnalyticsCreateInput;
  update: AnalyticsUpdateInput;
  where: AnalyticsWhereUniqueInput;
};


export type MutationUpsertOneApitokenArgs = {
  create: ApitokenCreateInput;
  update: ApitokenUpdateInput;
  where: ApitokenWhereUniqueInput;
};


export type MutationUpsertOneArticlesArgs = {
  create: ArticlesCreateInput;
  update: ArticlesUpdateInput;
  where: ArticlesWhereUniqueInput;
};


export type MutationUpsertOneAttributesArgs = {
  create: AttributesCreateInput;
  update: AttributesUpdateInput;
  where: AttributesWhereUniqueInput;
};


export type MutationUpsertOneBrandsArgs = {
  create: BrandsCreateInput;
  update: BrandsUpdateInput;
  where: BrandsWhereUniqueInput;
};


export type MutationUpsertOneCart_Price_RulesArgs = {
  create: Cart_Price_RulesCreateInput;
  update: Cart_Price_RulesUpdateInput;
  where: Cart_Price_RulesWhereUniqueInput;
};


export type MutationUpsertOneCasesArgs = {
  create: CasesCreateInput;
  update: CasesUpdateInput;
  where: CasesWhereUniqueInput;
};


export type MutationUpsertOneCatalog_Price_RuleArgs = {
  create: Catalog_Price_RuleCreateInput;
  update: Catalog_Price_RuleUpdateInput;
  where: Catalog_Price_RuleWhereUniqueInput;
};


export type MutationUpsertOneCategoriesArgs = {
  create: CategoriesCreateInput;
  update: CategoriesUpdateInput;
  where: CategoriesWhereUniqueInput;
};


export type MutationUpsertOneChannelsArgs = {
  create: ChannelsCreateInput;
  update: ChannelsUpdateInput;
  where: ChannelsWhereUniqueInput;
};


export type MutationUpsertOneChecklistArgs = {
  create: ChecklistCreateInput;
  update: ChecklistUpdateInput;
  where: ChecklistWhereUniqueInput;
};


export type MutationUpsertOneCitiesArgs = {
  create: CitiesCreateInput;
  update: CitiesUpdateInput;
  where: CitiesWhereUniqueInput;
};


export type MutationUpsertOneCollectionsArgs = {
  create: CollectionsCreateInput;
  update: CollectionsUpdateInput;
  where: CollectionsWhereUniqueInput;
};


export type MutationUpsertOneCommentsArgs = {
  create: CommentsCreateInput;
  update: CommentsUpdateInput;
  where: CommentsWhereUniqueInput;
};


export type MutationUpsertOneContent_TypeArgs = {
  create: Content_TypeCreateInput;
  update: Content_TypeUpdateInput;
  where: Content_TypeWhereUniqueInput;
};


export type MutationUpsertOneContractsArgs = {
  create: ContractsCreateInput;
  update: ContractsUpdateInput;
  where: ContractsWhereUniqueInput;
};


export type MutationUpsertOneCountriesArgs = {
  create: CountriesCreateInput;
  update: CountriesUpdateInput;
  where: CountriesWhereUniqueInput;
};


export type MutationUpsertOneCouponsArgs = {
  create: CouponsCreateInput;
  update: CouponsUpdateInput;
  where: CouponsWhereUniqueInput;
};


export type MutationUpsertOneCredit_MemosArgs = {
  create: Credit_MemosCreateInput;
  update: Credit_MemosUpdateInput;
  where: Credit_MemosWhereUniqueInput;
};


export type MutationUpsertOneCurrenciesArgs = {
  create: CurrenciesCreateInput;
  update: CurrenciesUpdateInput;
  where: CurrenciesWhereUniqueInput;
};


export type MutationUpsertOneCurrency_RatesArgs = {
  create: Currency_RatesCreateInput;
  update: Currency_RatesUpdateInput;
  where: Currency_RatesWhereUniqueInput;
};


export type MutationUpsertOneCurrency_SymbolsArgs = {
  create: Currency_SymbolsCreateInput;
  update: Currency_SymbolsUpdateInput;
  where: Currency_SymbolsWhereUniqueInput;
};


export type MutationUpsertOneCustomer_GroupArgs = {
  create: Customer_GroupCreateInput;
  update: Customer_GroupUpdateInput;
  where: Customer_GroupWhereUniqueInput;
};


export type MutationUpsertOneCustomersArgs = {
  create: CustomersCreateInput;
  update: CustomersUpdateInput;
  where: CustomersWhereUniqueInput;
};


export type MutationUpsertOneCustomizationsArgs = {
  create: CustomizationsCreateInput;
  update: CustomizationsUpdateInput;
  where: CustomizationsWhereUniqueInput;
};


export type MutationUpsertOneDashboardsArgs = {
  create: DashboardsCreateInput;
  update: DashboardsUpdateInput;
  where: DashboardsWhereUniqueInput;
};


export type MutationUpsertOneDeepdiveArgs = {
  create: DeepdiveCreateInput;
  update: DeepdiveUpdateInput;
  where: DeepdiveWhereUniqueInput;
};


export type MutationUpsertOneDigiboardArgs = {
  create: DigiboardCreateInput;
  update: DigiboardUpdateInput;
  where: DigiboardWhereUniqueInput;
};


export type MutationUpsertOneEmailsArgs = {
  create: EmailsCreateInput;
  update: EmailsUpdateInput;
  where: EmailsWhereUniqueInput;
};


export type MutationUpsertOneEndofshiftArgs = {
  create: EndofshiftCreateInput;
  update: EndofshiftUpdateInput;
  where: EndofshiftWhereUniqueInput;
};


export type MutationUpsertOneEventsArgs = {
  create: EventsCreateInput;
  update: EventsUpdateInput;
  where: EventsWhereUniqueInput;
};


export type MutationUpsertOneFullfillmentsArgs = {
  create: FullfillmentsCreateInput;
  update: FullfillmentsUpdateInput;
  where: FullfillmentsWhereUniqueInput;
};


export type MutationUpsertOneGift_CertificatesArgs = {
  create: Gift_CertificatesCreateInput;
  update: Gift_CertificatesUpdateInput;
  where: Gift_CertificatesWhereUniqueInput;
};


export type MutationUpsertOneGlossaryArgs = {
  create: GlossaryCreateInput;
  update: GlossaryUpdateInput;
  where: GlossaryWhereUniqueInput;
};


export type MutationUpsertOneImportmArgs = {
  create: ImportmCreateInput;
  update: ImportmUpdateInput;
  where: ImportmWhereUniqueInput;
};


export type MutationUpsertOneIntegrationsArgs = {
  create: IntegrationsCreateInput;
  update: IntegrationsUpdateInput;
  where: IntegrationsWhereUniqueInput;
};


export type MutationUpsertOneInternalizationArgs = {
  create: InternalizationCreateInput;
  update: InternalizationUpdateInput;
  where: InternalizationWhereUniqueInput;
};


export type MutationUpsertOneInvitationsArgs = {
  create: InvitationsCreateInput;
  update: InvitationsUpdateInput;
  where: InvitationsWhereUniqueInput;
};


export type MutationUpsertOneInvoicesArgs = {
  create: InvoicesCreateInput;
  update: InvoicesUpdateInput;
  where: InvoicesWhereUniqueInput;
};


export type MutationUpsertOneLeadsArgs = {
  create: LeadsCreateInput;
  update: LeadsUpdateInput;
  where: LeadsWhereUniqueInput;
};


export type MutationUpsertOneLogInArgs = {
  create: LogInCreateInput;
  update: LogInUpdateInput;
  where: LogInWhereUniqueInput;
};


export type MutationUpsertOneManufacturerArgs = {
  create: ManufacturerCreateInput;
  update: ManufacturerUpdateInput;
  where: ManufacturerWhereUniqueInput;
};


export type MutationUpsertOneMediamanagerArgs = {
  create: MediamanagerCreateInput;
  update: MediamanagerUpdateInput;
  where: MediamanagerWhereUniqueInput;
};


export type MutationUpsertOneMeetingArgs = {
  create: MeetingCreateInput;
  update: MeetingUpdateInput;
  where: MeetingWhereUniqueInput;
};


export type MutationUpsertOneMessagesArgs = {
  create: MessagesCreateInput;
  update: MessagesUpdateInput;
  where: MessagesWhereUniqueInput;
};


export type MutationUpsertOneNewslettersArgs = {
  create: NewslettersCreateInput;
  update: NewslettersUpdateInput;
  where: NewslettersWhereUniqueInput;
};


export type MutationUpsertOneOotoArgs = {
  create: OotoCreateInput;
  update: OotoUpdateInput;
  where: OotoWhereUniqueInput;
};


export type MutationUpsertOneOpportunitiesArgs = {
  create: OpportunitiesCreateInput;
  update: OpportunitiesUpdateInput;
  where: OpportunitiesWhereUniqueInput;
};


export type MutationUpsertOneOrdersArgs = {
  create: OrdersCreateInput;
  update: OrdersUpdateInput;
  where: OrdersWhereUniqueInput;
};


export type MutationUpsertOnePagesArgs = {
  create: PagesCreateInput;
  update: PagesUpdateInput;
  where: PagesWhereUniqueInput;
};


export type MutationUpsertOnePartnersArgs = {
  create: PartnersCreateInput;
  update: PartnersUpdateInput;
  where: PartnersWhereUniqueInput;
};


export type MutationUpsertOnePaymentsArgs = {
  create: PaymentsCreateInput;
  update: PaymentsUpdateInput;
  where: PaymentsWhereUniqueInput;
};


export type MutationUpsertOnePermissionsArgs = {
  create: PermissionsCreateInput;
  update: PermissionsUpdateInput;
  where: PermissionsWhereUniqueInput;
};


export type MutationUpsertOnePluginsArgs = {
  create: PluginsCreateInput;
  update: PluginsUpdateInput;
  where: PluginsWhereUniqueInput;
};


export type MutationUpsertOnePollsArgs = {
  create: PollsCreateInput;
  update: PollsUpdateInput;
  where: PollsWhereUniqueInput;
};


export type MutationUpsertOneProduct_TypesArgs = {
  create: Product_TypesCreateInput;
  update: Product_TypesUpdateInput;
  where: Product_TypesWhereUniqueInput;
};


export type MutationUpsertOneProductsArgs = {
  create: ProductsCreateInput;
  update: ProductsUpdateInput;
  where: ProductsWhereUniqueInput;
};


export type MutationUpsertOneProjectsArgs = {
  create: ProjectsCreateInput;
  update: ProjectsUpdateInput;
  where: ProjectsWhereUniqueInput;
};


export type MutationUpsertOneProvidersArgs = {
  create: ProvidersCreateInput;
  update: ProvidersUpdateInput;
  where: ProvidersWhereUniqueInput;
};


export type MutationUpsertOneQuotesArgs = {
  create: QuotesCreateInput;
  update: QuotesUpdateInput;
  where: QuotesWhereUniqueInput;
};


export type MutationUpsertOneRatingArgs = {
  create: RatingCreateInput;
  update: RatingUpdateInput;
  where: RatingWhereUniqueInput;
};


export type MutationUpsertOneReportsArgs = {
  create: ReportsCreateInput;
  update: ReportsUpdateInput;
  where: ReportsWhereUniqueInput;
};


export type MutationUpsertOneReturnsArgs = {
  create: ReturnsCreateInput;
  update: ReturnsUpdateInput;
  where: ReturnsWhereUniqueInput;
};


export type MutationUpsertOneReviewsArgs = {
  create: ReviewsCreateInput;
  update: ReviewsUpdateInput;
  where: ReviewsWhereUniqueInput;
};


export type MutationUpsertOneRewardsArgs = {
  create: RewardsCreateInput;
  update: RewardsUpdateInput;
  where: RewardsWhereUniqueInput;
};


export type MutationUpsertOneRolesArgs = {
  create: RolesCreateInput;
  update: RolesUpdateInput;
  where: RolesWhereUniqueInput;
};


export type MutationUpsertOneSchedulerArgs = {
  create: SchedulerCreateInput;
  update: SchedulerUpdateInput;
  where: SchedulerWhereUniqueInput;
};


export type MutationUpsertOneSegmentsArgs = {
  create: SegmentsCreateInput;
  update: SegmentsUpdateInput;
  where: SegmentsWhereUniqueInput;
};


export type MutationUpsertOneSettingsArgs = {
  create: SettingsCreateInput;
  update: SettingsUpdateInput;
  where: SettingsWhereUniqueInput;
};


export type MutationUpsertOneShipmentsArgs = {
  create: ShipmentsCreateInput;
  update: ShipmentsUpdateInput;
  where: ShipmentsWhereUniqueInput;
};


export type MutationUpsertOneSpecial_DiscountsArgs = {
  create: Special_DiscountsCreateInput;
  update: Special_DiscountsUpdateInput;
  where: Special_DiscountsWhereUniqueInput;
};


export type MutationUpsertOneStatesArgs = {
  create: StatesCreateInput;
  update: StatesUpdateInput;
  where: StatesWhereUniqueInput;
};


export type MutationUpsertOneStatisticsArgs = {
  create: StatisticsCreateInput;
  update: StatisticsUpdateInput;
  where: StatisticsWhereUniqueInput;
};


export type MutationUpsertOneStocksArgs = {
  create: StocksCreateInput;
  update: StocksUpdateInput;
  where: StocksWhereUniqueInput;
};


export type MutationUpsertOneTagsArgs = {
  create: TagsCreateInput;
  update: TagsUpdateInput;
  where: TagsWhereUniqueInput;
};


export type MutationUpsertOneTargetsArgs = {
  create: TargetsCreateInput;
  update: TargetsUpdateInput;
  where: TargetsWhereUniqueInput;
};


export type MutationUpsertOneTax_CategoryArgs = {
  create: Tax_CategoryCreateInput;
  update: Tax_CategoryUpdateInput;
  where: Tax_CategoryWhereUniqueInput;
};


export type MutationUpsertOneTax_RateArgs = {
  create: Tax_RateCreateInput;
  update: Tax_RateUpdateInput;
  where: Tax_RateWhereUniqueInput;
};


export type MutationUpsertOneTax_RuleArgs = {
  create: Tax_RuleCreateInput;
  update: Tax_RuleUpdateInput;
  where: Tax_RuleWhereUniqueInput;
};


export type MutationUpsertOneTemplatesArgs = {
  create: TemplatesCreateInput;
  update: TemplatesUpdateInput;
  where: TemplatesWhereUniqueInput;
};


export type MutationUpsertOneThemesArgs = {
  create: ThemesCreateInput;
  update: ThemesUpdateInput;
  where: ThemesWhereUniqueInput;
};


export type MutationUpsertOneTicketingArgs = {
  create: TicketingCreateInput;
  update: TicketingUpdateInput;
  where: TicketingWhereUniqueInput;
};


export type MutationUpsertOneTransactionsArgs = {
  create: TransactionsCreateInput;
  update: TransactionsUpdateInput;
  where: TransactionsWhereUniqueInput;
};


export type MutationUpsertOneUpload_FileArgs = {
  create: Upload_FileCreateInput;
  update: Upload_FileUpdateInput;
  where: Upload_FileWhereUniqueInput;
};


export type MutationUpsertOneUsersArgs = {
  create: UsersCreateInput;
  update: UsersUpdateInput;
  where: UsersWhereUniqueInput;
};


export type MutationUpsertOneVendorsArgs = {
  create: VendorsCreateInput;
  update: VendorsUpdateInput;
  where: VendorsWhereUniqueInput;
};


export type MutationUpsertOneVisitsArgs = {
  create: VisitsCreateInput;
  update: VisitsUpdateInput;
  where: VisitsWhereUniqueInput;
};


export type MutationUpsertOneWarehouseArgs = {
  create: WarehouseCreateInput;
  update: WarehouseUpdateInput;
  where: WarehouseWhereUniqueInput;
};


export type MutationUpsertOneWebhooksArgs = {
  create: WebhooksCreateInput;
  update: WebhooksUpdateInput;
  where: WebhooksWhereUniqueInput;
};


export type MutationUpsertOneWebsitesArgs = {
  create: WebsitesCreateInput;
  update: WebsitesUpdateInput;
  where: WebsitesWhereUniqueInput;
};


export type MutationUpsertOneWishlistsArgs = {
  create: WishlistsCreateInput;
  update: WishlistsUpdateInput;
  where: WishlistsWhereUniqueInput;
};


export type MutationUpsertOneWorkspacesArgs = {
  create: WorkspacesCreateInput;
  update: WorkspacesUpdateInput;
  where: WorkspacesWhereUniqueInput;
};


export type MutationUpsertOneZonesArgs = {
  create: ZonesCreateInput;
  update: ZonesUpdateInput;
  where: ZonesWhereUniqueInput;
};

export type NestedBigIntFilter = {
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type NestedBigIntNullableFilter = {
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type NestedBigIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBigIntNullableFilter>;
  _min?: InputMaybe<NestedBigIntNullableFilter>;
  _sum?: InputMaybe<NestedBigIntNullableFilter>;
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type NestedBigIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBigIntFilter>;
  _min?: InputMaybe<NestedBigIntFilter>;
  _sum?: InputMaybe<NestedBigIntFilter>;
  equals?: InputMaybe<Scalars['BigInt']>;
  gt?: InputMaybe<Scalars['BigInt']>;
  gte?: InputMaybe<Scalars['BigInt']>;
  in?: InputMaybe<Array<Scalars['BigInt']>>;
  lt?: InputMaybe<Scalars['BigInt']>;
  lte?: InputMaybe<Scalars['BigInt']>;
  not?: InputMaybe<NestedBigIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']>>;
};

export type NestedBoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type NestedBoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export type NestedDateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type NestedDateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type NestedDateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type NestedDecimalFilter = {
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type NestedDecimalNullableFilter = {
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type NestedDecimalNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDecimalNullableFilter>;
  _min?: InputMaybe<NestedDecimalNullableFilter>;
  _sum?: InputMaybe<NestedDecimalNullableFilter>;
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type NestedDecimalWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDecimalFilter>;
  _min?: InputMaybe<NestedDecimalFilter>;
  _sum?: InputMaybe<NestedDecimalFilter>;
  equals?: InputMaybe<Scalars['Decimal']>;
  gt?: InputMaybe<Scalars['Decimal']>;
  gte?: InputMaybe<Scalars['Decimal']>;
  in?: InputMaybe<Array<Scalars['Decimal']>>;
  lt?: InputMaybe<Scalars['Decimal']>;
  lte?: InputMaybe<Scalars['Decimal']>;
  not?: InputMaybe<NestedDecimalWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']>>;
};

export type NestedFloatFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type NestedFloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedJsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['JSON']>;
  array_ends_with?: InputMaybe<Scalars['JSON']>;
  array_starts_with?: InputMaybe<Scalars['JSON']>;
  equals?: InputMaybe<Scalars['JSON']>;
  gt?: InputMaybe<Scalars['JSON']>;
  gte?: InputMaybe<Scalars['JSON']>;
  lt?: InputMaybe<Scalars['JSON']>;
  lte?: InputMaybe<Scalars['JSON']>;
  not?: InputMaybe<Scalars['JSON']>;
  path?: InputMaybe<Array<Scalars['String']>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type Newsletters = {
  __typename?: 'Newsletters';
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customer_first_name?: Maybe<Scalars['String']>;
  customer_last_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  email: Scalars['String'];
  id: Scalars['Int'];
  status?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
};

export type NewslettersAvgAggregate = {
  __typename?: 'NewslettersAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

export type NewslettersAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type NewslettersCountAggregate = {
  __typename?: 'NewslettersCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  cust_id: Scalars['Int'];
  customer_first_name: Scalars['Int'];
  customer_last_name: Scalars['Int'];
  customers: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  status: Scalars['Int'];
  store: Scalars['Int'];
  websites: Scalars['Int'];
};

export type NewslettersCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customer_first_name?: InputMaybe<SortOrder>;
  customer_last_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type NewslettersCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customer_first_name?: InputMaybe<Scalars['String']>;
  customer_last_name?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  status?: InputMaybe<Scalars['String']>;
  store?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
};

export type NewslettersCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customer_first_name?: InputMaybe<Scalars['String']>;
  customer_last_name?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  email: Scalars['String'];
  id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  store?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
};

export type NewslettersGroupBy = {
  __typename?: 'NewslettersGroupBy';
  _avg?: Maybe<NewslettersAvgAggregate>;
  _count?: Maybe<NewslettersCountAggregate>;
  _max?: Maybe<NewslettersMaxAggregate>;
  _min?: Maybe<NewslettersMinAggregate>;
  _sum?: Maybe<NewslettersSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id: Scalars['Int'];
  customer_first_name?: Maybe<Scalars['String']>;
  customer_last_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  email: Scalars['String'];
  id: Scalars['Int'];
  status?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
};

export type NewslettersMaxAggregate = {
  __typename?: 'NewslettersMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customer_first_name?: Maybe<Scalars['String']>;
  customer_last_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
};

export type NewslettersMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customer_first_name?: InputMaybe<SortOrder>;
  customer_last_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type NewslettersMinAggregate = {
  __typename?: 'NewslettersMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customer_first_name?: Maybe<Scalars['String']>;
  customer_last_name?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
};

export type NewslettersMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customer_first_name?: InputMaybe<SortOrder>;
  customer_last_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum NewslettersOrderByRelevanceFieldEnum {
  CustomerFirstName = 'customer_first_name',
  CustomerLastName = 'customer_last_name',
  Customers = 'customers',
  Email = 'email',
  Status = 'status',
  Store = 'store',
  Websites = 'websites'
}

export type NewslettersOrderByRelevanceInput = {
  fields: Array<NewslettersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type NewslettersOrderByWithAggregationInput = {
  _avg?: InputMaybe<NewslettersAvgOrderByAggregateInput>;
  _count?: InputMaybe<NewslettersCountOrderByAggregateInput>;
  _max?: InputMaybe<NewslettersMaxOrderByAggregateInput>;
  _min?: InputMaybe<NewslettersMinOrderByAggregateInput>;
  _sum?: InputMaybe<NewslettersSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customer_first_name?: InputMaybe<SortOrder>;
  customer_last_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type NewslettersOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<NewslettersOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customer_first_name?: InputMaybe<SortOrder>;
  customer_last_name?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum NewslettersScalarFieldEnum {
  CreatedAt = 'created_at',
  CustId = 'cust_id',
  CustomerFirstName = 'customer_first_name',
  CustomerLastName = 'customer_last_name',
  Customers = 'customers',
  Email = 'email',
  Id = 'id',
  Status = 'status',
  Store = 'store',
  Websites = 'websites'
}

export type NewslettersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<NewslettersScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<NewslettersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<NewslettersScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customer_first_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_last_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  store?: InputMaybe<StringNullableWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type NewslettersSumAggregate = {
  __typename?: 'NewslettersSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
};

export type NewslettersSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type NewslettersUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customer_first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NewslettersUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customer_first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NewslettersWhereInput = {
  AND?: InputMaybe<Array<NewslettersWhereInput>>;
  NOT?: InputMaybe<Array<NewslettersWhereInput>>;
  OR?: InputMaybe<Array<NewslettersWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customer_first_name?: InputMaybe<StringNullableFilter>;
  customer_last_name?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringFilter>;
  id?: InputMaybe<IntFilter>;
  status?: InputMaybe<StringNullableFilter>;
  store?: InputMaybe<StringNullableFilter>;
  websites?: InputMaybe<StringNullableFilter>;
};

export type NewslettersWhereUniqueInput = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
};

export type NullableBigIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['BigInt']>;
  divide?: InputMaybe<Scalars['BigInt']>;
  increment?: InputMaybe<Scalars['BigInt']>;
  multiply?: InputMaybe<Scalars['BigInt']>;
  set?: InputMaybe<Scalars['BigInt']>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type NullableDecimalFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Decimal']>;
  divide?: InputMaybe<Scalars['Decimal']>;
  increment?: InputMaybe<Scalars['Decimal']>;
  multiply?: InputMaybe<Scalars['Decimal']>;
  set?: InputMaybe<Scalars['Decimal']>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type Ooto = {
  __typename?: 'Ooto';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  using_time?: Maybe<Scalars['String']>;
};

export type OotoAvgAggregate = {
  __typename?: 'OotoAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type OotoAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type OotoCountAggregate = {
  __typename?: 'OotoCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  location: Scalars['Int'];
  login: Scalars['Int'];
  note: Scalars['Int'];
  start_date: Scalars['Int'];
  using_time: Scalars['Int'];
};

export type OotoCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  using_time?: InputMaybe<SortOrder>;
};

export type OotoCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  login?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  using_time?: InputMaybe<Scalars['String']>;
};

export type OotoCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  login?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  using_time?: InputMaybe<Scalars['String']>;
};

export type OotoGroupBy = {
  __typename?: 'OotoGroupBy';
  _avg?: Maybe<OotoAvgAggregate>;
  _count?: Maybe<OotoCountAggregate>;
  _max?: Maybe<OotoMaxAggregate>;
  _min?: Maybe<OotoMinAggregate>;
  _sum?: Maybe<OotoSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  using_time?: Maybe<Scalars['String']>;
};

export type OotoMaxAggregate = {
  __typename?: 'OotoMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  using_time?: Maybe<Scalars['String']>;
};

export type OotoMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  using_time?: InputMaybe<SortOrder>;
};

export type OotoMinAggregate = {
  __typename?: 'OotoMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  using_time?: Maybe<Scalars['String']>;
};

export type OotoMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  using_time?: InputMaybe<SortOrder>;
};

export enum OotoOrderByRelevanceFieldEnum {
  EndDate = 'end_date',
  Location = 'location',
  Login = 'login',
  Note = 'note',
  StartDate = 'start_date',
  UsingTime = 'using_time'
}

export type OotoOrderByRelevanceInput = {
  fields: Array<OotoOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type OotoOrderByWithAggregationInput = {
  _avg?: InputMaybe<OotoAvgOrderByAggregateInput>;
  _count?: InputMaybe<OotoCountOrderByAggregateInput>;
  _max?: InputMaybe<OotoMaxOrderByAggregateInput>;
  _min?: InputMaybe<OotoMinOrderByAggregateInput>;
  _sum?: InputMaybe<OotoSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  using_time?: InputMaybe<SortOrder>;
};

export type OotoOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<OotoOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  using_time?: InputMaybe<SortOrder>;
};

export enum OotoScalarFieldEnum {
  CreatedAt = 'created_at',
  EndDate = 'end_date',
  Id = 'id',
  Location = 'location',
  Login = 'login',
  Note = 'note',
  StartDate = 'start_date',
  UsingTime = 'using_time'
}

export type OotoScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<OotoScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<OotoScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<OotoScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  login?: InputMaybe<StringNullableWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  using_time?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OotoSumAggregate = {
  __typename?: 'OotoSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type OotoSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type OotoUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  using_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OotoUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  using_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OotoWhereInput = {
  AND?: InputMaybe<Array<OotoWhereInput>>;
  NOT?: InputMaybe<Array<OotoWhereInput>>;
  OR?: InputMaybe<Array<OotoWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  location?: InputMaybe<StringNullableFilter>;
  login?: InputMaybe<StringNullableFilter>;
  note?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  using_time?: InputMaybe<StringNullableFilter>;
};

export type OotoWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Opportunities = {
  __typename?: 'Opportunities';
  account_name?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  expected_close_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  lead_source?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  next_step?: Maybe<Scalars['String']>;
  probability?: Maybe<Scalars['String']>;
  sales_stage?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type OpportunitiesAvgAggregate = {
  __typename?: 'OpportunitiesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type OpportunitiesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type OpportunitiesCountAggregate = {
  __typename?: 'OpportunitiesCountAggregate';
  _all: Scalars['Int'];
  account_name: Scalars['Int'];
  amount: Scalars['Int'];
  assigned_to: Scalars['Int'];
  campaign: Scalars['Int'];
  created_at: Scalars['Int'];
  currency: Scalars['Int'];
  description: Scalars['Int'];
  expected_close_date: Scalars['Int'];
  id: Scalars['Int'];
  lead_source: Scalars['Int'];
  name: Scalars['Int'];
  next_step: Scalars['Int'];
  probability: Scalars['Int'];
  sales_stage: Scalars['Int'];
  type: Scalars['Int'];
};

export type OpportunitiesCountOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expected_close_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  next_step?: InputMaybe<SortOrder>;
  probability?: InputMaybe<SortOrder>;
  sales_stage?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type OpportunitiesCreateInput = {
  account_name?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  expected_close_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  lead_source?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  next_step?: InputMaybe<Scalars['String']>;
  probability?: InputMaybe<Scalars['String']>;
  sales_stage?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type OpportunitiesCreateManyInput = {
  account_name?: InputMaybe<Scalars['String']>;
  amount?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  campaign?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  expected_close_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  lead_source?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  next_step?: InputMaybe<Scalars['String']>;
  probability?: InputMaybe<Scalars['String']>;
  sales_stage?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type OpportunitiesGroupBy = {
  __typename?: 'OpportunitiesGroupBy';
  _avg?: Maybe<OpportunitiesAvgAggregate>;
  _count?: Maybe<OpportunitiesCountAggregate>;
  _max?: Maybe<OpportunitiesMaxAggregate>;
  _min?: Maybe<OpportunitiesMinAggregate>;
  _sum?: Maybe<OpportunitiesSumAggregate>;
  account_name?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  expected_close_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  lead_source?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  next_step?: Maybe<Scalars['String']>;
  probability?: Maybe<Scalars['String']>;
  sales_stage?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type OpportunitiesMaxAggregate = {
  __typename?: 'OpportunitiesMaxAggregate';
  account_name?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  expected_close_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  lead_source?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  next_step?: Maybe<Scalars['String']>;
  probability?: Maybe<Scalars['String']>;
  sales_stage?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type OpportunitiesMaxOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expected_close_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  next_step?: InputMaybe<SortOrder>;
  probability?: InputMaybe<SortOrder>;
  sales_stage?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type OpportunitiesMinAggregate = {
  __typename?: 'OpportunitiesMinAggregate';
  account_name?: Maybe<Scalars['String']>;
  amount?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  campaign?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  expected_close_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  lead_source?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  next_step?: Maybe<Scalars['String']>;
  probability?: Maybe<Scalars['String']>;
  sales_stage?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type OpportunitiesMinOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expected_close_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  next_step?: InputMaybe<SortOrder>;
  probability?: InputMaybe<SortOrder>;
  sales_stage?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum OpportunitiesOrderByRelevanceFieldEnum {
  AccountName = 'account_name',
  Amount = 'amount',
  AssignedTo = 'assigned_to',
  Campaign = 'campaign',
  Currency = 'currency',
  Description = 'description',
  ExpectedCloseDate = 'expected_close_date',
  LeadSource = 'lead_source',
  Name = 'name',
  NextStep = 'next_step',
  Probability = 'probability',
  SalesStage = 'sales_stage',
  Type = 'type'
}

export type OpportunitiesOrderByRelevanceInput = {
  fields: Array<OpportunitiesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type OpportunitiesOrderByWithAggregationInput = {
  _avg?: InputMaybe<OpportunitiesAvgOrderByAggregateInput>;
  _count?: InputMaybe<OpportunitiesCountOrderByAggregateInput>;
  _max?: InputMaybe<OpportunitiesMaxOrderByAggregateInput>;
  _min?: InputMaybe<OpportunitiesMinOrderByAggregateInput>;
  _sum?: InputMaybe<OpportunitiesSumOrderByAggregateInput>;
  account_name?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expected_close_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  next_step?: InputMaybe<SortOrder>;
  probability?: InputMaybe<SortOrder>;
  sales_stage?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type OpportunitiesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<OpportunitiesOrderByRelevanceInput>;
  account_name?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  campaign?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expected_close_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  lead_source?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  next_step?: InputMaybe<SortOrder>;
  probability?: InputMaybe<SortOrder>;
  sales_stage?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum OpportunitiesScalarFieldEnum {
  AccountName = 'account_name',
  Amount = 'amount',
  AssignedTo = 'assigned_to',
  Campaign = 'campaign',
  CreatedAt = 'created_at',
  Currency = 'currency',
  Description = 'description',
  ExpectedCloseDate = 'expected_close_date',
  Id = 'id',
  LeadSource = 'lead_source',
  Name = 'name',
  NextStep = 'next_step',
  Probability = 'probability',
  SalesStage = 'sales_stage',
  Type = 'type'
}

export type OpportunitiesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<OpportunitiesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<OpportunitiesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<OpportunitiesScalarWhereWithAggregatesInput>>;
  account_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  amount?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  campaign?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  expected_close_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  lead_source?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  next_step?: InputMaybe<StringNullableWithAggregatesFilter>;
  probability?: InputMaybe<StringNullableWithAggregatesFilter>;
  sales_stage?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OpportunitiesSumAggregate = {
  __typename?: 'OpportunitiesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type OpportunitiesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type OpportunitiesUpdateInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expected_close_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  lead_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  next_step?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  probability?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales_stage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OpportunitiesUpdateManyMutationInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  campaign?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expected_close_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  lead_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  next_step?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  probability?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales_stage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OpportunitiesWhereInput = {
  AND?: InputMaybe<Array<OpportunitiesWhereInput>>;
  NOT?: InputMaybe<Array<OpportunitiesWhereInput>>;
  OR?: InputMaybe<Array<OpportunitiesWhereInput>>;
  account_name?: InputMaybe<StringNullableFilter>;
  amount?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  campaign?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  currency?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expected_close_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  lead_source?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  next_step?: InputMaybe<StringNullableFilter>;
  probability?: InputMaybe<StringNullableFilter>;
  sales_stage?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
};

export type OpportunitiesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Orders = {
  __typename?: 'Orders';
  action?: Maybe<Scalars['Boolean']>;
  allocated_sources?: Maybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  braintree_transaction_source?: Maybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['Int']>;
  grand_total_purchased?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  purchase_date?: Maybe<Scalars['DateTime']>;
  purchase_point?: Maybe<Scalars['Int']>;
  quotes?: Maybe<Scalars['String']>;
  ship_to_name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  transactions?: Maybe<Scalars['String']>;
};

export type OrdersAvgAggregate = {
  __typename?: 'OrdersAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  grand_total_base?: Maybe<Scalars['Float']>;
  grand_total_purchased?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
  purchase_point?: Maybe<Scalars['Float']>;
};

export type OrdersAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
};

export type OrdersCountAggregate = {
  __typename?: 'OrdersCountAggregate';
  _all: Scalars['Int'];
  action: Scalars['Int'];
  allocated_sources: Scalars['Int'];
  bill_to_name: Scalars['Int'];
  braintree_transaction_source: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  grand_total_base: Scalars['Int'];
  grand_total_purchased: Scalars['Int'];
  id: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  purchase_date: Scalars['Int'];
  purchase_point: Scalars['Int'];
  quotes: Scalars['Int'];
  ship_to_name: Scalars['Int'];
  status: Scalars['Int'];
  transactions: Scalars['Int'];
};

export type OrdersCountOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  allocated_sources?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  braintree_transaction_source?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  purchase_date?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  ship_to_name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  transactions?: InputMaybe<SortOrder>;
};

export type OrdersCreateInput = {
  action?: InputMaybe<Scalars['Boolean']>;
  allocated_sources?: InputMaybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  braintree_transaction_source?: InputMaybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  grand_total_base?: InputMaybe<Scalars['Int']>;
  grand_total_purchased?: InputMaybe<Scalars['Int']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  purchase_date?: InputMaybe<Scalars['DateTime']>;
  purchase_point?: InputMaybe<Scalars['Int']>;
  quotes?: InputMaybe<Scalars['String']>;
  ship_to_name?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['Boolean']>;
  transactions?: InputMaybe<Scalars['String']>;
};

export type OrdersCreateManyInput = {
  action?: InputMaybe<Scalars['Boolean']>;
  allocated_sources?: InputMaybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  braintree_transaction_source?: InputMaybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  grand_total_base?: InputMaybe<Scalars['Int']>;
  grand_total_purchased?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  purchase_date?: InputMaybe<Scalars['DateTime']>;
  purchase_point?: InputMaybe<Scalars['Int']>;
  quotes?: InputMaybe<Scalars['String']>;
  ship_to_name?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['Boolean']>;
  transactions?: InputMaybe<Scalars['String']>;
};

export type OrdersGroupBy = {
  __typename?: 'OrdersGroupBy';
  _avg?: Maybe<OrdersAvgAggregate>;
  _count?: Maybe<OrdersCountAggregate>;
  _max?: Maybe<OrdersMaxAggregate>;
  _min?: Maybe<OrdersMinAggregate>;
  _sum?: Maybe<OrdersSumAggregate>;
  action?: Maybe<Scalars['Boolean']>;
  allocated_sources?: Maybe<Scalars['String']>;
  bill_to_name: Scalars['String'];
  braintree_transaction_source?: Maybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['Int']>;
  grand_total_purchased?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  purchase_date?: Maybe<Scalars['DateTime']>;
  purchase_point?: Maybe<Scalars['Int']>;
  quotes?: Maybe<Scalars['String']>;
  ship_to_name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  transactions?: Maybe<Scalars['String']>;
};

export type OrdersMaxAggregate = {
  __typename?: 'OrdersMaxAggregate';
  action?: Maybe<Scalars['Boolean']>;
  allocated_sources?: Maybe<Scalars['String']>;
  bill_to_name?: Maybe<Scalars['String']>;
  braintree_transaction_source?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['Int']>;
  grand_total_purchased?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  purchase_date?: Maybe<Scalars['DateTime']>;
  purchase_point?: Maybe<Scalars['Int']>;
  quotes?: Maybe<Scalars['String']>;
  ship_to_name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  transactions?: Maybe<Scalars['String']>;
};

export type OrdersMaxOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  allocated_sources?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  braintree_transaction_source?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  purchase_date?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  ship_to_name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  transactions?: InputMaybe<SortOrder>;
};

export type OrdersMinAggregate = {
  __typename?: 'OrdersMinAggregate';
  action?: Maybe<Scalars['Boolean']>;
  allocated_sources?: Maybe<Scalars['String']>;
  bill_to_name?: Maybe<Scalars['String']>;
  braintree_transaction_source?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  grand_total_base?: Maybe<Scalars['Int']>;
  grand_total_purchased?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  purchase_date?: Maybe<Scalars['DateTime']>;
  purchase_point?: Maybe<Scalars['Int']>;
  quotes?: Maybe<Scalars['String']>;
  ship_to_name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['Boolean']>;
  transactions?: Maybe<Scalars['String']>;
};

export type OrdersMinOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  allocated_sources?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  braintree_transaction_source?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  purchase_date?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  ship_to_name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  transactions?: InputMaybe<SortOrder>;
};

export enum OrdersOrderByRelevanceFieldEnum {
  AllocatedSources = 'allocated_sources',
  BillToName = 'bill_to_name',
  BraintreeTransactionSource = 'braintree_transaction_source',
  Customers = 'customers',
  Products = 'products',
  Quotes = 'quotes',
  ShipToName = 'ship_to_name',
  Transactions = 'transactions'
}

export type OrdersOrderByRelevanceInput = {
  fields: Array<OrdersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type OrdersOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrdersAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrdersCountOrderByAggregateInput>;
  _max?: InputMaybe<OrdersMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrdersMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrdersSumOrderByAggregateInput>;
  action?: InputMaybe<SortOrder>;
  allocated_sources?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  braintree_transaction_source?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  purchase_date?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  ship_to_name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  transactions?: InputMaybe<SortOrder>;
};

export type OrdersOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<OrdersOrderByRelevanceInput>;
  action?: InputMaybe<SortOrder>;
  allocated_sources?: InputMaybe<SortOrder>;
  bill_to_name?: InputMaybe<SortOrder>;
  braintree_transaction_source?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  purchase_date?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  ship_to_name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  transactions?: InputMaybe<SortOrder>;
};

export enum OrdersScalarFieldEnum {
  Action = 'action',
  AllocatedSources = 'allocated_sources',
  BillToName = 'bill_to_name',
  BraintreeTransactionSource = 'braintree_transaction_source',
  CustId = 'cust_id',
  Customers = 'customers',
  GrandTotalBase = 'grand_total_base',
  GrandTotalPurchased = 'grand_total_purchased',
  Id = 'id',
  ProdId = 'prod_id',
  Products = 'products',
  PurchaseDate = 'purchase_date',
  PurchasePoint = 'purchase_point',
  Quotes = 'quotes',
  ShipToName = 'ship_to_name',
  Status = 'status',
  Transactions = 'transactions'
}

export type OrdersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<OrdersScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<OrdersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<OrdersScalarWhereWithAggregatesInput>>;
  action?: InputMaybe<BoolNullableWithAggregatesFilter>;
  allocated_sources?: InputMaybe<StringNullableWithAggregatesFilter>;
  bill_to_name?: InputMaybe<StringWithAggregatesFilter>;
  braintree_transaction_source?: InputMaybe<StringNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  grand_total_base?: InputMaybe<IntNullableWithAggregatesFilter>;
  grand_total_purchased?: InputMaybe<IntNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  purchase_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  purchase_point?: InputMaybe<IntNullableWithAggregatesFilter>;
  quotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  ship_to_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<BoolNullableWithAggregatesFilter>;
  transactions?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrdersSumAggregate = {
  __typename?: 'OrdersSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  grand_total_base?: Maybe<Scalars['Int']>;
  grand_total_purchased?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  purchase_point?: Maybe<Scalars['Int']>;
};

export type OrdersSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  grand_total_base?: InputMaybe<SortOrder>;
  grand_total_purchased?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  purchase_point?: InputMaybe<SortOrder>;
};

export type OrdersUpdateInput = {
  action?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  allocated_sources?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  braintree_transaction_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_base?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  grand_total_purchased?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  purchase_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  purchase_point?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ship_to_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  transactions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrdersUpdateManyMutationInput = {
  action?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  allocated_sources?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  bill_to_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  braintree_transaction_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total_base?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  grand_total_purchased?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  purchase_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  purchase_point?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ship_to_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  transactions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrdersWhereInput = {
  AND?: InputMaybe<Array<OrdersWhereInput>>;
  NOT?: InputMaybe<Array<OrdersWhereInput>>;
  OR?: InputMaybe<Array<OrdersWhereInput>>;
  action?: InputMaybe<BoolNullableFilter>;
  allocated_sources?: InputMaybe<StringNullableFilter>;
  bill_to_name?: InputMaybe<StringFilter>;
  braintree_transaction_source?: InputMaybe<StringNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  grand_total_base?: InputMaybe<IntNullableFilter>;
  grand_total_purchased?: InputMaybe<IntNullableFilter>;
  id?: InputMaybe<IntFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  purchase_date?: InputMaybe<DateTimeNullableFilter>;
  purchase_point?: InputMaybe<IntNullableFilter>;
  quotes?: InputMaybe<StringNullableFilter>;
  ship_to_name?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<BoolNullableFilter>;
  transactions?: InputMaybe<StringNullableFilter>;
};

export type OrdersWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Pages = {
  __typename?: 'Pages';
  content?: Maybe<Scalars['String']>;
  content_title?: Maybe<Scalars['String']>;
  enable_page?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  url_key?: Maybe<Scalars['String']>;
};

export type PagesAvgAggregate = {
  __typename?: 'PagesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PagesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PagesCountAggregate = {
  __typename?: 'PagesCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  content_title: Scalars['Int'];
  enable_page: Scalars['Int'];
  id: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_keywords: Scalars['Int'];
  meta_title: Scalars['Int'];
  title: Scalars['Int'];
  url_key: Scalars['Int'];
};

export type PagesCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  content_title?: InputMaybe<SortOrder>;
  enable_page?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  url_key?: InputMaybe<SortOrder>;
};

export type PagesCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  content_title?: InputMaybe<Scalars['String']>;
  enable_page?: InputMaybe<Scalars['Boolean']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  title: Scalars['String'];
  url_key?: InputMaybe<Scalars['String']>;
};

export type PagesCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  content_title?: InputMaybe<Scalars['String']>;
  enable_page?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  title: Scalars['String'];
  url_key?: InputMaybe<Scalars['String']>;
};

export type PagesGroupBy = {
  __typename?: 'PagesGroupBy';
  _avg?: Maybe<PagesAvgAggregate>;
  _count?: Maybe<PagesCountAggregate>;
  _max?: Maybe<PagesMaxAggregate>;
  _min?: Maybe<PagesMinAggregate>;
  _sum?: Maybe<PagesSumAggregate>;
  content?: Maybe<Scalars['String']>;
  content_title?: Maybe<Scalars['String']>;
  enable_page?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  url_key?: Maybe<Scalars['String']>;
};

export type PagesMaxAggregate = {
  __typename?: 'PagesMaxAggregate';
  content?: Maybe<Scalars['String']>;
  content_title?: Maybe<Scalars['String']>;
  enable_page?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  url_key?: Maybe<Scalars['String']>;
};

export type PagesMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  content_title?: InputMaybe<SortOrder>;
  enable_page?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  url_key?: InputMaybe<SortOrder>;
};

export type PagesMinAggregate = {
  __typename?: 'PagesMinAggregate';
  content?: Maybe<Scalars['String']>;
  content_title?: Maybe<Scalars['String']>;
  enable_page?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  url_key?: Maybe<Scalars['String']>;
};

export type PagesMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  content_title?: InputMaybe<SortOrder>;
  enable_page?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  url_key?: InputMaybe<SortOrder>;
};

export enum PagesOrderByRelevanceFieldEnum {
  Content = 'content',
  ContentTitle = 'content_title',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  Title = 'title',
  UrlKey = 'url_key'
}

export type PagesOrderByRelevanceInput = {
  fields: Array<PagesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PagesOrderByWithAggregationInput = {
  _avg?: InputMaybe<PagesAvgOrderByAggregateInput>;
  _count?: InputMaybe<PagesCountOrderByAggregateInput>;
  _max?: InputMaybe<PagesMaxOrderByAggregateInput>;
  _min?: InputMaybe<PagesMinOrderByAggregateInput>;
  _sum?: InputMaybe<PagesSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  content_title?: InputMaybe<SortOrder>;
  enable_page?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  url_key?: InputMaybe<SortOrder>;
};

export type PagesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PagesOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  content_title?: InputMaybe<SortOrder>;
  enable_page?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  url_key?: InputMaybe<SortOrder>;
};

export enum PagesScalarFieldEnum {
  Content = 'content',
  ContentTitle = 'content_title',
  EnablePage = 'enable_page',
  Id = 'id',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  Title = 'title',
  UrlKey = 'url_key'
}

export type PagesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PagesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PagesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PagesScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  content_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  enable_page?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_keywords?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  title?: InputMaybe<StringWithAggregatesFilter>;
  url_key?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PagesSumAggregate = {
  __typename?: 'PagesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type PagesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PagesUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  enable_page?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<StringFieldUpdateOperationsInput>;
  url_key?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PagesUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  enable_page?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<StringFieldUpdateOperationsInput>;
  url_key?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PagesWhereInput = {
  AND?: InputMaybe<Array<PagesWhereInput>>;
  NOT?: InputMaybe<Array<PagesWhereInput>>;
  OR?: InputMaybe<Array<PagesWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  content_title?: InputMaybe<StringNullableFilter>;
  enable_page?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<IntFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_keywords?: InputMaybe<StringNullableFilter>;
  meta_title?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringFilter>;
  url_key?: InputMaybe<StringNullableFilter>;
};

export type PagesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Partners = {
  __typename?: 'Partners';
  address?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type PartnersAvgAggregate = {
  __typename?: 'PartnersAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PartnersAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PartnersCountAggregate = {
  __typename?: 'PartnersCountAggregate';
  _all: Scalars['Int'];
  address: Scalars['Int'];
  business_type: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  name: Scalars['Int'];
  state: Scalars['Int'];
};

export type PartnersCountOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  business_type?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type PartnersCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  business_type?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type PartnersCreateManyInput = {
  address?: InputMaybe<Scalars['String']>;
  business_type?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type PartnersGroupBy = {
  __typename?: 'PartnersGroupBy';
  _avg?: Maybe<PartnersAvgAggregate>;
  _count?: Maybe<PartnersCountAggregate>;
  _max?: Maybe<PartnersMaxAggregate>;
  _min?: Maybe<PartnersMinAggregate>;
  _sum?: Maybe<PartnersSumAggregate>;
  address?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type PartnersMaxAggregate = {
  __typename?: 'PartnersMaxAggregate';
  address?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type PartnersMaxOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  business_type?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type PartnersMinAggregate = {
  __typename?: 'PartnersMinAggregate';
  address?: Maybe<Scalars['String']>;
  business_type?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
};

export type PartnersMinOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  business_type?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum PartnersOrderByRelevanceFieldEnum {
  Address = 'address',
  BusinessType = 'business_type',
  City = 'city',
  Country = 'country',
  IsPublic = 'isPublic',
  Name = 'name',
  State = 'state'
}

export type PartnersOrderByRelevanceInput = {
  fields: Array<PartnersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PartnersOrderByWithAggregationInput = {
  _avg?: InputMaybe<PartnersAvgOrderByAggregateInput>;
  _count?: InputMaybe<PartnersCountOrderByAggregateInput>;
  _max?: InputMaybe<PartnersMaxOrderByAggregateInput>;
  _min?: InputMaybe<PartnersMinOrderByAggregateInput>;
  _sum?: InputMaybe<PartnersSumOrderByAggregateInput>;
  address?: InputMaybe<SortOrder>;
  business_type?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export type PartnersOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PartnersOrderByRelevanceInput>;
  address?: InputMaybe<SortOrder>;
  business_type?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
};

export enum PartnersScalarFieldEnum {
  Address = 'address',
  BusinessType = 'business_type',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  Id = 'id',
  IsPublic = 'isPublic',
  Name = 'name',
  State = 'state'
}

export type PartnersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PartnersScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PartnersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PartnersScalarWhereWithAggregatesInput>>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  business_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PartnersSumAggregate = {
  __typename?: 'PartnersSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type PartnersSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PartnersUpdateInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PartnersUpdateManyMutationInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PartnersWhereInput = {
  AND?: InputMaybe<Array<PartnersWhereInput>>;
  NOT?: InputMaybe<Array<PartnersWhereInput>>;
  OR?: InputMaybe<Array<PartnersWhereInput>>;
  address?: InputMaybe<StringNullableFilter>;
  business_type?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
};

export type PartnersWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Payments = {
  __typename?: 'Payments';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type PaymentsAvgAggregate = {
  __typename?: 'PaymentsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PaymentsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PaymentsCountAggregate = {
  __typename?: 'PaymentsCountAggregate';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  host_uri: Scalars['Int'];
  icon: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  redirect_url: Scalars['Int'];
  redirect_url_app: Scalars['Int'];
};

export type PaymentsCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type PaymentsCreateInput = {
  active?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  host_uri?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  redirect_url?: InputMaybe<Scalars['String']>;
  redirect_url_app?: InputMaybe<Scalars['String']>;
};

export type PaymentsCreateManyInput = {
  active?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  host_uri?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  redirect_url?: InputMaybe<Scalars['String']>;
  redirect_url_app?: InputMaybe<Scalars['String']>;
};

export type PaymentsGroupBy = {
  __typename?: 'PaymentsGroupBy';
  _avg?: Maybe<PaymentsAvgAggregate>;
  _count?: Maybe<PaymentsCountAggregate>;
  _max?: Maybe<PaymentsMaxAggregate>;
  _min?: Maybe<PaymentsMinAggregate>;
  _sum?: Maybe<PaymentsSumAggregate>;
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type PaymentsMaxAggregate = {
  __typename?: 'PaymentsMaxAggregate';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type PaymentsMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type PaymentsMinAggregate = {
  __typename?: 'PaymentsMinAggregate';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type PaymentsMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export enum PaymentsOrderByRelevanceFieldEnum {
  Active = 'active',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  HostUri = 'host_uri',
  Icon = 'icon',
  Name = 'name',
  RedirectUrl = 'redirect_url',
  RedirectUrlApp = 'redirect_url_app'
}

export type PaymentsOrderByRelevanceInput = {
  fields: Array<PaymentsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PaymentsOrderByWithAggregationInput = {
  _avg?: InputMaybe<PaymentsAvgOrderByAggregateInput>;
  _count?: InputMaybe<PaymentsCountOrderByAggregateInput>;
  _max?: InputMaybe<PaymentsMaxOrderByAggregateInput>;
  _min?: InputMaybe<PaymentsMinOrderByAggregateInput>;
  _sum?: InputMaybe<PaymentsSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type PaymentsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PaymentsOrderByRelevanceInput>;
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export enum PaymentsScalarFieldEnum {
  Active = 'active',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  CreatedAt = 'created_at',
  HostUri = 'host_uri',
  Icon = 'icon',
  Id = 'id',
  Name = 'name',
  RedirectUrl = 'redirect_url',
  RedirectUrlApp = 'redirect_url_app'
}

export type PaymentsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PaymentsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PaymentsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PaymentsScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  host_uri?: InputMaybe<StringNullableWithAggregatesFilter>;
  icon?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  redirect_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  redirect_url_app?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PaymentsSumAggregate = {
  __typename?: 'PaymentsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type PaymentsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PaymentsUpdateInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  host_uri?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  redirect_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redirect_url_app?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PaymentsUpdateManyMutationInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  host_uri?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  redirect_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redirect_url_app?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PaymentsWhereInput = {
  AND?: InputMaybe<Array<PaymentsWhereInput>>;
  NOT?: InputMaybe<Array<PaymentsWhereInput>>;
  OR?: InputMaybe<Array<PaymentsWhereInput>>;
  active?: InputMaybe<StringNullableFilter>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  host_uri?: InputMaybe<StringNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringFilter>;
  redirect_url?: InputMaybe<StringNullableFilter>;
  redirect_url_app?: InputMaybe<StringNullableFilter>;
};

export type PaymentsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Permissions = {
  __typename?: 'Permissions';
  content?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  read?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PermissionsAvgAggregate = {
  __typename?: 'PermissionsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PermissionsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PermissionsCountAggregate = {
  __typename?: 'PermissionsCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  create: Scalars['Int'];
  created_at: Scalars['Int'];
  delete: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  read: Scalars['Int'];
  role: Scalars['Int'];
  update: Scalars['Int'];
  users: Scalars['Int'];
};

export type PermissionsCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  read?: InputMaybe<SortOrder>;
  role?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PermissionsCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  create?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  delete?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  read?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type PermissionsCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  create?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  delete?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  read?: InputMaybe<Scalars['String']>;
  role?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type PermissionsGroupBy = {
  __typename?: 'PermissionsGroupBy';
  _avg?: Maybe<PermissionsAvgAggregate>;
  _count?: Maybe<PermissionsCountAggregate>;
  _max?: Maybe<PermissionsMaxAggregate>;
  _min?: Maybe<PermissionsMinAggregate>;
  _sum?: Maybe<PermissionsSumAggregate>;
  content?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  read?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PermissionsMaxAggregate = {
  __typename?: 'PermissionsMaxAggregate';
  content?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  read?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PermissionsMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  read?: InputMaybe<SortOrder>;
  role?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PermissionsMinAggregate = {
  __typename?: 'PermissionsMinAggregate';
  content?: Maybe<Scalars['String']>;
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  read?: Maybe<Scalars['String']>;
  role?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PermissionsMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  read?: InputMaybe<SortOrder>;
  role?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum PermissionsOrderByRelevanceFieldEnum {
  Content = 'content',
  Create = 'create',
  Delete = 'delete',
  Name = 'name',
  Read = 'read',
  Role = 'role',
  Update = 'update',
  Users = 'users'
}

export type PermissionsOrderByRelevanceInput = {
  fields: Array<PermissionsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PermissionsOrderByWithAggregationInput = {
  _avg?: InputMaybe<PermissionsAvgOrderByAggregateInput>;
  _count?: InputMaybe<PermissionsCountOrderByAggregateInput>;
  _max?: InputMaybe<PermissionsMaxOrderByAggregateInput>;
  _min?: InputMaybe<PermissionsMinOrderByAggregateInput>;
  _sum?: InputMaybe<PermissionsSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  read?: InputMaybe<SortOrder>;
  role?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PermissionsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PermissionsOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  read?: InputMaybe<SortOrder>;
  role?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum PermissionsScalarFieldEnum {
  Content = 'content',
  Create = 'create',
  CreatedAt = 'created_at',
  Delete = 'delete',
  Id = 'id',
  Name = 'name',
  Read = 'read',
  Role = 'role',
  Update = 'update',
  Users = 'users'
}

export type PermissionsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PermissionsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PermissionsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PermissionsScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  create?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  delete?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  read?: InputMaybe<StringNullableWithAggregatesFilter>;
  role?: InputMaybe<StringNullableWithAggregatesFilter>;
  update?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PermissionsSumAggregate = {
  __typename?: 'PermissionsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type PermissionsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PermissionsUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  create?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delete?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  read?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  update?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PermissionsUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  create?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delete?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  read?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  role?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  update?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PermissionsWhereInput = {
  AND?: InputMaybe<Array<PermissionsWhereInput>>;
  NOT?: InputMaybe<Array<PermissionsWhereInput>>;
  OR?: InputMaybe<Array<PermissionsWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  create?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  delete?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  read?: InputMaybe<StringNullableFilter>;
  role?: InputMaybe<StringNullableFilter>;
  update?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type PermissionsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Plugins = {
  __typename?: 'Plugins';
  agree_terms?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  github_link?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  last_updated?: Maybe<Scalars['DateTime']>;
  logo?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  publisher_email?: Maybe<Scalars['String']>;
  publisher_name?: Maybe<Scalars['String']>;
  screenshots?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PluginsAvgAggregate = {
  __typename?: 'PluginsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PluginsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PluginsCountAggregate = {
  __typename?: 'PluginsCountAggregate';
  _all: Scalars['Int'];
  agree_terms: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  github_link: Scalars['Int'];
  id: Scalars['Int'];
  last_updated: Scalars['Int'];
  logo: Scalars['Int'];
  name: Scalars['Int'];
  publisher_email: Scalars['Int'];
  publisher_name: Scalars['Int'];
  screenshots: Scalars['Int'];
  url: Scalars['Int'];
};

export type PluginsCountOrderByAggregateInput = {
  agree_terms?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  github_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_updated?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publisher_email?: InputMaybe<SortOrder>;
  publisher_name?: InputMaybe<SortOrder>;
  screenshots?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type PluginsCreateInput = {
  agree_terms?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  github_link?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  last_updated?: InputMaybe<Scalars['DateTime']>;
  logo?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  publisher_email?: InputMaybe<Scalars['String']>;
  publisher_name?: InputMaybe<Scalars['String']>;
  screenshots?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PluginsCreateManyInput = {
  agree_terms?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  github_link?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  last_updated?: InputMaybe<Scalars['DateTime']>;
  logo?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  publisher_email?: InputMaybe<Scalars['String']>;
  publisher_name?: InputMaybe<Scalars['String']>;
  screenshots?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PluginsGroupBy = {
  __typename?: 'PluginsGroupBy';
  _avg?: Maybe<PluginsAvgAggregate>;
  _count?: Maybe<PluginsCountAggregate>;
  _max?: Maybe<PluginsMaxAggregate>;
  _min?: Maybe<PluginsMinAggregate>;
  _sum?: Maybe<PluginsSumAggregate>;
  agree_terms?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  github_link?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  last_updated?: Maybe<Scalars['DateTime']>;
  logo?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  publisher_email?: Maybe<Scalars['String']>;
  publisher_name?: Maybe<Scalars['String']>;
  screenshots?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PluginsMaxAggregate = {
  __typename?: 'PluginsMaxAggregate';
  agree_terms?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  github_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  last_updated?: Maybe<Scalars['DateTime']>;
  logo?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  publisher_email?: Maybe<Scalars['String']>;
  publisher_name?: Maybe<Scalars['String']>;
  screenshots?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PluginsMaxOrderByAggregateInput = {
  agree_terms?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  github_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_updated?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publisher_email?: InputMaybe<SortOrder>;
  publisher_name?: InputMaybe<SortOrder>;
  screenshots?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type PluginsMinAggregate = {
  __typename?: 'PluginsMinAggregate';
  agree_terms?: Maybe<Scalars['Boolean']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  github_link?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  last_updated?: Maybe<Scalars['DateTime']>;
  logo?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  publisher_email?: Maybe<Scalars['String']>;
  publisher_name?: Maybe<Scalars['String']>;
  screenshots?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type PluginsMinOrderByAggregateInput = {
  agree_terms?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  github_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_updated?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publisher_email?: InputMaybe<SortOrder>;
  publisher_name?: InputMaybe<SortOrder>;
  screenshots?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum PluginsOrderByRelevanceFieldEnum {
  Description = 'description',
  GithubLink = 'github_link',
  Logo = 'logo',
  Name = 'name',
  PublisherEmail = 'publisher_email',
  PublisherName = 'publisher_name',
  Screenshots = 'screenshots',
  Url = 'url'
}

export type PluginsOrderByRelevanceInput = {
  fields: Array<PluginsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PluginsOrderByWithAggregationInput = {
  _avg?: InputMaybe<PluginsAvgOrderByAggregateInput>;
  _count?: InputMaybe<PluginsCountOrderByAggregateInput>;
  _max?: InputMaybe<PluginsMaxOrderByAggregateInput>;
  _min?: InputMaybe<PluginsMinOrderByAggregateInput>;
  _sum?: InputMaybe<PluginsSumOrderByAggregateInput>;
  agree_terms?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  github_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_updated?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publisher_email?: InputMaybe<SortOrder>;
  publisher_name?: InputMaybe<SortOrder>;
  screenshots?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type PluginsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PluginsOrderByRelevanceInput>;
  agree_terms?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  github_link?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_updated?: InputMaybe<SortOrder>;
  logo?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publisher_email?: InputMaybe<SortOrder>;
  publisher_name?: InputMaybe<SortOrder>;
  screenshots?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum PluginsScalarFieldEnum {
  AgreeTerms = 'agree_terms',
  CreatedAt = 'created_at',
  Description = 'description',
  GithubLink = 'github_link',
  Id = 'id',
  LastUpdated = 'last_updated',
  Logo = 'logo',
  Name = 'name',
  PublisherEmail = 'publisher_email',
  PublisherName = 'publisher_name',
  Screenshots = 'screenshots',
  Url = 'url'
}

export type PluginsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PluginsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PluginsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PluginsScalarWhereWithAggregatesInput>>;
  agree_terms?: InputMaybe<BoolNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  github_link?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  last_updated?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  logo?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  publisher_email?: InputMaybe<StringNullableWithAggregatesFilter>;
  publisher_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  screenshots?: InputMaybe<StringNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PluginsSumAggregate = {
  __typename?: 'PluginsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type PluginsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PluginsUpdateInput = {
  agree_terms?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  github_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  last_updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  logo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publisher_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publisher_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  screenshots?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PluginsUpdateManyMutationInput = {
  agree_terms?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  github_link?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  last_updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  logo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publisher_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  publisher_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  screenshots?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PluginsWhereInput = {
  AND?: InputMaybe<Array<PluginsWhereInput>>;
  NOT?: InputMaybe<Array<PluginsWhereInput>>;
  OR?: InputMaybe<Array<PluginsWhereInput>>;
  agree_terms?: InputMaybe<BoolNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  github_link?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  last_updated?: InputMaybe<DateTimeNullableFilter>;
  logo?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  publisher_email?: InputMaybe<StringNullableFilter>;
  publisher_name?: InputMaybe<StringNullableFilter>;
  screenshots?: InputMaybe<StringNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type PluginsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Polls = {
  __typename?: 'Polls';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  question?: Maybe<Scalars['String']>;
  response?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PollsAvgAggregate = {
  __typename?: 'PollsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type PollsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PollsCountAggregate = {
  __typename?: 'PollsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  excerpt: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  published: Scalars['Int'];
  question: Scalars['Int'];
  response: Scalars['Int'];
  users: Scalars['Int'];
};

export type PollsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  question?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PollsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  question?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type PollsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  question?: InputMaybe<Scalars['String']>;
  response?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type PollsGroupBy = {
  __typename?: 'PollsGroupBy';
  _avg?: Maybe<PollsAvgAggregate>;
  _count?: Maybe<PollsCountAggregate>;
  _max?: Maybe<PollsMaxAggregate>;
  _min?: Maybe<PollsMinAggregate>;
  _sum?: Maybe<PollsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  question?: Maybe<Scalars['String']>;
  response?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PollsMaxAggregate = {
  __typename?: 'PollsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  question?: Maybe<Scalars['String']>;
  response?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PollsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  question?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PollsMinAggregate = {
  __typename?: 'PollsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  question?: Maybe<Scalars['String']>;
  response?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type PollsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  question?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum PollsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Description = 'description',
  Excerpt = 'excerpt',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Question = 'question',
  Response = 'response',
  Users = 'users'
}

export type PollsOrderByRelevanceInput = {
  fields: Array<PollsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type PollsOrderByWithAggregationInput = {
  _avg?: InputMaybe<PollsAvgOrderByAggregateInput>;
  _count?: InputMaybe<PollsCountOrderByAggregateInput>;
  _max?: InputMaybe<PollsMaxOrderByAggregateInput>;
  _min?: InputMaybe<PollsMinOrderByAggregateInput>;
  _sum?: InputMaybe<PollsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  question?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type PollsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<PollsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  question?: InputMaybe<SortOrder>;
  response?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum PollsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Description = 'description',
  Excerpt = 'excerpt',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Published = 'published',
  Question = 'question',
  Response = 'response',
  Users = 'users'
}

export type PollsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PollsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PollsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PollsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  question?: InputMaybe<StringNullableWithAggregatesFilter>;
  response?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PollsSumAggregate = {
  __typename?: 'PollsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type PollsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type PollsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  question?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  response?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PollsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  question?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  response?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PollsWhereInput = {
  AND?: InputMaybe<Array<PollsWhereInput>>;
  NOT?: InputMaybe<Array<PollsWhereInput>>;
  OR?: InputMaybe<Array<PollsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  question?: InputMaybe<StringNullableFilter>;
  response?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type PollsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Product_Types = {
  __typename?: 'Product_types';
  filter_options?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  isShippable?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_type?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  taxes?: Maybe<Scalars['String']>;
  type_name?: Maybe<Scalars['String']>;
};

export type Product_TypesAvgAggregate = {
  __typename?: 'Product_typesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type Product_TypesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Product_TypesCountAggregate = {
  __typename?: 'Product_typesCountAggregate';
  _all: Scalars['Int'];
  filter_options: Scalars['Int'];
  id: Scalars['Int'];
  isShippable: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_url: Scalars['Int'];
  prod_id: Scalars['Int'];
  product_type: Scalars['Int'];
  products: Scalars['Int'];
  taxes: Scalars['Int'];
  type_name: Scalars['Int'];
};

export type Product_TypesCountOrderByAggregateInput = {
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isShippable?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_type?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<SortOrder>;
  type_name?: InputMaybe<SortOrder>;
};

export type Product_TypesCreateInput = {
  filter_options?: InputMaybe<Scalars['String']>;
  isShippable?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_type?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<Scalars['String']>;
  type_name?: InputMaybe<Scalars['String']>;
};

export type Product_TypesCreateManyInput = {
  filter_options?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  isShippable?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_type?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<Scalars['String']>;
  type_name?: InputMaybe<Scalars['String']>;
};

export type Product_TypesGroupBy = {
  __typename?: 'Product_typesGroupBy';
  _avg?: Maybe<Product_TypesAvgAggregate>;
  _count?: Maybe<Product_TypesCountAggregate>;
  _max?: Maybe<Product_TypesMaxAggregate>;
  _min?: Maybe<Product_TypesMinAggregate>;
  _sum?: Maybe<Product_TypesSumAggregate>;
  filter_options?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  isShippable?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  product_type?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  taxes?: Maybe<Scalars['String']>;
  type_name?: Maybe<Scalars['String']>;
};

export type Product_TypesMaxAggregate = {
  __typename?: 'Product_typesMaxAggregate';
  filter_options?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  isShippable?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  product_type?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  taxes?: Maybe<Scalars['String']>;
  type_name?: Maybe<Scalars['String']>;
};

export type Product_TypesMaxOrderByAggregateInput = {
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isShippable?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_type?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<SortOrder>;
  type_name?: InputMaybe<SortOrder>;
};

export type Product_TypesMinAggregate = {
  __typename?: 'Product_typesMinAggregate';
  filter_options?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  isShippable?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  product_type?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  taxes?: Maybe<Scalars['String']>;
  type_name?: Maybe<Scalars['String']>;
};

export type Product_TypesMinOrderByAggregateInput = {
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isShippable?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_type?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<SortOrder>;
  type_name?: InputMaybe<SortOrder>;
};

export enum Product_TypesOrderByRelevanceFieldEnum {
  FilterOptions = 'filter_options',
  IsShippable = 'isShippable',
  MetaDescription = 'meta_description',
  MetaUrl = 'meta_url',
  ProductType = 'product_type',
  Products = 'products',
  Taxes = 'taxes',
  TypeName = 'type_name'
}

export type Product_TypesOrderByRelevanceInput = {
  fields: Array<Product_TypesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Product_TypesOrderByWithAggregationInput = {
  _avg?: InputMaybe<Product_TypesAvgOrderByAggregateInput>;
  _count?: InputMaybe<Product_TypesCountOrderByAggregateInput>;
  _max?: InputMaybe<Product_TypesMaxOrderByAggregateInput>;
  _min?: InputMaybe<Product_TypesMinOrderByAggregateInput>;
  _sum?: InputMaybe<Product_TypesSumOrderByAggregateInput>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isShippable?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_type?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<SortOrder>;
  type_name?: InputMaybe<SortOrder>;
};

export type Product_TypesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Product_TypesOrderByRelevanceInput>;
  filter_options?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isShippable?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  product_type?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<SortOrder>;
  type_name?: InputMaybe<SortOrder>;
};

export enum Product_TypesScalarFieldEnum {
  FilterOptions = 'filter_options',
  Id = 'id',
  IsShippable = 'isShippable',
  MetaDescription = 'meta_description',
  MetaUrl = 'meta_url',
  ProdId = 'prod_id',
  ProductType = 'product_type',
  Products = 'products',
  Taxes = 'taxes',
  TypeName = 'type_name'
}

export type Product_TypesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Product_TypesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Product_TypesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Product_TypesScalarWhereWithAggregatesInput>>;
  filter_options?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  isShippable?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  product_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  taxes?: InputMaybe<StringNullableWithAggregatesFilter>;
  type_name?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Product_TypesSumAggregate = {
  __typename?: 'Product_typesSumAggregate';
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type Product_TypesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Product_TypesUpdateInput = {
  filter_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isShippable?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  product_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Product_TypesUpdateManyMutationInput = {
  filter_options?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isShippable?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  product_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Product_TypesWhereInput = {
  AND?: InputMaybe<Array<Product_TypesWhereInput>>;
  NOT?: InputMaybe<Array<Product_TypesWhereInput>>;
  OR?: InputMaybe<Array<Product_TypesWhereInput>>;
  filter_options?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  isShippable?: InputMaybe<StringNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_url?: InputMaybe<StringNullableFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  product_type?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  taxes?: InputMaybe<StringNullableFilter>;
  type_name?: InputMaybe<StringNullableFilter>;
};

export type Product_TypesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Products = {
  __typename?: 'Products';
  attributes?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  contract?: Maybe<Scalars['String']>;
  cost_string?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_type?: Maybe<Scalars['String']>;
  family?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  manufacture?: Maybe<Scalars['String']>;
  manufacturer?: Maybe<Scalars['String']>;
  manufacturer_part_number?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  occassions?: Maybe<Scalars['String']>;
  occassions_occassionsToproducts?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  other_products?: Maybe<Scalars['String']>;
  part_number?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  product_attribute?: Maybe<Scalars['String']>;
  product_types?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity_per_source?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  related_product?: Maybe<Scalars['BigInt']>;
  returns?: Maybe<Scalars['String']>;
  salable_quantity?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  sku: Scalars['BigInt'];
  status?: Maybe<Scalars['Boolean']>;
  stock_status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
  tax_rule?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  types?: Maybe<Scalars['String']>;
  variants?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProductsAvgAggregate = {
  __typename?: 'ProductsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  related_product?: Maybe<Scalars['Float']>;
  sku?: Maybe<Scalars['Float']>;
};

export type ProductsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
};

export type ProductsCountAggregate = {
  __typename?: 'ProductsCountAggregate';
  _all: Scalars['Int'];
  attributes: Scalars['Int'];
  brand: Scalars['Int'];
  brands: Scalars['Int'];
  categories: Scalars['Int'];
  content: Scalars['Int'];
  contract: Scalars['Int'];
  cost_string: Scalars['Int'];
  country: Scalars['Int'];
  coupons: Scalars['Int'];
  created_at: Scalars['Int'];
  credit_memos: Scalars['Int'];
  customer_type: Scalars['Int'];
  family: Scalars['Int'];
  file: Scalars['Int'];
  format: Scalars['Int'];
  height: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  manufacture: Scalars['Int'];
  manufacturer: Scalars['Int'];
  manufacturer_part_number: Scalars['Int'];
  mediamanager: Scalars['Int'];
  meta_description: Scalars['Int'];
  meta_keywords: Scalars['Int'];
  meta_title: Scalars['Int'];
  meta_url: Scalars['Int'];
  name: Scalars['Int'];
  occassions: Scalars['Int'];
  occassions_occassionsToproducts: Scalars['Int'];
  orders: Scalars['Int'];
  other_products: Scalars['Int'];
  part_number: Scalars['Int'];
  price: Scalars['Int'];
  product: Scalars['Int'];
  product_attribute: Scalars['Int'];
  product_types: Scalars['Int'];
  products: Scalars['Int'];
  quantity_per_source: Scalars['Int'];
  quotes: Scalars['Int'];
  rating: Scalars['Int'];
  related_product: Scalars['Int'];
  returns: Scalars['Int'];
  salable_quantity: Scalars['Int'];
  short_description: Scalars['Int'];
  size: Scalars['Int'];
  sku: Scalars['Int'];
  status: Scalars['Int'];
  stock_status: Scalars['Int'];
  tags: Scalars['Int'];
  tax_class: Scalars['Int'];
  tax_rate: Scalars['Int'];
  tax_rule: Scalars['Int'];
  thumbnail: Scalars['Int'];
  trainings: Scalars['Int'];
  types: Scalars['Int'];
  variants: Scalars['Int'];
  visibility: Scalars['Int'];
  websites: Scalars['Int'];
  weight: Scalars['Int'];
  workspaces: Scalars['Int'];
  zone: Scalars['Int'];
};

export type ProductsCountOrderByAggregateInput = {
  attributes?: InputMaybe<SortOrder>;
  brand?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contract?: InputMaybe<SortOrder>;
  cost_string?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_type?: InputMaybe<SortOrder>;
  family?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  format?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  manufacture?: InputMaybe<SortOrder>;
  manufacturer?: InputMaybe<SortOrder>;
  manufacturer_part_number?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  occassions_occassionsToproducts?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  other_products?: InputMaybe<SortOrder>;
  part_number?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  product_attribute?: InputMaybe<SortOrder>;
  product_types?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity_per_source?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  salable_quantity?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  stock_status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
  tax_rule?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  types?: InputMaybe<SortOrder>;
  variants?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProductsCreateInput = {
  attributes?: InputMaybe<Scalars['String']>;
  brand?: InputMaybe<Scalars['String']>;
  brands?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  cost_string?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  credit_memos?: InputMaybe<Scalars['String']>;
  customer_type?: InputMaybe<Scalars['String']>;
  family?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  format?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  manufacture?: InputMaybe<Scalars['String']>;
  manufacturer?: InputMaybe<Scalars['String']>;
  manufacturer_part_number?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  occassions?: InputMaybe<Scalars['String']>;
  occassions_occassionsToproducts?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<Scalars['String']>;
  other_products?: InputMaybe<Scalars['String']>;
  part_number?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  product_attribute?: InputMaybe<Scalars['String']>;
  product_types?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity_per_source?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  rating?: InputMaybe<Scalars['String']>;
  related_product?: InputMaybe<Scalars['BigInt']>;
  returns?: InputMaybe<Scalars['String']>;
  salable_quantity?: InputMaybe<Scalars['String']>;
  short_description?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  sku: Scalars['BigInt'];
  status?: InputMaybe<Scalars['Boolean']>;
  stock_status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  tax_class?: InputMaybe<Scalars['String']>;
  tax_rate?: InputMaybe<Scalars['String']>;
  tax_rule?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Scalars['String']>;
  variants?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zone?: InputMaybe<Scalars['String']>;
};

export type ProductsCreateManyInput = {
  attributes?: InputMaybe<Scalars['String']>;
  brand?: InputMaybe<Scalars['String']>;
  brands?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  contract?: InputMaybe<Scalars['String']>;
  cost_string?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  credit_memos?: InputMaybe<Scalars['String']>;
  customer_type?: InputMaybe<Scalars['String']>;
  family?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  format?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  manufacture?: InputMaybe<Scalars['String']>;
  manufacturer?: InputMaybe<Scalars['String']>;
  manufacturer_part_number?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  meta_description?: InputMaybe<Scalars['String']>;
  meta_keywords?: InputMaybe<Scalars['String']>;
  meta_title?: InputMaybe<Scalars['String']>;
  meta_url?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  occassions?: InputMaybe<Scalars['String']>;
  occassions_occassionsToproducts?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<Scalars['String']>;
  other_products?: InputMaybe<Scalars['String']>;
  part_number?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  product_attribute?: InputMaybe<Scalars['String']>;
  product_types?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity_per_source?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  rating?: InputMaybe<Scalars['String']>;
  related_product?: InputMaybe<Scalars['BigInt']>;
  returns?: InputMaybe<Scalars['String']>;
  salable_quantity?: InputMaybe<Scalars['String']>;
  short_description?: InputMaybe<Scalars['String']>;
  size?: InputMaybe<Scalars['String']>;
  sku: Scalars['BigInt'];
  status?: InputMaybe<Scalars['Boolean']>;
  stock_status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  tax_class?: InputMaybe<Scalars['String']>;
  tax_rate?: InputMaybe<Scalars['String']>;
  tax_rule?: InputMaybe<Scalars['String']>;
  thumbnail?: InputMaybe<Scalars['String']>;
  trainings?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<Scalars['String']>;
  variants?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zone?: InputMaybe<Scalars['String']>;
};

export type ProductsGroupBy = {
  __typename?: 'ProductsGroupBy';
  _avg?: Maybe<ProductsAvgAggregate>;
  _count?: Maybe<ProductsCountAggregate>;
  _max?: Maybe<ProductsMaxAggregate>;
  _min?: Maybe<ProductsMinAggregate>;
  _sum?: Maybe<ProductsSumAggregate>;
  attributes?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  contract?: Maybe<Scalars['String']>;
  cost_string?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_type?: Maybe<Scalars['String']>;
  family?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  manufacture?: Maybe<Scalars['String']>;
  manufacturer?: Maybe<Scalars['String']>;
  manufacturer_part_number?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  occassions?: Maybe<Scalars['String']>;
  occassions_occassionsToproducts?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  other_products?: Maybe<Scalars['String']>;
  part_number?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  product_attribute?: Maybe<Scalars['String']>;
  product_types?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity_per_source?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  related_product?: Maybe<Scalars['BigInt']>;
  returns?: Maybe<Scalars['String']>;
  salable_quantity?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  sku: Scalars['BigInt'];
  status?: Maybe<Scalars['Boolean']>;
  stock_status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
  tax_rule?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  types?: Maybe<Scalars['String']>;
  variants?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProductsMaxAggregate = {
  __typename?: 'ProductsMaxAggregate';
  attributes?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  contract?: Maybe<Scalars['String']>;
  cost_string?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_type?: Maybe<Scalars['String']>;
  family?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  manufacture?: Maybe<Scalars['String']>;
  manufacturer?: Maybe<Scalars['String']>;
  manufacturer_part_number?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  occassions_occassionsToproducts?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  other_products?: Maybe<Scalars['String']>;
  part_number?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  product_attribute?: Maybe<Scalars['String']>;
  product_types?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity_per_source?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  related_product?: Maybe<Scalars['BigInt']>;
  returns?: Maybe<Scalars['String']>;
  salable_quantity?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['BigInt']>;
  status?: Maybe<Scalars['Boolean']>;
  stock_status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
  tax_rule?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  types?: Maybe<Scalars['String']>;
  variants?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProductsMaxOrderByAggregateInput = {
  attributes?: InputMaybe<SortOrder>;
  brand?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contract?: InputMaybe<SortOrder>;
  cost_string?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_type?: InputMaybe<SortOrder>;
  family?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  format?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  manufacture?: InputMaybe<SortOrder>;
  manufacturer?: InputMaybe<SortOrder>;
  manufacturer_part_number?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  occassions_occassionsToproducts?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  other_products?: InputMaybe<SortOrder>;
  part_number?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  product_attribute?: InputMaybe<SortOrder>;
  product_types?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity_per_source?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  salable_quantity?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  stock_status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
  tax_rule?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  types?: InputMaybe<SortOrder>;
  variants?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProductsMinAggregate = {
  __typename?: 'ProductsMinAggregate';
  attributes?: Maybe<Scalars['String']>;
  brand?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  contract?: Maybe<Scalars['String']>;
  cost_string?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  credit_memos?: Maybe<Scalars['String']>;
  customer_type?: Maybe<Scalars['String']>;
  family?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  format?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  manufacture?: Maybe<Scalars['String']>;
  manufacturer?: Maybe<Scalars['String']>;
  manufacturer_part_number?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  meta_description?: Maybe<Scalars['String']>;
  meta_keywords?: Maybe<Scalars['String']>;
  meta_title?: Maybe<Scalars['String']>;
  meta_url?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  occassions_occassionsToproducts?: Maybe<Scalars['String']>;
  orders?: Maybe<Scalars['String']>;
  other_products?: Maybe<Scalars['String']>;
  part_number?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  product_attribute?: Maybe<Scalars['String']>;
  product_types?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity_per_source?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  related_product?: Maybe<Scalars['BigInt']>;
  returns?: Maybe<Scalars['String']>;
  salable_quantity?: Maybe<Scalars['String']>;
  short_description?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['BigInt']>;
  status?: Maybe<Scalars['Boolean']>;
  stock_status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  tax_class?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
  tax_rule?: Maybe<Scalars['String']>;
  thumbnail?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
  types?: Maybe<Scalars['String']>;
  variants?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProductsMinOrderByAggregateInput = {
  attributes?: InputMaybe<SortOrder>;
  brand?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contract?: InputMaybe<SortOrder>;
  cost_string?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_type?: InputMaybe<SortOrder>;
  family?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  format?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  manufacture?: InputMaybe<SortOrder>;
  manufacturer?: InputMaybe<SortOrder>;
  manufacturer_part_number?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  occassions_occassionsToproducts?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  other_products?: InputMaybe<SortOrder>;
  part_number?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  product_attribute?: InputMaybe<SortOrder>;
  product_types?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity_per_source?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  salable_quantity?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  stock_status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
  tax_rule?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  types?: InputMaybe<SortOrder>;
  variants?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export enum ProductsOrderByRelevanceFieldEnum {
  Attributes = 'attributes',
  Brand = 'brand',
  Brands = 'brands',
  Categories = 'categories',
  Content = 'content',
  Contract = 'contract',
  CostString = 'cost_string',
  Country = 'country',
  Coupons = 'coupons',
  CreditMemos = 'credit_memos',
  CustomerType = 'customer_type',
  Family = 'family',
  File = 'file',
  Format = 'format',
  Height = 'height',
  Image = 'image',
  Manufacture = 'manufacture',
  Manufacturer = 'manufacturer',
  ManufacturerPartNumber = 'manufacturer_part_number',
  Mediamanager = 'mediamanager',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  MetaUrl = 'meta_url',
  Name = 'name',
  Occassions = 'occassions',
  OccassionsOccassionsToproducts = 'occassions_occassionsToproducts',
  Orders = 'orders',
  OtherProducts = 'other_products',
  PartNumber = 'part_number',
  Price = 'price',
  Product = 'product',
  ProductAttribute = 'product_attribute',
  ProductTypes = 'product_types',
  Products = 'products',
  QuantityPerSource = 'quantity_per_source',
  Quotes = 'quotes',
  Rating = 'rating',
  Returns = 'returns',
  SalableQuantity = 'salable_quantity',
  ShortDescription = 'short_description',
  Size = 'size',
  StockStatus = 'stock_status',
  Tags = 'tags',
  TaxClass = 'tax_class',
  TaxRate = 'tax_rate',
  TaxRule = 'tax_rule',
  Thumbnail = 'thumbnail',
  Trainings = 'trainings',
  Types = 'types',
  Variants = 'variants',
  Visibility = 'visibility',
  Websites = 'websites',
  Weight = 'weight',
  Workspaces = 'workspaces',
  Zone = 'zone'
}

export type ProductsOrderByRelevanceInput = {
  fields: Array<ProductsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ProductsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductsCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductsSumOrderByAggregateInput>;
  attributes?: InputMaybe<SortOrder>;
  brand?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contract?: InputMaybe<SortOrder>;
  cost_string?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_type?: InputMaybe<SortOrder>;
  family?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  format?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  manufacture?: InputMaybe<SortOrder>;
  manufacturer?: InputMaybe<SortOrder>;
  manufacturer_part_number?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  occassions_occassionsToproducts?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  other_products?: InputMaybe<SortOrder>;
  part_number?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  product_attribute?: InputMaybe<SortOrder>;
  product_types?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity_per_source?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  salable_quantity?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  stock_status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
  tax_rule?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  types?: InputMaybe<SortOrder>;
  variants?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProductsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ProductsOrderByRelevanceInput>;
  attributes?: InputMaybe<SortOrder>;
  brand?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  contract?: InputMaybe<SortOrder>;
  cost_string?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  credit_memos?: InputMaybe<SortOrder>;
  customer_type?: InputMaybe<SortOrder>;
  family?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  format?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  manufacture?: InputMaybe<SortOrder>;
  manufacturer?: InputMaybe<SortOrder>;
  manufacturer_part_number?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  meta_description?: InputMaybe<SortOrder>;
  meta_keywords?: InputMaybe<SortOrder>;
  meta_title?: InputMaybe<SortOrder>;
  meta_url?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  occassions_occassionsToproducts?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  other_products?: InputMaybe<SortOrder>;
  part_number?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  product_attribute?: InputMaybe<SortOrder>;
  product_types?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity_per_source?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  returns?: InputMaybe<SortOrder>;
  salable_quantity?: InputMaybe<SortOrder>;
  short_description?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  stock_status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  tax_class?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
  tax_rule?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
  types?: InputMaybe<SortOrder>;
  variants?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export enum ProductsScalarFieldEnum {
  Attributes = 'attributes',
  Brand = 'brand',
  Brands = 'brands',
  Categories = 'categories',
  Content = 'content',
  Contract = 'contract',
  CostString = 'cost_string',
  Country = 'country',
  Coupons = 'coupons',
  CreatedAt = 'created_at',
  CreditMemos = 'credit_memos',
  CustomerType = 'customer_type',
  Family = 'family',
  File = 'file',
  Format = 'format',
  Height = 'height',
  Id = 'id',
  Image = 'image',
  Manufacture = 'manufacture',
  Manufacturer = 'manufacturer',
  ManufacturerPartNumber = 'manufacturer_part_number',
  Mediamanager = 'mediamanager',
  MetaDescription = 'meta_description',
  MetaKeywords = 'meta_keywords',
  MetaTitle = 'meta_title',
  MetaUrl = 'meta_url',
  Name = 'name',
  Occassions = 'occassions',
  OccassionsOccassionsToproducts = 'occassions_occassionsToproducts',
  Orders = 'orders',
  OtherProducts = 'other_products',
  PartNumber = 'part_number',
  Price = 'price',
  Product = 'product',
  ProductAttribute = 'product_attribute',
  ProductTypes = 'product_types',
  Products = 'products',
  QuantityPerSource = 'quantity_per_source',
  Quotes = 'quotes',
  Rating = 'rating',
  RelatedProduct = 'related_product',
  Returns = 'returns',
  SalableQuantity = 'salable_quantity',
  ShortDescription = 'short_description',
  Size = 'size',
  Sku = 'sku',
  Status = 'status',
  StockStatus = 'stock_status',
  Tags = 'tags',
  TaxClass = 'tax_class',
  TaxRate = 'tax_rate',
  TaxRule = 'tax_rule',
  Thumbnail = 'thumbnail',
  Trainings = 'trainings',
  Types = 'types',
  Variants = 'variants',
  Visibility = 'visibility',
  Websites = 'websites',
  Weight = 'weight',
  Workspaces = 'workspaces',
  Zone = 'zone'
}

export type ProductsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductsScalarWhereWithAggregatesInput>>;
  attributes?: InputMaybe<StringNullableWithAggregatesFilter>;
  brand?: InputMaybe<StringNullableWithAggregatesFilter>;
  brands?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  contract?: InputMaybe<StringNullableWithAggregatesFilter>;
  cost_string?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  credit_memos?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  family?: InputMaybe<StringNullableWithAggregatesFilter>;
  file?: InputMaybe<StringNullableWithAggregatesFilter>;
  format?: InputMaybe<StringNullableWithAggregatesFilter>;
  height?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  manufacture?: InputMaybe<StringNullableWithAggregatesFilter>;
  manufacturer?: InputMaybe<StringNullableWithAggregatesFilter>;
  manufacturer_part_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_keywords?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  meta_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  occassions?: InputMaybe<StringNullableWithAggregatesFilter>;
  occassions_occassionsToproducts?: InputMaybe<StringNullableWithAggregatesFilter>;
  orders?: InputMaybe<StringNullableWithAggregatesFilter>;
  other_products?: InputMaybe<StringNullableWithAggregatesFilter>;
  part_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  price?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
  product_attribute?: InputMaybe<StringNullableWithAggregatesFilter>;
  product_types?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  quantity_per_source?: InputMaybe<StringNullableWithAggregatesFilter>;
  quotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  rating?: InputMaybe<StringNullableWithAggregatesFilter>;
  related_product?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  returns?: InputMaybe<StringNullableWithAggregatesFilter>;
  salable_quantity?: InputMaybe<StringNullableWithAggregatesFilter>;
  short_description?: InputMaybe<StringNullableWithAggregatesFilter>;
  size?: InputMaybe<StringNullableWithAggregatesFilter>;
  sku?: InputMaybe<BigIntWithAggregatesFilter>;
  status?: InputMaybe<BoolNullableWithAggregatesFilter>;
  stock_status?: InputMaybe<StringNullableWithAggregatesFilter>;
  tags?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_class?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_rate?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_rule?: InputMaybe<StringNullableWithAggregatesFilter>;
  thumbnail?: InputMaybe<StringNullableWithAggregatesFilter>;
  trainings?: InputMaybe<StringNullableWithAggregatesFilter>;
  types?: InputMaybe<StringNullableWithAggregatesFilter>;
  variants?: InputMaybe<StringNullableWithAggregatesFilter>;
  visibility?: InputMaybe<StringNullableWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
  weight?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  zone?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductsSumAggregate = {
  __typename?: 'ProductsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
  related_product?: Maybe<Scalars['BigInt']>;
  sku?: Maybe<Scalars['BigInt']>;
};

export type ProductsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  related_product?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
};

export type ProductsUpdateInput = {
  attributes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brand?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cost_string?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  credit_memos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  family?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  format?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacturer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacturer_part_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  occassions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  occassions_occassionsToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  other_products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  part_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_attribute?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_types?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity_per_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  related_product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  returns?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  salable_quantity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  short_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  size?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  stock_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  types?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variants?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductsUpdateManyMutationInput = {
  attributes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brand?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contract?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cost_string?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  credit_memos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customer_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  family?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  format?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacture?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacturer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  manufacturer_part_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_keywords?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meta_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  occassions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  occassions_occassionsToproducts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  other_products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  part_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_attribute?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_types?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity_per_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  related_product?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  returns?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  salable_quantity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  short_description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  size?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  stock_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_class?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  types?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variants?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductsWhereInput = {
  AND?: InputMaybe<Array<ProductsWhereInput>>;
  NOT?: InputMaybe<Array<ProductsWhereInput>>;
  OR?: InputMaybe<Array<ProductsWhereInput>>;
  attributes?: InputMaybe<StringNullableFilter>;
  brand?: InputMaybe<StringNullableFilter>;
  brands?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  contract?: InputMaybe<StringNullableFilter>;
  cost_string?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  credit_memos?: InputMaybe<StringNullableFilter>;
  customer_type?: InputMaybe<StringNullableFilter>;
  family?: InputMaybe<StringNullableFilter>;
  file?: InputMaybe<StringNullableFilter>;
  format?: InputMaybe<StringNullableFilter>;
  height?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  manufacture?: InputMaybe<StringNullableFilter>;
  manufacturer?: InputMaybe<StringNullableFilter>;
  manufacturer_part_number?: InputMaybe<StringNullableFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  meta_description?: InputMaybe<StringNullableFilter>;
  meta_keywords?: InputMaybe<StringNullableFilter>;
  meta_title?: InputMaybe<StringNullableFilter>;
  meta_url?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  occassions?: InputMaybe<StringNullableFilter>;
  occassions_occassionsToproducts?: InputMaybe<StringNullableFilter>;
  orders?: InputMaybe<StringNullableFilter>;
  other_products?: InputMaybe<StringNullableFilter>;
  part_number?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<StringNullableFilter>;
  product_attribute?: InputMaybe<StringNullableFilter>;
  product_types?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  quantity_per_source?: InputMaybe<StringNullableFilter>;
  quotes?: InputMaybe<StringNullableFilter>;
  rating?: InputMaybe<StringNullableFilter>;
  related_product?: InputMaybe<BigIntNullableFilter>;
  returns?: InputMaybe<StringNullableFilter>;
  salable_quantity?: InputMaybe<StringNullableFilter>;
  short_description?: InputMaybe<StringNullableFilter>;
  size?: InputMaybe<StringNullableFilter>;
  sku?: InputMaybe<BigIntFilter>;
  status?: InputMaybe<BoolNullableFilter>;
  stock_status?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  tax_class?: InputMaybe<StringNullableFilter>;
  tax_rate?: InputMaybe<StringNullableFilter>;
  tax_rule?: InputMaybe<StringNullableFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  trainings?: InputMaybe<StringNullableFilter>;
  types?: InputMaybe<StringNullableFilter>;
  variants?: InputMaybe<StringNullableFilter>;
  visibility?: InputMaybe<StringNullableFilter>;
  websites?: InputMaybe<StringNullableFilter>;
  weight?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
  zone?: InputMaybe<StringNullableFilter>;
};

export type ProductsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  sku?: InputMaybe<Scalars['BigInt']>;
};

export type Projects = {
  __typename?: 'Projects';
  assignee?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  considerworkingdays?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  doing?: Maybe<Scalars['String']>;
  done?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  goal_collaborators?: Maybe<Scalars['String']>;
  goal_measurement?: Maybe<Scalars['String']>;
  goal_name?: Maybe<Scalars['String']>;
  goal_privacy?: Maybe<Scalars['String']>;
  goal_progress_source?: Maybe<Scalars['String']>;
  goal_timeperiod?: Maybe<Scalars['String']>;
  goal_updatemethod?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  method?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  project_manager?: Maybe<Scalars['String']>;
  project_template?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  section_rule?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['BigInt']>;
  tasks?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['BigInt']>;
  ticketing?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProjectsAvgAggregate = {
  __typename?: 'ProjectsAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  staff_id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
  ticket_id?: Maybe<Scalars['Float']>;
};

export type ProjectsAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
};

export type ProjectsCountAggregate = {
  __typename?: 'ProjectsCountAggregate';
  _all: Scalars['Int'];
  assignee: Scalars['Int'];
  categories: Scalars['Int'];
  company: Scalars['Int'];
  considerworkingdays: Scalars['Int'];
  created_at: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  doing: Scalars['Int'];
  done: Scalars['Int'];
  end_date: Scalars['Int'];
  file: Scalars['Int'];
  goal_collaborators: Scalars['Int'];
  goal_measurement: Scalars['Int'];
  goal_name: Scalars['Int'];
  goal_privacy: Scalars['Int'];
  goal_progress_source: Scalars['Int'];
  goal_timeperiod: Scalars['Int'];
  goal_updatemethod: Scalars['Int'];
  id: Scalars['Int'];
  method: Scalars['Int'];
  name: Scalars['Int'];
  priority: Scalars['Int'];
  product: Scalars['Int'];
  project_manager: Scalars['Int'];
  project_template: Scalars['Int'];
  resource: Scalars['Int'];
  section_rule: Scalars['Int'];
  staff_id: Scalars['Int'];
  start_date: Scalars['Int'];
  status: Scalars['Int'];
  tags: Scalars['Int'];
  task_id: Scalars['Int'];
  tasks: Scalars['Int'];
  team: Scalars['Int'];
  ticket_id: Scalars['Int'];
  ticketing: Scalars['Int'];
  type: Scalars['Int'];
  users: Scalars['Int'];
  websites: Scalars['Int'];
  workspaces: Scalars['Int'];
  zone: Scalars['Int'];
};

export type ProjectsCountOrderByAggregateInput = {
  assignee?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  considerworkingdays?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  doing?: InputMaybe<SortOrder>;
  done?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  goal_collaborators?: InputMaybe<SortOrder>;
  goal_measurement?: InputMaybe<SortOrder>;
  goal_name?: InputMaybe<SortOrder>;
  goal_privacy?: InputMaybe<SortOrder>;
  goal_progress_source?: InputMaybe<SortOrder>;
  goal_timeperiod?: InputMaybe<SortOrder>;
  goal_updatemethod?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  project_manager?: InputMaybe<SortOrder>;
  project_template?: InputMaybe<SortOrder>;
  resource?: InputMaybe<SortOrder>;
  section_rule?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
  ticketing?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProjectsCreateInput = {
  assignee?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Scalars['String']>;
  considerworkingdays?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id?: InputMaybe<Scalars['Int']>;
  customers?: InputMaybe<Scalars['String']>;
  doing?: InputMaybe<Scalars['String']>;
  done?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  goal_collaborators?: InputMaybe<Scalars['String']>;
  goal_measurement?: InputMaybe<Scalars['String']>;
  goal_name?: InputMaybe<Scalars['String']>;
  goal_privacy?: InputMaybe<Scalars['String']>;
  goal_progress_source?: InputMaybe<Scalars['String']>;
  goal_timeperiod?: InputMaybe<Scalars['String']>;
  goal_updatemethod?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  method?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  priority?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  project_manager?: InputMaybe<Scalars['String']>;
  project_template?: InputMaybe<Scalars['String']>;
  resource?: InputMaybe<Scalars['String']>;
  section_rule?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  task_id?: InputMaybe<Scalars['BigInt']>;
  tasks?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Scalars['String']>;
  ticket_id?: InputMaybe<Scalars['BigInt']>;
  ticketing?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zone?: InputMaybe<Scalars['String']>;
};

export type ProjectsCreateManyInput = {
  assignee?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  company?: InputMaybe<Scalars['String']>;
  considerworkingdays?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  cust_id?: InputMaybe<Scalars['Int']>;
  customers?: InputMaybe<Scalars['String']>;
  doing?: InputMaybe<Scalars['String']>;
  done?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  file?: InputMaybe<Scalars['String']>;
  goal_collaborators?: InputMaybe<Scalars['String']>;
  goal_measurement?: InputMaybe<Scalars['String']>;
  goal_name?: InputMaybe<Scalars['String']>;
  goal_privacy?: InputMaybe<Scalars['String']>;
  goal_progress_source?: InputMaybe<Scalars['String']>;
  goal_timeperiod?: InputMaybe<Scalars['String']>;
  goal_updatemethod?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  method?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  priority?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  project_manager?: InputMaybe<Scalars['String']>;
  project_template?: InputMaybe<Scalars['String']>;
  resource?: InputMaybe<Scalars['String']>;
  section_rule?: InputMaybe<Scalars['String']>;
  staff_id?: InputMaybe<Scalars['Int']>;
  start_date?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  task_id?: InputMaybe<Scalars['BigInt']>;
  tasks?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Scalars['String']>;
  ticket_id?: InputMaybe<Scalars['BigInt']>;
  ticketing?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  websites?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
  zone?: InputMaybe<Scalars['String']>;
};

export type ProjectsGroupBy = {
  __typename?: 'ProjectsGroupBy';
  _avg?: Maybe<ProjectsAvgAggregate>;
  _count?: Maybe<ProjectsCountAggregate>;
  _max?: Maybe<ProjectsMaxAggregate>;
  _min?: Maybe<ProjectsMinAggregate>;
  _sum?: Maybe<ProjectsSumAggregate>;
  assignee?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  considerworkingdays?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  doing?: Maybe<Scalars['String']>;
  done?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  goal_collaborators?: Maybe<Scalars['String']>;
  goal_measurement?: Maybe<Scalars['String']>;
  goal_name?: Maybe<Scalars['String']>;
  goal_privacy?: Maybe<Scalars['String']>;
  goal_progress_source?: Maybe<Scalars['String']>;
  goal_timeperiod?: Maybe<Scalars['String']>;
  goal_updatemethod?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  method?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  project_manager?: Maybe<Scalars['String']>;
  project_template?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  section_rule?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['BigInt']>;
  tasks?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['BigInt']>;
  ticketing?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProjectsMaxAggregate = {
  __typename?: 'ProjectsMaxAggregate';
  assignee?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  considerworkingdays?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  doing?: Maybe<Scalars['String']>;
  done?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  goal_collaborators?: Maybe<Scalars['String']>;
  goal_measurement?: Maybe<Scalars['String']>;
  goal_name?: Maybe<Scalars['String']>;
  goal_privacy?: Maybe<Scalars['String']>;
  goal_progress_source?: Maybe<Scalars['String']>;
  goal_timeperiod?: Maybe<Scalars['String']>;
  goal_updatemethod?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  method?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  project_manager?: Maybe<Scalars['String']>;
  project_template?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  section_rule?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['BigInt']>;
  tasks?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['BigInt']>;
  ticketing?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProjectsMaxOrderByAggregateInput = {
  assignee?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  considerworkingdays?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  doing?: InputMaybe<SortOrder>;
  done?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  goal_collaborators?: InputMaybe<SortOrder>;
  goal_measurement?: InputMaybe<SortOrder>;
  goal_name?: InputMaybe<SortOrder>;
  goal_privacy?: InputMaybe<SortOrder>;
  goal_progress_source?: InputMaybe<SortOrder>;
  goal_timeperiod?: InputMaybe<SortOrder>;
  goal_updatemethod?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  project_manager?: InputMaybe<SortOrder>;
  project_template?: InputMaybe<SortOrder>;
  resource?: InputMaybe<SortOrder>;
  section_rule?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
  ticketing?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProjectsMinAggregate = {
  __typename?: 'ProjectsMinAggregate';
  assignee?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  company?: Maybe<Scalars['String']>;
  considerworkingdays?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  doing?: Maybe<Scalars['String']>;
  done?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  file?: Maybe<Scalars['String']>;
  goal_collaborators?: Maybe<Scalars['String']>;
  goal_measurement?: Maybe<Scalars['String']>;
  goal_name?: Maybe<Scalars['String']>;
  goal_privacy?: Maybe<Scalars['String']>;
  goal_progress_source?: Maybe<Scalars['String']>;
  goal_timeperiod?: Maybe<Scalars['String']>;
  goal_updatemethod?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  method?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  project_manager?: Maybe<Scalars['String']>;
  project_template?: Maybe<Scalars['String']>;
  resource?: Maybe<Scalars['String']>;
  section_rule?: Maybe<Scalars['String']>;
  staff_id?: Maybe<Scalars['Int']>;
  start_date?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['BigInt']>;
  tasks?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_id?: Maybe<Scalars['BigInt']>;
  ticketing?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  websites?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
  zone?: Maybe<Scalars['String']>;
};

export type ProjectsMinOrderByAggregateInput = {
  assignee?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  considerworkingdays?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  doing?: InputMaybe<SortOrder>;
  done?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  goal_collaborators?: InputMaybe<SortOrder>;
  goal_measurement?: InputMaybe<SortOrder>;
  goal_name?: InputMaybe<SortOrder>;
  goal_privacy?: InputMaybe<SortOrder>;
  goal_progress_source?: InputMaybe<SortOrder>;
  goal_timeperiod?: InputMaybe<SortOrder>;
  goal_updatemethod?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  project_manager?: InputMaybe<SortOrder>;
  project_template?: InputMaybe<SortOrder>;
  resource?: InputMaybe<SortOrder>;
  section_rule?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
  ticketing?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export enum ProjectsOrderByRelevanceFieldEnum {
  Assignee = 'assignee',
  Categories = 'categories',
  Company = 'company',
  Considerworkingdays = 'considerworkingdays',
  Customers = 'customers',
  Doing = 'doing',
  Done = 'done',
  EndDate = 'end_date',
  File = 'file',
  GoalCollaborators = 'goal_collaborators',
  GoalMeasurement = 'goal_measurement',
  GoalName = 'goal_name',
  GoalPrivacy = 'goal_privacy',
  GoalProgressSource = 'goal_progress_source',
  GoalTimeperiod = 'goal_timeperiod',
  GoalUpdatemethod = 'goal_updatemethod',
  Method = 'method',
  Name = 'name',
  Priority = 'priority',
  Product = 'product',
  ProjectManager = 'project_manager',
  ProjectTemplate = 'project_template',
  Resource = 'resource',
  SectionRule = 'section_rule',
  StartDate = 'start_date',
  Status = 'status',
  Tags = 'tags',
  Tasks = 'tasks',
  Team = 'team',
  Ticketing = 'ticketing',
  Type = 'type',
  Users = 'users',
  Websites = 'websites',
  Workspaces = 'workspaces',
  Zone = 'zone'
}

export type ProjectsOrderByRelevanceInput = {
  fields: Array<ProjectsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ProjectsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProjectsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProjectsCountOrderByAggregateInput>;
  _max?: InputMaybe<ProjectsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProjectsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProjectsSumOrderByAggregateInput>;
  assignee?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  considerworkingdays?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  doing?: InputMaybe<SortOrder>;
  done?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  goal_collaborators?: InputMaybe<SortOrder>;
  goal_measurement?: InputMaybe<SortOrder>;
  goal_name?: InputMaybe<SortOrder>;
  goal_privacy?: InputMaybe<SortOrder>;
  goal_progress_source?: InputMaybe<SortOrder>;
  goal_timeperiod?: InputMaybe<SortOrder>;
  goal_updatemethod?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  project_manager?: InputMaybe<SortOrder>;
  project_template?: InputMaybe<SortOrder>;
  resource?: InputMaybe<SortOrder>;
  section_rule?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
  ticketing?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export type ProjectsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ProjectsOrderByRelevanceInput>;
  assignee?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  company?: InputMaybe<SortOrder>;
  considerworkingdays?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  doing?: InputMaybe<SortOrder>;
  done?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  file?: InputMaybe<SortOrder>;
  goal_collaborators?: InputMaybe<SortOrder>;
  goal_measurement?: InputMaybe<SortOrder>;
  goal_name?: InputMaybe<SortOrder>;
  goal_privacy?: InputMaybe<SortOrder>;
  goal_progress_source?: InputMaybe<SortOrder>;
  goal_timeperiod?: InputMaybe<SortOrder>;
  goal_updatemethod?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  project_manager?: InputMaybe<SortOrder>;
  project_template?: InputMaybe<SortOrder>;
  resource?: InputMaybe<SortOrder>;
  section_rule?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
  ticketing?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
  zone?: InputMaybe<SortOrder>;
};

export enum ProjectsScalarFieldEnum {
  Assignee = 'assignee',
  Categories = 'categories',
  Company = 'company',
  Considerworkingdays = 'considerworkingdays',
  CreatedAt = 'created_at',
  CustId = 'cust_id',
  Customers = 'customers',
  Doing = 'doing',
  Done = 'done',
  EndDate = 'end_date',
  File = 'file',
  GoalCollaborators = 'goal_collaborators',
  GoalMeasurement = 'goal_measurement',
  GoalName = 'goal_name',
  GoalPrivacy = 'goal_privacy',
  GoalProgressSource = 'goal_progress_source',
  GoalTimeperiod = 'goal_timeperiod',
  GoalUpdatemethod = 'goal_updatemethod',
  Id = 'id',
  Method = 'method',
  Name = 'name',
  Priority = 'priority',
  Product = 'product',
  ProjectManager = 'project_manager',
  ProjectTemplate = 'project_template',
  Resource = 'resource',
  SectionRule = 'section_rule',
  StaffId = 'staff_id',
  StartDate = 'start_date',
  Status = 'status',
  Tags = 'tags',
  TaskId = 'task_id',
  Tasks = 'tasks',
  Team = 'team',
  TicketId = 'ticket_id',
  Ticketing = 'ticketing',
  Type = 'type',
  Users = 'users',
  Websites = 'websites',
  Workspaces = 'workspaces',
  Zone = 'zone'
}

export type ProjectsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProjectsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProjectsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProjectsScalarWhereWithAggregatesInput>>;
  assignee?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  company?: InputMaybe<StringNullableWithAggregatesFilter>;
  considerworkingdays?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  doing?: InputMaybe<StringNullableWithAggregatesFilter>;
  done?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  file?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_collaborators?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_measurement?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_privacy?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_progress_source?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_timeperiod?: InputMaybe<StringNullableWithAggregatesFilter>;
  goal_updatemethod?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  method?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  priority?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
  project_manager?: InputMaybe<StringNullableWithAggregatesFilter>;
  project_template?: InputMaybe<StringNullableWithAggregatesFilter>;
  resource?: InputMaybe<StringNullableWithAggregatesFilter>;
  section_rule?: InputMaybe<StringNullableWithAggregatesFilter>;
  staff_id?: InputMaybe<IntNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  tags?: InputMaybe<StringNullableWithAggregatesFilter>;
  task_id?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  tasks?: InputMaybe<StringNullableWithAggregatesFilter>;
  team?: InputMaybe<StringNullableWithAggregatesFilter>;
  ticket_id?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  ticketing?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  zone?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProjectsSumAggregate = {
  __typename?: 'ProjectsSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['BigInt']>;
  staff_id?: Maybe<Scalars['Int']>;
  task_id?: Maybe<Scalars['BigInt']>;
  ticket_id?: Maybe<Scalars['BigInt']>;
};

export type ProjectsSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staff_id?: InputMaybe<SortOrder>;
  task_id?: InputMaybe<SortOrder>;
  ticket_id?: InputMaybe<SortOrder>;
};

export type ProjectsUpdateInput = {
  assignee?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  considerworkingdays?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  doing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  done?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_collaborators?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_measurement?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_privacy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_progress_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_timeperiod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_updatemethod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project_template?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resource?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  section_rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  team?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  ticketing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectsUpdateManyMutationInput = {
  assignee?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  company?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  considerworkingdays?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  doing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  done?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  file?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_collaborators?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_measurement?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_privacy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_progress_source?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_timeperiod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  goal_updatemethod?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project_manager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  project_template?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resource?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  section_rule?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  staff_id?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  team?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  ticketing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProjectsWhereInput = {
  AND?: InputMaybe<Array<ProjectsWhereInput>>;
  NOT?: InputMaybe<Array<ProjectsWhereInput>>;
  OR?: InputMaybe<Array<ProjectsWhereInput>>;
  assignee?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  company?: InputMaybe<StringNullableFilter>;
  considerworkingdays?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  cust_id?: InputMaybe<IntNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  doing?: InputMaybe<StringNullableFilter>;
  done?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  file?: InputMaybe<StringNullableFilter>;
  goal_collaborators?: InputMaybe<StringNullableFilter>;
  goal_measurement?: InputMaybe<StringNullableFilter>;
  goal_name?: InputMaybe<StringNullableFilter>;
  goal_privacy?: InputMaybe<StringNullableFilter>;
  goal_progress_source?: InputMaybe<StringNullableFilter>;
  goal_timeperiod?: InputMaybe<StringNullableFilter>;
  goal_updatemethod?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  method?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  priority?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<StringNullableFilter>;
  project_manager?: InputMaybe<StringNullableFilter>;
  project_template?: InputMaybe<StringNullableFilter>;
  resource?: InputMaybe<StringNullableFilter>;
  section_rule?: InputMaybe<StringNullableFilter>;
  staff_id?: InputMaybe<IntNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  task_id?: InputMaybe<BigIntNullableFilter>;
  tasks?: InputMaybe<StringNullableFilter>;
  team?: InputMaybe<StringNullableFilter>;
  ticket_id?: InputMaybe<BigIntNullableFilter>;
  ticketing?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
  websites?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
  zone?: InputMaybe<StringNullableFilter>;
};

export type ProjectsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Providers = {
  __typename?: 'Providers';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type ProvidersAvgAggregate = {
  __typename?: 'ProvidersAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ProvidersAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ProvidersCountAggregate = {
  __typename?: 'ProvidersCountAggregate';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  created_at: Scalars['Int'];
  host_uri: Scalars['Int'];
  icon: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  redirect_url: Scalars['Int'];
  redirect_url_app: Scalars['Int'];
};

export type ProvidersCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type ProvidersCreateInput = {
  active?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  host_uri?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  redirect_url?: InputMaybe<Scalars['String']>;
  redirect_url_app?: InputMaybe<Scalars['String']>;
};

export type ProvidersCreateManyInput = {
  active?: InputMaybe<Scalars['String']>;
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  host_uri?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  redirect_url?: InputMaybe<Scalars['String']>;
  redirect_url_app?: InputMaybe<Scalars['String']>;
};

export type ProvidersGroupBy = {
  __typename?: 'ProvidersGroupBy';
  _avg?: Maybe<ProvidersAvgAggregate>;
  _count?: Maybe<ProvidersCountAggregate>;
  _max?: Maybe<ProvidersMaxAggregate>;
  _min?: Maybe<ProvidersMinAggregate>;
  _sum?: Maybe<ProvidersSumAggregate>;
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type ProvidersMaxAggregate = {
  __typename?: 'ProvidersMaxAggregate';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type ProvidersMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type ProvidersMinAggregate = {
  __typename?: 'ProvidersMinAggregate';
  active?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  host_uri?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  redirect_url?: Maybe<Scalars['String']>;
  redirect_url_app?: Maybe<Scalars['String']>;
};

export type ProvidersMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export enum ProvidersOrderByRelevanceFieldEnum {
  Active = 'active',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  HostUri = 'host_uri',
  Icon = 'icon',
  Name = 'name',
  RedirectUrl = 'redirect_url',
  RedirectUrlApp = 'redirect_url_app'
}

export type ProvidersOrderByRelevanceInput = {
  fields: Array<ProvidersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ProvidersOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProvidersAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProvidersCountOrderByAggregateInput>;
  _max?: InputMaybe<ProvidersMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProvidersMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProvidersSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export type ProvidersOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ProvidersOrderByRelevanceInput>;
  active?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  host_uri?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  redirect_url?: InputMaybe<SortOrder>;
  redirect_url_app?: InputMaybe<SortOrder>;
};

export enum ProvidersScalarFieldEnum {
  Active = 'active',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  CreatedAt = 'created_at',
  HostUri = 'host_uri',
  Icon = 'icon',
  Id = 'id',
  Name = 'name',
  RedirectUrl = 'redirect_url',
  RedirectUrlApp = 'redirect_url_app'
}

export type ProvidersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProvidersScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProvidersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProvidersScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  host_uri?: InputMaybe<StringNullableWithAggregatesFilter>;
  icon?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  redirect_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  redirect_url_app?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProvidersSumAggregate = {
  __typename?: 'ProvidersSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ProvidersSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ProvidersUpdateInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  host_uri?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  redirect_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redirect_url_app?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProvidersUpdateManyMutationInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  host_uri?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  redirect_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redirect_url_app?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProvidersWhereInput = {
  AND?: InputMaybe<Array<ProvidersWhereInput>>;
  NOT?: InputMaybe<Array<ProvidersWhereInput>>;
  OR?: InputMaybe<Array<ProvidersWhereInput>>;
  active?: InputMaybe<StringNullableFilter>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  host_uri?: InputMaybe<StringNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringFilter>;
  redirect_url?: InputMaybe<StringNullableFilter>;
  redirect_url_app?: InputMaybe<StringNullableFilter>;
};

export type ProvidersWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  aggregateAccounts: AggregateAccounts;
  aggregateAgreements: AggregateAgreements;
  aggregateAnalytics: AggregateAnalytics;
  aggregateApitoken: AggregateApitoken;
  aggregateArticles: AggregateArticles;
  aggregateAttributes: AggregateAttributes;
  aggregateBrands: AggregateBrands;
  aggregateCart_price_rules: AggregateCart_Price_Rules;
  aggregateCases: AggregateCases;
  aggregateCatalog_price_rule: AggregateCatalog_Price_Rule;
  aggregateCategories: AggregateCategories;
  aggregateChannels: AggregateChannels;
  aggregateChecklist: AggregateChecklist;
  aggregateCities: AggregateCities;
  aggregateCollections: AggregateCollections;
  aggregateComments: AggregateComments;
  aggregateContent_type: AggregateContent_Type;
  aggregateContracts: AggregateContracts;
  aggregateCountries: AggregateCountries;
  aggregateCoupons: AggregateCoupons;
  aggregateCredit_memos: AggregateCredit_Memos;
  aggregateCurrencies: AggregateCurrencies;
  aggregateCurrency_rates: AggregateCurrency_Rates;
  aggregateCurrency_symbols: AggregateCurrency_Symbols;
  aggregateCustomer_group: AggregateCustomer_Group;
  aggregateCustomers: AggregateCustomers;
  aggregateCustomizations: AggregateCustomizations;
  aggregateDashboards: AggregateDashboards;
  aggregateDeepdive: AggregateDeepdive;
  aggregateDigiboard: AggregateDigiboard;
  aggregateEmails: AggregateEmails;
  aggregateEndofshift: AggregateEndofshift;
  aggregateEvents: AggregateEvents;
  aggregateFullfillments: AggregateFullfillments;
  aggregateGift_certificates: AggregateGift_Certificates;
  aggregateGlossary: AggregateGlossary;
  aggregateImportm: AggregateImportm;
  aggregateIntegrations: AggregateIntegrations;
  aggregateInternalization: AggregateInternalization;
  aggregateInvitations: AggregateInvitations;
  aggregateInvoices: AggregateInvoices;
  aggregateLeads: AggregateLeads;
  aggregateLogIn: AggregateLogIn;
  aggregateManufacturer: AggregateManufacturer;
  aggregateMediamanager: AggregateMediamanager;
  aggregateMeeting: AggregateMeeting;
  aggregateMessages: AggregateMessages;
  aggregateNewsletters: AggregateNewsletters;
  aggregateOoto: AggregateOoto;
  aggregateOpportunities: AggregateOpportunities;
  aggregateOrders: AggregateOrders;
  aggregatePages: AggregatePages;
  aggregatePartners: AggregatePartners;
  aggregatePayments: AggregatePayments;
  aggregatePermissions: AggregatePermissions;
  aggregatePlugins: AggregatePlugins;
  aggregatePolls: AggregatePolls;
  aggregateProduct_types: AggregateProduct_Types;
  aggregateProducts: AggregateProducts;
  aggregateProjects: AggregateProjects;
  aggregateProviders: AggregateProviders;
  aggregateQuotes: AggregateQuotes;
  aggregateRating: AggregateRating;
  aggregateReports: AggregateReports;
  aggregateReturns: AggregateReturns;
  aggregateReviews: AggregateReviews;
  aggregateRewards: AggregateRewards;
  aggregateRoles: AggregateRoles;
  aggregateScheduler: AggregateScheduler;
  aggregateSegments: AggregateSegments;
  aggregateSettings: AggregateSettings;
  aggregateShipments: AggregateShipments;
  aggregateSpecial_discounts: AggregateSpecial_Discounts;
  aggregateStates: AggregateStates;
  aggregateStatistics: AggregateStatistics;
  aggregateStocks: AggregateStocks;
  aggregateTags: AggregateTags;
  aggregateTargets: AggregateTargets;
  aggregateTax_category: AggregateTax_Category;
  aggregateTax_rate: AggregateTax_Rate;
  aggregateTax_rule: AggregateTax_Rule;
  aggregateTemplates: AggregateTemplates;
  aggregateThemes: AggregateThemes;
  aggregateTicketing: AggregateTicketing;
  aggregateTransactions: AggregateTransactions;
  aggregateUpload_file: AggregateUpload_File;
  aggregateUsers: AggregateUsers;
  aggregateVendors: AggregateVendors;
  aggregateVisits: AggregateVisits;
  aggregateWarehouse: AggregateWarehouse;
  aggregateWebhooks: AggregateWebhooks;
  aggregateWebsites: AggregateWebsites;
  aggregateWishlists: AggregateWishlists;
  aggregateWorkspaces: AggregateWorkspaces;
  aggregateZones: AggregateZones;
  apitoken?: Maybe<Apitoken>;
  apitokens: Array<Apitoken>;
  catalog_price_rule?: Maybe<Catalog_Price_Rule>;
  catalog_price_rules: Array<Catalog_Price_Rule>;
  checklist?: Maybe<Checklist>;
  checklists: Array<Checklist>;
  content_type?: Maybe<Content_Type>;
  content_types: Array<Content_Type>;
  customer_group?: Maybe<Customer_Group>;
  customer_groups: Array<Customer_Group>;
  deepdive?: Maybe<Deepdive>;
  deepdives: Array<Deepdive>;
  digiboard?: Maybe<Digiboard>;
  digiboards: Array<Digiboard>;
  endofshift?: Maybe<Endofshift>;
  endofshifts: Array<Endofshift>;
  findFirstAccounts?: Maybe<Accounts>;
  findFirstAgreements?: Maybe<Agreements>;
  findFirstAnalytics?: Maybe<Analytics>;
  findFirstApitoken?: Maybe<Apitoken>;
  findFirstArticles?: Maybe<Articles>;
  findFirstAttributes?: Maybe<Attributes>;
  findFirstBrands?: Maybe<Brands>;
  findFirstCart_price_rules?: Maybe<Cart_Price_Rules>;
  findFirstCases?: Maybe<Cases>;
  findFirstCatalog_price_rule?: Maybe<Catalog_Price_Rule>;
  findFirstCategories?: Maybe<Categories>;
  findFirstChannels?: Maybe<Channels>;
  findFirstChecklist?: Maybe<Checklist>;
  findFirstCities?: Maybe<Cities>;
  findFirstCollections?: Maybe<Collections>;
  findFirstComments?: Maybe<Comments>;
  findFirstContent_type?: Maybe<Content_Type>;
  findFirstContracts?: Maybe<Contracts>;
  findFirstCountries?: Maybe<Countries>;
  findFirstCoupons?: Maybe<Coupons>;
  findFirstCredit_memos?: Maybe<Credit_Memos>;
  findFirstCurrencies?: Maybe<Currencies>;
  findFirstCurrency_rates?: Maybe<Currency_Rates>;
  findFirstCurrency_symbols?: Maybe<Currency_Symbols>;
  findFirstCustomer_group?: Maybe<Customer_Group>;
  findFirstCustomers?: Maybe<Customers>;
  findFirstCustomizations?: Maybe<Customizations>;
  findFirstDashboards?: Maybe<Dashboards>;
  findFirstDeepdive?: Maybe<Deepdive>;
  findFirstDigiboard?: Maybe<Digiboard>;
  findFirstEmails?: Maybe<Emails>;
  findFirstEndofshift?: Maybe<Endofshift>;
  findFirstEvents?: Maybe<Events>;
  findFirstFullfillments?: Maybe<Fullfillments>;
  findFirstGift_certificates?: Maybe<Gift_Certificates>;
  findFirstGlossary?: Maybe<Glossary>;
  findFirstImportm?: Maybe<Importm>;
  findFirstIntegrations?: Maybe<Integrations>;
  findFirstInternalization?: Maybe<Internalization>;
  findFirstInvitations?: Maybe<Invitations>;
  findFirstInvoices?: Maybe<Invoices>;
  findFirstLeads?: Maybe<Leads>;
  findFirstLogIn?: Maybe<LogIn>;
  findFirstManufacturer?: Maybe<Manufacturer>;
  findFirstMediamanager?: Maybe<Mediamanager>;
  findFirstMeeting?: Maybe<Meeting>;
  findFirstMessages?: Maybe<Messages>;
  findFirstNewsletters?: Maybe<Newsletters>;
  findFirstOoto?: Maybe<Ooto>;
  findFirstOpportunities?: Maybe<Opportunities>;
  findFirstOrders?: Maybe<Orders>;
  findFirstPages?: Maybe<Pages>;
  findFirstPartners?: Maybe<Partners>;
  findFirstPayments?: Maybe<Payments>;
  findFirstPermissions?: Maybe<Permissions>;
  findFirstPlugins?: Maybe<Plugins>;
  findFirstPolls?: Maybe<Polls>;
  findFirstProduct_types?: Maybe<Product_Types>;
  findFirstProducts?: Maybe<Products>;
  findFirstProjects?: Maybe<Projects>;
  findFirstProviders?: Maybe<Providers>;
  findFirstQuotes?: Maybe<Quotes>;
  findFirstRating?: Maybe<Rating>;
  findFirstReports?: Maybe<Reports>;
  findFirstReturns?: Maybe<Returns>;
  findFirstReviews?: Maybe<Reviews>;
  findFirstRewards?: Maybe<Rewards>;
  findFirstRoles?: Maybe<Roles>;
  findFirstScheduler?: Maybe<Scheduler>;
  findFirstSegments?: Maybe<Segments>;
  findFirstSettings?: Maybe<Settings>;
  findFirstShipments?: Maybe<Shipments>;
  findFirstSpecial_discounts?: Maybe<Special_Discounts>;
  findFirstStates?: Maybe<States>;
  findFirstStatistics?: Maybe<Statistics>;
  findFirstStocks?: Maybe<Stocks>;
  findFirstTags?: Maybe<Tags>;
  findFirstTargets?: Maybe<Targets>;
  findFirstTax_category?: Maybe<Tax_Category>;
  findFirstTax_rate?: Maybe<Tax_Rate>;
  findFirstTax_rule?: Maybe<Tax_Rule>;
  findFirstTemplates?: Maybe<Templates>;
  findFirstThemes?: Maybe<Themes>;
  findFirstTicketing?: Maybe<Ticketing>;
  findFirstTransactions?: Maybe<Transactions>;
  findFirstUpload_file?: Maybe<Upload_File>;
  findFirstUsers?: Maybe<Users>;
  findFirstVendors?: Maybe<Vendors>;
  findFirstVisits?: Maybe<Visits>;
  findFirstWarehouse?: Maybe<Warehouse>;
  findFirstWebhooks?: Maybe<Webhooks>;
  findFirstWebsites?: Maybe<Websites>;
  findFirstWishlists?: Maybe<Wishlists>;
  findFirstWorkspaces?: Maybe<Workspaces>;
  findFirstZones?: Maybe<Zones>;
  findManyAccounts: Array<Accounts>;
  findManyAgreements: Array<Agreements>;
  findManyAnalytics: Array<Analytics>;
  findManyArticles: Array<Articles>;
  findManyAttributes: Array<Attributes>;
  findManyBrands: Array<Brands>;
  findManyCart_price_rules: Array<Cart_Price_Rules>;
  findManyCases: Array<Cases>;
  findManyCategories: Array<Categories>;
  findManyChannels: Array<Channels>;
  findManyCities: Array<Cities>;
  findManyCollections: Array<Collections>;
  findManyComments: Array<Comments>;
  findManyContracts: Array<Contracts>;
  findManyCountries: Array<Countries>;
  findManyCoupons: Array<Coupons>;
  findManyCredit_memos: Array<Credit_Memos>;
  findManyCurrencies: Array<Currencies>;
  findManyCurrency_rates: Array<Currency_Rates>;
  findManyCurrency_symbols: Array<Currency_Symbols>;
  findManyCustomers: Array<Customers>;
  findManyCustomizations: Array<Customizations>;
  findManyDashboards: Array<Dashboards>;
  findManyEmails: Array<Emails>;
  findManyEvents: Array<Events>;
  findManyFullfillments: Array<Fullfillments>;
  findManyGift_certificates: Array<Gift_Certificates>;
  findManyIntegrations: Array<Integrations>;
  findManyInvitations: Array<Invitations>;
  findManyInvoices: Array<Invoices>;
  findManyLeads: Array<Leads>;
  findManyMessages: Array<Messages>;
  findManyNewsletters: Array<Newsletters>;
  findManyOpportunities: Array<Opportunities>;
  findManyOrders: Array<Orders>;
  findManyPages: Array<Pages>;
  findManyPartners: Array<Partners>;
  findManyPayments: Array<Payments>;
  findManyPermissions: Array<Permissions>;
  findManyPlugins: Array<Plugins>;
  findManyPolls: Array<Polls>;
  findManyProduct_types: Array<Product_Types>;
  findManyProducts: Array<Products>;
  findManyProjects: Array<Projects>;
  findManyProviders: Array<Providers>;
  findManyQuotes: Array<Quotes>;
  findManyReports: Array<Reports>;
  findManyReturns: Array<Returns>;
  findManyReviews: Array<Reviews>;
  findManyRewards: Array<Rewards>;
  findManyRoles: Array<Roles>;
  findManySegments: Array<Segments>;
  findManySettings: Array<Settings>;
  findManyShipments: Array<Shipments>;
  findManySpecial_discounts: Array<Special_Discounts>;
  findManyStates: Array<States>;
  findManyStatistics: Array<Statistics>;
  findManyStocks: Array<Stocks>;
  findManyTags: Array<Tags>;
  findManyTargets: Array<Targets>;
  findManyTemplates: Array<Templates>;
  findManyThemes: Array<Themes>;
  findManyTransactions: Array<Transactions>;
  findManyUsers: Array<Users>;
  findManyVendors: Array<Vendors>;
  findManyVisits: Array<Visits>;
  findManyWebhooks: Array<Webhooks>;
  findManyWebsites: Array<Websites>;
  findManyWishlists: Array<Wishlists>;
  findManyWorkspaces: Array<Workspaces>;
  findManyZones: Array<Zones>;
  findUniqueAccounts?: Maybe<Accounts>;
  findUniqueAgreements?: Maybe<Agreements>;
  findUniqueAnalytics?: Maybe<Analytics>;
  findUniqueArticles?: Maybe<Articles>;
  findUniqueAttributes?: Maybe<Attributes>;
  findUniqueBrands?: Maybe<Brands>;
  findUniqueCart_price_rules?: Maybe<Cart_Price_Rules>;
  findUniqueCases?: Maybe<Cases>;
  findUniqueCategories?: Maybe<Categories>;
  findUniqueChannels?: Maybe<Channels>;
  findUniqueCities?: Maybe<Cities>;
  findUniqueCollections?: Maybe<Collections>;
  findUniqueComments?: Maybe<Comments>;
  findUniqueContracts?: Maybe<Contracts>;
  findUniqueCountries?: Maybe<Countries>;
  findUniqueCoupons?: Maybe<Coupons>;
  findUniqueCredit_memos?: Maybe<Credit_Memos>;
  findUniqueCurrencies?: Maybe<Currencies>;
  findUniqueCurrency_rates?: Maybe<Currency_Rates>;
  findUniqueCurrency_symbols?: Maybe<Currency_Symbols>;
  findUniqueCustomers?: Maybe<Customers>;
  findUniqueCustomizations?: Maybe<Customizations>;
  findUniqueDashboards?: Maybe<Dashboards>;
  findUniqueEmails?: Maybe<Emails>;
  findUniqueEvents?: Maybe<Events>;
  findUniqueFullfillments?: Maybe<Fullfillments>;
  findUniqueGift_certificates?: Maybe<Gift_Certificates>;
  findUniqueIntegrations?: Maybe<Integrations>;
  findUniqueInvitations?: Maybe<Invitations>;
  findUniqueInvoices?: Maybe<Invoices>;
  findUniqueLeads?: Maybe<Leads>;
  findUniqueMessages?: Maybe<Messages>;
  findUniqueNewsletters?: Maybe<Newsletters>;
  findUniqueOpportunities?: Maybe<Opportunities>;
  findUniqueOrders?: Maybe<Orders>;
  findUniquePages?: Maybe<Pages>;
  findUniquePartners?: Maybe<Partners>;
  findUniquePayments?: Maybe<Payments>;
  findUniquePermissions?: Maybe<Permissions>;
  findUniquePlugins?: Maybe<Plugins>;
  findUniquePolls?: Maybe<Polls>;
  findUniqueProduct_types?: Maybe<Product_Types>;
  findUniqueProducts?: Maybe<Products>;
  findUniqueProjects?: Maybe<Projects>;
  findUniqueProviders?: Maybe<Providers>;
  findUniqueQuotes?: Maybe<Quotes>;
  findUniqueReports?: Maybe<Reports>;
  findUniqueReturns?: Maybe<Returns>;
  findUniqueReviews?: Maybe<Reviews>;
  findUniqueRewards?: Maybe<Rewards>;
  findUniqueRoles?: Maybe<Roles>;
  findUniqueSegments?: Maybe<Segments>;
  findUniqueSettings?: Maybe<Settings>;
  findUniqueShipments?: Maybe<Shipments>;
  findUniqueSpecial_discounts?: Maybe<Special_Discounts>;
  findUniqueStates?: Maybe<States>;
  findUniqueStatistics?: Maybe<Statistics>;
  findUniqueStocks?: Maybe<Stocks>;
  findUniqueTags?: Maybe<Tags>;
  findUniqueTargets?: Maybe<Targets>;
  findUniqueTemplates?: Maybe<Templates>;
  findUniqueThemes?: Maybe<Themes>;
  findUniqueTransactions?: Maybe<Transactions>;
  findUniqueUsers?: Maybe<Users>;
  findUniqueVendors?: Maybe<Vendors>;
  findUniqueVisits?: Maybe<Visits>;
  findUniqueWebhooks?: Maybe<Webhooks>;
  findUniqueWebsites?: Maybe<Websites>;
  findUniqueWishlists?: Maybe<Wishlists>;
  findUniqueWorkspaces?: Maybe<Workspaces>;
  findUniqueZones?: Maybe<Zones>;
  glossaries: Array<Glossary>;
  glossary?: Maybe<Glossary>;
  groupByAccounts: Array<AccountsGroupBy>;
  groupByAgreements: Array<AgreementsGroupBy>;
  groupByAnalytics: Array<AnalyticsGroupBy>;
  groupByApitoken: Array<ApitokenGroupBy>;
  groupByArticles: Array<ArticlesGroupBy>;
  groupByAttributes: Array<AttributesGroupBy>;
  groupByBrands: Array<BrandsGroupBy>;
  groupByCart_price_rules: Array<Cart_Price_RulesGroupBy>;
  groupByCases: Array<CasesGroupBy>;
  groupByCatalog_price_rule: Array<Catalog_Price_RuleGroupBy>;
  groupByCategories: Array<CategoriesGroupBy>;
  groupByChannels: Array<ChannelsGroupBy>;
  groupByChecklist: Array<ChecklistGroupBy>;
  groupByCities: Array<CitiesGroupBy>;
  groupByCollections: Array<CollectionsGroupBy>;
  groupByComments: Array<CommentsGroupBy>;
  groupByContent_type: Array<Content_TypeGroupBy>;
  groupByContracts: Array<ContractsGroupBy>;
  groupByCountries: Array<CountriesGroupBy>;
  groupByCoupons: Array<CouponsGroupBy>;
  groupByCredit_memos: Array<Credit_MemosGroupBy>;
  groupByCurrencies: Array<CurrenciesGroupBy>;
  groupByCurrency_rates: Array<Currency_RatesGroupBy>;
  groupByCurrency_symbols: Array<Currency_SymbolsGroupBy>;
  groupByCustomer_group: Array<Customer_GroupGroupBy>;
  groupByCustomers: Array<CustomersGroupBy>;
  groupByCustomizations: Array<CustomizationsGroupBy>;
  groupByDashboards: Array<DashboardsGroupBy>;
  groupByDeepdive: Array<DeepdiveGroupBy>;
  groupByDigiboard: Array<DigiboardGroupBy>;
  groupByEmails: Array<EmailsGroupBy>;
  groupByEndofshift: Array<EndofshiftGroupBy>;
  groupByEvents: Array<EventsGroupBy>;
  groupByFullfillments: Array<FullfillmentsGroupBy>;
  groupByGift_certificates: Array<Gift_CertificatesGroupBy>;
  groupByGlossary: Array<GlossaryGroupBy>;
  groupByImportm: Array<ImportmGroupBy>;
  groupByIntegrations: Array<IntegrationsGroupBy>;
  groupByInternalization: Array<InternalizationGroupBy>;
  groupByInvitations: Array<InvitationsGroupBy>;
  groupByInvoices: Array<InvoicesGroupBy>;
  groupByLeads: Array<LeadsGroupBy>;
  groupByLogIn: Array<LogInGroupBy>;
  groupByManufacturer: Array<ManufacturerGroupBy>;
  groupByMediamanager: Array<MediamanagerGroupBy>;
  groupByMeeting: Array<MeetingGroupBy>;
  groupByMessages: Array<MessagesGroupBy>;
  groupByNewsletters: Array<NewslettersGroupBy>;
  groupByOoto: Array<OotoGroupBy>;
  groupByOpportunities: Array<OpportunitiesGroupBy>;
  groupByOrders: Array<OrdersGroupBy>;
  groupByPages: Array<PagesGroupBy>;
  groupByPartners: Array<PartnersGroupBy>;
  groupByPayments: Array<PaymentsGroupBy>;
  groupByPermissions: Array<PermissionsGroupBy>;
  groupByPlugins: Array<PluginsGroupBy>;
  groupByPolls: Array<PollsGroupBy>;
  groupByProduct_types: Array<Product_TypesGroupBy>;
  groupByProducts: Array<ProductsGroupBy>;
  groupByProjects: Array<ProjectsGroupBy>;
  groupByProviders: Array<ProvidersGroupBy>;
  groupByQuotes: Array<QuotesGroupBy>;
  groupByRating: Array<RatingGroupBy>;
  groupByReports: Array<ReportsGroupBy>;
  groupByReturns: Array<ReturnsGroupBy>;
  groupByReviews: Array<ReviewsGroupBy>;
  groupByRewards: Array<RewardsGroupBy>;
  groupByRoles: Array<RolesGroupBy>;
  groupByScheduler: Array<SchedulerGroupBy>;
  groupBySegments: Array<SegmentsGroupBy>;
  groupBySettings: Array<SettingsGroupBy>;
  groupByShipments: Array<ShipmentsGroupBy>;
  groupBySpecial_discounts: Array<Special_DiscountsGroupBy>;
  groupByStates: Array<StatesGroupBy>;
  groupByStatistics: Array<StatisticsGroupBy>;
  groupByStocks: Array<StocksGroupBy>;
  groupByTags: Array<TagsGroupBy>;
  groupByTargets: Array<TargetsGroupBy>;
  groupByTax_category: Array<Tax_CategoryGroupBy>;
  groupByTax_rate: Array<Tax_RateGroupBy>;
  groupByTax_rule: Array<Tax_RuleGroupBy>;
  groupByTemplates: Array<TemplatesGroupBy>;
  groupByThemes: Array<ThemesGroupBy>;
  groupByTicketing: Array<TicketingGroupBy>;
  groupByTransactions: Array<TransactionsGroupBy>;
  groupByUpload_file: Array<Upload_FileGroupBy>;
  groupByUsers: Array<UsersGroupBy>;
  groupByVendors: Array<VendorsGroupBy>;
  groupByVisits: Array<VisitsGroupBy>;
  groupByWarehouse: Array<WarehouseGroupBy>;
  groupByWebhooks: Array<WebhooksGroupBy>;
  groupByWebsites: Array<WebsitesGroupBy>;
  groupByWishlists: Array<WishlistsGroupBy>;
  groupByWorkspaces: Array<WorkspacesGroupBy>;
  groupByZones: Array<ZonesGroupBy>;
  importm?: Maybe<Importm>;
  importms: Array<Importm>;
  internalization?: Maybe<Internalization>;
  internalizations: Array<Internalization>;
  logIn?: Maybe<LogIn>;
  logIns: Array<LogIn>;
  manufacturer?: Maybe<Manufacturer>;
  manufacturers: Array<Manufacturer>;
  mediamanager?: Maybe<Mediamanager>;
  mediamanagers: Array<Mediamanager>;
  meeting?: Maybe<Meeting>;
  meetings: Array<Meeting>;
  ooto?: Maybe<Ooto>;
  ootos: Array<Ooto>;
  rating?: Maybe<Rating>;
  ratings: Array<Rating>;
  scheduler?: Maybe<Scheduler>;
  schedulers: Array<Scheduler>;
  tax_categories: Array<Tax_Category>;
  tax_category?: Maybe<Tax_Category>;
  tax_rate?: Maybe<Tax_Rate>;
  tax_rates: Array<Tax_Rate>;
  tax_rule?: Maybe<Tax_Rule>;
  tax_rules: Array<Tax_Rule>;
  ticketing?: Maybe<Ticketing>;
  ticketings: Array<Ticketing>;
  upload_file?: Maybe<Upload_File>;
  upload_files: Array<Upload_File>;
  warehouse?: Maybe<Warehouse>;
  warehouses: Array<Warehouse>;
};


export type QueryAggregateAccountsArgs = {
  cursor?: InputMaybe<AccountsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AccountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AccountsWhereInput>;
};


export type QueryAggregateAgreementsArgs = {
  cursor?: InputMaybe<AgreementsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AgreementsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgreementsWhereInput>;
};


export type QueryAggregateAnalyticsArgs = {
  cursor?: InputMaybe<AnalyticsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AnalyticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type QueryAggregateApitokenArgs = {
  cursor?: InputMaybe<ApitokenWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ApitokenOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ApitokenWhereInput>;
};


export type QueryAggregateArticlesArgs = {
  cursor?: InputMaybe<ArticlesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ArticlesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ArticlesWhereInput>;
};


export type QueryAggregateAttributesArgs = {
  cursor?: InputMaybe<AttributesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AttributesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributesWhereInput>;
};


export type QueryAggregateBrandsArgs = {
  cursor?: InputMaybe<BrandsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<BrandsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BrandsWhereInput>;
};


export type QueryAggregateCart_Price_RulesArgs = {
  cursor?: InputMaybe<Cart_Price_RulesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Cart_Price_RulesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type QueryAggregateCasesArgs = {
  cursor?: InputMaybe<CasesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CasesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CasesWhereInput>;
};


export type QueryAggregateCatalog_Price_RuleArgs = {
  cursor?: InputMaybe<Catalog_Price_RuleWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Catalog_Price_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type QueryAggregateCategoriesArgs = {
  cursor?: InputMaybe<CategoriesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CategoriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoriesWhereInput>;
};


export type QueryAggregateChannelsArgs = {
  cursor?: InputMaybe<ChannelsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ChannelsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChannelsWhereInput>;
};


export type QueryAggregateChecklistArgs = {
  cursor?: InputMaybe<ChecklistWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ChecklistOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChecklistWhereInput>;
};


export type QueryAggregateCitiesArgs = {
  cursor?: InputMaybe<CitiesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CitiesWhereInput>;
};


export type QueryAggregateCollectionsArgs = {
  cursor?: InputMaybe<CollectionsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CollectionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionsWhereInput>;
};


export type QueryAggregateCommentsArgs = {
  cursor?: InputMaybe<CommentsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CommentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CommentsWhereInput>;
};


export type QueryAggregateContent_TypeArgs = {
  cursor?: InputMaybe<Content_TypeWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Content_TypeOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type QueryAggregateContractsArgs = {
  cursor?: InputMaybe<ContractsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ContractsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ContractsWhereInput>;
};


export type QueryAggregateCountriesArgs = {
  cursor?: InputMaybe<CountriesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CountriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CountriesWhereInput>;
};


export type QueryAggregateCouponsArgs = {
  cursor?: InputMaybe<CouponsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CouponsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponsWhereInput>;
};


export type QueryAggregateCredit_MemosArgs = {
  cursor?: InputMaybe<Credit_MemosWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Credit_MemosOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type QueryAggregateCurrenciesArgs = {
  cursor?: InputMaybe<CurrenciesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CurrenciesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type QueryAggregateCurrency_RatesArgs = {
  cursor?: InputMaybe<Currency_RatesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Currency_RatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type QueryAggregateCurrency_SymbolsArgs = {
  cursor?: InputMaybe<Currency_SymbolsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Currency_SymbolsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type QueryAggregateCustomer_GroupArgs = {
  cursor?: InputMaybe<Customer_GroupWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Customer_GroupOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type QueryAggregateCustomersArgs = {
  cursor?: InputMaybe<CustomersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CustomersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomersWhereInput>;
};


export type QueryAggregateCustomizationsArgs = {
  cursor?: InputMaybe<CustomizationsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CustomizationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type QueryAggregateDashboardsArgs = {
  cursor?: InputMaybe<DashboardsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DashboardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DashboardsWhereInput>;
};


export type QueryAggregateDeepdiveArgs = {
  cursor?: InputMaybe<DeepdiveWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DeepdiveOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type QueryAggregateDigiboardArgs = {
  cursor?: InputMaybe<DigiboardWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DigiboardOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DigiboardWhereInput>;
};


export type QueryAggregateEmailsArgs = {
  cursor?: InputMaybe<EmailsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<EmailsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmailsWhereInput>;
};


export type QueryAggregateEndofshiftArgs = {
  cursor?: InputMaybe<EndofshiftWhereUniqueInput>;
  orderBy?: InputMaybe<Array<EndofshiftOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type QueryAggregateEventsArgs = {
  cursor?: InputMaybe<EventsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<EventsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventsWhereInput>;
};


export type QueryAggregateFullfillmentsArgs = {
  cursor?: InputMaybe<FullfillmentsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<FullfillmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type QueryAggregateGift_CertificatesArgs = {
  cursor?: InputMaybe<Gift_CertificatesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Gift_CertificatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type QueryAggregateGlossaryArgs = {
  cursor?: InputMaybe<GlossaryWhereUniqueInput>;
  orderBy?: InputMaybe<Array<GlossaryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GlossaryWhereInput>;
};


export type QueryAggregateImportmArgs = {
  cursor?: InputMaybe<ImportmWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ImportmOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ImportmWhereInput>;
};


export type QueryAggregateIntegrationsArgs = {
  cursor?: InputMaybe<IntegrationsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<IntegrationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type QueryAggregateInternalizationArgs = {
  cursor?: InputMaybe<InternalizationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InternalizationOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InternalizationWhereInput>;
};


export type QueryAggregateInvitationsArgs = {
  cursor?: InputMaybe<InvitationsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InvitationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvitationsWhereInput>;
};


export type QueryAggregateInvoicesArgs = {
  cursor?: InputMaybe<InvoicesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InvoicesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvoicesWhereInput>;
};


export type QueryAggregateLeadsArgs = {
  cursor?: InputMaybe<LeadsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<LeadsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LeadsWhereInput>;
};


export type QueryAggregateLogInArgs = {
  cursor?: InputMaybe<LogInWhereUniqueInput>;
  orderBy?: InputMaybe<Array<LogInOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LogInWhereInput>;
};


export type QueryAggregateManufacturerArgs = {
  cursor?: InputMaybe<ManufacturerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ManufacturerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type QueryAggregateMediamanagerArgs = {
  cursor?: InputMaybe<MediamanagerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<MediamanagerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type QueryAggregateMeetingArgs = {
  cursor?: InputMaybe<MeetingWhereUniqueInput>;
  orderBy?: InputMaybe<Array<MeetingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MeetingWhereInput>;
};


export type QueryAggregateMessagesArgs = {
  cursor?: InputMaybe<MessagesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<MessagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MessagesWhereInput>;
};


export type QueryAggregateNewslettersArgs = {
  cursor?: InputMaybe<NewslettersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<NewslettersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NewslettersWhereInput>;
};


export type QueryAggregateOotoArgs = {
  cursor?: InputMaybe<OotoWhereUniqueInput>;
  orderBy?: InputMaybe<Array<OotoOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OotoWhereInput>;
};


export type QueryAggregateOpportunitiesArgs = {
  cursor?: InputMaybe<OpportunitiesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<OpportunitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type QueryAggregateOrdersArgs = {
  cursor?: InputMaybe<OrdersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<OrdersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrdersWhereInput>;
};


export type QueryAggregatePagesArgs = {
  cursor?: InputMaybe<PagesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PagesWhereInput>;
};


export type QueryAggregatePartnersArgs = {
  cursor?: InputMaybe<PartnersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PartnersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PartnersWhereInput>;
};


export type QueryAggregatePaymentsArgs = {
  cursor?: InputMaybe<PaymentsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PaymentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PaymentsWhereInput>;
};


export type QueryAggregatePermissionsArgs = {
  cursor?: InputMaybe<PermissionsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PermissionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PermissionsWhereInput>;
};


export type QueryAggregatePluginsArgs = {
  cursor?: InputMaybe<PluginsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PluginsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PluginsWhereInput>;
};


export type QueryAggregatePollsArgs = {
  cursor?: InputMaybe<PollsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PollsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PollsWhereInput>;
};


export type QueryAggregateProduct_TypesArgs = {
  cursor?: InputMaybe<Product_TypesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Product_TypesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type QueryAggregateProductsArgs = {
  cursor?: InputMaybe<ProductsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductsWhereInput>;
};


export type QueryAggregateProjectsArgs = {
  cursor?: InputMaybe<ProjectsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProjectsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProjectsWhereInput>;
};


export type QueryAggregateProvidersArgs = {
  cursor?: InputMaybe<ProvidersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProvidersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProvidersWhereInput>;
};


export type QueryAggregateQuotesArgs = {
  cursor?: InputMaybe<QuotesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<QuotesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<QuotesWhereInput>;
};


export type QueryAggregateRatingArgs = {
  cursor?: InputMaybe<RatingWhereUniqueInput>;
  orderBy?: InputMaybe<Array<RatingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RatingWhereInput>;
};


export type QueryAggregateReportsArgs = {
  cursor?: InputMaybe<ReportsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ReportsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReportsWhereInput>;
};


export type QueryAggregateReturnsArgs = {
  cursor?: InputMaybe<ReturnsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ReturnsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReturnsWhereInput>;
};


export type QueryAggregateReviewsArgs = {
  cursor?: InputMaybe<ReviewsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ReviewsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReviewsWhereInput>;
};


export type QueryAggregateRewardsArgs = {
  cursor?: InputMaybe<RewardsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<RewardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RewardsWhereInput>;
};


export type QueryAggregateRolesArgs = {
  cursor?: InputMaybe<RolesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<RolesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RolesWhereInput>;
};


export type QueryAggregateSchedulerArgs = {
  cursor?: InputMaybe<SchedulerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SchedulerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SchedulerWhereInput>;
};


export type QueryAggregateSegmentsArgs = {
  cursor?: InputMaybe<SegmentsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SegmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SegmentsWhereInput>;
};


export type QueryAggregateSettingsArgs = {
  cursor?: InputMaybe<SettingsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SettingsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SettingsWhereInput>;
};


export type QueryAggregateShipmentsArgs = {
  cursor?: InputMaybe<ShipmentsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ShipmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type QueryAggregateSpecial_DiscountsArgs = {
  cursor?: InputMaybe<Special_DiscountsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Special_DiscountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type QueryAggregateStatesArgs = {
  cursor?: InputMaybe<StatesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatesWhereInput>;
};


export type QueryAggregateStatisticsArgs = {
  cursor?: InputMaybe<StatisticsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StatisticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatisticsWhereInput>;
};


export type QueryAggregateStocksArgs = {
  cursor?: InputMaybe<StocksWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StocksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StocksWhereInput>;
};


export type QueryAggregateTagsArgs = {
  cursor?: InputMaybe<TagsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TagsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagsWhereInput>;
};


export type QueryAggregateTargetsArgs = {
  cursor?: InputMaybe<TargetsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TargetsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TargetsWhereInput>;
};


export type QueryAggregateTax_CategoryArgs = {
  cursor?: InputMaybe<Tax_CategoryWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Tax_CategoryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type QueryAggregateTax_RateArgs = {
  cursor?: InputMaybe<Tax_RateWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Tax_RateOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type QueryAggregateTax_RuleArgs = {
  cursor?: InputMaybe<Tax_RuleWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Tax_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type QueryAggregateTemplatesArgs = {
  cursor?: InputMaybe<TemplatesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TemplatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TemplatesWhereInput>;
};


export type QueryAggregateThemesArgs = {
  cursor?: InputMaybe<ThemesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ThemesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ThemesWhereInput>;
};


export type QueryAggregateTicketingArgs = {
  cursor?: InputMaybe<TicketingWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TicketingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TicketingWhereInput>;
};


export type QueryAggregateTransactionsArgs = {
  cursor?: InputMaybe<TransactionsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TransactionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TransactionsWhereInput>;
};


export type QueryAggregateUpload_FileArgs = {
  cursor?: InputMaybe<Upload_FileWhereUniqueInput>;
  orderBy?: InputMaybe<Array<Upload_FileOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type QueryAggregateUsersArgs = {
  cursor?: InputMaybe<UsersWhereUniqueInput>;
  orderBy?: InputMaybe<Array<UsersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UsersWhereInput>;
};


export type QueryAggregateVendorsArgs = {
  cursor?: InputMaybe<VendorsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<VendorsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VendorsWhereInput>;
};


export type QueryAggregateVisitsArgs = {
  cursor?: InputMaybe<VisitsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<VisitsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VisitsWhereInput>;
};


export type QueryAggregateWarehouseArgs = {
  cursor?: InputMaybe<WarehouseWhereUniqueInput>;
  orderBy?: InputMaybe<Array<WarehouseOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WarehouseWhereInput>;
};


export type QueryAggregateWebhooksArgs = {
  cursor?: InputMaybe<WebhooksWhereUniqueInput>;
  orderBy?: InputMaybe<Array<WebhooksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebhooksWhereInput>;
};


export type QueryAggregateWebsitesArgs = {
  cursor?: InputMaybe<WebsitesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<WebsitesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsitesWhereInput>;
};


export type QueryAggregateWishlistsArgs = {
  cursor?: InputMaybe<WishlistsWhereUniqueInput>;
  orderBy?: InputMaybe<Array<WishlistsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WishlistsWhereInput>;
};


export type QueryAggregateWorkspacesArgs = {
  cursor?: InputMaybe<WorkspacesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<WorkspacesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type QueryAggregateZonesArgs = {
  cursor?: InputMaybe<ZonesWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ZonesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ZonesWhereInput>;
};


export type QueryApitokenArgs = {
  where: ApitokenWhereUniqueInput;
};


export type QueryApitokensArgs = {
  cursor?: InputMaybe<ApitokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApitokenScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApitokenOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ApitokenWhereInput>;
};


export type QueryCatalog_Price_RuleArgs = {
  where: Catalog_Price_RuleWhereUniqueInput;
};


export type QueryCatalog_Price_RulesArgs = {
  cursor?: InputMaybe<Catalog_Price_RuleWhereUniqueInput>;
  distinct?: InputMaybe<Array<Catalog_Price_RuleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Catalog_Price_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type QueryChecklistArgs = {
  where: ChecklistWhereUniqueInput;
};


export type QueryChecklistsArgs = {
  cursor?: InputMaybe<ChecklistWhereUniqueInput>;
  distinct?: InputMaybe<Array<ChecklistScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ChecklistOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChecklistWhereInput>;
};


export type QueryContent_TypeArgs = {
  where: Content_TypeWhereUniqueInput;
};


export type QueryContent_TypesArgs = {
  cursor?: InputMaybe<Content_TypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<Content_TypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Content_TypeOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type QueryCustomer_GroupArgs = {
  where: Customer_GroupWhereUniqueInput;
};


export type QueryCustomer_GroupsArgs = {
  cursor?: InputMaybe<Customer_GroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<Customer_GroupScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Customer_GroupOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type QueryDeepdiveArgs = {
  where: DeepdiveWhereUniqueInput;
};


export type QueryDeepdivesArgs = {
  cursor?: InputMaybe<DeepdiveWhereUniqueInput>;
  distinct?: InputMaybe<Array<DeepdiveScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DeepdiveOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type QueryDigiboardArgs = {
  where: DigiboardWhereUniqueInput;
};


export type QueryDigiboardsArgs = {
  cursor?: InputMaybe<DigiboardWhereUniqueInput>;
  distinct?: InputMaybe<Array<DigiboardScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DigiboardOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DigiboardWhereInput>;
};


export type QueryEndofshiftArgs = {
  where: EndofshiftWhereUniqueInput;
};


export type QueryEndofshiftsArgs = {
  cursor?: InputMaybe<EndofshiftWhereUniqueInput>;
  distinct?: InputMaybe<Array<EndofshiftScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EndofshiftOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type QueryFindFirstAccountsArgs = {
  cursor?: InputMaybe<AccountsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AccountsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AccountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AccountsWhereInput>;
};


export type QueryFindFirstAgreementsArgs = {
  cursor?: InputMaybe<AgreementsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AgreementsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AgreementsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgreementsWhereInput>;
};


export type QueryFindFirstAnalyticsArgs = {
  cursor?: InputMaybe<AnalyticsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AnalyticsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AnalyticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type QueryFindFirstApitokenArgs = {
  cursor?: InputMaybe<ApitokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<ApitokenScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ApitokenOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ApitokenWhereInput>;
};


export type QueryFindFirstArticlesArgs = {
  cursor?: InputMaybe<ArticlesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ArticlesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ArticlesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ArticlesWhereInput>;
};


export type QueryFindFirstAttributesArgs = {
  cursor?: InputMaybe<AttributesWhereUniqueInput>;
  distinct?: InputMaybe<Array<AttributesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AttributesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributesWhereInput>;
};


export type QueryFindFirstBrandsArgs = {
  cursor?: InputMaybe<BrandsWhereUniqueInput>;
  distinct?: InputMaybe<Array<BrandsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BrandsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BrandsWhereInput>;
};


export type QueryFindFirstCart_Price_RulesArgs = {
  cursor?: InputMaybe<Cart_Price_RulesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Cart_Price_RulesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Cart_Price_RulesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type QueryFindFirstCasesArgs = {
  cursor?: InputMaybe<CasesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CasesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CasesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CasesWhereInput>;
};


export type QueryFindFirstCatalog_Price_RuleArgs = {
  cursor?: InputMaybe<Catalog_Price_RuleWhereUniqueInput>;
  distinct?: InputMaybe<Array<Catalog_Price_RuleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Catalog_Price_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type QueryFindFirstCategoriesArgs = {
  cursor?: InputMaybe<CategoriesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CategoriesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CategoriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoriesWhereInput>;
};


export type QueryFindFirstChannelsArgs = {
  cursor?: InputMaybe<ChannelsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ChannelsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ChannelsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChannelsWhereInput>;
};


export type QueryFindFirstChecklistArgs = {
  cursor?: InputMaybe<ChecklistWhereUniqueInput>;
  distinct?: InputMaybe<Array<ChecklistScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ChecklistOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChecklistWhereInput>;
};


export type QueryFindFirstCitiesArgs = {
  cursor?: InputMaybe<CitiesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CitiesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CitiesWhereInput>;
};


export type QueryFindFirstCollectionsArgs = {
  cursor?: InputMaybe<CollectionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CollectionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CollectionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionsWhereInput>;
};


export type QueryFindFirstCommentsArgs = {
  cursor?: InputMaybe<CommentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CommentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CommentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CommentsWhereInput>;
};


export type QueryFindFirstContent_TypeArgs = {
  cursor?: InputMaybe<Content_TypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<Content_TypeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Content_TypeOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type QueryFindFirstContractsArgs = {
  cursor?: InputMaybe<ContractsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ContractsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ContractsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ContractsWhereInput>;
};


export type QueryFindFirstCountriesArgs = {
  cursor?: InputMaybe<CountriesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CountriesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CountriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CountriesWhereInput>;
};


export type QueryFindFirstCouponsArgs = {
  cursor?: InputMaybe<CouponsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CouponsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CouponsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponsWhereInput>;
};


export type QueryFindFirstCredit_MemosArgs = {
  cursor?: InputMaybe<Credit_MemosWhereUniqueInput>;
  distinct?: InputMaybe<Array<Credit_MemosScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Credit_MemosOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type QueryFindFirstCurrenciesArgs = {
  cursor?: InputMaybe<CurrenciesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CurrenciesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CurrenciesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type QueryFindFirstCurrency_RatesArgs = {
  cursor?: InputMaybe<Currency_RatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Currency_RatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Currency_RatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type QueryFindFirstCurrency_SymbolsArgs = {
  cursor?: InputMaybe<Currency_SymbolsWhereUniqueInput>;
  distinct?: InputMaybe<Array<Currency_SymbolsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Currency_SymbolsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type QueryFindFirstCustomer_GroupArgs = {
  cursor?: InputMaybe<Customer_GroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<Customer_GroupScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Customer_GroupOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type QueryFindFirstCustomersArgs = {
  cursor?: InputMaybe<CustomersWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomersWhereInput>;
};


export type QueryFindFirstCustomizationsArgs = {
  cursor?: InputMaybe<CustomizationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomizationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomizationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type QueryFindFirstDashboardsArgs = {
  cursor?: InputMaybe<DashboardsWhereUniqueInput>;
  distinct?: InputMaybe<Array<DashboardsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DashboardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DashboardsWhereInput>;
};


export type QueryFindFirstDeepdiveArgs = {
  cursor?: InputMaybe<DeepdiveWhereUniqueInput>;
  distinct?: InputMaybe<Array<DeepdiveScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DeepdiveOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type QueryFindFirstDigiboardArgs = {
  cursor?: InputMaybe<DigiboardWhereUniqueInput>;
  distinct?: InputMaybe<Array<DigiboardScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DigiboardOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DigiboardWhereInput>;
};


export type QueryFindFirstEmailsArgs = {
  cursor?: InputMaybe<EmailsWhereUniqueInput>;
  distinct?: InputMaybe<Array<EmailsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EmailsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmailsWhereInput>;
};


export type QueryFindFirstEndofshiftArgs = {
  cursor?: InputMaybe<EndofshiftWhereUniqueInput>;
  distinct?: InputMaybe<Array<EndofshiftScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EndofshiftOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type QueryFindFirstEventsArgs = {
  cursor?: InputMaybe<EventsWhereUniqueInput>;
  distinct?: InputMaybe<Array<EventsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EventsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventsWhereInput>;
};


export type QueryFindFirstFullfillmentsArgs = {
  cursor?: InputMaybe<FullfillmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<FullfillmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<FullfillmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type QueryFindFirstGift_CertificatesArgs = {
  cursor?: InputMaybe<Gift_CertificatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Gift_CertificatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Gift_CertificatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type QueryFindFirstGlossaryArgs = {
  cursor?: InputMaybe<GlossaryWhereUniqueInput>;
  distinct?: InputMaybe<Array<GlossaryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<GlossaryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GlossaryWhereInput>;
};


export type QueryFindFirstImportmArgs = {
  cursor?: InputMaybe<ImportmWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImportmScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImportmOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ImportmWhereInput>;
};


export type QueryFindFirstIntegrationsArgs = {
  cursor?: InputMaybe<IntegrationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<IntegrationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<IntegrationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type QueryFindFirstInternalizationArgs = {
  cursor?: InputMaybe<InternalizationWhereUniqueInput>;
  distinct?: InputMaybe<Array<InternalizationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InternalizationOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InternalizationWhereInput>;
};


export type QueryFindFirstInvitationsArgs = {
  cursor?: InputMaybe<InvitationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<InvitationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InvitationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvitationsWhereInput>;
};


export type QueryFindFirstInvoicesArgs = {
  cursor?: InputMaybe<InvoicesWhereUniqueInput>;
  distinct?: InputMaybe<Array<InvoicesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InvoicesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvoicesWhereInput>;
};


export type QueryFindFirstLeadsArgs = {
  cursor?: InputMaybe<LeadsWhereUniqueInput>;
  distinct?: InputMaybe<Array<LeadsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LeadsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LeadsWhereInput>;
};


export type QueryFindFirstLogInArgs = {
  cursor?: InputMaybe<LogInWhereUniqueInput>;
  distinct?: InputMaybe<Array<LogInScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LogInOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LogInWhereInput>;
};


export type QueryFindFirstManufacturerArgs = {
  cursor?: InputMaybe<ManufacturerWhereUniqueInput>;
  distinct?: InputMaybe<Array<ManufacturerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ManufacturerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type QueryFindFirstMediamanagerArgs = {
  cursor?: InputMaybe<MediamanagerWhereUniqueInput>;
  distinct?: InputMaybe<Array<MediamanagerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MediamanagerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type QueryFindFirstMeetingArgs = {
  cursor?: InputMaybe<MeetingWhereUniqueInput>;
  distinct?: InputMaybe<Array<MeetingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MeetingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MeetingWhereInput>;
};


export type QueryFindFirstMessagesArgs = {
  cursor?: InputMaybe<MessagesWhereUniqueInput>;
  distinct?: InputMaybe<Array<MessagesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MessagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MessagesWhereInput>;
};


export type QueryFindFirstNewslettersArgs = {
  cursor?: InputMaybe<NewslettersWhereUniqueInput>;
  distinct?: InputMaybe<Array<NewslettersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<NewslettersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NewslettersWhereInput>;
};


export type QueryFindFirstOotoArgs = {
  cursor?: InputMaybe<OotoWhereUniqueInput>;
  distinct?: InputMaybe<Array<OotoScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OotoOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OotoWhereInput>;
};


export type QueryFindFirstOpportunitiesArgs = {
  cursor?: InputMaybe<OpportunitiesWhereUniqueInput>;
  distinct?: InputMaybe<Array<OpportunitiesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OpportunitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type QueryFindFirstOrdersArgs = {
  cursor?: InputMaybe<OrdersWhereUniqueInput>;
  distinct?: InputMaybe<Array<OrdersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OrdersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrdersWhereInput>;
};


export type QueryFindFirstPagesArgs = {
  cursor?: InputMaybe<PagesWhereUniqueInput>;
  distinct?: InputMaybe<Array<PagesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PagesWhereInput>;
};


export type QueryFindFirstPartnersArgs = {
  cursor?: InputMaybe<PartnersWhereUniqueInput>;
  distinct?: InputMaybe<Array<PartnersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PartnersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PartnersWhereInput>;
};


export type QueryFindFirstPaymentsArgs = {
  cursor?: InputMaybe<PaymentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PaymentsWhereInput>;
};


export type QueryFindFirstPermissionsArgs = {
  cursor?: InputMaybe<PermissionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PermissionsWhereInput>;
};


export type QueryFindFirstPluginsArgs = {
  cursor?: InputMaybe<PluginsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PluginsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PluginsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PluginsWhereInput>;
};


export type QueryFindFirstPollsArgs = {
  cursor?: InputMaybe<PollsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PollsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PollsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PollsWhereInput>;
};


export type QueryFindFirstProduct_TypesArgs = {
  cursor?: InputMaybe<Product_TypesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Product_TypesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Product_TypesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type QueryFindFirstProductsArgs = {
  cursor?: InputMaybe<ProductsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductsWhereInput>;
};


export type QueryFindFirstProjectsArgs = {
  cursor?: InputMaybe<ProjectsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProjectsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProjectsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProjectsWhereInput>;
};


export type QueryFindFirstProvidersArgs = {
  cursor?: InputMaybe<ProvidersWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProvidersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProvidersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProvidersWhereInput>;
};


export type QueryFindFirstQuotesArgs = {
  cursor?: InputMaybe<QuotesWhereUniqueInput>;
  distinct?: InputMaybe<Array<QuotesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<QuotesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<QuotesWhereInput>;
};


export type QueryFindFirstRatingArgs = {
  cursor?: InputMaybe<RatingWhereUniqueInput>;
  distinct?: InputMaybe<Array<RatingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RatingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RatingWhereInput>;
};


export type QueryFindFirstReportsArgs = {
  cursor?: InputMaybe<ReportsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReportsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReportsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReportsWhereInput>;
};


export type QueryFindFirstReturnsArgs = {
  cursor?: InputMaybe<ReturnsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReturnsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReturnsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReturnsWhereInput>;
};


export type QueryFindFirstReviewsArgs = {
  cursor?: InputMaybe<ReviewsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReviewsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReviewsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReviewsWhereInput>;
};


export type QueryFindFirstRewardsArgs = {
  cursor?: InputMaybe<RewardsWhereUniqueInput>;
  distinct?: InputMaybe<Array<RewardsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RewardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RewardsWhereInput>;
};


export type QueryFindFirstRolesArgs = {
  cursor?: InputMaybe<RolesWhereUniqueInput>;
  distinct?: InputMaybe<Array<RolesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RolesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RolesWhereInput>;
};


export type QueryFindFirstSchedulerArgs = {
  cursor?: InputMaybe<SchedulerWhereUniqueInput>;
  distinct?: InputMaybe<Array<SchedulerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SchedulerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SchedulerWhereInput>;
};


export type QueryFindFirstSegmentsArgs = {
  cursor?: InputMaybe<SegmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<SegmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SegmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SegmentsWhereInput>;
};


export type QueryFindFirstSettingsArgs = {
  cursor?: InputMaybe<SettingsWhereUniqueInput>;
  distinct?: InputMaybe<Array<SettingsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SettingsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SettingsWhereInput>;
};


export type QueryFindFirstShipmentsArgs = {
  cursor?: InputMaybe<ShipmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ShipmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ShipmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type QueryFindFirstSpecial_DiscountsArgs = {
  cursor?: InputMaybe<Special_DiscountsWhereUniqueInput>;
  distinct?: InputMaybe<Array<Special_DiscountsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Special_DiscountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type QueryFindFirstStatesArgs = {
  cursor?: InputMaybe<StatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<StatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatesWhereInput>;
};


export type QueryFindFirstStatisticsArgs = {
  cursor?: InputMaybe<StatisticsWhereUniqueInput>;
  distinct?: InputMaybe<Array<StatisticsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatisticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatisticsWhereInput>;
};


export type QueryFindFirstStocksArgs = {
  cursor?: InputMaybe<StocksWhereUniqueInput>;
  distinct?: InputMaybe<Array<StocksScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StocksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StocksWhereInput>;
};


export type QueryFindFirstTagsArgs = {
  cursor?: InputMaybe<TagsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TagsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TagsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagsWhereInput>;
};


export type QueryFindFirstTargetsArgs = {
  cursor?: InputMaybe<TargetsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TargetsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TargetsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TargetsWhereInput>;
};


export type QueryFindFirstTax_CategoryArgs = {
  cursor?: InputMaybe<Tax_CategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_CategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_CategoryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type QueryFindFirstTax_RateArgs = {
  cursor?: InputMaybe<Tax_RateWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_RateScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_RateOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type QueryFindFirstTax_RuleArgs = {
  cursor?: InputMaybe<Tax_RuleWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_RuleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type QueryFindFirstTemplatesArgs = {
  cursor?: InputMaybe<TemplatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<TemplatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TemplatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TemplatesWhereInput>;
};


export type QueryFindFirstThemesArgs = {
  cursor?: InputMaybe<ThemesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ThemesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ThemesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ThemesWhereInput>;
};


export type QueryFindFirstTicketingArgs = {
  cursor?: InputMaybe<TicketingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TicketingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TicketingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TicketingWhereInput>;
};


export type QueryFindFirstTransactionsArgs = {
  cursor?: InputMaybe<TransactionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransactionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransactionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TransactionsWhereInput>;
};


export type QueryFindFirstUpload_FileArgs = {
  cursor?: InputMaybe<Upload_FileWhereUniqueInput>;
  distinct?: InputMaybe<Array<Upload_FileScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Upload_FileOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type QueryFindFirstUsersArgs = {
  cursor?: InputMaybe<UsersWhereUniqueInput>;
  distinct?: InputMaybe<Array<UsersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UsersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UsersWhereInput>;
};


export type QueryFindFirstVendorsArgs = {
  cursor?: InputMaybe<VendorsWhereUniqueInput>;
  distinct?: InputMaybe<Array<VendorsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<VendorsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VendorsWhereInput>;
};


export type QueryFindFirstVisitsArgs = {
  cursor?: InputMaybe<VisitsWhereUniqueInput>;
  distinct?: InputMaybe<Array<VisitsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<VisitsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VisitsWhereInput>;
};


export type QueryFindFirstWarehouseArgs = {
  cursor?: InputMaybe<WarehouseWhereUniqueInput>;
  distinct?: InputMaybe<Array<WarehouseScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WarehouseOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WarehouseWhereInput>;
};


export type QueryFindFirstWebhooksArgs = {
  cursor?: InputMaybe<WebhooksWhereUniqueInput>;
  distinct?: InputMaybe<Array<WebhooksScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WebhooksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebhooksWhereInput>;
};


export type QueryFindFirstWebsitesArgs = {
  cursor?: InputMaybe<WebsitesWhereUniqueInput>;
  distinct?: InputMaybe<Array<WebsitesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WebsitesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsitesWhereInput>;
};


export type QueryFindFirstWishlistsArgs = {
  cursor?: InputMaybe<WishlistsWhereUniqueInput>;
  distinct?: InputMaybe<Array<WishlistsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WishlistsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WishlistsWhereInput>;
};


export type QueryFindFirstWorkspacesArgs = {
  cursor?: InputMaybe<WorkspacesWhereUniqueInput>;
  distinct?: InputMaybe<Array<WorkspacesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WorkspacesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type QueryFindFirstZonesArgs = {
  cursor?: InputMaybe<ZonesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ZonesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ZonesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ZonesWhereInput>;
};


export type QueryFindManyAccountsArgs = {
  cursor?: InputMaybe<AccountsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AccountsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AccountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AccountsWhereInput>;
};


export type QueryFindManyAgreementsArgs = {
  cursor?: InputMaybe<AgreementsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AgreementsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AgreementsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgreementsWhereInput>;
};


export type QueryFindManyAnalyticsArgs = {
  cursor?: InputMaybe<AnalyticsWhereUniqueInput>;
  distinct?: InputMaybe<Array<AnalyticsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AnalyticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type QueryFindManyArticlesArgs = {
  cursor?: InputMaybe<ArticlesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ArticlesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ArticlesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ArticlesWhereInput>;
};


export type QueryFindManyAttributesArgs = {
  cursor?: InputMaybe<AttributesWhereUniqueInput>;
  distinct?: InputMaybe<Array<AttributesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AttributesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributesWhereInput>;
};


export type QueryFindManyBrandsArgs = {
  cursor?: InputMaybe<BrandsWhereUniqueInput>;
  distinct?: InputMaybe<Array<BrandsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BrandsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BrandsWhereInput>;
};


export type QueryFindManyCart_Price_RulesArgs = {
  cursor?: InputMaybe<Cart_Price_RulesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Cart_Price_RulesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Cart_Price_RulesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type QueryFindManyCasesArgs = {
  cursor?: InputMaybe<CasesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CasesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CasesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CasesWhereInput>;
};


export type QueryFindManyCategoriesArgs = {
  cursor?: InputMaybe<CategoriesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CategoriesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CategoriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoriesWhereInput>;
};


export type QueryFindManyChannelsArgs = {
  cursor?: InputMaybe<ChannelsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ChannelsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ChannelsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChannelsWhereInput>;
};


export type QueryFindManyCitiesArgs = {
  cursor?: InputMaybe<CitiesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CitiesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CitiesWhereInput>;
};


export type QueryFindManyCollectionsArgs = {
  cursor?: InputMaybe<CollectionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CollectionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CollectionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionsWhereInput>;
};


export type QueryFindManyCommentsArgs = {
  cursor?: InputMaybe<CommentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CommentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CommentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CommentsWhereInput>;
};


export type QueryFindManyContractsArgs = {
  cursor?: InputMaybe<ContractsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ContractsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ContractsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ContractsWhereInput>;
};


export type QueryFindManyCountriesArgs = {
  cursor?: InputMaybe<CountriesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CountriesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CountriesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CountriesWhereInput>;
};


export type QueryFindManyCouponsArgs = {
  cursor?: InputMaybe<CouponsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CouponsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CouponsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponsWhereInput>;
};


export type QueryFindManyCredit_MemosArgs = {
  cursor?: InputMaybe<Credit_MemosWhereUniqueInput>;
  distinct?: InputMaybe<Array<Credit_MemosScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Credit_MemosOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type QueryFindManyCurrenciesArgs = {
  cursor?: InputMaybe<CurrenciesWhereUniqueInput>;
  distinct?: InputMaybe<Array<CurrenciesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CurrenciesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type QueryFindManyCurrency_RatesArgs = {
  cursor?: InputMaybe<Currency_RatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Currency_RatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Currency_RatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type QueryFindManyCurrency_SymbolsArgs = {
  cursor?: InputMaybe<Currency_SymbolsWhereUniqueInput>;
  distinct?: InputMaybe<Array<Currency_SymbolsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Currency_SymbolsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type QueryFindManyCustomersArgs = {
  cursor?: InputMaybe<CustomersWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomersWhereInput>;
};


export type QueryFindManyCustomizationsArgs = {
  cursor?: InputMaybe<CustomizationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomizationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomizationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type QueryFindManyDashboardsArgs = {
  cursor?: InputMaybe<DashboardsWhereUniqueInput>;
  distinct?: InputMaybe<Array<DashboardsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DashboardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DashboardsWhereInput>;
};


export type QueryFindManyEmailsArgs = {
  cursor?: InputMaybe<EmailsWhereUniqueInput>;
  distinct?: InputMaybe<Array<EmailsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EmailsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmailsWhereInput>;
};


export type QueryFindManyEventsArgs = {
  cursor?: InputMaybe<EventsWhereUniqueInput>;
  distinct?: InputMaybe<Array<EventsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<EventsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventsWhereInput>;
};


export type QueryFindManyFullfillmentsArgs = {
  cursor?: InputMaybe<FullfillmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<FullfillmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<FullfillmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type QueryFindManyGift_CertificatesArgs = {
  cursor?: InputMaybe<Gift_CertificatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Gift_CertificatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Gift_CertificatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type QueryFindManyIntegrationsArgs = {
  cursor?: InputMaybe<IntegrationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<IntegrationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<IntegrationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type QueryFindManyInvitationsArgs = {
  cursor?: InputMaybe<InvitationsWhereUniqueInput>;
  distinct?: InputMaybe<Array<InvitationsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InvitationsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvitationsWhereInput>;
};


export type QueryFindManyInvoicesArgs = {
  cursor?: InputMaybe<InvoicesWhereUniqueInput>;
  distinct?: InputMaybe<Array<InvoicesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InvoicesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvoicesWhereInput>;
};


export type QueryFindManyLeadsArgs = {
  cursor?: InputMaybe<LeadsWhereUniqueInput>;
  distinct?: InputMaybe<Array<LeadsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LeadsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LeadsWhereInput>;
};


export type QueryFindManyMessagesArgs = {
  cursor?: InputMaybe<MessagesWhereUniqueInput>;
  distinct?: InputMaybe<Array<MessagesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MessagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MessagesWhereInput>;
};


export type QueryFindManyNewslettersArgs = {
  cursor?: InputMaybe<NewslettersWhereUniqueInput>;
  distinct?: InputMaybe<Array<NewslettersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<NewslettersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NewslettersWhereInput>;
};


export type QueryFindManyOpportunitiesArgs = {
  cursor?: InputMaybe<OpportunitiesWhereUniqueInput>;
  distinct?: InputMaybe<Array<OpportunitiesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OpportunitiesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type QueryFindManyOrdersArgs = {
  cursor?: InputMaybe<OrdersWhereUniqueInput>;
  distinct?: InputMaybe<Array<OrdersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OrdersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrdersWhereInput>;
};


export type QueryFindManyPagesArgs = {
  cursor?: InputMaybe<PagesWhereUniqueInput>;
  distinct?: InputMaybe<Array<PagesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PagesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PagesWhereInput>;
};


export type QueryFindManyPartnersArgs = {
  cursor?: InputMaybe<PartnersWhereUniqueInput>;
  distinct?: InputMaybe<Array<PartnersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PartnersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PartnersWhereInput>;
};


export type QueryFindManyPaymentsArgs = {
  cursor?: InputMaybe<PaymentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PaymentsWhereInput>;
};


export type QueryFindManyPermissionsArgs = {
  cursor?: InputMaybe<PermissionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PermissionsWhereInput>;
};


export type QueryFindManyPluginsArgs = {
  cursor?: InputMaybe<PluginsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PluginsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PluginsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PluginsWhereInput>;
};


export type QueryFindManyPollsArgs = {
  cursor?: InputMaybe<PollsWhereUniqueInput>;
  distinct?: InputMaybe<Array<PollsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PollsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PollsWhereInput>;
};


export type QueryFindManyProduct_TypesArgs = {
  cursor?: InputMaybe<Product_TypesWhereUniqueInput>;
  distinct?: InputMaybe<Array<Product_TypesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Product_TypesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type QueryFindManyProductsArgs = {
  cursor?: InputMaybe<ProductsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductsWhereInput>;
};


export type QueryFindManyProjectsArgs = {
  cursor?: InputMaybe<ProjectsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProjectsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProjectsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProjectsWhereInput>;
};


export type QueryFindManyProvidersArgs = {
  cursor?: InputMaybe<ProvidersWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProvidersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProvidersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProvidersWhereInput>;
};


export type QueryFindManyQuotesArgs = {
  cursor?: InputMaybe<QuotesWhereUniqueInput>;
  distinct?: InputMaybe<Array<QuotesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<QuotesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<QuotesWhereInput>;
};


export type QueryFindManyReportsArgs = {
  cursor?: InputMaybe<ReportsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReportsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReportsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReportsWhereInput>;
};


export type QueryFindManyReturnsArgs = {
  cursor?: InputMaybe<ReturnsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReturnsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReturnsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReturnsWhereInput>;
};


export type QueryFindManyReviewsArgs = {
  cursor?: InputMaybe<ReviewsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ReviewsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ReviewsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReviewsWhereInput>;
};


export type QueryFindManyRewardsArgs = {
  cursor?: InputMaybe<RewardsWhereUniqueInput>;
  distinct?: InputMaybe<Array<RewardsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RewardsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RewardsWhereInput>;
};


export type QueryFindManyRolesArgs = {
  cursor?: InputMaybe<RolesWhereUniqueInput>;
  distinct?: InputMaybe<Array<RolesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RolesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RolesWhereInput>;
};


export type QueryFindManySegmentsArgs = {
  cursor?: InputMaybe<SegmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<SegmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SegmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SegmentsWhereInput>;
};


export type QueryFindManySettingsArgs = {
  cursor?: InputMaybe<SettingsWhereUniqueInput>;
  distinct?: InputMaybe<Array<SettingsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SettingsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SettingsWhereInput>;
};


export type QueryFindManyShipmentsArgs = {
  cursor?: InputMaybe<ShipmentsWhereUniqueInput>;
  distinct?: InputMaybe<Array<ShipmentsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ShipmentsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type QueryFindManySpecial_DiscountsArgs = {
  cursor?: InputMaybe<Special_DiscountsWhereUniqueInput>;
  distinct?: InputMaybe<Array<Special_DiscountsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Special_DiscountsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type QueryFindManyStatesArgs = {
  cursor?: InputMaybe<StatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<StatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatesWhereInput>;
};


export type QueryFindManyStatisticsArgs = {
  cursor?: InputMaybe<StatisticsWhereUniqueInput>;
  distinct?: InputMaybe<Array<StatisticsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StatisticsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatisticsWhereInput>;
};


export type QueryFindManyStocksArgs = {
  cursor?: InputMaybe<StocksWhereUniqueInput>;
  distinct?: InputMaybe<Array<StocksScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StocksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StocksWhereInput>;
};


export type QueryFindManyTagsArgs = {
  cursor?: InputMaybe<TagsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TagsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TagsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagsWhereInput>;
};


export type QueryFindManyTargetsArgs = {
  cursor?: InputMaybe<TargetsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TargetsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TargetsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TargetsWhereInput>;
};


export type QueryFindManyTemplatesArgs = {
  cursor?: InputMaybe<TemplatesWhereUniqueInput>;
  distinct?: InputMaybe<Array<TemplatesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TemplatesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TemplatesWhereInput>;
};


export type QueryFindManyThemesArgs = {
  cursor?: InputMaybe<ThemesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ThemesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ThemesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ThemesWhereInput>;
};


export type QueryFindManyTransactionsArgs = {
  cursor?: InputMaybe<TransactionsWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransactionsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransactionsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TransactionsWhereInput>;
};


export type QueryFindManyUsersArgs = {
  cursor?: InputMaybe<UsersWhereUniqueInput>;
  distinct?: InputMaybe<Array<UsersScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UsersOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UsersWhereInput>;
};


export type QueryFindManyVendorsArgs = {
  cursor?: InputMaybe<VendorsWhereUniqueInput>;
  distinct?: InputMaybe<Array<VendorsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<VendorsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VendorsWhereInput>;
};


export type QueryFindManyVisitsArgs = {
  cursor?: InputMaybe<VisitsWhereUniqueInput>;
  distinct?: InputMaybe<Array<VisitsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<VisitsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VisitsWhereInput>;
};


export type QueryFindManyWebhooksArgs = {
  cursor?: InputMaybe<WebhooksWhereUniqueInput>;
  distinct?: InputMaybe<Array<WebhooksScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WebhooksOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebhooksWhereInput>;
};


export type QueryFindManyWebsitesArgs = {
  cursor?: InputMaybe<WebsitesWhereUniqueInput>;
  distinct?: InputMaybe<Array<WebsitesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WebsitesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsitesWhereInput>;
};


export type QueryFindManyWishlistsArgs = {
  cursor?: InputMaybe<WishlistsWhereUniqueInput>;
  distinct?: InputMaybe<Array<WishlistsScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WishlistsOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WishlistsWhereInput>;
};


export type QueryFindManyWorkspacesArgs = {
  cursor?: InputMaybe<WorkspacesWhereUniqueInput>;
  distinct?: InputMaybe<Array<WorkspacesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WorkspacesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type QueryFindManyZonesArgs = {
  cursor?: InputMaybe<ZonesWhereUniqueInput>;
  distinct?: InputMaybe<Array<ZonesScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ZonesOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ZonesWhereInput>;
};


export type QueryFindUniqueAccountsArgs = {
  where: AccountsWhereUniqueInput;
};


export type QueryFindUniqueAgreementsArgs = {
  where: AgreementsWhereUniqueInput;
};


export type QueryFindUniqueAnalyticsArgs = {
  where: AnalyticsWhereUniqueInput;
};


export type QueryFindUniqueArticlesArgs = {
  where: ArticlesWhereUniqueInput;
};


export type QueryFindUniqueAttributesArgs = {
  where: AttributesWhereUniqueInput;
};


export type QueryFindUniqueBrandsArgs = {
  where: BrandsWhereUniqueInput;
};


export type QueryFindUniqueCart_Price_RulesArgs = {
  where: Cart_Price_RulesWhereUniqueInput;
};


export type QueryFindUniqueCasesArgs = {
  where: CasesWhereUniqueInput;
};


export type QueryFindUniqueCategoriesArgs = {
  where: CategoriesWhereUniqueInput;
};


export type QueryFindUniqueChannelsArgs = {
  where: ChannelsWhereUniqueInput;
};


export type QueryFindUniqueCitiesArgs = {
  where: CitiesWhereUniqueInput;
};


export type QueryFindUniqueCollectionsArgs = {
  where: CollectionsWhereUniqueInput;
};


export type QueryFindUniqueCommentsArgs = {
  where: CommentsWhereUniqueInput;
};


export type QueryFindUniqueContractsArgs = {
  where: ContractsWhereUniqueInput;
};


export type QueryFindUniqueCountriesArgs = {
  where: CountriesWhereUniqueInput;
};


export type QueryFindUniqueCouponsArgs = {
  where: CouponsWhereUniqueInput;
};


export type QueryFindUniqueCredit_MemosArgs = {
  where: Credit_MemosWhereUniqueInput;
};


export type QueryFindUniqueCurrenciesArgs = {
  where: CurrenciesWhereUniqueInput;
};


export type QueryFindUniqueCurrency_RatesArgs = {
  where: Currency_RatesWhereUniqueInput;
};


export type QueryFindUniqueCurrency_SymbolsArgs = {
  where: Currency_SymbolsWhereUniqueInput;
};


export type QueryFindUniqueCustomersArgs = {
  where: CustomersWhereUniqueInput;
};


export type QueryFindUniqueCustomizationsArgs = {
  where: CustomizationsWhereUniqueInput;
};


export type QueryFindUniqueDashboardsArgs = {
  where: DashboardsWhereUniqueInput;
};


export type QueryFindUniqueEmailsArgs = {
  where: EmailsWhereUniqueInput;
};


export type QueryFindUniqueEventsArgs = {
  where: EventsWhereUniqueInput;
};


export type QueryFindUniqueFullfillmentsArgs = {
  where: FullfillmentsWhereUniqueInput;
};


export type QueryFindUniqueGift_CertificatesArgs = {
  where: Gift_CertificatesWhereUniqueInput;
};


export type QueryFindUniqueIntegrationsArgs = {
  where: IntegrationsWhereUniqueInput;
};


export type QueryFindUniqueInvitationsArgs = {
  where: InvitationsWhereUniqueInput;
};


export type QueryFindUniqueInvoicesArgs = {
  where: InvoicesWhereUniqueInput;
};


export type QueryFindUniqueLeadsArgs = {
  where: LeadsWhereUniqueInput;
};


export type QueryFindUniqueMessagesArgs = {
  where: MessagesWhereUniqueInput;
};


export type QueryFindUniqueNewslettersArgs = {
  where: NewslettersWhereUniqueInput;
};


export type QueryFindUniqueOpportunitiesArgs = {
  where: OpportunitiesWhereUniqueInput;
};


export type QueryFindUniqueOrdersArgs = {
  where: OrdersWhereUniqueInput;
};


export type QueryFindUniquePagesArgs = {
  where: PagesWhereUniqueInput;
};


export type QueryFindUniquePartnersArgs = {
  where: PartnersWhereUniqueInput;
};


export type QueryFindUniquePaymentsArgs = {
  where: PaymentsWhereUniqueInput;
};


export type QueryFindUniquePermissionsArgs = {
  where: PermissionsWhereUniqueInput;
};


export type QueryFindUniquePluginsArgs = {
  where: PluginsWhereUniqueInput;
};


export type QueryFindUniquePollsArgs = {
  where: PollsWhereUniqueInput;
};


export type QueryFindUniqueProduct_TypesArgs = {
  where: Product_TypesWhereUniqueInput;
};


export type QueryFindUniqueProductsArgs = {
  where: ProductsWhereUniqueInput;
};


export type QueryFindUniqueProjectsArgs = {
  where: ProjectsWhereUniqueInput;
};


export type QueryFindUniqueProvidersArgs = {
  where: ProvidersWhereUniqueInput;
};


export type QueryFindUniqueQuotesArgs = {
  where: QuotesWhereUniqueInput;
};


export type QueryFindUniqueReportsArgs = {
  where: ReportsWhereUniqueInput;
};


export type QueryFindUniqueReturnsArgs = {
  where: ReturnsWhereUniqueInput;
};


export type QueryFindUniqueReviewsArgs = {
  where: ReviewsWhereUniqueInput;
};


export type QueryFindUniqueRewardsArgs = {
  where: RewardsWhereUniqueInput;
};


export type QueryFindUniqueRolesArgs = {
  where: RolesWhereUniqueInput;
};


export type QueryFindUniqueSegmentsArgs = {
  where: SegmentsWhereUniqueInput;
};


export type QueryFindUniqueSettingsArgs = {
  where: SettingsWhereUniqueInput;
};


export type QueryFindUniqueShipmentsArgs = {
  where: ShipmentsWhereUniqueInput;
};


export type QueryFindUniqueSpecial_DiscountsArgs = {
  where: Special_DiscountsWhereUniqueInput;
};


export type QueryFindUniqueStatesArgs = {
  where: StatesWhereUniqueInput;
};


export type QueryFindUniqueStatisticsArgs = {
  where: StatisticsWhereUniqueInput;
};


export type QueryFindUniqueStocksArgs = {
  where: StocksWhereUniqueInput;
};


export type QueryFindUniqueTagsArgs = {
  where: TagsWhereUniqueInput;
};


export type QueryFindUniqueTargetsArgs = {
  where: TargetsWhereUniqueInput;
};


export type QueryFindUniqueTemplatesArgs = {
  where: TemplatesWhereUniqueInput;
};


export type QueryFindUniqueThemesArgs = {
  where: ThemesWhereUniqueInput;
};


export type QueryFindUniqueTransactionsArgs = {
  where: TransactionsWhereUniqueInput;
};


export type QueryFindUniqueUsersArgs = {
  where: UsersWhereUniqueInput;
};


export type QueryFindUniqueVendorsArgs = {
  where: VendorsWhereUniqueInput;
};


export type QueryFindUniqueVisitsArgs = {
  where: VisitsWhereUniqueInput;
};


export type QueryFindUniqueWebhooksArgs = {
  where: WebhooksWhereUniqueInput;
};


export type QueryFindUniqueWebsitesArgs = {
  where: WebsitesWhereUniqueInput;
};


export type QueryFindUniqueWishlistsArgs = {
  where: WishlistsWhereUniqueInput;
};


export type QueryFindUniqueWorkspacesArgs = {
  where: WorkspacesWhereUniqueInput;
};


export type QueryFindUniqueZonesArgs = {
  where: ZonesWhereUniqueInput;
};


export type QueryGlossariesArgs = {
  cursor?: InputMaybe<GlossaryWhereUniqueInput>;
  distinct?: InputMaybe<Array<GlossaryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<GlossaryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GlossaryWhereInput>;
};


export type QueryGlossaryArgs = {
  where: GlossaryWhereUniqueInput;
};


export type QueryGroupByAccountsArgs = {
  by: Array<AccountsScalarFieldEnum>;
  having?: InputMaybe<AccountsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AccountsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AccountsWhereInput>;
};


export type QueryGroupByAgreementsArgs = {
  by: Array<AgreementsScalarFieldEnum>;
  having?: InputMaybe<AgreementsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AgreementsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AgreementsWhereInput>;
};


export type QueryGroupByAnalyticsArgs = {
  by: Array<AnalyticsScalarFieldEnum>;
  having?: InputMaybe<AnalyticsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AnalyticsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AnalyticsWhereInput>;
};


export type QueryGroupByApitokenArgs = {
  by: Array<ApitokenScalarFieldEnum>;
  having?: InputMaybe<ApitokenScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ApitokenOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ApitokenWhereInput>;
};


export type QueryGroupByArticlesArgs = {
  by: Array<ArticlesScalarFieldEnum>;
  having?: InputMaybe<ArticlesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ArticlesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ArticlesWhereInput>;
};


export type QueryGroupByAttributesArgs = {
  by: Array<AttributesScalarFieldEnum>;
  having?: InputMaybe<AttributesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AttributesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributesWhereInput>;
};


export type QueryGroupByBrandsArgs = {
  by: Array<BrandsScalarFieldEnum>;
  having?: InputMaybe<BrandsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<BrandsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BrandsWhereInput>;
};


export type QueryGroupByCart_Price_RulesArgs = {
  by: Array<Cart_Price_RulesScalarFieldEnum>;
  having?: InputMaybe<Cart_Price_RulesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Cart_Price_RulesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Cart_Price_RulesWhereInput>;
};


export type QueryGroupByCasesArgs = {
  by: Array<CasesScalarFieldEnum>;
  having?: InputMaybe<CasesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CasesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CasesWhereInput>;
};


export type QueryGroupByCatalog_Price_RuleArgs = {
  by: Array<Catalog_Price_RuleScalarFieldEnum>;
  having?: InputMaybe<Catalog_Price_RuleScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Catalog_Price_RuleOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Catalog_Price_RuleWhereInput>;
};


export type QueryGroupByCategoriesArgs = {
  by: Array<CategoriesScalarFieldEnum>;
  having?: InputMaybe<CategoriesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CategoriesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoriesWhereInput>;
};


export type QueryGroupByChannelsArgs = {
  by: Array<ChannelsScalarFieldEnum>;
  having?: InputMaybe<ChannelsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ChannelsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChannelsWhereInput>;
};


export type QueryGroupByChecklistArgs = {
  by: Array<ChecklistScalarFieldEnum>;
  having?: InputMaybe<ChecklistScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ChecklistOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ChecklistWhereInput>;
};


export type QueryGroupByCitiesArgs = {
  by: Array<CitiesScalarFieldEnum>;
  having?: InputMaybe<CitiesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CitiesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CitiesWhereInput>;
};


export type QueryGroupByCollectionsArgs = {
  by: Array<CollectionsScalarFieldEnum>;
  having?: InputMaybe<CollectionsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CollectionsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionsWhereInput>;
};


export type QueryGroupByCommentsArgs = {
  by: Array<CommentsScalarFieldEnum>;
  having?: InputMaybe<CommentsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CommentsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CommentsWhereInput>;
};


export type QueryGroupByContent_TypeArgs = {
  by: Array<Content_TypeScalarFieldEnum>;
  having?: InputMaybe<Content_TypeScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Content_TypeOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Content_TypeWhereInput>;
};


export type QueryGroupByContractsArgs = {
  by: Array<ContractsScalarFieldEnum>;
  having?: InputMaybe<ContractsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ContractsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ContractsWhereInput>;
};


export type QueryGroupByCountriesArgs = {
  by: Array<CountriesScalarFieldEnum>;
  having?: InputMaybe<CountriesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CountriesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CountriesWhereInput>;
};


export type QueryGroupByCouponsArgs = {
  by: Array<CouponsScalarFieldEnum>;
  having?: InputMaybe<CouponsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CouponsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponsWhereInput>;
};


export type QueryGroupByCredit_MemosArgs = {
  by: Array<Credit_MemosScalarFieldEnum>;
  having?: InputMaybe<Credit_MemosScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Credit_MemosOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Credit_MemosWhereInput>;
};


export type QueryGroupByCurrenciesArgs = {
  by: Array<CurrenciesScalarFieldEnum>;
  having?: InputMaybe<CurrenciesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CurrenciesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CurrenciesWhereInput>;
};


export type QueryGroupByCurrency_RatesArgs = {
  by: Array<Currency_RatesScalarFieldEnum>;
  having?: InputMaybe<Currency_RatesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Currency_RatesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_RatesWhereInput>;
};


export type QueryGroupByCurrency_SymbolsArgs = {
  by: Array<Currency_SymbolsScalarFieldEnum>;
  having?: InputMaybe<Currency_SymbolsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Currency_SymbolsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Currency_SymbolsWhereInput>;
};


export type QueryGroupByCustomer_GroupArgs = {
  by: Array<Customer_GroupScalarFieldEnum>;
  having?: InputMaybe<Customer_GroupScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Customer_GroupOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Customer_GroupWhereInput>;
};


export type QueryGroupByCustomersArgs = {
  by: Array<CustomersScalarFieldEnum>;
  having?: InputMaybe<CustomersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CustomersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomersWhereInput>;
};


export type QueryGroupByCustomizationsArgs = {
  by: Array<CustomizationsScalarFieldEnum>;
  having?: InputMaybe<CustomizationsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CustomizationsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomizationsWhereInput>;
};


export type QueryGroupByDashboardsArgs = {
  by: Array<DashboardsScalarFieldEnum>;
  having?: InputMaybe<DashboardsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DashboardsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DashboardsWhereInput>;
};


export type QueryGroupByDeepdiveArgs = {
  by: Array<DeepdiveScalarFieldEnum>;
  having?: InputMaybe<DeepdiveScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DeepdiveOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DeepdiveWhereInput>;
};


export type QueryGroupByDigiboardArgs = {
  by: Array<DigiboardScalarFieldEnum>;
  having?: InputMaybe<DigiboardScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DigiboardOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DigiboardWhereInput>;
};


export type QueryGroupByEmailsArgs = {
  by: Array<EmailsScalarFieldEnum>;
  having?: InputMaybe<EmailsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<EmailsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmailsWhereInput>;
};


export type QueryGroupByEndofshiftArgs = {
  by: Array<EndofshiftScalarFieldEnum>;
  having?: InputMaybe<EndofshiftScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<EndofshiftOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EndofshiftWhereInput>;
};


export type QueryGroupByEventsArgs = {
  by: Array<EventsScalarFieldEnum>;
  having?: InputMaybe<EventsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<EventsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EventsWhereInput>;
};


export type QueryGroupByFullfillmentsArgs = {
  by: Array<FullfillmentsScalarFieldEnum>;
  having?: InputMaybe<FullfillmentsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<FullfillmentsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<FullfillmentsWhereInput>;
};


export type QueryGroupByGift_CertificatesArgs = {
  by: Array<Gift_CertificatesScalarFieldEnum>;
  having?: InputMaybe<Gift_CertificatesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Gift_CertificatesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Gift_CertificatesWhereInput>;
};


export type QueryGroupByGlossaryArgs = {
  by: Array<GlossaryScalarFieldEnum>;
  having?: InputMaybe<GlossaryScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<GlossaryOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GlossaryWhereInput>;
};


export type QueryGroupByImportmArgs = {
  by: Array<ImportmScalarFieldEnum>;
  having?: InputMaybe<ImportmScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ImportmOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ImportmWhereInput>;
};


export type QueryGroupByIntegrationsArgs = {
  by: Array<IntegrationsScalarFieldEnum>;
  having?: InputMaybe<IntegrationsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<IntegrationsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<IntegrationsWhereInput>;
};


export type QueryGroupByInternalizationArgs = {
  by: Array<InternalizationScalarFieldEnum>;
  having?: InputMaybe<InternalizationScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<InternalizationOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InternalizationWhereInput>;
};


export type QueryGroupByInvitationsArgs = {
  by: Array<InvitationsScalarFieldEnum>;
  having?: InputMaybe<InvitationsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<InvitationsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvitationsWhereInput>;
};


export type QueryGroupByInvoicesArgs = {
  by: Array<InvoicesScalarFieldEnum>;
  having?: InputMaybe<InvoicesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<InvoicesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InvoicesWhereInput>;
};


export type QueryGroupByLeadsArgs = {
  by: Array<LeadsScalarFieldEnum>;
  having?: InputMaybe<LeadsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<LeadsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LeadsWhereInput>;
};


export type QueryGroupByLogInArgs = {
  by: Array<LogInScalarFieldEnum>;
  having?: InputMaybe<LogInScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<LogInOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LogInWhereInput>;
};


export type QueryGroupByManufacturerArgs = {
  by: Array<ManufacturerScalarFieldEnum>;
  having?: InputMaybe<ManufacturerScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ManufacturerOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type QueryGroupByMediamanagerArgs = {
  by: Array<MediamanagerScalarFieldEnum>;
  having?: InputMaybe<MediamanagerScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<MediamanagerOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type QueryGroupByMeetingArgs = {
  by: Array<MeetingScalarFieldEnum>;
  having?: InputMaybe<MeetingScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<MeetingOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MeetingWhereInput>;
};


export type QueryGroupByMessagesArgs = {
  by: Array<MessagesScalarFieldEnum>;
  having?: InputMaybe<MessagesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<MessagesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MessagesWhereInput>;
};


export type QueryGroupByNewslettersArgs = {
  by: Array<NewslettersScalarFieldEnum>;
  having?: InputMaybe<NewslettersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<NewslettersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NewslettersWhereInput>;
};


export type QueryGroupByOotoArgs = {
  by: Array<OotoScalarFieldEnum>;
  having?: InputMaybe<OotoScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<OotoOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OotoWhereInput>;
};


export type QueryGroupByOpportunitiesArgs = {
  by: Array<OpportunitiesScalarFieldEnum>;
  having?: InputMaybe<OpportunitiesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<OpportunitiesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OpportunitiesWhereInput>;
};


export type QueryGroupByOrdersArgs = {
  by: Array<OrdersScalarFieldEnum>;
  having?: InputMaybe<OrdersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<OrdersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrdersWhereInput>;
};


export type QueryGroupByPagesArgs = {
  by: Array<PagesScalarFieldEnum>;
  having?: InputMaybe<PagesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PagesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PagesWhereInput>;
};


export type QueryGroupByPartnersArgs = {
  by: Array<PartnersScalarFieldEnum>;
  having?: InputMaybe<PartnersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PartnersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PartnersWhereInput>;
};


export type QueryGroupByPaymentsArgs = {
  by: Array<PaymentsScalarFieldEnum>;
  having?: InputMaybe<PaymentsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PaymentsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PaymentsWhereInput>;
};


export type QueryGroupByPermissionsArgs = {
  by: Array<PermissionsScalarFieldEnum>;
  having?: InputMaybe<PermissionsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PermissionsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PermissionsWhereInput>;
};


export type QueryGroupByPluginsArgs = {
  by: Array<PluginsScalarFieldEnum>;
  having?: InputMaybe<PluginsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PluginsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PluginsWhereInput>;
};


export type QueryGroupByPollsArgs = {
  by: Array<PollsScalarFieldEnum>;
  having?: InputMaybe<PollsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PollsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PollsWhereInput>;
};


export type QueryGroupByProduct_TypesArgs = {
  by: Array<Product_TypesScalarFieldEnum>;
  having?: InputMaybe<Product_TypesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Product_TypesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Product_TypesWhereInput>;
};


export type QueryGroupByProductsArgs = {
  by: Array<ProductsScalarFieldEnum>;
  having?: InputMaybe<ProductsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductsWhereInput>;
};


export type QueryGroupByProjectsArgs = {
  by: Array<ProjectsScalarFieldEnum>;
  having?: InputMaybe<ProjectsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProjectsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProjectsWhereInput>;
};


export type QueryGroupByProvidersArgs = {
  by: Array<ProvidersScalarFieldEnum>;
  having?: InputMaybe<ProvidersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProvidersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProvidersWhereInput>;
};


export type QueryGroupByQuotesArgs = {
  by: Array<QuotesScalarFieldEnum>;
  having?: InputMaybe<QuotesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<QuotesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<QuotesWhereInput>;
};


export type QueryGroupByRatingArgs = {
  by: Array<RatingScalarFieldEnum>;
  having?: InputMaybe<RatingScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<RatingOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RatingWhereInput>;
};


export type QueryGroupByReportsArgs = {
  by: Array<ReportsScalarFieldEnum>;
  having?: InputMaybe<ReportsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ReportsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReportsWhereInput>;
};


export type QueryGroupByReturnsArgs = {
  by: Array<ReturnsScalarFieldEnum>;
  having?: InputMaybe<ReturnsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ReturnsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReturnsWhereInput>;
};


export type QueryGroupByReviewsArgs = {
  by: Array<ReviewsScalarFieldEnum>;
  having?: InputMaybe<ReviewsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ReviewsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ReviewsWhereInput>;
};


export type QueryGroupByRewardsArgs = {
  by: Array<RewardsScalarFieldEnum>;
  having?: InputMaybe<RewardsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<RewardsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RewardsWhereInput>;
};


export type QueryGroupByRolesArgs = {
  by: Array<RolesScalarFieldEnum>;
  having?: InputMaybe<RolesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<RolesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RolesWhereInput>;
};


export type QueryGroupBySchedulerArgs = {
  by: Array<SchedulerScalarFieldEnum>;
  having?: InputMaybe<SchedulerScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SchedulerOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SchedulerWhereInput>;
};


export type QueryGroupBySegmentsArgs = {
  by: Array<SegmentsScalarFieldEnum>;
  having?: InputMaybe<SegmentsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SegmentsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SegmentsWhereInput>;
};


export type QueryGroupBySettingsArgs = {
  by: Array<SettingsScalarFieldEnum>;
  having?: InputMaybe<SettingsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SettingsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SettingsWhereInput>;
};


export type QueryGroupByShipmentsArgs = {
  by: Array<ShipmentsScalarFieldEnum>;
  having?: InputMaybe<ShipmentsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ShipmentsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShipmentsWhereInput>;
};


export type QueryGroupBySpecial_DiscountsArgs = {
  by: Array<Special_DiscountsScalarFieldEnum>;
  having?: InputMaybe<Special_DiscountsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Special_DiscountsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Special_DiscountsWhereInput>;
};


export type QueryGroupByStatesArgs = {
  by: Array<StatesScalarFieldEnum>;
  having?: InputMaybe<StatesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StatesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatesWhereInput>;
};


export type QueryGroupByStatisticsArgs = {
  by: Array<StatisticsScalarFieldEnum>;
  having?: InputMaybe<StatisticsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StatisticsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StatisticsWhereInput>;
};


export type QueryGroupByStocksArgs = {
  by: Array<StocksScalarFieldEnum>;
  having?: InputMaybe<StocksScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StocksOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<StocksWhereInput>;
};


export type QueryGroupByTagsArgs = {
  by: Array<TagsScalarFieldEnum>;
  having?: InputMaybe<TagsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TagsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagsWhereInput>;
};


export type QueryGroupByTargetsArgs = {
  by: Array<TargetsScalarFieldEnum>;
  having?: InputMaybe<TargetsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TargetsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TargetsWhereInput>;
};


export type QueryGroupByTax_CategoryArgs = {
  by: Array<Tax_CategoryScalarFieldEnum>;
  having?: InputMaybe<Tax_CategoryScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Tax_CategoryOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type QueryGroupByTax_RateArgs = {
  by: Array<Tax_RateScalarFieldEnum>;
  having?: InputMaybe<Tax_RateScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Tax_RateOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type QueryGroupByTax_RuleArgs = {
  by: Array<Tax_RuleScalarFieldEnum>;
  having?: InputMaybe<Tax_RuleScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Tax_RuleOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type QueryGroupByTemplatesArgs = {
  by: Array<TemplatesScalarFieldEnum>;
  having?: InputMaybe<TemplatesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TemplatesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TemplatesWhereInput>;
};


export type QueryGroupByThemesArgs = {
  by: Array<ThemesScalarFieldEnum>;
  having?: InputMaybe<ThemesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ThemesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ThemesWhereInput>;
};


export type QueryGroupByTicketingArgs = {
  by: Array<TicketingScalarFieldEnum>;
  having?: InputMaybe<TicketingScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TicketingOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TicketingWhereInput>;
};


export type QueryGroupByTransactionsArgs = {
  by: Array<TransactionsScalarFieldEnum>;
  having?: InputMaybe<TransactionsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TransactionsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TransactionsWhereInput>;
};


export type QueryGroupByUpload_FileArgs = {
  by: Array<Upload_FileScalarFieldEnum>;
  having?: InputMaybe<Upload_FileScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<Upload_FileOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type QueryGroupByUsersArgs = {
  by: Array<UsersScalarFieldEnum>;
  having?: InputMaybe<UsersScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<UsersOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UsersWhereInput>;
};


export type QueryGroupByVendorsArgs = {
  by: Array<VendorsScalarFieldEnum>;
  having?: InputMaybe<VendorsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<VendorsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VendorsWhereInput>;
};


export type QueryGroupByVisitsArgs = {
  by: Array<VisitsScalarFieldEnum>;
  having?: InputMaybe<VisitsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<VisitsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VisitsWhereInput>;
};


export type QueryGroupByWarehouseArgs = {
  by: Array<WarehouseScalarFieldEnum>;
  having?: InputMaybe<WarehouseScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<WarehouseOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WarehouseWhereInput>;
};


export type QueryGroupByWebhooksArgs = {
  by: Array<WebhooksScalarFieldEnum>;
  having?: InputMaybe<WebhooksScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<WebhooksOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebhooksWhereInput>;
};


export type QueryGroupByWebsitesArgs = {
  by: Array<WebsitesScalarFieldEnum>;
  having?: InputMaybe<WebsitesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<WebsitesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsitesWhereInput>;
};


export type QueryGroupByWishlistsArgs = {
  by: Array<WishlistsScalarFieldEnum>;
  having?: InputMaybe<WishlistsScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<WishlistsOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WishlistsWhereInput>;
};


export type QueryGroupByWorkspacesArgs = {
  by: Array<WorkspacesScalarFieldEnum>;
  having?: InputMaybe<WorkspacesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<WorkspacesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WorkspacesWhereInput>;
};


export type QueryGroupByZonesArgs = {
  by: Array<ZonesScalarFieldEnum>;
  having?: InputMaybe<ZonesScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ZonesOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ZonesWhereInput>;
};


export type QueryImportmArgs = {
  where: ImportmWhereUniqueInput;
};


export type QueryImportmsArgs = {
  cursor?: InputMaybe<ImportmWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImportmScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImportmOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ImportmWhereInput>;
};


export type QueryInternalizationArgs = {
  where: InternalizationWhereUniqueInput;
};


export type QueryInternalizationsArgs = {
  cursor?: InputMaybe<InternalizationWhereUniqueInput>;
  distinct?: InputMaybe<Array<InternalizationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<InternalizationOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<InternalizationWhereInput>;
};


export type QueryLogInArgs = {
  where: LogInWhereUniqueInput;
};


export type QueryLogInsArgs = {
  cursor?: InputMaybe<LogInWhereUniqueInput>;
  distinct?: InputMaybe<Array<LogInScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LogInOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LogInWhereInput>;
};


export type QueryManufacturerArgs = {
  where: ManufacturerWhereUniqueInput;
};


export type QueryManufacturersArgs = {
  cursor?: InputMaybe<ManufacturerWhereUniqueInput>;
  distinct?: InputMaybe<Array<ManufacturerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ManufacturerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ManufacturerWhereInput>;
};


export type QueryMediamanagerArgs = {
  where: MediamanagerWhereUniqueInput;
};


export type QueryMediamanagersArgs = {
  cursor?: InputMaybe<MediamanagerWhereUniqueInput>;
  distinct?: InputMaybe<Array<MediamanagerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MediamanagerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MediamanagerWhereInput>;
};


export type QueryMeetingArgs = {
  where: MeetingWhereUniqueInput;
};


export type QueryMeetingsArgs = {
  cursor?: InputMaybe<MeetingWhereUniqueInput>;
  distinct?: InputMaybe<Array<MeetingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<MeetingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<MeetingWhereInput>;
};


export type QueryOotoArgs = {
  where: OotoWhereUniqueInput;
};


export type QueryOotosArgs = {
  cursor?: InputMaybe<OotoWhereUniqueInput>;
  distinct?: InputMaybe<Array<OotoScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<OotoOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OotoWhereInput>;
};


export type QueryRatingArgs = {
  where: RatingWhereUniqueInput;
};


export type QueryRatingsArgs = {
  cursor?: InputMaybe<RatingWhereUniqueInput>;
  distinct?: InputMaybe<Array<RatingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RatingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RatingWhereInput>;
};


export type QuerySchedulerArgs = {
  where: SchedulerWhereUniqueInput;
};


export type QuerySchedulersArgs = {
  cursor?: InputMaybe<SchedulerWhereUniqueInput>;
  distinct?: InputMaybe<Array<SchedulerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SchedulerOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SchedulerWhereInput>;
};


export type QueryTax_CategoriesArgs = {
  cursor?: InputMaybe<Tax_CategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_CategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_CategoryOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_CategoryWhereInput>;
};


export type QueryTax_CategoryArgs = {
  where: Tax_CategoryWhereUniqueInput;
};


export type QueryTax_RateArgs = {
  where: Tax_RateWhereUniqueInput;
};


export type QueryTax_RatesArgs = {
  cursor?: InputMaybe<Tax_RateWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_RateScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_RateOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RateWhereInput>;
};


export type QueryTax_RuleArgs = {
  where: Tax_RuleWhereUniqueInput;
};


export type QueryTax_RulesArgs = {
  cursor?: InputMaybe<Tax_RuleWhereUniqueInput>;
  distinct?: InputMaybe<Array<Tax_RuleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Tax_RuleOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Tax_RuleWhereInput>;
};


export type QueryTicketingArgs = {
  where: TicketingWhereUniqueInput;
};


export type QueryTicketingsArgs = {
  cursor?: InputMaybe<TicketingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TicketingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TicketingOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TicketingWhereInput>;
};


export type QueryUpload_FileArgs = {
  where: Upload_FileWhereUniqueInput;
};


export type QueryUpload_FilesArgs = {
  cursor?: InputMaybe<Upload_FileWhereUniqueInput>;
  distinct?: InputMaybe<Array<Upload_FileScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<Upload_FileOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<Upload_FileWhereInput>;
};


export type QueryWarehouseArgs = {
  where: WarehouseWhereUniqueInput;
};


export type QueryWarehousesArgs = {
  cursor?: InputMaybe<WarehouseWhereUniqueInput>;
  distinct?: InputMaybe<Array<WarehouseScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<WarehouseOrderByWithRelationAndSearchRelevanceInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WarehouseWhereInput>;
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive'
}

export type Quotes = {
  __typename?: 'Quotes';
  account?: Maybe<Scalars['String']>;
  approval_issues?: Maybe<Scalars['String']>;
  approval_status?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  billing_city?: Maybe<Scalars['String']>;
  billing_country?: Maybe<Scalars['String']>;
  billing_postal?: Maybe<Scalars['String']>;
  billing_state?: Maybe<Scalars['String']>;
  billing_street?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  customers_customersToquotes?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  invoice_status?: Maybe<Scalars['String']>;
  line_item_discount?: Maybe<Scalars['String']>;
  line_item_group_total?: Maybe<Scalars['String']>;
  line_item_name?: Maybe<Scalars['String']>;
  line_item_subtotal?: Maybe<Scalars['String']>;
  line_item_tax?: Maybe<Scalars['String']>;
  line_item_total?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  order_id: Scalars['Int'];
  orders?: Maybe<Scalars['String']>;
  payment_terms?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products_productsToquotes?: Maybe<Scalars['String']>;
  quote_stage?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_city?: Maybe<Scalars['String']>;
  shipping_country?: Maybe<Scalars['String']>;
  shipping_postal?: Maybe<Scalars['String']>;
  shipping_state?: Maybe<Scalars['String']>;
  shipping_street?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
  valid_until?: Maybe<Scalars['String']>;
};

export type QuotesAvgAggregate = {
  __typename?: 'QuotesAvgAggregate';
  cust_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type QuotesAvgOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type QuotesCountAggregate = {
  __typename?: 'QuotesCountAggregate';
  _all: Scalars['Int'];
  account: Scalars['Int'];
  approval_issues: Scalars['Int'];
  approval_status: Scalars['Int'];
  assigned_to: Scalars['Int'];
  billing_city: Scalars['Int'];
  billing_country: Scalars['Int'];
  billing_postal: Scalars['Int'];
  billing_state: Scalars['Int'];
  billing_street: Scalars['Int'];
  categories: Scalars['Int'];
  contact: Scalars['Int'];
  created_at: Scalars['Int'];
  currency: Scalars['Int'];
  cust_id: Scalars['Int'];
  customers: Scalars['Int'];
  customers_customersToquotes: Scalars['Int'];
  discount: Scalars['Int'];
  grand_total: Scalars['Int'];
  id: Scalars['Int'];
  invoice_status: Scalars['Int'];
  line_item_discount: Scalars['Int'];
  line_item_group_total: Scalars['Int'];
  line_item_name: Scalars['Int'];
  line_item_subtotal: Scalars['Int'];
  line_item_tax: Scalars['Int'];
  line_item_total: Scalars['Int'];
  name: Scalars['Int'];
  order_id: Scalars['Int'];
  orders: Scalars['Int'];
  payment_terms: Scalars['Int'];
  prod_id: Scalars['Int'];
  products_productsToquotes: Scalars['Int'];
  quote_stage: Scalars['Int'];
  shipping: Scalars['Int'];
  shipping_city: Scalars['Int'];
  shipping_country: Scalars['Int'];
  shipping_postal: Scalars['Int'];
  shipping_state: Scalars['Int'];
  shipping_street: Scalars['Int'];
  shipping_tax: Scalars['Int'];
  subtotal: Scalars['Int'];
  tax: Scalars['Int'];
  total: Scalars['Int'];
  valid_until: Scalars['Int'];
};

export type QuotesCountOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  approval_issues?: InputMaybe<SortOrder>;
  approval_status?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  billing_city?: InputMaybe<SortOrder>;
  billing_country?: InputMaybe<SortOrder>;
  billing_postal?: InputMaybe<SortOrder>;
  billing_state?: InputMaybe<SortOrder>;
  billing_street?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToquotes?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice_status?: InputMaybe<SortOrder>;
  line_item_discount?: InputMaybe<SortOrder>;
  line_item_group_total?: InputMaybe<SortOrder>;
  line_item_name?: InputMaybe<SortOrder>;
  line_item_subtotal?: InputMaybe<SortOrder>;
  line_item_tax?: InputMaybe<SortOrder>;
  line_item_total?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  payment_terms?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products_productsToquotes?: InputMaybe<SortOrder>;
  quote_stage?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_city?: InputMaybe<SortOrder>;
  shipping_country?: InputMaybe<SortOrder>;
  shipping_postal?: InputMaybe<SortOrder>;
  shipping_state?: InputMaybe<SortOrder>;
  shipping_street?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  valid_until?: InputMaybe<SortOrder>;
};

export type QuotesCreateInput = {
  account?: InputMaybe<Scalars['String']>;
  approval_issues?: InputMaybe<Scalars['String']>;
  approval_status?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  billing_city?: InputMaybe<Scalars['String']>;
  billing_country?: InputMaybe<Scalars['String']>;
  billing_postal?: InputMaybe<Scalars['String']>;
  billing_state?: InputMaybe<Scalars['String']>;
  billing_street?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  customers_customersToquotes?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  grand_total?: InputMaybe<Scalars['String']>;
  invoice_status?: InputMaybe<Scalars['String']>;
  line_item_discount?: InputMaybe<Scalars['String']>;
  line_item_group_total?: InputMaybe<Scalars['String']>;
  line_item_name?: InputMaybe<Scalars['String']>;
  line_item_subtotal?: InputMaybe<Scalars['String']>;
  line_item_tax?: InputMaybe<Scalars['String']>;
  line_item_total?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  order_id: Scalars['Int'];
  orders?: InputMaybe<Scalars['String']>;
  payment_terms?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products_productsToquotes?: InputMaybe<Scalars['String']>;
  quote_stage?: InputMaybe<Scalars['String']>;
  shipping?: InputMaybe<Scalars['String']>;
  shipping_city?: InputMaybe<Scalars['String']>;
  shipping_country?: InputMaybe<Scalars['String']>;
  shipping_postal?: InputMaybe<Scalars['String']>;
  shipping_state?: InputMaybe<Scalars['String']>;
  shipping_street?: InputMaybe<Scalars['String']>;
  shipping_tax?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
  tax?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['String']>;
  valid_until?: InputMaybe<Scalars['String']>;
};

export type QuotesCreateManyInput = {
  account?: InputMaybe<Scalars['String']>;
  approval_issues?: InputMaybe<Scalars['String']>;
  approval_status?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  billing_city?: InputMaybe<Scalars['String']>;
  billing_country?: InputMaybe<Scalars['String']>;
  billing_postal?: InputMaybe<Scalars['String']>;
  billing_state?: InputMaybe<Scalars['String']>;
  billing_street?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  contact?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  currency?: InputMaybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: InputMaybe<Scalars['String']>;
  customers_customersToquotes?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['String']>;
  grand_total?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  invoice_status?: InputMaybe<Scalars['String']>;
  line_item_discount?: InputMaybe<Scalars['String']>;
  line_item_group_total?: InputMaybe<Scalars['String']>;
  line_item_name?: InputMaybe<Scalars['String']>;
  line_item_subtotal?: InputMaybe<Scalars['String']>;
  line_item_tax?: InputMaybe<Scalars['String']>;
  line_item_total?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  order_id: Scalars['Int'];
  orders?: InputMaybe<Scalars['String']>;
  payment_terms?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products_productsToquotes?: InputMaybe<Scalars['String']>;
  quote_stage?: InputMaybe<Scalars['String']>;
  shipping?: InputMaybe<Scalars['String']>;
  shipping_city?: InputMaybe<Scalars['String']>;
  shipping_country?: InputMaybe<Scalars['String']>;
  shipping_postal?: InputMaybe<Scalars['String']>;
  shipping_state?: InputMaybe<Scalars['String']>;
  shipping_street?: InputMaybe<Scalars['String']>;
  shipping_tax?: InputMaybe<Scalars['String']>;
  subtotal?: InputMaybe<Scalars['String']>;
  tax?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['String']>;
  valid_until?: InputMaybe<Scalars['String']>;
};

export type QuotesGroupBy = {
  __typename?: 'QuotesGroupBy';
  _avg?: Maybe<QuotesAvgAggregate>;
  _count?: Maybe<QuotesCountAggregate>;
  _max?: Maybe<QuotesMaxAggregate>;
  _min?: Maybe<QuotesMinAggregate>;
  _sum?: Maybe<QuotesSumAggregate>;
  account?: Maybe<Scalars['String']>;
  approval_issues?: Maybe<Scalars['String']>;
  approval_status?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  billing_city?: Maybe<Scalars['String']>;
  billing_country?: Maybe<Scalars['String']>;
  billing_postal?: Maybe<Scalars['String']>;
  billing_state?: Maybe<Scalars['String']>;
  billing_street?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  cust_id: Scalars['Int'];
  customers?: Maybe<Scalars['String']>;
  customers_customersToquotes?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  invoice_status?: Maybe<Scalars['String']>;
  line_item_discount?: Maybe<Scalars['String']>;
  line_item_group_total?: Maybe<Scalars['String']>;
  line_item_name?: Maybe<Scalars['String']>;
  line_item_subtotal?: Maybe<Scalars['String']>;
  line_item_tax?: Maybe<Scalars['String']>;
  line_item_total?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  order_id: Scalars['Int'];
  orders?: Maybe<Scalars['String']>;
  payment_terms?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products_productsToquotes?: Maybe<Scalars['String']>;
  quote_stage?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_city?: Maybe<Scalars['String']>;
  shipping_country?: Maybe<Scalars['String']>;
  shipping_postal?: Maybe<Scalars['String']>;
  shipping_state?: Maybe<Scalars['String']>;
  shipping_street?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
  valid_until?: Maybe<Scalars['String']>;
};

export type QuotesMaxAggregate = {
  __typename?: 'QuotesMaxAggregate';
  account?: Maybe<Scalars['String']>;
  approval_issues?: Maybe<Scalars['String']>;
  approval_status?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  billing_city?: Maybe<Scalars['String']>;
  billing_country?: Maybe<Scalars['String']>;
  billing_postal?: Maybe<Scalars['String']>;
  billing_state?: Maybe<Scalars['String']>;
  billing_street?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  customers_customersToquotes?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  invoice_status?: Maybe<Scalars['String']>;
  line_item_discount?: Maybe<Scalars['String']>;
  line_item_group_total?: Maybe<Scalars['String']>;
  line_item_name?: Maybe<Scalars['String']>;
  line_item_subtotal?: Maybe<Scalars['String']>;
  line_item_tax?: Maybe<Scalars['String']>;
  line_item_total?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order_id?: Maybe<Scalars['Int']>;
  orders?: Maybe<Scalars['String']>;
  payment_terms?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products_productsToquotes?: Maybe<Scalars['String']>;
  quote_stage?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_city?: Maybe<Scalars['String']>;
  shipping_country?: Maybe<Scalars['String']>;
  shipping_postal?: Maybe<Scalars['String']>;
  shipping_state?: Maybe<Scalars['String']>;
  shipping_street?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
  valid_until?: Maybe<Scalars['String']>;
};

export type QuotesMaxOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  approval_issues?: InputMaybe<SortOrder>;
  approval_status?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  billing_city?: InputMaybe<SortOrder>;
  billing_country?: InputMaybe<SortOrder>;
  billing_postal?: InputMaybe<SortOrder>;
  billing_state?: InputMaybe<SortOrder>;
  billing_street?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToquotes?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice_status?: InputMaybe<SortOrder>;
  line_item_discount?: InputMaybe<SortOrder>;
  line_item_group_total?: InputMaybe<SortOrder>;
  line_item_name?: InputMaybe<SortOrder>;
  line_item_subtotal?: InputMaybe<SortOrder>;
  line_item_tax?: InputMaybe<SortOrder>;
  line_item_total?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  payment_terms?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products_productsToquotes?: InputMaybe<SortOrder>;
  quote_stage?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_city?: InputMaybe<SortOrder>;
  shipping_country?: InputMaybe<SortOrder>;
  shipping_postal?: InputMaybe<SortOrder>;
  shipping_state?: InputMaybe<SortOrder>;
  shipping_street?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  valid_until?: InputMaybe<SortOrder>;
};

export type QuotesMinAggregate = {
  __typename?: 'QuotesMinAggregate';
  account?: Maybe<Scalars['String']>;
  approval_issues?: Maybe<Scalars['String']>;
  approval_status?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  billing_city?: Maybe<Scalars['String']>;
  billing_country?: Maybe<Scalars['String']>;
  billing_postal?: Maybe<Scalars['String']>;
  billing_state?: Maybe<Scalars['String']>;
  billing_street?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  currency?: Maybe<Scalars['String']>;
  cust_id?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['String']>;
  customers_customersToquotes?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['String']>;
  grand_total?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  invoice_status?: Maybe<Scalars['String']>;
  line_item_discount?: Maybe<Scalars['String']>;
  line_item_group_total?: Maybe<Scalars['String']>;
  line_item_name?: Maybe<Scalars['String']>;
  line_item_subtotal?: Maybe<Scalars['String']>;
  line_item_tax?: Maybe<Scalars['String']>;
  line_item_total?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  order_id?: Maybe<Scalars['Int']>;
  orders?: Maybe<Scalars['String']>;
  payment_terms?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products_productsToquotes?: Maybe<Scalars['String']>;
  quote_stage?: Maybe<Scalars['String']>;
  shipping?: Maybe<Scalars['String']>;
  shipping_city?: Maybe<Scalars['String']>;
  shipping_country?: Maybe<Scalars['String']>;
  shipping_postal?: Maybe<Scalars['String']>;
  shipping_state?: Maybe<Scalars['String']>;
  shipping_street?: Maybe<Scalars['String']>;
  shipping_tax?: Maybe<Scalars['String']>;
  subtotal?: Maybe<Scalars['String']>;
  tax?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['String']>;
  valid_until?: Maybe<Scalars['String']>;
};

export type QuotesMinOrderByAggregateInput = {
  account?: InputMaybe<SortOrder>;
  approval_issues?: InputMaybe<SortOrder>;
  approval_status?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  billing_city?: InputMaybe<SortOrder>;
  billing_country?: InputMaybe<SortOrder>;
  billing_postal?: InputMaybe<SortOrder>;
  billing_state?: InputMaybe<SortOrder>;
  billing_street?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToquotes?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice_status?: InputMaybe<SortOrder>;
  line_item_discount?: InputMaybe<SortOrder>;
  line_item_group_total?: InputMaybe<SortOrder>;
  line_item_name?: InputMaybe<SortOrder>;
  line_item_subtotal?: InputMaybe<SortOrder>;
  line_item_tax?: InputMaybe<SortOrder>;
  line_item_total?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  payment_terms?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products_productsToquotes?: InputMaybe<SortOrder>;
  quote_stage?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_city?: InputMaybe<SortOrder>;
  shipping_country?: InputMaybe<SortOrder>;
  shipping_postal?: InputMaybe<SortOrder>;
  shipping_state?: InputMaybe<SortOrder>;
  shipping_street?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  valid_until?: InputMaybe<SortOrder>;
};

export enum QuotesOrderByRelevanceFieldEnum {
  Account = 'account',
  ApprovalIssues = 'approval_issues',
  ApprovalStatus = 'approval_status',
  AssignedTo = 'assigned_to',
  BillingCity = 'billing_city',
  BillingCountry = 'billing_country',
  BillingPostal = 'billing_postal',
  BillingState = 'billing_state',
  BillingStreet = 'billing_street',
  Categories = 'categories',
  Contact = 'contact',
  Currency = 'currency',
  Customers = 'customers',
  CustomersCustomersToquotes = 'customers_customersToquotes',
  Discount = 'discount',
  GrandTotal = 'grand_total',
  InvoiceStatus = 'invoice_status',
  LineItemDiscount = 'line_item_discount',
  LineItemGroupTotal = 'line_item_group_total',
  LineItemName = 'line_item_name',
  LineItemSubtotal = 'line_item_subtotal',
  LineItemTax = 'line_item_tax',
  LineItemTotal = 'line_item_total',
  Name = 'name',
  Orders = 'orders',
  PaymentTerms = 'payment_terms',
  ProductsProductsToquotes = 'products_productsToquotes',
  QuoteStage = 'quote_stage',
  Shipping = 'shipping',
  ShippingCity = 'shipping_city',
  ShippingCountry = 'shipping_country',
  ShippingPostal = 'shipping_postal',
  ShippingState = 'shipping_state',
  ShippingStreet = 'shipping_street',
  ShippingTax = 'shipping_tax',
  Subtotal = 'subtotal',
  Tax = 'tax',
  Total = 'total',
  ValidUntil = 'valid_until'
}

export type QuotesOrderByRelevanceInput = {
  fields: Array<QuotesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type QuotesOrderByWithAggregationInput = {
  _avg?: InputMaybe<QuotesAvgOrderByAggregateInput>;
  _count?: InputMaybe<QuotesCountOrderByAggregateInput>;
  _max?: InputMaybe<QuotesMaxOrderByAggregateInput>;
  _min?: InputMaybe<QuotesMinOrderByAggregateInput>;
  _sum?: InputMaybe<QuotesSumOrderByAggregateInput>;
  account?: InputMaybe<SortOrder>;
  approval_issues?: InputMaybe<SortOrder>;
  approval_status?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  billing_city?: InputMaybe<SortOrder>;
  billing_country?: InputMaybe<SortOrder>;
  billing_postal?: InputMaybe<SortOrder>;
  billing_state?: InputMaybe<SortOrder>;
  billing_street?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToquotes?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice_status?: InputMaybe<SortOrder>;
  line_item_discount?: InputMaybe<SortOrder>;
  line_item_group_total?: InputMaybe<SortOrder>;
  line_item_name?: InputMaybe<SortOrder>;
  line_item_subtotal?: InputMaybe<SortOrder>;
  line_item_tax?: InputMaybe<SortOrder>;
  line_item_total?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  payment_terms?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products_productsToquotes?: InputMaybe<SortOrder>;
  quote_stage?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_city?: InputMaybe<SortOrder>;
  shipping_country?: InputMaybe<SortOrder>;
  shipping_postal?: InputMaybe<SortOrder>;
  shipping_state?: InputMaybe<SortOrder>;
  shipping_street?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  valid_until?: InputMaybe<SortOrder>;
};

export type QuotesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<QuotesOrderByRelevanceInput>;
  account?: InputMaybe<SortOrder>;
  approval_issues?: InputMaybe<SortOrder>;
  approval_status?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  billing_city?: InputMaybe<SortOrder>;
  billing_country?: InputMaybe<SortOrder>;
  billing_postal?: InputMaybe<SortOrder>;
  billing_state?: InputMaybe<SortOrder>;
  billing_street?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<SortOrder>;
  cust_id?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToquotes?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  grand_total?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  invoice_status?: InputMaybe<SortOrder>;
  line_item_discount?: InputMaybe<SortOrder>;
  line_item_group_total?: InputMaybe<SortOrder>;
  line_item_name?: InputMaybe<SortOrder>;
  line_item_subtotal?: InputMaybe<SortOrder>;
  line_item_tax?: InputMaybe<SortOrder>;
  line_item_total?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  payment_terms?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products_productsToquotes?: InputMaybe<SortOrder>;
  quote_stage?: InputMaybe<SortOrder>;
  shipping?: InputMaybe<SortOrder>;
  shipping_city?: InputMaybe<SortOrder>;
  shipping_country?: InputMaybe<SortOrder>;
  shipping_postal?: InputMaybe<SortOrder>;
  shipping_state?: InputMaybe<SortOrder>;
  shipping_street?: InputMaybe<SortOrder>;
  shipping_tax?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  tax?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  valid_until?: InputMaybe<SortOrder>;
};

export enum QuotesScalarFieldEnum {
  Account = 'account',
  ApprovalIssues = 'approval_issues',
  ApprovalStatus = 'approval_status',
  AssignedTo = 'assigned_to',
  BillingCity = 'billing_city',
  BillingCountry = 'billing_country',
  BillingPostal = 'billing_postal',
  BillingState = 'billing_state',
  BillingStreet = 'billing_street',
  Categories = 'categories',
  Contact = 'contact',
  CreatedAt = 'created_at',
  Currency = 'currency',
  CustId = 'cust_id',
  Customers = 'customers',
  CustomersCustomersToquotes = 'customers_customersToquotes',
  Discount = 'discount',
  GrandTotal = 'grand_total',
  Id = 'id',
  InvoiceStatus = 'invoice_status',
  LineItemDiscount = 'line_item_discount',
  LineItemGroupTotal = 'line_item_group_total',
  LineItemName = 'line_item_name',
  LineItemSubtotal = 'line_item_subtotal',
  LineItemTax = 'line_item_tax',
  LineItemTotal = 'line_item_total',
  Name = 'name',
  OrderId = 'order_id',
  Orders = 'orders',
  PaymentTerms = 'payment_terms',
  ProdId = 'prod_id',
  ProductsProductsToquotes = 'products_productsToquotes',
  QuoteStage = 'quote_stage',
  Shipping = 'shipping',
  ShippingCity = 'shipping_city',
  ShippingCountry = 'shipping_country',
  ShippingPostal = 'shipping_postal',
  ShippingState = 'shipping_state',
  ShippingStreet = 'shipping_street',
  ShippingTax = 'shipping_tax',
  Subtotal = 'subtotal',
  Tax = 'tax',
  Total = 'total',
  ValidUntil = 'valid_until'
}

export type QuotesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<QuotesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<QuotesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<QuotesScalarWhereWithAggregatesInput>>;
  account?: InputMaybe<StringNullableWithAggregatesFilter>;
  approval_issues?: InputMaybe<StringNullableWithAggregatesFilter>;
  approval_status?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  billing_city?: InputMaybe<StringNullableWithAggregatesFilter>;
  billing_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  billing_postal?: InputMaybe<StringNullableWithAggregatesFilter>;
  billing_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  billing_street?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  contact?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  cust_id?: InputMaybe<IntWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers_customersToquotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<StringNullableWithAggregatesFilter>;
  grand_total?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  invoice_status?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_discount?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_group_total?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_subtotal?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  line_item_total?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  order_id?: InputMaybe<IntWithAggregatesFilter>;
  orders?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_terms?: InputMaybe<StringNullableWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products_productsToquotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  quote_stage?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_city?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_postal?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_street?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipping_tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  subtotal?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax?: InputMaybe<StringNullableWithAggregatesFilter>;
  total?: InputMaybe<StringNullableWithAggregatesFilter>;
  valid_until?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type QuotesSumAggregate = {
  __typename?: 'QuotesSumAggregate';
  cust_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type QuotesSumOrderByAggregateInput = {
  cust_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type QuotesUpdateInput = {
  account?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  approval_issues?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  approval_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_street?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers_customersToquotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  invoice_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_group_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_terms?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products_productsToquotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quote_stage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_street?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  valid_until?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type QuotesUpdateManyMutationInput = {
  account?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  approval_issues?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  approval_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  billing_street?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cust_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers_customersToquotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  grand_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  invoice_status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_discount?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_group_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  line_item_total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_terms?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products_productsToquotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quote_stage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_street?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipping_tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  valid_until?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type QuotesWhereInput = {
  AND?: InputMaybe<Array<QuotesWhereInput>>;
  NOT?: InputMaybe<Array<QuotesWhereInput>>;
  OR?: InputMaybe<Array<QuotesWhereInput>>;
  account?: InputMaybe<StringNullableFilter>;
  approval_issues?: InputMaybe<StringNullableFilter>;
  approval_status?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  billing_city?: InputMaybe<StringNullableFilter>;
  billing_country?: InputMaybe<StringNullableFilter>;
  billing_postal?: InputMaybe<StringNullableFilter>;
  billing_state?: InputMaybe<StringNullableFilter>;
  billing_street?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  contact?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  currency?: InputMaybe<StringNullableFilter>;
  cust_id?: InputMaybe<IntFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  customers_customersToquotes?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<StringNullableFilter>;
  grand_total?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  invoice_status?: InputMaybe<StringNullableFilter>;
  line_item_discount?: InputMaybe<StringNullableFilter>;
  line_item_group_total?: InputMaybe<StringNullableFilter>;
  line_item_name?: InputMaybe<StringNullableFilter>;
  line_item_subtotal?: InputMaybe<StringNullableFilter>;
  line_item_tax?: InputMaybe<StringNullableFilter>;
  line_item_total?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  order_id?: InputMaybe<IntFilter>;
  orders?: InputMaybe<StringNullableFilter>;
  payment_terms?: InputMaybe<StringNullableFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products_productsToquotes?: InputMaybe<StringNullableFilter>;
  quote_stage?: InputMaybe<StringNullableFilter>;
  shipping?: InputMaybe<StringNullableFilter>;
  shipping_city?: InputMaybe<StringNullableFilter>;
  shipping_country?: InputMaybe<StringNullableFilter>;
  shipping_postal?: InputMaybe<StringNullableFilter>;
  shipping_state?: InputMaybe<StringNullableFilter>;
  shipping_street?: InputMaybe<StringNullableFilter>;
  shipping_tax?: InputMaybe<StringNullableFilter>;
  subtotal?: InputMaybe<StringNullableFilter>;
  tax?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<StringNullableFilter>;
  valid_until?: InputMaybe<StringNullableFilter>;
};

export type QuotesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Rating = {
  __typename?: 'Rating';
  active?: Maybe<Scalars['Boolean']>;
  default_store_view?: Maybe<Scalars['String']>;
  default_value?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  rating_visibility?: Maybe<Scalars['String']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingAvgAggregate = {
  __typename?: 'RatingAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export type RatingCountAggregate = {
  __typename?: 'RatingCountAggregate';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  default_store_view: Scalars['Int'];
  default_value: Scalars['Int'];
  id: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  rating_visibility: Scalars['Int'];
  sort_order: Scalars['Int'];
};

export type RatingCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  default_value?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rating_visibility?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export type RatingCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  default_store_view?: InputMaybe<Scalars['String']>;
  default_value?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  rating_visibility?: InputMaybe<Scalars['String']>;
  sort_order?: InputMaybe<Scalars['Decimal']>;
};

export type RatingCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  default_store_view?: InputMaybe<Scalars['String']>;
  default_value?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  rating_visibility?: InputMaybe<Scalars['String']>;
  sort_order?: InputMaybe<Scalars['Decimal']>;
};

export type RatingGroupBy = {
  __typename?: 'RatingGroupBy';
  _avg?: Maybe<RatingAvgAggregate>;
  _count?: Maybe<RatingCountAggregate>;
  _max?: Maybe<RatingMaxAggregate>;
  _min?: Maybe<RatingMinAggregate>;
  _sum?: Maybe<RatingSumAggregate>;
  active?: Maybe<Scalars['Boolean']>;
  default_store_view?: Maybe<Scalars['String']>;
  default_value?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  rating_visibility?: Maybe<Scalars['String']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingMaxAggregate = {
  __typename?: 'RatingMaxAggregate';
  active?: Maybe<Scalars['Boolean']>;
  default_store_view?: Maybe<Scalars['String']>;
  default_value?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  rating_visibility?: Maybe<Scalars['String']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  default_value?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rating_visibility?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export type RatingMinAggregate = {
  __typename?: 'RatingMinAggregate';
  active?: Maybe<Scalars['Boolean']>;
  default_store_view?: Maybe<Scalars['String']>;
  default_value?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  rating_visibility?: Maybe<Scalars['String']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  default_value?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rating_visibility?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export enum RatingOrderByRelevanceFieldEnum {
  DefaultStoreView = 'default_store_view',
  DefaultValue = 'default_value',
  Products = 'products',
  RatingVisibility = 'rating_visibility'
}

export type RatingOrderByRelevanceInput = {
  fields: Array<RatingOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type RatingOrderByWithAggregationInput = {
  _avg?: InputMaybe<RatingAvgOrderByAggregateInput>;
  _count?: InputMaybe<RatingCountOrderByAggregateInput>;
  _max?: InputMaybe<RatingMaxOrderByAggregateInput>;
  _min?: InputMaybe<RatingMinOrderByAggregateInput>;
  _sum?: InputMaybe<RatingSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  default_value?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rating_visibility?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export type RatingOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<RatingOrderByRelevanceInput>;
  active?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  default_value?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rating_visibility?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export enum RatingScalarFieldEnum {
  Active = 'active',
  DefaultStoreView = 'default_store_view',
  DefaultValue = 'default_value',
  Id = 'id',
  ProdId = 'prod_id',
  Products = 'products',
  RatingVisibility = 'rating_visibility',
  SortOrder = 'sort_order'
}

export type RatingScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<RatingScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<RatingScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<RatingScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  default_store_view?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_value?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  rating_visibility?: InputMaybe<StringNullableWithAggregatesFilter>;
  sort_order?: InputMaybe<DecimalNullableWithAggregatesFilter>;
};

export type RatingSumAggregate = {
  __typename?: 'RatingSumAggregate';
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  sort_order?: Maybe<Scalars['Decimal']>;
};

export type RatingSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  sort_order?: InputMaybe<SortOrder>;
};

export type RatingUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  default_store_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating_visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sort_order?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type RatingUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  default_store_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating_visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sort_order?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
};

export type RatingWhereInput = {
  AND?: InputMaybe<Array<RatingWhereInput>>;
  NOT?: InputMaybe<Array<RatingWhereInput>>;
  OR?: InputMaybe<Array<RatingWhereInput>>;
  active?: InputMaybe<BoolNullableFilter>;
  default_store_view?: InputMaybe<StringNullableFilter>;
  default_value?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  rating_visibility?: InputMaybe<StringNullableFilter>;
  sort_order?: InputMaybe<DecimalNullableFilter>;
};

export type RatingWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Reports = {
  __typename?: 'Reports';
  applied_coupon?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ip_address?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Decimal']>;
  subtotal?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
};

export type ReportsAvgAggregate = {
  __typename?: 'ReportsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Decimal']>;
};

export type ReportsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type ReportsCountAggregate = {
  __typename?: 'ReportsCountAggregate';
  _all: Scalars['Int'];
  applied_coupon: Scalars['Int'];
  created: Scalars['Int'];
  customer: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  ip_address: Scalars['Int'];
  products: Scalars['Int'];
  quantity: Scalars['Int'];
  subtotal: Scalars['Int'];
  updated: Scalars['Int'];
};

export type ReportsCountOrderByAggregateInput = {
  applied_coupon?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip_address?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
};

export type ReportsCreateInput = {
  applied_coupon?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  ip_address?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Decimal']>;
  subtotal?: InputMaybe<Scalars['String']>;
  updated?: InputMaybe<Scalars['DateTime']>;
};

export type ReportsCreateManyInput = {
  applied_coupon?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  customer?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  ip_address?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['Decimal']>;
  subtotal?: InputMaybe<Scalars['String']>;
  updated?: InputMaybe<Scalars['DateTime']>;
};

export type ReportsGroupBy = {
  __typename?: 'ReportsGroupBy';
  _avg?: Maybe<ReportsAvgAggregate>;
  _count?: Maybe<ReportsCountAggregate>;
  _max?: Maybe<ReportsMaxAggregate>;
  _min?: Maybe<ReportsMinAggregate>;
  _sum?: Maybe<ReportsSumAggregate>;
  applied_coupon?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  ip_address?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Decimal']>;
  subtotal?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
};

export type ReportsMaxAggregate = {
  __typename?: 'ReportsMaxAggregate';
  applied_coupon?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ip_address?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Decimal']>;
  subtotal?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
};

export type ReportsMaxOrderByAggregateInput = {
  applied_coupon?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip_address?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
};

export type ReportsMinAggregate = {
  __typename?: 'ReportsMinAggregate';
  applied_coupon?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  ip_address?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Decimal']>;
  subtotal?: Maybe<Scalars['String']>;
  updated?: Maybe<Scalars['DateTime']>;
};

export type ReportsMinOrderByAggregateInput = {
  applied_coupon?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip_address?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
};

export enum ReportsOrderByRelevanceFieldEnum {
  AppliedCoupon = 'applied_coupon',
  Customer = 'customer',
  Email = 'email',
  IpAddress = 'ip_address',
  Products = 'products',
  Subtotal = 'subtotal'
}

export type ReportsOrderByRelevanceInput = {
  fields: Array<ReportsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ReportsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ReportsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ReportsCountOrderByAggregateInput>;
  _max?: InputMaybe<ReportsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ReportsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ReportsSumOrderByAggregateInput>;
  applied_coupon?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip_address?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
};

export type ReportsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ReportsOrderByRelevanceInput>;
  applied_coupon?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip_address?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  subtotal?: InputMaybe<SortOrder>;
  updated?: InputMaybe<SortOrder>;
};

export enum ReportsScalarFieldEnum {
  AppliedCoupon = 'applied_coupon',
  Created = 'created',
  Customer = 'customer',
  Email = 'email',
  Id = 'id',
  IpAddress = 'ip_address',
  Products = 'products',
  Quantity = 'quantity',
  Subtotal = 'subtotal',
  Updated = 'updated'
}

export type ReportsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ReportsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ReportsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ReportsScalarWhereWithAggregatesInput>>;
  applied_coupon?: InputMaybe<StringNullableWithAggregatesFilter>;
  created?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customer?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  ip_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  quantity?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  subtotal?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ReportsSumAggregate = {
  __typename?: 'ReportsSumAggregate';
  id?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Decimal']>;
};

export type ReportsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type ReportsUpdateInput = {
  applied_coupon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ReportsUpdateManyMutationInput = {
  applied_coupon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ip_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  subtotal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ReportsWhereInput = {
  AND?: InputMaybe<Array<ReportsWhereInput>>;
  NOT?: InputMaybe<Array<ReportsWhereInput>>;
  OR?: InputMaybe<Array<ReportsWhereInput>>;
  applied_coupon?: InputMaybe<StringNullableFilter>;
  created?: InputMaybe<DateTimeNullableFilter>;
  customer?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  ip_address?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<DecimalNullableFilter>;
  subtotal?: InputMaybe<StringNullableFilter>;
  updated?: InputMaybe<DateTimeNullableFilter>;
};

export type ReportsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Returns = {
  __typename?: 'Returns';
  case_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  howShipped?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  liquidationReason?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  return_prefix?: Maybe<Scalars['String']>;
  shipTo?: Maybe<Scalars['String']>;
  shippingDescription?: Maybe<Scalars['String']>;
  shippingNumber?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  validity?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
};

export type ReturnsAvgAggregate = {
  __typename?: 'ReturnsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ReturnsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ReturnsCountAggregate = {
  __typename?: 'ReturnsCountAggregate';
  _all: Scalars['Int'];
  case_id: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  height: Scalars['Int'];
  howShipped: Scalars['Int'];
  id: Scalars['Int'];
  liquidationReason: Scalars['Int'];
  location: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  return_prefix: Scalars['Int'];
  shipTo: Scalars['Int'];
  shippingDescription: Scalars['Int'];
  shippingNumber: Scalars['Int'];
  status: Scalars['Int'];
  type: Scalars['Int'];
  validity: Scalars['Int'];
  weight: Scalars['Int'];
};

export type ReturnsCountOrderByAggregateInput = {
  case_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  howShipped?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  liquidationReason?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  return_prefix?: InputMaybe<SortOrder>;
  shipTo?: InputMaybe<SortOrder>;
  shippingDescription?: InputMaybe<SortOrder>;
  shippingNumber?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  validity?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export type ReturnsCreateInput = {
  case_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  howShipped?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  liquidationReason?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  return_prefix?: InputMaybe<Scalars['String']>;
  shipTo?: InputMaybe<Scalars['String']>;
  shippingDescription?: InputMaybe<Scalars['String']>;
  shippingNumber?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  validity?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['String']>;
};

export type ReturnsCreateManyInput = {
  case_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['String']>;
  howShipped?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  liquidationReason?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  return_prefix?: InputMaybe<Scalars['String']>;
  shipTo?: InputMaybe<Scalars['String']>;
  shippingDescription?: InputMaybe<Scalars['String']>;
  shippingNumber?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  validity?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['String']>;
};

export type ReturnsGroupBy = {
  __typename?: 'ReturnsGroupBy';
  _avg?: Maybe<ReturnsAvgAggregate>;
  _count?: Maybe<ReturnsCountAggregate>;
  _max?: Maybe<ReturnsMaxAggregate>;
  _min?: Maybe<ReturnsMinAggregate>;
  _sum?: Maybe<ReturnsSumAggregate>;
  case_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  howShipped?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  liquidationReason?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  return_prefix?: Maybe<Scalars['String']>;
  shipTo?: Maybe<Scalars['String']>;
  shippingDescription?: Maybe<Scalars['String']>;
  shippingNumber?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  validity?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
};

export type ReturnsMaxAggregate = {
  __typename?: 'ReturnsMaxAggregate';
  case_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  howShipped?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  liquidationReason?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  return_prefix?: Maybe<Scalars['String']>;
  shipTo?: Maybe<Scalars['String']>;
  shippingDescription?: Maybe<Scalars['String']>;
  shippingNumber?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  validity?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
};

export type ReturnsMaxOrderByAggregateInput = {
  case_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  howShipped?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  liquidationReason?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  return_prefix?: InputMaybe<SortOrder>;
  shipTo?: InputMaybe<SortOrder>;
  shippingDescription?: InputMaybe<SortOrder>;
  shippingNumber?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  validity?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export type ReturnsMinAggregate = {
  __typename?: 'ReturnsMinAggregate';
  case_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['String']>;
  howShipped?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  liquidationReason?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  return_prefix?: Maybe<Scalars['String']>;
  shipTo?: Maybe<Scalars['String']>;
  shippingDescription?: Maybe<Scalars['String']>;
  shippingNumber?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  validity?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['String']>;
};

export type ReturnsMinOrderByAggregateInput = {
  case_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  howShipped?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  liquidationReason?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  return_prefix?: InputMaybe<SortOrder>;
  shipTo?: InputMaybe<SortOrder>;
  shippingDescription?: InputMaybe<SortOrder>;
  shippingNumber?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  validity?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export enum ReturnsOrderByRelevanceFieldEnum {
  CaseId = 'case_id',
  Customers = 'customers',
  Description = 'description',
  Height = 'height',
  HowShipped = 'howShipped',
  LiquidationReason = 'liquidationReason',
  Location = 'location',
  Media = 'media',
  Name = 'name',
  Products = 'products',
  ReturnPrefix = 'return_prefix',
  ShipTo = 'shipTo',
  ShippingDescription = 'shippingDescription',
  ShippingNumber = 'shippingNumber',
  Status = 'status',
  Type = 'type',
  Validity = 'validity',
  Weight = 'weight'
}

export type ReturnsOrderByRelevanceInput = {
  fields: Array<ReturnsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ReturnsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ReturnsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ReturnsCountOrderByAggregateInput>;
  _max?: InputMaybe<ReturnsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ReturnsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ReturnsSumOrderByAggregateInput>;
  case_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  howShipped?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  liquidationReason?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  return_prefix?: InputMaybe<SortOrder>;
  shipTo?: InputMaybe<SortOrder>;
  shippingDescription?: InputMaybe<SortOrder>;
  shippingNumber?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  validity?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export type ReturnsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ReturnsOrderByRelevanceInput>;
  case_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  howShipped?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  liquidationReason?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  return_prefix?: InputMaybe<SortOrder>;
  shipTo?: InputMaybe<SortOrder>;
  shippingDescription?: InputMaybe<SortOrder>;
  shippingNumber?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  validity?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export enum ReturnsScalarFieldEnum {
  CaseId = 'case_id',
  CreatedAt = 'created_at',
  Customers = 'customers',
  Description = 'description',
  Height = 'height',
  HowShipped = 'howShipped',
  Id = 'id',
  LiquidationReason = 'liquidationReason',
  Location = 'location',
  Media = 'media',
  Name = 'name',
  Products = 'products',
  ReturnPrefix = 'return_prefix',
  ShipTo = 'shipTo',
  ShippingDescription = 'shippingDescription',
  ShippingNumber = 'shippingNumber',
  Status = 'status',
  Type = 'type',
  Validity = 'validity',
  Weight = 'weight'
}

export type ReturnsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ReturnsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ReturnsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ReturnsScalarWhereWithAggregatesInput>>;
  case_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  height?: InputMaybe<StringNullableWithAggregatesFilter>;
  howShipped?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  liquidationReason?: InputMaybe<StringNullableWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  return_prefix?: InputMaybe<StringNullableWithAggregatesFilter>;
  shipTo?: InputMaybe<StringNullableWithAggregatesFilter>;
  shippingDescription?: InputMaybe<StringNullableWithAggregatesFilter>;
  shippingNumber?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  validity?: InputMaybe<StringNullableWithAggregatesFilter>;
  weight?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ReturnsSumAggregate = {
  __typename?: 'ReturnsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ReturnsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ReturnsUpdateInput = {
  case_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  howShipped?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  liquidationReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  return_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipTo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingDescription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ReturnsUpdateManyMutationInput = {
  case_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  howShipped?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  liquidationReason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  return_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shipTo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingDescription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shippingNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  validity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ReturnsWhereInput = {
  AND?: InputMaybe<Array<ReturnsWhereInput>>;
  NOT?: InputMaybe<Array<ReturnsWhereInput>>;
  OR?: InputMaybe<Array<ReturnsWhereInput>>;
  case_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  height?: InputMaybe<StringNullableFilter>;
  howShipped?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidationReason?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  return_prefix?: InputMaybe<StringNullableFilter>;
  shipTo?: InputMaybe<StringNullableFilter>;
  shippingDescription?: InputMaybe<StringNullableFilter>;
  shippingNumber?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  validity?: InputMaybe<StringNullableFilter>;
  weight?: InputMaybe<StringNullableFilter>;
};

export type ReturnsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Reviews = {
  __typename?: 'Reviews';
  comment_id: Scalars['Int'];
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  last_name?: Maybe<Scalars['String']>;
  shop_id: Scalars['Int'];
  websites?: Maybe<Scalars['String']>;
};

export type ReviewsAvgAggregate = {
  __typename?: 'ReviewsAvgAggregate';
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  shop_id?: Maybe<Scalars['Float']>;
};

export type ReviewsAvgOrderByAggregateInput = {
  comment_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
};

export type ReviewsCountAggregate = {
  __typename?: 'ReviewsCountAggregate';
  _all: Scalars['Int'];
  comment_id: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  first_name: Scalars['Int'];
  id: Scalars['Int'];
  last_name: Scalars['Int'];
  shop_id: Scalars['Int'];
  websites: Scalars['Int'];
};

export type ReviewsCountOrderByAggregateInput = {
  comment_id?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ReviewsCreateInput = {
  comment_id: Scalars['Int'];
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  first_name?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  shop_id: Scalars['Int'];
  websites?: InputMaybe<Scalars['String']>;
};

export type ReviewsCreateManyInput = {
  comment_id: Scalars['Int'];
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  last_name?: InputMaybe<Scalars['String']>;
  shop_id: Scalars['Int'];
  websites?: InputMaybe<Scalars['String']>;
};

export type ReviewsGroupBy = {
  __typename?: 'ReviewsGroupBy';
  _avg?: Maybe<ReviewsAvgAggregate>;
  _count?: Maybe<ReviewsCountAggregate>;
  _max?: Maybe<ReviewsMaxAggregate>;
  _min?: Maybe<ReviewsMinAggregate>;
  _sum?: Maybe<ReviewsSumAggregate>;
  comment_id: Scalars['Int'];
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  last_name?: Maybe<Scalars['String']>;
  shop_id: Scalars['Int'];
  websites?: Maybe<Scalars['String']>;
};

export type ReviewsMaxAggregate = {
  __typename?: 'ReviewsMaxAggregate';
  comment_id?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_name?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['Int']>;
  websites?: Maybe<Scalars['String']>;
};

export type ReviewsMaxOrderByAggregateInput = {
  comment_id?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ReviewsMinAggregate = {
  __typename?: 'ReviewsMinAggregate';
  comment_id?: Maybe<Scalars['Int']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  last_name?: Maybe<Scalars['String']>;
  shop_id?: Maybe<Scalars['Int']>;
  websites?: Maybe<Scalars['String']>;
};

export type ReviewsMinOrderByAggregateInput = {
  comment_id?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum ReviewsOrderByRelevanceFieldEnum {
  Content = 'content',
  FirstName = 'first_name',
  LastName = 'last_name',
  Websites = 'websites'
}

export type ReviewsOrderByRelevanceInput = {
  fields: Array<ReviewsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ReviewsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ReviewsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ReviewsCountOrderByAggregateInput>;
  _max?: InputMaybe<ReviewsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ReviewsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ReviewsSumOrderByAggregateInput>;
  comment_id?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ReviewsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ReviewsOrderByRelevanceInput>;
  comment_id?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum ReviewsScalarFieldEnum {
  CommentId = 'comment_id',
  Content = 'content',
  CreatedAt = 'created_at',
  FirstName = 'first_name',
  Id = 'id',
  LastName = 'last_name',
  ShopId = 'shop_id',
  Websites = 'websites'
}

export type ReviewsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ReviewsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ReviewsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ReviewsScalarWhereWithAggregatesInput>>;
  comment_id?: InputMaybe<IntWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  first_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  last_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  shop_id?: InputMaybe<IntWithAggregatesFilter>;
  websites?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ReviewsSumAggregate = {
  __typename?: 'ReviewsSumAggregate';
  comment_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  shop_id?: Maybe<Scalars['Int']>;
};

export type ReviewsSumOrderByAggregateInput = {
  comment_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  shop_id?: InputMaybe<SortOrder>;
};

export type ReviewsUpdateInput = {
  comment_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ReviewsUpdateManyMutationInput = {
  comment_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  websites?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ReviewsWhereInput = {
  AND?: InputMaybe<Array<ReviewsWhereInput>>;
  NOT?: InputMaybe<Array<ReviewsWhereInput>>;
  OR?: InputMaybe<Array<ReviewsWhereInput>>;
  comment_id?: InputMaybe<IntFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  first_name?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  last_name?: InputMaybe<StringNullableFilter>;
  shop_id?: InputMaybe<IntFilter>;
  websites?: InputMaybe<StringNullableFilter>;
};

export type ReviewsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Rewards = {
  __typename?: 'Rewards';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  level?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type RewardsAvgAggregate = {
  __typename?: 'RewardsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type RewardsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type RewardsCountAggregate = {
  __typename?: 'RewardsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  coupons: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  expiration: Scalars['Int'];
  id: Scalars['Int'];
  level: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  slug: Scalars['Int'];
  users: Scalars['Int'];
};

export type RewardsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type RewardsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  level?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type RewardsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  level?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type RewardsGroupBy = {
  __typename?: 'RewardsGroupBy';
  _avg?: Maybe<RewardsAvgAggregate>;
  _count?: Maybe<RewardsCountAggregate>;
  _max?: Maybe<RewardsMaxAggregate>;
  _min?: Maybe<RewardsMinAggregate>;
  _sum?: Maybe<RewardsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  level?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type RewardsMaxAggregate = {
  __typename?: 'RewardsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  level?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type RewardsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type RewardsMinAggregate = {
  __typename?: 'RewardsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  level?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type RewardsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum RewardsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Expiration = 'expiration',
  Level = 'level',
  Name = 'name',
  Products = 'products',
  Slug = 'slug',
  Users = 'users'
}

export type RewardsOrderByRelevanceInput = {
  fields: Array<RewardsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type RewardsOrderByWithAggregationInput = {
  _avg?: InputMaybe<RewardsAvgOrderByAggregateInput>;
  _count?: InputMaybe<RewardsCountOrderByAggregateInput>;
  _max?: InputMaybe<RewardsMaxOrderByAggregateInput>;
  _min?: InputMaybe<RewardsMinOrderByAggregateInput>;
  _sum?: InputMaybe<RewardsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type RewardsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<RewardsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum RewardsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  CreatedAt = 'created_at',
  Customers = 'customers',
  Expiration = 'expiration',
  Id = 'id',
  Level = 'level',
  Name = 'name',
  Products = 'products',
  Slug = 'slug',
  Users = 'users'
}

export type RewardsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<RewardsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<RewardsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<RewardsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  level?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type RewardsSumAggregate = {
  __typename?: 'RewardsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type RewardsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type RewardsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RewardsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RewardsWhereInput = {
  AND?: InputMaybe<Array<RewardsWhereInput>>;
  NOT?: InputMaybe<Array<RewardsWhereInput>>;
  OR?: InputMaybe<Array<RewardsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  expiration?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  level?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type RewardsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Roles = {
  __typename?: 'Roles';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  role_name: Scalars['String'];
};

export type RolesAvgAggregate = {
  __typename?: 'RolesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type RolesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type RolesCountAggregate = {
  __typename?: 'RolesCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  role_name: Scalars['Int'];
};

export type RolesCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  role_name?: InputMaybe<SortOrder>;
};

export type RolesCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  role_name: Scalars['String'];
};

export type RolesCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  role_name: Scalars['String'];
};

export type RolesGroupBy = {
  __typename?: 'RolesGroupBy';
  _avg?: Maybe<RolesAvgAggregate>;
  _count?: Maybe<RolesCountAggregate>;
  _max?: Maybe<RolesMaxAggregate>;
  _min?: Maybe<RolesMinAggregate>;
  _sum?: Maybe<RolesSumAggregate>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  role_name: Scalars['String'];
};

export type RolesMaxAggregate = {
  __typename?: 'RolesMaxAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  role_name?: Maybe<Scalars['String']>;
};

export type RolesMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  role_name?: InputMaybe<SortOrder>;
};

export type RolesMinAggregate = {
  __typename?: 'RolesMinAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  role_name?: Maybe<Scalars['String']>;
};

export type RolesMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  role_name?: InputMaybe<SortOrder>;
};

export enum RolesOrderByRelevanceFieldEnum {
  Content = 'content',
  RoleName = 'role_name'
}

export type RolesOrderByRelevanceInput = {
  fields: Array<RolesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type RolesOrderByWithAggregationInput = {
  _avg?: InputMaybe<RolesAvgOrderByAggregateInput>;
  _count?: InputMaybe<RolesCountOrderByAggregateInput>;
  _max?: InputMaybe<RolesMaxOrderByAggregateInput>;
  _min?: InputMaybe<RolesMinOrderByAggregateInput>;
  _sum?: InputMaybe<RolesSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  role_name?: InputMaybe<SortOrder>;
};

export type RolesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<RolesOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  role_name?: InputMaybe<SortOrder>;
};

export enum RolesScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'created_at',
  Id = 'id',
  RoleName = 'role_name'
}

export type RolesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<RolesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<RolesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<RolesScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  role_name?: InputMaybe<StringWithAggregatesFilter>;
};

export type RolesSumAggregate = {
  __typename?: 'RolesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type RolesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type RolesUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  role_name?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RolesUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  role_name?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RolesWhereInput = {
  AND?: InputMaybe<Array<RolesWhereInput>>;
  NOT?: InputMaybe<Array<RolesWhereInput>>;
  OR?: InputMaybe<Array<RolesWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<IntFilter>;
  role_name?: InputMaybe<StringFilter>;
};

export type RolesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Scheduler = {
  __typename?: 'Scheduler';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  level?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type SchedulerAvgAggregate = {
  __typename?: 'SchedulerAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type SchedulerAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SchedulerCountAggregate = {
  __typename?: 'SchedulerCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  level: Scalars['Int'];
  login: Scalars['Int'];
  notes: Scalars['Int'];
  start_date: Scalars['Int'];
  whid: Scalars['Int'];
};

export type SchedulerCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  notes?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type SchedulerCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  level?: InputMaybe<Scalars['String']>;
  login?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type SchedulerCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  level?: InputMaybe<Scalars['String']>;
  login?: InputMaybe<Scalars['String']>;
  notes?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  whid?: InputMaybe<Scalars['String']>;
};

export type SchedulerGroupBy = {
  __typename?: 'SchedulerGroupBy';
  _avg?: Maybe<SchedulerAvgAggregate>;
  _count?: Maybe<SchedulerCountAggregate>;
  _max?: Maybe<SchedulerMaxAggregate>;
  _min?: Maybe<SchedulerMinAggregate>;
  _sum?: Maybe<SchedulerSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  level?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type SchedulerMaxAggregate = {
  __typename?: 'SchedulerMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  level?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type SchedulerMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  notes?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type SchedulerMinAggregate = {
  __typename?: 'SchedulerMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  level?: Maybe<Scalars['String']>;
  login?: Maybe<Scalars['String']>;
  notes?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  whid?: Maybe<Scalars['String']>;
};

export type SchedulerMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  notes?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum SchedulerOrderByRelevanceFieldEnum {
  EndDate = 'end_date',
  Level = 'level',
  Login = 'login',
  Notes = 'notes',
  StartDate = 'start_date',
  Whid = 'whid'
}

export type SchedulerOrderByRelevanceInput = {
  fields: Array<SchedulerOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type SchedulerOrderByWithAggregationInput = {
  _avg?: InputMaybe<SchedulerAvgOrderByAggregateInput>;
  _count?: InputMaybe<SchedulerCountOrderByAggregateInput>;
  _max?: InputMaybe<SchedulerMaxOrderByAggregateInput>;
  _min?: InputMaybe<SchedulerMinOrderByAggregateInput>;
  _sum?: InputMaybe<SchedulerSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  notes?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export type SchedulerOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<SchedulerOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  login?: InputMaybe<SortOrder>;
  notes?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  whid?: InputMaybe<SortOrder>;
};

export enum SchedulerScalarFieldEnum {
  CreatedAt = 'created_at',
  EndDate = 'end_date',
  Id = 'id',
  Level = 'level',
  Login = 'login',
  Notes = 'notes',
  StartDate = 'start_date',
  Whid = 'whid'
}

export type SchedulerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SchedulerScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SchedulerScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SchedulerScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  level?: InputMaybe<StringNullableWithAggregatesFilter>;
  login?: InputMaybe<StringNullableWithAggregatesFilter>;
  notes?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  whid?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SchedulerSumAggregate = {
  __typename?: 'SchedulerSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type SchedulerSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SchedulerUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SchedulerUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  login?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  whid?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SchedulerWhereInput = {
  AND?: InputMaybe<Array<SchedulerWhereInput>>;
  NOT?: InputMaybe<Array<SchedulerWhereInput>>;
  OR?: InputMaybe<Array<SchedulerWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  level?: InputMaybe<StringNullableFilter>;
  login?: InputMaybe<StringNullableFilter>;
  notes?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  whid?: InputMaybe<StringNullableFilter>;
};

export type SchedulerWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Segments = {
  __typename?: 'Segments';
  apply_to?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type SegmentsAvgAggregate = {
  __typename?: 'SegmentsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type SegmentsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SegmentsCountAggregate = {
  __typename?: 'SegmentsCountAggregate';
  _all: Scalars['Int'];
  apply_to: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  status: Scalars['Int'];
  website: Scalars['Int'];
};

export type SegmentsCountOrderByAggregateInput = {
  apply_to?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type SegmentsCreateInput = {
  apply_to?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type SegmentsCreateManyInput = {
  apply_to?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type SegmentsGroupBy = {
  __typename?: 'SegmentsGroupBy';
  _avg?: Maybe<SegmentsAvgAggregate>;
  _count?: Maybe<SegmentsCountAggregate>;
  _max?: Maybe<SegmentsMaxAggregate>;
  _min?: Maybe<SegmentsMinAggregate>;
  _sum?: Maybe<SegmentsSumAggregate>;
  apply_to?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type SegmentsMaxAggregate = {
  __typename?: 'SegmentsMaxAggregate';
  apply_to?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type SegmentsMaxOrderByAggregateInput = {
  apply_to?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type SegmentsMinAggregate = {
  __typename?: 'SegmentsMinAggregate';
  apply_to?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type SegmentsMinOrderByAggregateInput = {
  apply_to?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum SegmentsOrderByRelevanceFieldEnum {
  ApplyTo = 'apply_to',
  Customers = 'customers',
  Description = 'description',
  Name = 'name',
  Status = 'status',
  Website = 'website'
}

export type SegmentsOrderByRelevanceInput = {
  fields: Array<SegmentsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type SegmentsOrderByWithAggregationInput = {
  _avg?: InputMaybe<SegmentsAvgOrderByAggregateInput>;
  _count?: InputMaybe<SegmentsCountOrderByAggregateInput>;
  _max?: InputMaybe<SegmentsMaxOrderByAggregateInput>;
  _min?: InputMaybe<SegmentsMinOrderByAggregateInput>;
  _sum?: InputMaybe<SegmentsSumOrderByAggregateInput>;
  apply_to?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type SegmentsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<SegmentsOrderByRelevanceInput>;
  apply_to?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum SegmentsScalarFieldEnum {
  ApplyTo = 'apply_to',
  CreatedAt = 'created_at',
  Customers = 'customers',
  Description = 'description',
  Id = 'id',
  Name = 'name',
  Status = 'status',
  Website = 'website'
}

export type SegmentsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SegmentsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SegmentsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SegmentsScalarWhereWithAggregatesInput>>;
  apply_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SegmentsSumAggregate = {
  __typename?: 'SegmentsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type SegmentsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SegmentsUpdateInput = {
  apply_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SegmentsUpdateManyMutationInput = {
  apply_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SegmentsWhereInput = {
  AND?: InputMaybe<Array<SegmentsWhereInput>>;
  NOT?: InputMaybe<Array<SegmentsWhereInput>>;
  OR?: InputMaybe<Array<SegmentsWhereInput>>;
  apply_to?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type SegmentsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Settings = {
  __typename?: 'Settings';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  allow_countries?: Maybe<Scalars['String']>;
  allow_state?: Maybe<Scalars['String']>;
  allowed_currency?: Maybe<Scalars['String']>;
  awsS3?: Maybe<Scalars['String']>;
  base_currency?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  databaseUrl?: Maybe<Scalars['String']>;
  default_country?: Maybe<Scalars['String']>;
  default_currency?: Maybe<Scalars['String']>;
  disqusKey?: Maybe<Scalars['String']>;
  european_union_countries?: Maybe<Scalars['String']>;
  googleAnalytics?: Maybe<Scalars['String']>;
  googleDrive?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  mailServer?: Maybe<Scalars['String']>;
  optional_zip?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  searchSetting?: Maybe<Scalars['String']>;
  sentryDsn?: Maybe<Scalars['String']>;
  siteName?: Maybe<Scalars['String']>;
  siteTagline?: Maybe<Scalars['String']>;
  siteWebsite?: Maybe<Scalars['String']>;
  state_required_for?: Maybe<Scalars['String']>;
  store_hours?: Maybe<Scalars['String']>;
  store_name?: Maybe<Scalars['String']>;
  store_phone?: Maybe<Scalars['String']>;
  top_destinations?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  vat_number?: Maybe<Scalars['String']>;
  youtubeVideos?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type SettingsAvgAggregate = {
  __typename?: 'SettingsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type SettingsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SettingsCountAggregate = {
  __typename?: 'SettingsCountAggregate';
  _all: Scalars['Int'];
  address: Scalars['Int'];
  address_two: Scalars['Int'];
  allow_countries: Scalars['Int'];
  allow_state: Scalars['Int'];
  allowed_currency: Scalars['Int'];
  awsS3: Scalars['Int'];
  base_currency: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  databaseUrl: Scalars['Int'];
  default_country: Scalars['Int'];
  default_currency: Scalars['Int'];
  disqusKey: Scalars['Int'];
  european_union_countries: Scalars['Int'];
  googleAnalytics: Scalars['Int'];
  googleDrive: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  mailServer: Scalars['Int'];
  optional_zip: Scalars['Int'];
  region: Scalars['Int'];
  searchSetting: Scalars['Int'];
  sentryDsn: Scalars['Int'];
  siteName: Scalars['Int'];
  siteTagline: Scalars['Int'];
  siteWebsite: Scalars['Int'];
  state_required_for: Scalars['Int'];
  store_hours: Scalars['Int'];
  store_name: Scalars['Int'];
  store_phone: Scalars['Int'];
  top_destinations: Scalars['Int'];
  type: Scalars['Int'];
  vat_number: Scalars['Int'];
  youtubeVideos: Scalars['Int'];
  zipcode: Scalars['Int'];
};

export type SettingsCountOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  allow_countries?: InputMaybe<SortOrder>;
  allow_state?: InputMaybe<SortOrder>;
  allowed_currency?: InputMaybe<SortOrder>;
  awsS3?: InputMaybe<SortOrder>;
  base_currency?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  databaseUrl?: InputMaybe<SortOrder>;
  default_country?: InputMaybe<SortOrder>;
  default_currency?: InputMaybe<SortOrder>;
  disqusKey?: InputMaybe<SortOrder>;
  european_union_countries?: InputMaybe<SortOrder>;
  googleAnalytics?: InputMaybe<SortOrder>;
  googleDrive?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  mailServer?: InputMaybe<SortOrder>;
  optional_zip?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  searchSetting?: InputMaybe<SortOrder>;
  sentryDsn?: InputMaybe<SortOrder>;
  siteName?: InputMaybe<SortOrder>;
  siteTagline?: InputMaybe<SortOrder>;
  siteWebsite?: InputMaybe<SortOrder>;
  state_required_for?: InputMaybe<SortOrder>;
  store_hours?: InputMaybe<SortOrder>;
  store_name?: InputMaybe<SortOrder>;
  store_phone?: InputMaybe<SortOrder>;
  top_destinations?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  vat_number?: InputMaybe<SortOrder>;
  youtubeVideos?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type SettingsCreateInput = {
  address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  allow_countries?: InputMaybe<Scalars['String']>;
  allow_state?: InputMaybe<Scalars['String']>;
  allowed_currency?: InputMaybe<Scalars['String']>;
  awsS3?: InputMaybe<Scalars['String']>;
  base_currency?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  databaseUrl?: InputMaybe<Scalars['String']>;
  default_country?: InputMaybe<Scalars['String']>;
  default_currency?: InputMaybe<Scalars['String']>;
  disqusKey?: InputMaybe<Scalars['String']>;
  european_union_countries?: InputMaybe<Scalars['String']>;
  googleAnalytics?: InputMaybe<Scalars['String']>;
  googleDrive?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  mailServer?: InputMaybe<Scalars['String']>;
  optional_zip?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  searchSetting?: InputMaybe<Scalars['String']>;
  sentryDsn?: InputMaybe<Scalars['String']>;
  siteName?: InputMaybe<Scalars['String']>;
  siteTagline?: InputMaybe<Scalars['String']>;
  siteWebsite?: InputMaybe<Scalars['String']>;
  state_required_for?: InputMaybe<Scalars['String']>;
  store_hours?: InputMaybe<Scalars['String']>;
  store_name?: InputMaybe<Scalars['String']>;
  store_phone?: InputMaybe<Scalars['String']>;
  top_destinations?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  vat_number?: InputMaybe<Scalars['String']>;
  youtubeVideos?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type SettingsCreateManyInput = {
  address?: InputMaybe<Scalars['String']>;
  address_two?: InputMaybe<Scalars['String']>;
  allow_countries?: InputMaybe<Scalars['String']>;
  allow_state?: InputMaybe<Scalars['String']>;
  allowed_currency?: InputMaybe<Scalars['String']>;
  awsS3?: InputMaybe<Scalars['String']>;
  base_currency?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  databaseUrl?: InputMaybe<Scalars['String']>;
  default_country?: InputMaybe<Scalars['String']>;
  default_currency?: InputMaybe<Scalars['String']>;
  disqusKey?: InputMaybe<Scalars['String']>;
  european_union_countries?: InputMaybe<Scalars['String']>;
  googleAnalytics?: InputMaybe<Scalars['String']>;
  googleDrive?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['String']>;
  mailServer?: InputMaybe<Scalars['String']>;
  optional_zip?: InputMaybe<Scalars['String']>;
  region?: InputMaybe<Scalars['String']>;
  searchSetting?: InputMaybe<Scalars['String']>;
  sentryDsn?: InputMaybe<Scalars['String']>;
  siteName?: InputMaybe<Scalars['String']>;
  siteTagline?: InputMaybe<Scalars['String']>;
  siteWebsite?: InputMaybe<Scalars['String']>;
  state_required_for?: InputMaybe<Scalars['String']>;
  store_hours?: InputMaybe<Scalars['String']>;
  store_name?: InputMaybe<Scalars['String']>;
  store_phone?: InputMaybe<Scalars['String']>;
  top_destinations?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  vat_number?: InputMaybe<Scalars['String']>;
  youtubeVideos?: InputMaybe<Scalars['String']>;
  zipcode?: InputMaybe<Scalars['String']>;
};

export type SettingsGroupBy = {
  __typename?: 'SettingsGroupBy';
  _avg?: Maybe<SettingsAvgAggregate>;
  _count?: Maybe<SettingsCountAggregate>;
  _max?: Maybe<SettingsMaxAggregate>;
  _min?: Maybe<SettingsMinAggregate>;
  _sum?: Maybe<SettingsSumAggregate>;
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  allow_countries?: Maybe<Scalars['String']>;
  allow_state?: Maybe<Scalars['String']>;
  allowed_currency?: Maybe<Scalars['String']>;
  awsS3?: Maybe<Scalars['String']>;
  base_currency?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  databaseUrl?: Maybe<Scalars['String']>;
  default_country?: Maybe<Scalars['String']>;
  default_currency?: Maybe<Scalars['String']>;
  disqusKey?: Maybe<Scalars['String']>;
  european_union_countries?: Maybe<Scalars['String']>;
  googleAnalytics?: Maybe<Scalars['String']>;
  googleDrive?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['String']>;
  mailServer?: Maybe<Scalars['String']>;
  optional_zip?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  searchSetting?: Maybe<Scalars['String']>;
  sentryDsn?: Maybe<Scalars['String']>;
  siteName?: Maybe<Scalars['String']>;
  siteTagline?: Maybe<Scalars['String']>;
  siteWebsite?: Maybe<Scalars['String']>;
  state_required_for?: Maybe<Scalars['String']>;
  store_hours?: Maybe<Scalars['String']>;
  store_name?: Maybe<Scalars['String']>;
  store_phone?: Maybe<Scalars['String']>;
  top_destinations?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  vat_number?: Maybe<Scalars['String']>;
  youtubeVideos?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type SettingsMaxAggregate = {
  __typename?: 'SettingsMaxAggregate';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  allow_countries?: Maybe<Scalars['String']>;
  allow_state?: Maybe<Scalars['String']>;
  allowed_currency?: Maybe<Scalars['String']>;
  awsS3?: Maybe<Scalars['String']>;
  base_currency?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  databaseUrl?: Maybe<Scalars['String']>;
  default_country?: Maybe<Scalars['String']>;
  default_currency?: Maybe<Scalars['String']>;
  disqusKey?: Maybe<Scalars['String']>;
  european_union_countries?: Maybe<Scalars['String']>;
  googleAnalytics?: Maybe<Scalars['String']>;
  googleDrive?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  mailServer?: Maybe<Scalars['String']>;
  optional_zip?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  searchSetting?: Maybe<Scalars['String']>;
  sentryDsn?: Maybe<Scalars['String']>;
  siteName?: Maybe<Scalars['String']>;
  siteTagline?: Maybe<Scalars['String']>;
  siteWebsite?: Maybe<Scalars['String']>;
  state_required_for?: Maybe<Scalars['String']>;
  store_hours?: Maybe<Scalars['String']>;
  store_name?: Maybe<Scalars['String']>;
  store_phone?: Maybe<Scalars['String']>;
  top_destinations?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  vat_number?: Maybe<Scalars['String']>;
  youtubeVideos?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type SettingsMaxOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  allow_countries?: InputMaybe<SortOrder>;
  allow_state?: InputMaybe<SortOrder>;
  allowed_currency?: InputMaybe<SortOrder>;
  awsS3?: InputMaybe<SortOrder>;
  base_currency?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  databaseUrl?: InputMaybe<SortOrder>;
  default_country?: InputMaybe<SortOrder>;
  default_currency?: InputMaybe<SortOrder>;
  disqusKey?: InputMaybe<SortOrder>;
  european_union_countries?: InputMaybe<SortOrder>;
  googleAnalytics?: InputMaybe<SortOrder>;
  googleDrive?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  mailServer?: InputMaybe<SortOrder>;
  optional_zip?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  searchSetting?: InputMaybe<SortOrder>;
  sentryDsn?: InputMaybe<SortOrder>;
  siteName?: InputMaybe<SortOrder>;
  siteTagline?: InputMaybe<SortOrder>;
  siteWebsite?: InputMaybe<SortOrder>;
  state_required_for?: InputMaybe<SortOrder>;
  store_hours?: InputMaybe<SortOrder>;
  store_name?: InputMaybe<SortOrder>;
  store_phone?: InputMaybe<SortOrder>;
  top_destinations?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  vat_number?: InputMaybe<SortOrder>;
  youtubeVideos?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type SettingsMinAggregate = {
  __typename?: 'SettingsMinAggregate';
  address?: Maybe<Scalars['String']>;
  address_two?: Maybe<Scalars['String']>;
  allow_countries?: Maybe<Scalars['String']>;
  allow_state?: Maybe<Scalars['String']>;
  allowed_currency?: Maybe<Scalars['String']>;
  awsS3?: Maybe<Scalars['String']>;
  base_currency?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  databaseUrl?: Maybe<Scalars['String']>;
  default_country?: Maybe<Scalars['String']>;
  default_currency?: Maybe<Scalars['String']>;
  disqusKey?: Maybe<Scalars['String']>;
  european_union_countries?: Maybe<Scalars['String']>;
  googleAnalytics?: Maybe<Scalars['String']>;
  googleDrive?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['String']>;
  mailServer?: Maybe<Scalars['String']>;
  optional_zip?: Maybe<Scalars['String']>;
  region?: Maybe<Scalars['String']>;
  searchSetting?: Maybe<Scalars['String']>;
  sentryDsn?: Maybe<Scalars['String']>;
  siteName?: Maybe<Scalars['String']>;
  siteTagline?: Maybe<Scalars['String']>;
  siteWebsite?: Maybe<Scalars['String']>;
  state_required_for?: Maybe<Scalars['String']>;
  store_hours?: Maybe<Scalars['String']>;
  store_name?: Maybe<Scalars['String']>;
  store_phone?: Maybe<Scalars['String']>;
  top_destinations?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  vat_number?: Maybe<Scalars['String']>;
  youtubeVideos?: Maybe<Scalars['String']>;
  zipcode?: Maybe<Scalars['String']>;
};

export type SettingsMinOrderByAggregateInput = {
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  allow_countries?: InputMaybe<SortOrder>;
  allow_state?: InputMaybe<SortOrder>;
  allowed_currency?: InputMaybe<SortOrder>;
  awsS3?: InputMaybe<SortOrder>;
  base_currency?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  databaseUrl?: InputMaybe<SortOrder>;
  default_country?: InputMaybe<SortOrder>;
  default_currency?: InputMaybe<SortOrder>;
  disqusKey?: InputMaybe<SortOrder>;
  european_union_countries?: InputMaybe<SortOrder>;
  googleAnalytics?: InputMaybe<SortOrder>;
  googleDrive?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  mailServer?: InputMaybe<SortOrder>;
  optional_zip?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  searchSetting?: InputMaybe<SortOrder>;
  sentryDsn?: InputMaybe<SortOrder>;
  siteName?: InputMaybe<SortOrder>;
  siteTagline?: InputMaybe<SortOrder>;
  siteWebsite?: InputMaybe<SortOrder>;
  state_required_for?: InputMaybe<SortOrder>;
  store_hours?: InputMaybe<SortOrder>;
  store_name?: InputMaybe<SortOrder>;
  store_phone?: InputMaybe<SortOrder>;
  top_destinations?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  vat_number?: InputMaybe<SortOrder>;
  youtubeVideos?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum SettingsOrderByRelevanceFieldEnum {
  Address = 'address',
  AddressTwo = 'address_two',
  AllowCountries = 'allow_countries',
  AllowState = 'allow_state',
  AllowedCurrency = 'allowed_currency',
  AwsS3 = 'awsS3',
  BaseCurrency = 'base_currency',
  City = 'city',
  Country = 'country',
  DatabaseUrl = 'databaseUrl',
  DefaultCountry = 'default_country',
  DefaultCurrency = 'default_currency',
  DisqusKey = 'disqusKey',
  EuropeanUnionCountries = 'european_union_countries',
  GoogleAnalytics = 'googleAnalytics',
  GoogleDrive = 'googleDrive',
  IsPublic = 'isPublic',
  MailServer = 'mailServer',
  OptionalZip = 'optional_zip',
  Region = 'region',
  SearchSetting = 'searchSetting',
  SentryDsn = 'sentryDsn',
  SiteName = 'siteName',
  SiteTagline = 'siteTagline',
  SiteWebsite = 'siteWebsite',
  StateRequiredFor = 'state_required_for',
  StoreHours = 'store_hours',
  StoreName = 'store_name',
  StorePhone = 'store_phone',
  TopDestinations = 'top_destinations',
  Type = 'type',
  VatNumber = 'vat_number',
  YoutubeVideos = 'youtubeVideos',
  Zipcode = 'zipcode'
}

export type SettingsOrderByRelevanceInput = {
  fields: Array<SettingsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type SettingsOrderByWithAggregationInput = {
  _avg?: InputMaybe<SettingsAvgOrderByAggregateInput>;
  _count?: InputMaybe<SettingsCountOrderByAggregateInput>;
  _max?: InputMaybe<SettingsMaxOrderByAggregateInput>;
  _min?: InputMaybe<SettingsMinOrderByAggregateInput>;
  _sum?: InputMaybe<SettingsSumOrderByAggregateInput>;
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  allow_countries?: InputMaybe<SortOrder>;
  allow_state?: InputMaybe<SortOrder>;
  allowed_currency?: InputMaybe<SortOrder>;
  awsS3?: InputMaybe<SortOrder>;
  base_currency?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  databaseUrl?: InputMaybe<SortOrder>;
  default_country?: InputMaybe<SortOrder>;
  default_currency?: InputMaybe<SortOrder>;
  disqusKey?: InputMaybe<SortOrder>;
  european_union_countries?: InputMaybe<SortOrder>;
  googleAnalytics?: InputMaybe<SortOrder>;
  googleDrive?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  mailServer?: InputMaybe<SortOrder>;
  optional_zip?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  searchSetting?: InputMaybe<SortOrder>;
  sentryDsn?: InputMaybe<SortOrder>;
  siteName?: InputMaybe<SortOrder>;
  siteTagline?: InputMaybe<SortOrder>;
  siteWebsite?: InputMaybe<SortOrder>;
  state_required_for?: InputMaybe<SortOrder>;
  store_hours?: InputMaybe<SortOrder>;
  store_name?: InputMaybe<SortOrder>;
  store_phone?: InputMaybe<SortOrder>;
  top_destinations?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  vat_number?: InputMaybe<SortOrder>;
  youtubeVideos?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export type SettingsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<SettingsOrderByRelevanceInput>;
  address?: InputMaybe<SortOrder>;
  address_two?: InputMaybe<SortOrder>;
  allow_countries?: InputMaybe<SortOrder>;
  allow_state?: InputMaybe<SortOrder>;
  allowed_currency?: InputMaybe<SortOrder>;
  awsS3?: InputMaybe<SortOrder>;
  base_currency?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  databaseUrl?: InputMaybe<SortOrder>;
  default_country?: InputMaybe<SortOrder>;
  default_currency?: InputMaybe<SortOrder>;
  disqusKey?: InputMaybe<SortOrder>;
  european_union_countries?: InputMaybe<SortOrder>;
  googleAnalytics?: InputMaybe<SortOrder>;
  googleDrive?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  mailServer?: InputMaybe<SortOrder>;
  optional_zip?: InputMaybe<SortOrder>;
  region?: InputMaybe<SortOrder>;
  searchSetting?: InputMaybe<SortOrder>;
  sentryDsn?: InputMaybe<SortOrder>;
  siteName?: InputMaybe<SortOrder>;
  siteTagline?: InputMaybe<SortOrder>;
  siteWebsite?: InputMaybe<SortOrder>;
  state_required_for?: InputMaybe<SortOrder>;
  store_hours?: InputMaybe<SortOrder>;
  store_name?: InputMaybe<SortOrder>;
  store_phone?: InputMaybe<SortOrder>;
  top_destinations?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  vat_number?: InputMaybe<SortOrder>;
  youtubeVideos?: InputMaybe<SortOrder>;
  zipcode?: InputMaybe<SortOrder>;
};

export enum SettingsScalarFieldEnum {
  Address = 'address',
  AddressTwo = 'address_two',
  AllowCountries = 'allow_countries',
  AllowState = 'allow_state',
  AllowedCurrency = 'allowed_currency',
  AwsS3 = 'awsS3',
  BaseCurrency = 'base_currency',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  DatabaseUrl = 'databaseUrl',
  DefaultCountry = 'default_country',
  DefaultCurrency = 'default_currency',
  DisqusKey = 'disqusKey',
  EuropeanUnionCountries = 'european_union_countries',
  GoogleAnalytics = 'googleAnalytics',
  GoogleDrive = 'googleDrive',
  Id = 'id',
  IsPublic = 'isPublic',
  MailServer = 'mailServer',
  OptionalZip = 'optional_zip',
  Region = 'region',
  SearchSetting = 'searchSetting',
  SentryDsn = 'sentryDsn',
  SiteName = 'siteName',
  SiteTagline = 'siteTagline',
  SiteWebsite = 'siteWebsite',
  StateRequiredFor = 'state_required_for',
  StoreHours = 'store_hours',
  StoreName = 'store_name',
  StorePhone = 'store_phone',
  TopDestinations = 'top_destinations',
  Type = 'type',
  VatNumber = 'vat_number',
  YoutubeVideos = 'youtubeVideos',
  Zipcode = 'zipcode'
}

export type SettingsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SettingsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SettingsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SettingsScalarWhereWithAggregatesInput>>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  address_two?: InputMaybe<StringNullableWithAggregatesFilter>;
  allow_countries?: InputMaybe<StringNullableWithAggregatesFilter>;
  allow_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  allowed_currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  awsS3?: InputMaybe<StringNullableWithAggregatesFilter>;
  base_currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  databaseUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_currency?: InputMaybe<StringNullableWithAggregatesFilter>;
  disqusKey?: InputMaybe<StringNullableWithAggregatesFilter>;
  european_union_countries?: InputMaybe<StringNullableWithAggregatesFilter>;
  googleAnalytics?: InputMaybe<StringNullableWithAggregatesFilter>;
  googleDrive?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  mailServer?: InputMaybe<StringNullableWithAggregatesFilter>;
  optional_zip?: InputMaybe<StringNullableWithAggregatesFilter>;
  region?: InputMaybe<StringNullableWithAggregatesFilter>;
  searchSetting?: InputMaybe<StringNullableWithAggregatesFilter>;
  sentryDsn?: InputMaybe<StringNullableWithAggregatesFilter>;
  siteName?: InputMaybe<StringNullableWithAggregatesFilter>;
  siteTagline?: InputMaybe<StringNullableWithAggregatesFilter>;
  siteWebsite?: InputMaybe<StringNullableWithAggregatesFilter>;
  state_required_for?: InputMaybe<StringNullableWithAggregatesFilter>;
  store_hours?: InputMaybe<StringNullableWithAggregatesFilter>;
  store_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  store_phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  top_destinations?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  vat_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  youtubeVideos?: InputMaybe<StringNullableWithAggregatesFilter>;
  zipcode?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SettingsSumAggregate = {
  __typename?: 'SettingsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type SettingsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type SettingsUpdateInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allow_countries?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allow_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allowed_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  awsS3?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  base_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  databaseUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  disqusKey?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  european_union_countries?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleAnalytics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleDrive?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mailServer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  optional_zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  searchSetting?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sentryDsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteTagline?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteWebsite?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state_required_for?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_hours?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  top_destinations?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  vat_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  youtubeVideos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SettingsUpdateManyMutationInput = {
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address_two?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allow_countries?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allow_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  allowed_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  awsS3?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  base_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  databaseUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_currency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  disqusKey?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  european_union_countries?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleAnalytics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleDrive?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mailServer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  optional_zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  region?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  searchSetting?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sentryDsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteTagline?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  siteWebsite?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state_required_for?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_hours?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  top_destinations?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  vat_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  youtubeVideos?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zipcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SettingsWhereInput = {
  AND?: InputMaybe<Array<SettingsWhereInput>>;
  NOT?: InputMaybe<Array<SettingsWhereInput>>;
  OR?: InputMaybe<Array<SettingsWhereInput>>;
  address?: InputMaybe<StringNullableFilter>;
  address_two?: InputMaybe<StringNullableFilter>;
  allow_countries?: InputMaybe<StringNullableFilter>;
  allow_state?: InputMaybe<StringNullableFilter>;
  allowed_currency?: InputMaybe<StringNullableFilter>;
  awsS3?: InputMaybe<StringNullableFilter>;
  base_currency?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  databaseUrl?: InputMaybe<StringNullableFilter>;
  default_country?: InputMaybe<StringNullableFilter>;
  default_currency?: InputMaybe<StringNullableFilter>;
  disqusKey?: InputMaybe<StringNullableFilter>;
  european_union_countries?: InputMaybe<StringNullableFilter>;
  googleAnalytics?: InputMaybe<StringNullableFilter>;
  googleDrive?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  mailServer?: InputMaybe<StringNullableFilter>;
  optional_zip?: InputMaybe<StringNullableFilter>;
  region?: InputMaybe<StringNullableFilter>;
  searchSetting?: InputMaybe<StringNullableFilter>;
  sentryDsn?: InputMaybe<StringNullableFilter>;
  siteName?: InputMaybe<StringNullableFilter>;
  siteTagline?: InputMaybe<StringNullableFilter>;
  siteWebsite?: InputMaybe<StringNullableFilter>;
  state_required_for?: InputMaybe<StringNullableFilter>;
  store_hours?: InputMaybe<StringNullableFilter>;
  store_name?: InputMaybe<StringNullableFilter>;
  store_phone?: InputMaybe<StringNullableFilter>;
  top_destinations?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  vat_number?: InputMaybe<StringNullableFilter>;
  youtubeVideos?: InputMaybe<StringNullableFilter>;
  zipcode?: InputMaybe<StringNullableFilter>;
};

export type SettingsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Shipments = {
  __typename?: 'Shipments';
  carrier_name: Scalars['String'];
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  ship_date?: Maybe<Scalars['DateTime']>;
  speed_grade?: Maybe<Scalars['String']>;
  tracking_url?: Maybe<Scalars['String']>;
  transit_time?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type ShipmentsAvgAggregate = {
  __typename?: 'ShipmentsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ShipmentsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ShipmentsCountAggregate = {
  __typename?: 'ShipmentsCountAggregate';
  _all: Scalars['Int'];
  carrier_name: Scalars['Int'];
  client_id: Scalars['Int'];
  client_secret: Scalars['Int'];
  country: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  product: Scalars['Int'];
  ship_date: Scalars['Int'];
  speed_grade: Scalars['Int'];
  tracking_url: Scalars['Int'];
  transit_time: Scalars['Int'];
  website: Scalars['Int'];
};

export type ShipmentsCountOrderByAggregateInput = {
  carrier_name?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  ship_date?: InputMaybe<SortOrder>;
  speed_grade?: InputMaybe<SortOrder>;
  tracking_url?: InputMaybe<SortOrder>;
  transit_time?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type ShipmentsCreateInput = {
  carrier_name: Scalars['String'];
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  ship_date?: InputMaybe<Scalars['DateTime']>;
  speed_grade?: InputMaybe<Scalars['String']>;
  tracking_url?: InputMaybe<Scalars['String']>;
  transit_time?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type ShipmentsCreateManyInput = {
  carrier_name: Scalars['String'];
  client_id?: InputMaybe<Scalars['String']>;
  client_secret?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<Scalars['String']>;
  ship_date?: InputMaybe<Scalars['DateTime']>;
  speed_grade?: InputMaybe<Scalars['String']>;
  tracking_url?: InputMaybe<Scalars['String']>;
  transit_time?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type ShipmentsGroupBy = {
  __typename?: 'ShipmentsGroupBy';
  _avg?: Maybe<ShipmentsAvgAggregate>;
  _count?: Maybe<ShipmentsCountAggregate>;
  _max?: Maybe<ShipmentsMaxAggregate>;
  _min?: Maybe<ShipmentsMinAggregate>;
  _sum?: Maybe<ShipmentsSumAggregate>;
  carrier_name: Scalars['String'];
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  ship_date?: Maybe<Scalars['DateTime']>;
  speed_grade?: Maybe<Scalars['String']>;
  tracking_url?: Maybe<Scalars['String']>;
  transit_time?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type ShipmentsMaxAggregate = {
  __typename?: 'ShipmentsMaxAggregate';
  carrier_name?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  ship_date?: Maybe<Scalars['DateTime']>;
  speed_grade?: Maybe<Scalars['String']>;
  tracking_url?: Maybe<Scalars['String']>;
  transit_time?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type ShipmentsMaxOrderByAggregateInput = {
  carrier_name?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  ship_date?: InputMaybe<SortOrder>;
  speed_grade?: InputMaybe<SortOrder>;
  tracking_url?: InputMaybe<SortOrder>;
  transit_time?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type ShipmentsMinAggregate = {
  __typename?: 'ShipmentsMinAggregate';
  carrier_name?: Maybe<Scalars['String']>;
  client_id?: Maybe<Scalars['String']>;
  client_secret?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  product?: Maybe<Scalars['String']>;
  ship_date?: Maybe<Scalars['DateTime']>;
  speed_grade?: Maybe<Scalars['String']>;
  tracking_url?: Maybe<Scalars['String']>;
  transit_time?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type ShipmentsMinOrderByAggregateInput = {
  carrier_name?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  ship_date?: InputMaybe<SortOrder>;
  speed_grade?: InputMaybe<SortOrder>;
  tracking_url?: InputMaybe<SortOrder>;
  transit_time?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum ShipmentsOrderByRelevanceFieldEnum {
  CarrierName = 'carrier_name',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  Image = 'image',
  Product = 'product',
  SpeedGrade = 'speed_grade',
  TrackingUrl = 'tracking_url',
  TransitTime = 'transit_time',
  Website = 'website'
}

export type ShipmentsOrderByRelevanceInput = {
  fields: Array<ShipmentsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ShipmentsOrderByWithAggregationInput = {
  _avg?: InputMaybe<ShipmentsAvgOrderByAggregateInput>;
  _count?: InputMaybe<ShipmentsCountOrderByAggregateInput>;
  _max?: InputMaybe<ShipmentsMaxOrderByAggregateInput>;
  _min?: InputMaybe<ShipmentsMinOrderByAggregateInput>;
  _sum?: InputMaybe<ShipmentsSumOrderByAggregateInput>;
  carrier_name?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  ship_date?: InputMaybe<SortOrder>;
  speed_grade?: InputMaybe<SortOrder>;
  tracking_url?: InputMaybe<SortOrder>;
  transit_time?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type ShipmentsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ShipmentsOrderByRelevanceInput>;
  carrier_name?: InputMaybe<SortOrder>;
  client_id?: InputMaybe<SortOrder>;
  client_secret?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product?: InputMaybe<SortOrder>;
  ship_date?: InputMaybe<SortOrder>;
  speed_grade?: InputMaybe<SortOrder>;
  tracking_url?: InputMaybe<SortOrder>;
  transit_time?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum ShipmentsScalarFieldEnum {
  CarrierName = 'carrier_name',
  ClientId = 'client_id',
  ClientSecret = 'client_secret',
  Country = 'country',
  Id = 'id',
  Image = 'image',
  Product = 'product',
  ShipDate = 'ship_date',
  SpeedGrade = 'speed_grade',
  TrackingUrl = 'tracking_url',
  TransitTime = 'transit_time',
  Website = 'website'
}

export type ShipmentsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ShipmentsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ShipmentsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ShipmentsScalarWhereWithAggregatesInput>>;
  carrier_name?: InputMaybe<StringWithAggregatesFilter>;
  client_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  client_secret?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  product?: InputMaybe<StringNullableWithAggregatesFilter>;
  ship_date?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  speed_grade?: InputMaybe<StringNullableWithAggregatesFilter>;
  tracking_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  transit_time?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ShipmentsSumAggregate = {
  __typename?: 'ShipmentsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ShipmentsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ShipmentsUpdateInput = {
  carrier_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ship_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  speed_grade?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transit_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ShipmentsUpdateManyMutationInput = {
  carrier_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  client_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  client_secret?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ship_date?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  speed_grade?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tracking_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transit_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ShipmentsWhereInput = {
  AND?: InputMaybe<Array<ShipmentsWhereInput>>;
  NOT?: InputMaybe<Array<ShipmentsWhereInput>>;
  OR?: InputMaybe<Array<ShipmentsWhereInput>>;
  carrier_name?: InputMaybe<StringFilter>;
  client_id?: InputMaybe<StringNullableFilter>;
  client_secret?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  product?: InputMaybe<StringNullableFilter>;
  ship_date?: InputMaybe<DateTimeNullableFilter>;
  speed_grade?: InputMaybe<StringNullableFilter>;
  tracking_url?: InputMaybe<StringNullableFilter>;
  transit_time?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type ShipmentsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type Special_Discounts = {
  __typename?: 'Special_discounts';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Decimal']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Special_DiscountsAvgAggregate = {
  __typename?: 'Special_discountsAvgAggregate';
  discount?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Float']>;
};

export type Special_DiscountsAvgOrderByAggregateInput = {
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Special_DiscountsCountAggregate = {
  __typename?: 'Special_discountsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  discount: Scalars['Int'];
  excerpt: Scalars['Int'];
  expiration: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  published: Scalars['Int'];
  rewards: Scalars['Int'];
  users: Scalars['Int'];
};

export type Special_DiscountsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Special_DiscountsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Decimal']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['DateTime']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  rewards?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type Special_DiscountsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Decimal']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  rewards?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type Special_DiscountsGroupBy = {
  __typename?: 'Special_discountsGroupBy';
  _avg?: Maybe<Special_DiscountsAvgAggregate>;
  _count?: Maybe<Special_DiscountsCountAggregate>;
  _max?: Maybe<Special_DiscountsMaxAggregate>;
  _min?: Maybe<Special_DiscountsMinAggregate>;
  _sum?: Maybe<Special_DiscountsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Decimal']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Special_DiscountsMaxAggregate = {
  __typename?: 'Special_discountsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Decimal']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Special_DiscountsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Special_DiscountsMinAggregate = {
  __typename?: 'Special_discountsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Decimal']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  rewards?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type Special_DiscountsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum Special_DiscountsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Excerpt = 'excerpt',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Rewards = 'rewards',
  Users = 'users'
}

export type Special_DiscountsOrderByRelevanceInput = {
  fields: Array<Special_DiscountsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Special_DiscountsOrderByWithAggregationInput = {
  _avg?: InputMaybe<Special_DiscountsAvgOrderByAggregateInput>;
  _count?: InputMaybe<Special_DiscountsCountOrderByAggregateInput>;
  _max?: InputMaybe<Special_DiscountsMaxOrderByAggregateInput>;
  _min?: InputMaybe<Special_DiscountsMinOrderByAggregateInput>;
  _sum?: InputMaybe<Special_DiscountsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type Special_DiscountsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Special_DiscountsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum Special_DiscountsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Discount = 'discount',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Published = 'published',
  Rewards = 'rewards',
  Users = 'users'
}

export type Special_DiscountsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Special_DiscountsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Special_DiscountsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Special_DiscountsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<DecimalNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  rewards?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Special_DiscountsSumAggregate = {
  __typename?: 'Special_discountsSumAggregate';
  discount?: Maybe<Scalars['Decimal']>;
  id?: Maybe<Scalars['Int']>;
};

export type Special_DiscountsSumOrderByAggregateInput = {
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type Special_DiscountsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Special_DiscountsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableDecimalFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Special_DiscountsWhereInput = {
  AND?: InputMaybe<Array<Special_DiscountsWhereInput>>;
  NOT?: InputMaybe<Array<Special_DiscountsWhereInput>>;
  OR?: InputMaybe<Array<Special_DiscountsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<DecimalNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  expiration?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  rewards?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type Special_DiscountsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type States = {
  __typename?: 'States';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  trainings?: Maybe<Scalars['String']>;
};

export type StatesAvgAggregate = {
  __typename?: 'StatesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type StatesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StatesCountAggregate = {
  __typename?: 'StatesCountAggregate';
  _all: Scalars['Int'];
  country: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  trainings: Scalars['Int'];
};

export type StatesCountOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type StatesCreateInput = {
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  trainings?: InputMaybe<Scalars['String']>;
};

export type StatesCreateManyInput = {
  country?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  trainings?: InputMaybe<Scalars['String']>;
};

export type StatesGroupBy = {
  __typename?: 'StatesGroupBy';
  _avg?: Maybe<StatesAvgAggregate>;
  _count?: Maybe<StatesCountAggregate>;
  _max?: Maybe<StatesMaxAggregate>;
  _min?: Maybe<StatesMinAggregate>;
  _sum?: Maybe<StatesSumAggregate>;
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  trainings?: Maybe<Scalars['String']>;
};

export type StatesMaxAggregate = {
  __typename?: 'StatesMaxAggregate';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type StatesMaxOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type StatesMinAggregate = {
  __typename?: 'StatesMinAggregate';
  country?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  trainings?: Maybe<Scalars['String']>;
};

export type StatesMinOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum StatesOrderByRelevanceFieldEnum {
  Country = 'country',
  Description = 'description',
  Image = 'image',
  Name = 'name',
  Trainings = 'trainings'
}

export type StatesOrderByRelevanceInput = {
  fields: Array<StatesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type StatesOrderByWithAggregationInput = {
  _avg?: InputMaybe<StatesAvgOrderByAggregateInput>;
  _count?: InputMaybe<StatesCountOrderByAggregateInput>;
  _max?: InputMaybe<StatesMaxOrderByAggregateInput>;
  _min?: InputMaybe<StatesMinOrderByAggregateInput>;
  _sum?: InputMaybe<StatesSumOrderByAggregateInput>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export type StatesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<StatesOrderByRelevanceInput>;
  country?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  trainings?: InputMaybe<SortOrder>;
};

export enum StatesScalarFieldEnum {
  Country = 'country',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Trainings = 'trainings'
}

export type StatesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StatesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StatesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StatesScalarWhereWithAggregatesInput>>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  trainings?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type StatesSumAggregate = {
  __typename?: 'StatesSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type StatesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StatesUpdateInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StatesUpdateManyMutationInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  trainings?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StatesWhereInput = {
  AND?: InputMaybe<Array<StatesWhereInput>>;
  NOT?: InputMaybe<Array<StatesWhereInput>>;
  OR?: InputMaybe<Array<StatesWhereInput>>;
  country?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  trainings?: InputMaybe<StringNullableFilter>;
};

export type StatesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Statistics = {
  __typename?: 'Statistics';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  reports?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type StatisticsAvgAggregate = {
  __typename?: 'StatisticsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type StatisticsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StatisticsCountAggregate = {
  __typename?: 'StatisticsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  excerpt: Scalars['Int'];
  expiration: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  published: Scalars['Int'];
  reports: Scalars['Int'];
  rewards: Scalars['Int'];
  special_offers: Scalars['Int'];
  users: Scalars['Int'];
};

export type StatisticsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type StatisticsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['DateTime']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  reports?: InputMaybe<Scalars['String']>;
  rewards?: InputMaybe<Scalars['String']>;
  special_offers?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type StatisticsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  expiration?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  published?: InputMaybe<Scalars['DateTime']>;
  reports?: InputMaybe<Scalars['String']>;
  rewards?: InputMaybe<Scalars['String']>;
  special_offers?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type StatisticsGroupBy = {
  __typename?: 'StatisticsGroupBy';
  _avg?: Maybe<StatisticsAvgAggregate>;
  _count?: Maybe<StatisticsCountAggregate>;
  _max?: Maybe<StatisticsMaxAggregate>;
  _min?: Maybe<StatisticsMinAggregate>;
  _sum?: Maybe<StatisticsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  reports?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type StatisticsMaxAggregate = {
  __typename?: 'StatisticsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  reports?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type StatisticsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type StatisticsMinAggregate = {
  __typename?: 'StatisticsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  expiration?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  published?: Maybe<Scalars['DateTime']>;
  reports?: Maybe<Scalars['String']>;
  rewards?: Maybe<Scalars['String']>;
  special_offers?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type StatisticsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum StatisticsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Description = 'description',
  Excerpt = 'excerpt',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Reports = 'reports',
  Rewards = 'rewards',
  SpecialOffers = 'special_offers',
  Users = 'users'
}

export type StatisticsOrderByRelevanceInput = {
  fields: Array<StatisticsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type StatisticsOrderByWithAggregationInput = {
  _avg?: InputMaybe<StatisticsAvgOrderByAggregateInput>;
  _count?: InputMaybe<StatisticsCountOrderByAggregateInput>;
  _max?: InputMaybe<StatisticsMaxOrderByAggregateInput>;
  _min?: InputMaybe<StatisticsMinOrderByAggregateInput>;
  _sum?: InputMaybe<StatisticsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type StatisticsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<StatisticsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  expiration?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  published?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  rewards?: InputMaybe<SortOrder>;
  special_offers?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum StatisticsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Coupons = 'coupons',
  Customers = 'customers',
  Description = 'description',
  Excerpt = 'excerpt',
  Expiration = 'expiration',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  Products = 'products',
  Published = 'published',
  Reports = 'reports',
  Rewards = 'rewards',
  SpecialOffers = 'special_offers',
  Users = 'users'
}

export type StatisticsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StatisticsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StatisticsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StatisticsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  expiration?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  published?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  reports?: InputMaybe<StringNullableWithAggregatesFilter>;
  rewards?: InputMaybe<StringNullableWithAggregatesFilter>;
  special_offers?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type StatisticsSumAggregate = {
  __typename?: 'StatisticsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type StatisticsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StatisticsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_offers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StatisticsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiration?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  published?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rewards?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_offers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StatisticsWhereInput = {
  AND?: InputMaybe<Array<StatisticsWhereInput>>;
  NOT?: InputMaybe<Array<StatisticsWhereInput>>;
  OR?: InputMaybe<Array<StatisticsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  expiration?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  published?: InputMaybe<DateTimeNullableFilter>;
  reports?: InputMaybe<StringNullableFilter>;
  rewards?: InputMaybe<StringNullableFilter>;
  special_offers?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type StatisticsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Stocks = {
  __typename?: 'Stocks';
  description?: Maybe<Scalars['String']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  name: Scalars['String'];
  sources?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type StocksAvgAggregate = {
  __typename?: 'StocksAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type StocksAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StocksCountAggregate = {
  __typename?: 'StocksCountAggregate';
  _all: Scalars['Int'];
  description: Scalars['Int'];
  enabled: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  sources: Scalars['Int'];
  website: Scalars['Int'];
};

export type StocksCountOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  enabled?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sources?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type StocksCreateInput = {
  description?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  sources?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type StocksCreateManyInput = {
  description?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
  sources?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type StocksGroupBy = {
  __typename?: 'StocksGroupBy';
  _avg?: Maybe<StocksAvgAggregate>;
  _count?: Maybe<StocksCountAggregate>;
  _max?: Maybe<StocksMaxAggregate>;
  _min?: Maybe<StocksMinAggregate>;
  _sum?: Maybe<StocksSumAggregate>;
  description?: Maybe<Scalars['String']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  name: Scalars['String'];
  sources?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type StocksMaxAggregate = {
  __typename?: 'StocksMaxAggregate';
  description?: Maybe<Scalars['String']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  sources?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type StocksMaxOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  enabled?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sources?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type StocksMinAggregate = {
  __typename?: 'StocksMinAggregate';
  description?: Maybe<Scalars['String']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  sources?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type StocksMinOrderByAggregateInput = {
  description?: InputMaybe<SortOrder>;
  enabled?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sources?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum StocksOrderByRelevanceFieldEnum {
  Description = 'description',
  Name = 'name',
  Sources = 'sources',
  Website = 'website'
}

export type StocksOrderByRelevanceInput = {
  fields: Array<StocksOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type StocksOrderByWithAggregationInput = {
  _avg?: InputMaybe<StocksAvgOrderByAggregateInput>;
  _count?: InputMaybe<StocksCountOrderByAggregateInput>;
  _max?: InputMaybe<StocksMaxOrderByAggregateInput>;
  _min?: InputMaybe<StocksMinOrderByAggregateInput>;
  _sum?: InputMaybe<StocksSumOrderByAggregateInput>;
  description?: InputMaybe<SortOrder>;
  enabled?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sources?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type StocksOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<StocksOrderByRelevanceInput>;
  description?: InputMaybe<SortOrder>;
  enabled?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sources?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum StocksScalarFieldEnum {
  Description = 'description',
  Enabled = 'enabled',
  Id = 'id',
  Name = 'name',
  Sources = 'sources',
  Website = 'website'
}

export type StocksScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StocksScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StocksScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StocksScalarWhereWithAggregatesInput>>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  enabled?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  sources?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type StocksSumAggregate = {
  __typename?: 'StocksSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type StocksSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type StocksUpdateInput = {
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  enabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  sources?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StocksUpdateManyMutationInput = {
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  enabled?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  sources?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type StocksWhereInput = {
  AND?: InputMaybe<Array<StocksWhereInput>>;
  NOT?: InputMaybe<Array<StocksWhereInput>>;
  OR?: InputMaybe<Array<StocksWhereInput>>;
  description?: InputMaybe<StringNullableFilter>;
  enabled?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  sources?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type StocksWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  search?: InputMaybe<Scalars['String']>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type Tags = {
  __typename?: 'Tags';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type TagsAvgAggregate = {
  __typename?: 'TagsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type TagsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TagsCountAggregate = {
  __typename?: 'TagsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  customers: Scalars['Int'];
  excerpt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  users: Scalars['Int'];
};

export type TagsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type TagsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type TagsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  excerpt?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
  products?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
};

export type TagsGroupBy = {
  __typename?: 'TagsGroupBy';
  _avg?: Maybe<TagsAvgAggregate>;
  _count?: Maybe<TagsCountAggregate>;
  _max?: Maybe<TagsMaxAggregate>;
  _min?: Maybe<TagsMinAggregate>;
  _sum?: Maybe<TagsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  name: Scalars['String'];
  products?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type TagsMaxAggregate = {
  __typename?: 'TagsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type TagsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type TagsMinAggregate = {
  __typename?: 'TagsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  excerpt?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
};

export type TagsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum TagsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Excerpt = 'excerpt',
  Name = 'name',
  Products = 'products',
  Users = 'users'
}

export type TagsOrderByRelevanceInput = {
  fields: Array<TagsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type TagsOrderByWithAggregationInput = {
  _avg?: InputMaybe<TagsAvgOrderByAggregateInput>;
  _count?: InputMaybe<TagsCountOrderByAggregateInput>;
  _max?: InputMaybe<TagsMaxOrderByAggregateInput>;
  _min?: InputMaybe<TagsMinOrderByAggregateInput>;
  _sum?: InputMaybe<TagsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type TagsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<TagsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  excerpt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export enum TagsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Customers = 'customers',
  Excerpt = 'excerpt',
  Id = 'id',
  Name = 'name',
  Products = 'products',
  Users = 'users'
}

export type TagsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TagsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TagsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TagsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  excerpt?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type TagsSumAggregate = {
  __typename?: 'TagsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type TagsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TagsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TagsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  excerpt?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TagsWhereInput = {
  AND?: InputMaybe<Array<TagsWhereInput>>;
  NOT?: InputMaybe<Array<TagsWhereInput>>;
  OR?: InputMaybe<Array<TagsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  excerpt?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
};

export type TagsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Targets = {
  __typename?: 'Targets';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  donotcall?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_opt_out?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type TargetsAvgAggregate = {
  __typename?: 'TargetsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type TargetsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TargetsCountAggregate = {
  __typename?: 'TargetsCountAggregate';
  Prefix: Scalars['Int'];
  _all: Scalars['Int'];
  account_name: Scalars['Int'];
  address: Scalars['Int'];
  alt_address: Scalars['Int'];
  alt_city: Scalars['Int'];
  alt_country: Scalars['Int'];
  alt_postalcode: Scalars['Int'];
  alt_state: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  customer_name: Scalars['Int'];
  department: Scalars['Int'];
  description: Scalars['Int'];
  donotcall: Scalars['Int'];
  email: Scalars['Int'];
  email_opt_out: Scalars['Int'];
  fax: Scalars['Int'];
  first_name: Scalars['Int'];
  id: Scalars['Int'];
  job_title: Scalars['Int'];
  last_name: Scalars['Int'];
  mobile: Scalars['Int'];
  office_phone: Scalars['Int'];
  postalcode: Scalars['Int'];
  state: Scalars['Int'];
  website: Scalars['Int'];
};

export type TargetsCountOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  donotcall?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  email_opt_out?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type TargetsCreateInput = {
  Prefix?: InputMaybe<Scalars['String']>;
  account_name?: InputMaybe<Scalars['String']>;
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customer_name?: InputMaybe<Scalars['String']>;
  department?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  donotcall?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  email_opt_out?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  job_title?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  mobile?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type TargetsCreateManyInput = {
  Prefix?: InputMaybe<Scalars['String']>;
  account_name?: InputMaybe<Scalars['String']>;
  address?: InputMaybe<Scalars['String']>;
  alt_address?: InputMaybe<Scalars['String']>;
  alt_city?: InputMaybe<Scalars['String']>;
  alt_country?: InputMaybe<Scalars['String']>;
  alt_postalcode?: InputMaybe<Scalars['String']>;
  alt_state?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customer_name?: InputMaybe<Scalars['String']>;
  department?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  donotcall?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  email_opt_out?: InputMaybe<Scalars['String']>;
  fax?: InputMaybe<Scalars['String']>;
  first_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  job_title?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  mobile?: InputMaybe<Scalars['String']>;
  office_phone?: InputMaybe<Scalars['String']>;
  postalcode?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
};

export type TargetsGroupBy = {
  __typename?: 'TargetsGroupBy';
  Prefix?: Maybe<Scalars['String']>;
  _avg?: Maybe<TargetsAvgAggregate>;
  _count?: Maybe<TargetsCountAggregate>;
  _max?: Maybe<TargetsMaxAggregate>;
  _min?: Maybe<TargetsMinAggregate>;
  _sum?: Maybe<TargetsSumAggregate>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  donotcall?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_opt_out?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type TargetsMaxAggregate = {
  __typename?: 'TargetsMaxAggregate';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  donotcall?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_opt_out?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type TargetsMaxOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  donotcall?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  email_opt_out?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type TargetsMinAggregate = {
  __typename?: 'TargetsMinAggregate';
  Prefix?: Maybe<Scalars['String']>;
  account_name?: Maybe<Scalars['String']>;
  address?: Maybe<Scalars['String']>;
  alt_address?: Maybe<Scalars['String']>;
  alt_city?: Maybe<Scalars['String']>;
  alt_country?: Maybe<Scalars['String']>;
  alt_postalcode?: Maybe<Scalars['String']>;
  alt_state?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customer_name?: Maybe<Scalars['String']>;
  department?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  donotcall?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  email_opt_out?: Maybe<Scalars['String']>;
  fax?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  job_title?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mobile?: Maybe<Scalars['String']>;
  office_phone?: Maybe<Scalars['String']>;
  postalcode?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
};

export type TargetsMinOrderByAggregateInput = {
  Prefix?: InputMaybe<SortOrder>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  donotcall?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  email_opt_out?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum TargetsOrderByRelevanceFieldEnum {
  Prefix = 'Prefix',
  AccountName = 'account_name',
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  City = 'city',
  Country = 'country',
  CustomerName = 'customer_name',
  Department = 'department',
  Description = 'description',
  Donotcall = 'donotcall',
  Email = 'email',
  EmailOptOut = 'email_opt_out',
  Fax = 'fax',
  FirstName = 'first_name',
  JobTitle = 'job_title',
  LastName = 'last_name',
  Mobile = 'mobile',
  OfficePhone = 'office_phone',
  Postalcode = 'postalcode',
  State = 'state',
  Website = 'website'
}

export type TargetsOrderByRelevanceInput = {
  fields: Array<TargetsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type TargetsOrderByWithAggregationInput = {
  Prefix?: InputMaybe<SortOrder>;
  _avg?: InputMaybe<TargetsAvgOrderByAggregateInput>;
  _count?: InputMaybe<TargetsCountOrderByAggregateInput>;
  _max?: InputMaybe<TargetsMaxOrderByAggregateInput>;
  _min?: InputMaybe<TargetsMinOrderByAggregateInput>;
  _sum?: InputMaybe<TargetsSumOrderByAggregateInput>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  donotcall?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  email_opt_out?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export type TargetsOrderByWithRelationAndSearchRelevanceInput = {
  Prefix?: InputMaybe<SortOrder>;
  _relevance?: InputMaybe<TargetsOrderByRelevanceInput>;
  account_name?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  alt_address?: InputMaybe<SortOrder>;
  alt_city?: InputMaybe<SortOrder>;
  alt_country?: InputMaybe<SortOrder>;
  alt_postalcode?: InputMaybe<SortOrder>;
  alt_state?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_name?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  donotcall?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  email_opt_out?: InputMaybe<SortOrder>;
  fax?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  job_title?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  office_phone?: InputMaybe<SortOrder>;
  postalcode?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
};

export enum TargetsScalarFieldEnum {
  Prefix = 'Prefix',
  AccountName = 'account_name',
  Address = 'address',
  AltAddress = 'alt_address',
  AltCity = 'alt_city',
  AltCountry = 'alt_country',
  AltPostalcode = 'alt_postalcode',
  AltState = 'alt_state',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  CustomerName = 'customer_name',
  Department = 'department',
  Description = 'description',
  Donotcall = 'donotcall',
  Email = 'email',
  EmailOptOut = 'email_opt_out',
  Fax = 'fax',
  FirstName = 'first_name',
  Id = 'id',
  JobTitle = 'job_title',
  LastName = 'last_name',
  Mobile = 'mobile',
  OfficePhone = 'office_phone',
  Postalcode = 'postalcode',
  State = 'state',
  Website = 'website'
}

export type TargetsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TargetsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TargetsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TargetsScalarWhereWithAggregatesInput>>;
  Prefix?: InputMaybe<StringNullableWithAggregatesFilter>;
  account_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_address?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_city?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_country?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  alt_state?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customer_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  department?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  donotcall?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  email_opt_out?: InputMaybe<StringNullableWithAggregatesFilter>;
  fax?: InputMaybe<StringNullableWithAggregatesFilter>;
  first_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  job_title?: InputMaybe<StringNullableWithAggregatesFilter>;
  last_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  mobile?: InputMaybe<StringNullableWithAggregatesFilter>;
  office_phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  postalcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type TargetsSumAggregate = {
  __typename?: 'TargetsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type TargetsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TargetsUpdateInput = {
  Prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  donotcall?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email_opt_out?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  job_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TargetsUpdateManyMutationInput = {
  Prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_address?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alt_state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  donotcall?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email_opt_out?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fax?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  job_title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  office_phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postalcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TargetsWhereInput = {
  AND?: InputMaybe<Array<TargetsWhereInput>>;
  NOT?: InputMaybe<Array<TargetsWhereInput>>;
  OR?: InputMaybe<Array<TargetsWhereInput>>;
  Prefix?: InputMaybe<StringNullableFilter>;
  account_name?: InputMaybe<StringNullableFilter>;
  address?: InputMaybe<StringNullableFilter>;
  alt_address?: InputMaybe<StringNullableFilter>;
  alt_city?: InputMaybe<StringNullableFilter>;
  alt_country?: InputMaybe<StringNullableFilter>;
  alt_postalcode?: InputMaybe<StringNullableFilter>;
  alt_state?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customer_name?: InputMaybe<StringNullableFilter>;
  department?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  donotcall?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  email_opt_out?: InputMaybe<StringNullableFilter>;
  fax?: InputMaybe<StringNullableFilter>;
  first_name?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  job_title?: InputMaybe<StringNullableFilter>;
  last_name?: InputMaybe<StringNullableFilter>;
  mobile?: InputMaybe<StringNullableFilter>;
  office_phone?: InputMaybe<StringNullableFilter>;
  postalcode?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
};

export type TargetsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Tax_Category = {
  __typename?: 'Tax_category';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
};

export type Tax_CategoryAvgAggregate = {
  __typename?: 'Tax_categoryAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type Tax_CategoryAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Tax_CategoryCountAggregate = {
  __typename?: 'Tax_categoryCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  default: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
};

export type Tax_CategoryCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type Tax_CategoryCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  default?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Tax_CategoryCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  default?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Tax_CategoryGroupBy = {
  __typename?: 'Tax_categoryGroupBy';
  _avg?: Maybe<Tax_CategoryAvgAggregate>;
  _count?: Maybe<Tax_CategoryCountAggregate>;
  _max?: Maybe<Tax_CategoryMaxAggregate>;
  _min?: Maybe<Tax_CategoryMinAggregate>;
  _sum?: Maybe<Tax_CategorySumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
};

export type Tax_CategoryMaxAggregate = {
  __typename?: 'Tax_categoryMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
};

export type Tax_CategoryMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type Tax_CategoryMinAggregate = {
  __typename?: 'Tax_categoryMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  default?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
};

export type Tax_CategoryMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum Tax_CategoryOrderByRelevanceFieldEnum {
  Default = 'default',
  Name = 'name'
}

export type Tax_CategoryOrderByRelevanceInput = {
  fields: Array<Tax_CategoryOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Tax_CategoryOrderByWithAggregationInput = {
  _avg?: InputMaybe<Tax_CategoryAvgOrderByAggregateInput>;
  _count?: InputMaybe<Tax_CategoryCountOrderByAggregateInput>;
  _max?: InputMaybe<Tax_CategoryMaxOrderByAggregateInput>;
  _min?: InputMaybe<Tax_CategoryMinOrderByAggregateInput>;
  _sum?: InputMaybe<Tax_CategorySumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type Tax_CategoryOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Tax_CategoryOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  default?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export enum Tax_CategoryScalarFieldEnum {
  CreatedAt = 'created_at',
  Default = 'default',
  Id = 'id',
  Name = 'name'
}

export type Tax_CategoryScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Tax_CategoryScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Tax_CategoryScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Tax_CategoryScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  default?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Tax_CategorySumAggregate = {
  __typename?: 'Tax_categorySumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type Tax_CategorySumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type Tax_CategoryUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  default?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Tax_CategoryUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  default?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Tax_CategoryWhereInput = {
  AND?: InputMaybe<Array<Tax_CategoryWhereInput>>;
  NOT?: InputMaybe<Array<Tax_CategoryWhereInput>>;
  OR?: InputMaybe<Array<Tax_CategoryWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  default?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type Tax_CategoryWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Tax_Rate = {
  __typename?: 'Tax_rate';
  country?: Maybe<Scalars['String']>;
  default_store_view?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  postcode?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  rate_percent?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_identifier: Scalars['String'];
  zip_post_is_range?: Maybe<Scalars['Boolean']>;
};

export type Tax_RateAvgAggregate = {
  __typename?: 'Tax_rateAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type Tax_RateAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Tax_RateCountAggregate = {
  __typename?: 'Tax_rateCountAggregate';
  _all: Scalars['Int'];
  country: Scalars['Int'];
  default_store_view: Scalars['Int'];
  id: Scalars['Int'];
  postcode: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  rate_percent: Scalars['Int'];
  state: Scalars['Int'];
  tax_identifier: Scalars['Int'];
  zip_post_is_range: Scalars['Int'];
};

export type Tax_RateCountOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  postcode?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rate_percent?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_identifier?: InputMaybe<SortOrder>;
  zip_post_is_range?: InputMaybe<SortOrder>;
};

export type Tax_RateCreateInput = {
  country?: InputMaybe<Scalars['String']>;
  default_store_view?: InputMaybe<Scalars['String']>;
  postcode?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  rate_percent?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tax_identifier: Scalars['String'];
  zip_post_is_range?: InputMaybe<Scalars['Boolean']>;
};

export type Tax_RateCreateManyInput = {
  country?: InputMaybe<Scalars['String']>;
  default_store_view?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  postcode?: InputMaybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  rate_percent?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  tax_identifier: Scalars['String'];
  zip_post_is_range?: InputMaybe<Scalars['Boolean']>;
};

export type Tax_RateGroupBy = {
  __typename?: 'Tax_rateGroupBy';
  _avg?: Maybe<Tax_RateAvgAggregate>;
  _count?: Maybe<Tax_RateCountAggregate>;
  _max?: Maybe<Tax_RateMaxAggregate>;
  _min?: Maybe<Tax_RateMinAggregate>;
  _sum?: Maybe<Tax_RateSumAggregate>;
  country?: Maybe<Scalars['String']>;
  default_store_view?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  postcode?: Maybe<Scalars['String']>;
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  rate_percent?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_identifier: Scalars['String'];
  zip_post_is_range?: Maybe<Scalars['Boolean']>;
};

export type Tax_RateMaxAggregate = {
  __typename?: 'Tax_rateMaxAggregate';
  country?: Maybe<Scalars['String']>;
  default_store_view?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  postcode?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  rate_percent?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_identifier?: Maybe<Scalars['String']>;
  zip_post_is_range?: Maybe<Scalars['Boolean']>;
};

export type Tax_RateMaxOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  postcode?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rate_percent?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_identifier?: InputMaybe<SortOrder>;
  zip_post_is_range?: InputMaybe<SortOrder>;
};

export type Tax_RateMinAggregate = {
  __typename?: 'Tax_rateMinAggregate';
  country?: Maybe<Scalars['String']>;
  default_store_view?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  postcode?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  rate_percent?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  tax_identifier?: Maybe<Scalars['String']>;
  zip_post_is_range?: Maybe<Scalars['Boolean']>;
};

export type Tax_RateMinOrderByAggregateInput = {
  country?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  postcode?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rate_percent?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_identifier?: InputMaybe<SortOrder>;
  zip_post_is_range?: InputMaybe<SortOrder>;
};

export enum Tax_RateOrderByRelevanceFieldEnum {
  Country = 'country',
  DefaultStoreView = 'default_store_view',
  Postcode = 'postcode',
  Products = 'products',
  RatePercent = 'rate_percent',
  State = 'state',
  TaxIdentifier = 'tax_identifier'
}

export type Tax_RateOrderByRelevanceInput = {
  fields: Array<Tax_RateOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Tax_RateOrderByWithAggregationInput = {
  _avg?: InputMaybe<Tax_RateAvgOrderByAggregateInput>;
  _count?: InputMaybe<Tax_RateCountOrderByAggregateInput>;
  _max?: InputMaybe<Tax_RateMaxOrderByAggregateInput>;
  _min?: InputMaybe<Tax_RateMinOrderByAggregateInput>;
  _sum?: InputMaybe<Tax_RateSumOrderByAggregateInput>;
  country?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  postcode?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rate_percent?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_identifier?: InputMaybe<SortOrder>;
  zip_post_is_range?: InputMaybe<SortOrder>;
};

export type Tax_RateOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Tax_RateOrderByRelevanceInput>;
  country?: InputMaybe<SortOrder>;
  default_store_view?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  postcode?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  rate_percent?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  tax_identifier?: InputMaybe<SortOrder>;
  zip_post_is_range?: InputMaybe<SortOrder>;
};

export enum Tax_RateScalarFieldEnum {
  Country = 'country',
  DefaultStoreView = 'default_store_view',
  Id = 'id',
  Postcode = 'postcode',
  ProdId = 'prod_id',
  Products = 'products',
  RatePercent = 'rate_percent',
  State = 'state',
  TaxIdentifier = 'tax_identifier',
  ZipPostIsRange = 'zip_post_is_range'
}

export type Tax_RateScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Tax_RateScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Tax_RateScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Tax_RateScalarWhereWithAggregatesInput>>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_store_view?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  postcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  rate_percent?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_identifier?: InputMaybe<StringWithAggregatesFilter>;
  zip_post_is_range?: InputMaybe<BoolNullableWithAggregatesFilter>;
};

export type Tax_RateSumAggregate = {
  __typename?: 'Tax_rateSumAggregate';
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type Tax_RateSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Tax_RateUpdateInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_store_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rate_percent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  zip_post_is_range?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type Tax_RateUpdateManyMutationInput = {
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  default_store_view?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rate_percent?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  zip_post_is_range?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
};

export type Tax_RateWhereInput = {
  AND?: InputMaybe<Array<Tax_RateWhereInput>>;
  NOT?: InputMaybe<Array<Tax_RateWhereInput>>;
  OR?: InputMaybe<Array<Tax_RateWhereInput>>;
  country?: InputMaybe<StringNullableFilter>;
  default_store_view?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  postcode?: InputMaybe<StringNullableFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  rate_percent?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  tax_identifier?: InputMaybe<StringFilter>;
  zip_post_is_range?: InputMaybe<BoolNullableFilter>;
};

export type Tax_RateWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Tax_Rule = {
  __typename?: 'Tax_rule';
  id: Scalars['Int'];
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
};

export type Tax_RuleAvgAggregate = {
  __typename?: 'Tax_ruleAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  prod_id?: Maybe<Scalars['Float']>;
};

export type Tax_RuleAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Tax_RuleCountAggregate = {
  __typename?: 'Tax_ruleCountAggregate';
  _all: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  prod_id: Scalars['Int'];
  products: Scalars['Int'];
  tax_rate: Scalars['Int'];
};

export type Tax_RuleCountOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
};

export type Tax_RuleCreateInput = {
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  tax_rate?: InputMaybe<Scalars['String']>;
};

export type Tax_RuleCreateManyInput = {
  id?: InputMaybe<Scalars['Int']>;
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: InputMaybe<Scalars['String']>;
  tax_rate?: InputMaybe<Scalars['String']>;
};

export type Tax_RuleGroupBy = {
  __typename?: 'Tax_ruleGroupBy';
  _avg?: Maybe<Tax_RuleAvgAggregate>;
  _count?: Maybe<Tax_RuleCountAggregate>;
  _max?: Maybe<Tax_RuleMaxAggregate>;
  _min?: Maybe<Tax_RuleMinAggregate>;
  _sum?: Maybe<Tax_RuleSumAggregate>;
  id: Scalars['Int'];
  name: Scalars['String'];
  prod_id: Scalars['BigInt'];
  products?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
};

export type Tax_RuleMaxAggregate = {
  __typename?: 'Tax_ruleMaxAggregate';
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
};

export type Tax_RuleMaxOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
};

export type Tax_RuleMinAggregate = {
  __typename?: 'Tax_ruleMinAggregate';
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  prod_id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['String']>;
  tax_rate?: Maybe<Scalars['String']>;
};

export type Tax_RuleMinOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
};

export enum Tax_RuleOrderByRelevanceFieldEnum {
  Name = 'name',
  Products = 'products',
  TaxRate = 'tax_rate'
}

export type Tax_RuleOrderByRelevanceInput = {
  fields: Array<Tax_RuleOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Tax_RuleOrderByWithAggregationInput = {
  _avg?: InputMaybe<Tax_RuleAvgOrderByAggregateInput>;
  _count?: InputMaybe<Tax_RuleCountOrderByAggregateInput>;
  _max?: InputMaybe<Tax_RuleMaxOrderByAggregateInput>;
  _min?: InputMaybe<Tax_RuleMinOrderByAggregateInput>;
  _sum?: InputMaybe<Tax_RuleSumOrderByAggregateInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
};

export type Tax_RuleOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Tax_RuleOrderByRelevanceInput>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  tax_rate?: InputMaybe<SortOrder>;
};

export enum Tax_RuleScalarFieldEnum {
  Id = 'id',
  Name = 'name',
  ProdId = 'prod_id',
  Products = 'products',
  TaxRate = 'tax_rate'
}

export type Tax_RuleScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Tax_RuleScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Tax_RuleScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Tax_RuleScalarWhereWithAggregatesInput>>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  prod_id?: InputMaybe<BigIntWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  tax_rate?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type Tax_RuleSumAggregate = {
  __typename?: 'Tax_ruleSumAggregate';
  id?: Maybe<Scalars['Int']>;
  prod_id?: Maybe<Scalars['BigInt']>;
};

export type Tax_RuleSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  prod_id?: InputMaybe<SortOrder>;
};

export type Tax_RuleUpdateInput = {
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Tax_RuleUpdateManyMutationInput = {
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  prod_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tax_rate?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Tax_RuleWhereInput = {
  AND?: InputMaybe<Array<Tax_RuleWhereInput>>;
  NOT?: InputMaybe<Array<Tax_RuleWhereInput>>;
  OR?: InputMaybe<Array<Tax_RuleWhereInput>>;
  id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  prod_id?: InputMaybe<BigIntFilter>;
  products?: InputMaybe<StringNullableFilter>;
  tax_rate?: InputMaybe<StringNullableFilter>;
};

export type Tax_RuleWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Templates = {
  __typename?: 'Templates';
  active?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  footer?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  margin_bottom?: Maybe<Scalars['String']>;
  margin_footer?: Maybe<Scalars['String']>;
  margin_header?: Maybe<Scalars['String']>;
  margin_left?: Maybe<Scalars['String']>;
  margin_right?: Maybe<Scalars['String']>;
  margin_top?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orientation?: Maybe<Scalars['String']>;
  page_size?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type TemplatesAvgAggregate = {
  __typename?: 'TemplatesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type TemplatesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TemplatesCountAggregate = {
  __typename?: 'TemplatesCountAggregate';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  assigned_to: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  footer: Scalars['Int'];
  header: Scalars['Int'];
  id: Scalars['Int'];
  margin_bottom: Scalars['Int'];
  margin_footer: Scalars['Int'];
  margin_header: Scalars['Int'];
  margin_left: Scalars['Int'];
  margin_right: Scalars['Int'];
  margin_top: Scalars['Int'];
  name: Scalars['Int'];
  orientation: Scalars['Int'];
  page_size: Scalars['Int'];
  type: Scalars['Int'];
};

export type TemplatesCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  footer?: InputMaybe<SortOrder>;
  header?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  margin_bottom?: InputMaybe<SortOrder>;
  margin_footer?: InputMaybe<SortOrder>;
  margin_header?: InputMaybe<SortOrder>;
  margin_left?: InputMaybe<SortOrder>;
  margin_right?: InputMaybe<SortOrder>;
  margin_top?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orientation?: InputMaybe<SortOrder>;
  page_size?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type TemplatesCreateInput = {
  active?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  footer?: InputMaybe<Scalars['String']>;
  header?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  margin_bottom?: InputMaybe<Scalars['String']>;
  margin_footer?: InputMaybe<Scalars['String']>;
  margin_header?: InputMaybe<Scalars['String']>;
  margin_left?: InputMaybe<Scalars['String']>;
  margin_right?: InputMaybe<Scalars['String']>;
  margin_top?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orientation?: InputMaybe<Scalars['String']>;
  page_size?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type TemplatesCreateManyInput = {
  active?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  footer?: InputMaybe<Scalars['String']>;
  header?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  margin_bottom?: InputMaybe<Scalars['String']>;
  margin_footer?: InputMaybe<Scalars['String']>;
  margin_header?: InputMaybe<Scalars['String']>;
  margin_left?: InputMaybe<Scalars['String']>;
  margin_right?: InputMaybe<Scalars['String']>;
  margin_top?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orientation?: InputMaybe<Scalars['String']>;
  page_size?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
};

export type TemplatesGroupBy = {
  __typename?: 'TemplatesGroupBy';
  _avg?: Maybe<TemplatesAvgAggregate>;
  _count?: Maybe<TemplatesCountAggregate>;
  _max?: Maybe<TemplatesMaxAggregate>;
  _min?: Maybe<TemplatesMinAggregate>;
  _sum?: Maybe<TemplatesSumAggregate>;
  active?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  footer?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  margin_bottom?: Maybe<Scalars['String']>;
  margin_footer?: Maybe<Scalars['String']>;
  margin_header?: Maybe<Scalars['String']>;
  margin_left?: Maybe<Scalars['String']>;
  margin_right?: Maybe<Scalars['String']>;
  margin_top?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orientation?: Maybe<Scalars['String']>;
  page_size?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type TemplatesMaxAggregate = {
  __typename?: 'TemplatesMaxAggregate';
  active?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  footer?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  margin_bottom?: Maybe<Scalars['String']>;
  margin_footer?: Maybe<Scalars['String']>;
  margin_header?: Maybe<Scalars['String']>;
  margin_left?: Maybe<Scalars['String']>;
  margin_right?: Maybe<Scalars['String']>;
  margin_top?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orientation?: Maybe<Scalars['String']>;
  page_size?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type TemplatesMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  footer?: InputMaybe<SortOrder>;
  header?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  margin_bottom?: InputMaybe<SortOrder>;
  margin_footer?: InputMaybe<SortOrder>;
  margin_header?: InputMaybe<SortOrder>;
  margin_left?: InputMaybe<SortOrder>;
  margin_right?: InputMaybe<SortOrder>;
  margin_top?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orientation?: InputMaybe<SortOrder>;
  page_size?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type TemplatesMinAggregate = {
  __typename?: 'TemplatesMinAggregate';
  active?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  footer?: Maybe<Scalars['String']>;
  header?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  margin_bottom?: Maybe<Scalars['String']>;
  margin_footer?: Maybe<Scalars['String']>;
  margin_header?: Maybe<Scalars['String']>;
  margin_left?: Maybe<Scalars['String']>;
  margin_right?: Maybe<Scalars['String']>;
  margin_top?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orientation?: Maybe<Scalars['String']>;
  page_size?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type TemplatesMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  footer?: InputMaybe<SortOrder>;
  header?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  margin_bottom?: InputMaybe<SortOrder>;
  margin_footer?: InputMaybe<SortOrder>;
  margin_header?: InputMaybe<SortOrder>;
  margin_left?: InputMaybe<SortOrder>;
  margin_right?: InputMaybe<SortOrder>;
  margin_top?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orientation?: InputMaybe<SortOrder>;
  page_size?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum TemplatesOrderByRelevanceFieldEnum {
  Active = 'active',
  AssignedTo = 'assigned_to',
  Content = 'content',
  Footer = 'footer',
  Header = 'header',
  MarginBottom = 'margin_bottom',
  MarginFooter = 'margin_footer',
  MarginHeader = 'margin_header',
  MarginLeft = 'margin_left',
  MarginRight = 'margin_right',
  MarginTop = 'margin_top',
  Name = 'name',
  Orientation = 'orientation',
  PageSize = 'page_size',
  Type = 'type'
}

export type TemplatesOrderByRelevanceInput = {
  fields: Array<TemplatesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type TemplatesOrderByWithAggregationInput = {
  _avg?: InputMaybe<TemplatesAvgOrderByAggregateInput>;
  _count?: InputMaybe<TemplatesCountOrderByAggregateInput>;
  _max?: InputMaybe<TemplatesMaxOrderByAggregateInput>;
  _min?: InputMaybe<TemplatesMinOrderByAggregateInput>;
  _sum?: InputMaybe<TemplatesSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  footer?: InputMaybe<SortOrder>;
  header?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  margin_bottom?: InputMaybe<SortOrder>;
  margin_footer?: InputMaybe<SortOrder>;
  margin_header?: InputMaybe<SortOrder>;
  margin_left?: InputMaybe<SortOrder>;
  margin_right?: InputMaybe<SortOrder>;
  margin_top?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orientation?: InputMaybe<SortOrder>;
  page_size?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export type TemplatesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<TemplatesOrderByRelevanceInput>;
  active?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  footer?: InputMaybe<SortOrder>;
  header?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  margin_bottom?: InputMaybe<SortOrder>;
  margin_footer?: InputMaybe<SortOrder>;
  margin_header?: InputMaybe<SortOrder>;
  margin_left?: InputMaybe<SortOrder>;
  margin_right?: InputMaybe<SortOrder>;
  margin_top?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orientation?: InputMaybe<SortOrder>;
  page_size?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
};

export enum TemplatesScalarFieldEnum {
  Active = 'active',
  AssignedTo = 'assigned_to',
  Content = 'content',
  CreatedAt = 'created_at',
  Footer = 'footer',
  Header = 'header',
  Id = 'id',
  MarginBottom = 'margin_bottom',
  MarginFooter = 'margin_footer',
  MarginHeader = 'margin_header',
  MarginLeft = 'margin_left',
  MarginRight = 'margin_right',
  MarginTop = 'margin_top',
  Name = 'name',
  Orientation = 'orientation',
  PageSize = 'page_size',
  Type = 'type'
}

export type TemplatesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TemplatesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TemplatesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TemplatesScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  footer?: InputMaybe<StringNullableWithAggregatesFilter>;
  header?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  margin_bottom?: InputMaybe<StringNullableWithAggregatesFilter>;
  margin_footer?: InputMaybe<StringNullableWithAggregatesFilter>;
  margin_header?: InputMaybe<StringNullableWithAggregatesFilter>;
  margin_left?: InputMaybe<StringNullableWithAggregatesFilter>;
  margin_right?: InputMaybe<StringNullableWithAggregatesFilter>;
  margin_top?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  orientation?: InputMaybe<StringNullableWithAggregatesFilter>;
  page_size?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type TemplatesSumAggregate = {
  __typename?: 'TemplatesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type TemplatesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TemplatesUpdateInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  footer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  header?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  margin_bottom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_footer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_header?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_left?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_right?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_top?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orientation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page_size?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TemplatesUpdateManyMutationInput = {
  active?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  footer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  header?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  margin_bottom?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_footer?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_header?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_left?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_right?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  margin_top?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orientation?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page_size?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TemplatesWhereInput = {
  AND?: InputMaybe<Array<TemplatesWhereInput>>;
  NOT?: InputMaybe<Array<TemplatesWhereInput>>;
  OR?: InputMaybe<Array<TemplatesWhereInput>>;
  active?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  footer?: InputMaybe<StringNullableFilter>;
  header?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  margin_bottom?: InputMaybe<StringNullableFilter>;
  margin_footer?: InputMaybe<StringNullableFilter>;
  margin_header?: InputMaybe<StringNullableFilter>;
  margin_left?: InputMaybe<StringNullableFilter>;
  margin_right?: InputMaybe<StringNullableFilter>;
  margin_top?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  orientation?: InputMaybe<StringNullableFilter>;
  page_size?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
};

export type TemplatesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Themes = {
  __typename?: 'Themes';
  action?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  parent_theme?: Maybe<Scalars['String']>;
  theme_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  website_id: Scalars['BigInt'];
  websites: Scalars['String'];
};

export type ThemesAvgAggregate = {
  __typename?: 'ThemesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  website_id?: Maybe<Scalars['Float']>;
};

export type ThemesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
};

export type ThemesCountAggregate = {
  __typename?: 'ThemesCountAggregate';
  _all: Scalars['Int'];
  action: Scalars['Int'];
  id: Scalars['Int'];
  parent_theme: Scalars['Int'];
  theme_path: Scalars['Int'];
  title: Scalars['Int'];
  website_id: Scalars['Int'];
  websites: Scalars['Int'];
};

export type ThemesCountOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  parent_theme?: InputMaybe<SortOrder>;
  theme_path?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ThemesCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  parent_theme?: InputMaybe<Scalars['String']>;
  theme_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  website_id: Scalars['BigInt'];
  websites: Scalars['String'];
};

export type ThemesCreateManyInput = {
  action?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  parent_theme?: InputMaybe<Scalars['String']>;
  theme_path?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  website_id: Scalars['BigInt'];
  websites: Scalars['String'];
};

export type ThemesGroupBy = {
  __typename?: 'ThemesGroupBy';
  _avg?: Maybe<ThemesAvgAggregate>;
  _count?: Maybe<ThemesCountAggregate>;
  _max?: Maybe<ThemesMaxAggregate>;
  _min?: Maybe<ThemesMinAggregate>;
  _sum?: Maybe<ThemesSumAggregate>;
  action?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  parent_theme?: Maybe<Scalars['String']>;
  theme_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  website_id: Scalars['BigInt'];
  websites: Scalars['String'];
};

export type ThemesMaxAggregate = {
  __typename?: 'ThemesMaxAggregate';
  action?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  parent_theme?: Maybe<Scalars['String']>;
  theme_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  website_id?: Maybe<Scalars['BigInt']>;
  websites?: Maybe<Scalars['String']>;
};

export type ThemesMaxOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  parent_theme?: InputMaybe<SortOrder>;
  theme_path?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ThemesMinAggregate = {
  __typename?: 'ThemesMinAggregate';
  action?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  parent_theme?: Maybe<Scalars['String']>;
  theme_path?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  website_id?: Maybe<Scalars['BigInt']>;
  websites?: Maybe<Scalars['String']>;
};

export type ThemesMinOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  parent_theme?: InputMaybe<SortOrder>;
  theme_path?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum ThemesOrderByRelevanceFieldEnum {
  Action = 'action',
  ParentTheme = 'parent_theme',
  ThemePath = 'theme_path',
  Title = 'title',
  Websites = 'websites'
}

export type ThemesOrderByRelevanceInput = {
  fields: Array<ThemesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ThemesOrderByWithAggregationInput = {
  _avg?: InputMaybe<ThemesAvgOrderByAggregateInput>;
  _count?: InputMaybe<ThemesCountOrderByAggregateInput>;
  _max?: InputMaybe<ThemesMaxOrderByAggregateInput>;
  _min?: InputMaybe<ThemesMinOrderByAggregateInput>;
  _sum?: InputMaybe<ThemesSumOrderByAggregateInput>;
  action?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  parent_theme?: InputMaybe<SortOrder>;
  theme_path?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export type ThemesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ThemesOrderByRelevanceInput>;
  action?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  parent_theme?: InputMaybe<SortOrder>;
  theme_path?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
  websites?: InputMaybe<SortOrder>;
};

export enum ThemesScalarFieldEnum {
  Action = 'action',
  Id = 'id',
  ParentTheme = 'parent_theme',
  ThemePath = 'theme_path',
  Title = 'title',
  WebsiteId = 'website_id',
  Websites = 'websites'
}

export type ThemesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ThemesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ThemesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ThemesScalarWhereWithAggregatesInput>>;
  action?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  parent_theme?: InputMaybe<StringNullableWithAggregatesFilter>;
  theme_path?: InputMaybe<StringNullableWithAggregatesFilter>;
  title?: InputMaybe<StringNullableWithAggregatesFilter>;
  website_id?: InputMaybe<BigIntWithAggregatesFilter>;
  websites?: InputMaybe<StringWithAggregatesFilter>;
};

export type ThemesSumAggregate = {
  __typename?: 'ThemesSumAggregate';
  id?: Maybe<Scalars['Int']>;
  website_id?: Maybe<Scalars['BigInt']>;
};

export type ThemesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  website_id?: InputMaybe<SortOrder>;
};

export type ThemesUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parent_theme?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  theme_path?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  websites?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type ThemesUpdateManyMutationInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parent_theme?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  theme_path?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  websites?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type ThemesWhereInput = {
  AND?: InputMaybe<Array<ThemesWhereInput>>;
  NOT?: InputMaybe<Array<ThemesWhereInput>>;
  OR?: InputMaybe<Array<ThemesWhereInput>>;
  action?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  parent_theme?: InputMaybe<StringNullableFilter>;
  theme_path?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  website_id?: InputMaybe<BigIntFilter>;
  websites?: InputMaybe<StringFilter>;
};

export type ThemesWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Ticketing = {
  __typename?: 'Ticketing';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date?: Maybe<Scalars['String']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  department?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  level?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  projects_projectsToticketing?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  requester_email?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  severity?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_type?: Maybe<Scalars['String']>;
};

export type TicketingAvgAggregate = {
  __typename?: 'TicketingAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type TicketingAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TicketingCountAggregate = {
  __typename?: 'TicketingCountAggregate';
  _all: Scalars['Int'];
  account_name: Scalars['Int'];
  assigned_to: Scalars['Int'];
  comment: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  date: Scalars['Int'];
  date_modified: Scalars['Int'];
  department: Scalars['Int'];
  id: Scalars['Int'];
  level: Scalars['Int'];
  location: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
  priority: Scalars['Int'];
  products: Scalars['Int'];
  projects: Scalars['Int'];
  projects_projectsToticketing: Scalars['Int'];
  requester: Scalars['Int'];
  requester_email: Scalars['Int'];
  resolution: Scalars['Int'];
  severity: Scalars['Int'];
  status: Scalars['Int'];
  team: Scalars['Int'];
  ticket_type: Scalars['Int'];
};

export type TicketingCountOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToticketing?: InputMaybe<SortOrder>;
  requester?: InputMaybe<SortOrder>;
  requester_email?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  severity?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_type?: InputMaybe<SortOrder>;
};

export type TicketingCreateInput = {
  account_name?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  date?: InputMaybe<Scalars['String']>;
  date_modified?: InputMaybe<Scalars['DateTime']>;
  department?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  level?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  priority?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  projects_projectsToticketing?: InputMaybe<Scalars['String']>;
  requester?: InputMaybe<Scalars['String']>;
  requester_email?: InputMaybe<Scalars['String']>;
  resolution?: InputMaybe<Scalars['String']>;
  severity?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Scalars['String']>;
  ticket_type?: InputMaybe<Scalars['String']>;
};

export type TicketingCreateManyInput = {
  account_name?: InputMaybe<Scalars['String']>;
  assigned_to?: InputMaybe<Scalars['String']>;
  comment?: InputMaybe<Scalars['String']>;
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  date?: InputMaybe<Scalars['String']>;
  date_modified?: InputMaybe<Scalars['DateTime']>;
  department?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  level?: InputMaybe<Scalars['String']>;
  location?: InputMaybe<Scalars['String']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  priority?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  projects_projectsToticketing?: InputMaybe<Scalars['String']>;
  requester?: InputMaybe<Scalars['String']>;
  requester_email?: InputMaybe<Scalars['String']>;
  resolution?: InputMaybe<Scalars['String']>;
  severity?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  team?: InputMaybe<Scalars['String']>;
  ticket_type?: InputMaybe<Scalars['String']>;
};

export type TicketingGroupBy = {
  __typename?: 'TicketingGroupBy';
  _avg?: Maybe<TicketingAvgAggregate>;
  _count?: Maybe<TicketingCountAggregate>;
  _max?: Maybe<TicketingMaxAggregate>;
  _min?: Maybe<TicketingMinAggregate>;
  _sum?: Maybe<TicketingSumAggregate>;
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date?: Maybe<Scalars['String']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  department?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  level?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  projects_projectsToticketing?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  requester_email?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  severity?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_type?: Maybe<Scalars['String']>;
};

export type TicketingMaxAggregate = {
  __typename?: 'TicketingMaxAggregate';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date?: Maybe<Scalars['String']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  department?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  level?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  projects_projectsToticketing?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  requester_email?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  severity?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_type?: Maybe<Scalars['String']>;
};

export type TicketingMaxOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToticketing?: InputMaybe<SortOrder>;
  requester?: InputMaybe<SortOrder>;
  requester_email?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  severity?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_type?: InputMaybe<SortOrder>;
};

export type TicketingMinAggregate = {
  __typename?: 'TicketingMinAggregate';
  account_name?: Maybe<Scalars['String']>;
  assigned_to?: Maybe<Scalars['String']>;
  comment?: Maybe<Scalars['String']>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  date?: Maybe<Scalars['String']>;
  date_modified?: Maybe<Scalars['DateTime']>;
  department?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  level?: Maybe<Scalars['String']>;
  location?: Maybe<Scalars['String']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  projects_projectsToticketing?: Maybe<Scalars['String']>;
  requester?: Maybe<Scalars['String']>;
  requester_email?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  severity?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  team?: Maybe<Scalars['String']>;
  ticket_type?: Maybe<Scalars['String']>;
};

export type TicketingMinOrderByAggregateInput = {
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToticketing?: InputMaybe<SortOrder>;
  requester?: InputMaybe<SortOrder>;
  requester_email?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  severity?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_type?: InputMaybe<SortOrder>;
};

export enum TicketingOrderByRelevanceFieldEnum {
  AccountName = 'account_name',
  AssignedTo = 'assigned_to',
  Comment = 'comment',
  Content = 'content',
  Date = 'date',
  Department = 'department',
  Level = 'level',
  Location = 'location',
  Media = 'media',
  Name = 'name',
  Priority = 'priority',
  Products = 'products',
  Projects = 'projects',
  ProjectsProjectsToticketing = 'projects_projectsToticketing',
  Requester = 'requester',
  RequesterEmail = 'requester_email',
  Resolution = 'resolution',
  Severity = 'severity',
  Status = 'status',
  Team = 'team',
  TicketType = 'ticket_type'
}

export type TicketingOrderByRelevanceInput = {
  fields: Array<TicketingOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type TicketingOrderByWithAggregationInput = {
  _avg?: InputMaybe<TicketingAvgOrderByAggregateInput>;
  _count?: InputMaybe<TicketingCountOrderByAggregateInput>;
  _max?: InputMaybe<TicketingMaxOrderByAggregateInput>;
  _min?: InputMaybe<TicketingMinOrderByAggregateInput>;
  _sum?: InputMaybe<TicketingSumOrderByAggregateInput>;
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToticketing?: InputMaybe<SortOrder>;
  requester?: InputMaybe<SortOrder>;
  requester_email?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  severity?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_type?: InputMaybe<SortOrder>;
};

export type TicketingOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<TicketingOrderByRelevanceInput>;
  account_name?: InputMaybe<SortOrder>;
  assigned_to?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  date?: InputMaybe<SortOrder>;
  date_modified?: InputMaybe<SortOrder>;
  department?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  level?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToticketing?: InputMaybe<SortOrder>;
  requester?: InputMaybe<SortOrder>;
  requester_email?: InputMaybe<SortOrder>;
  resolution?: InputMaybe<SortOrder>;
  severity?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  team?: InputMaybe<SortOrder>;
  ticket_type?: InputMaybe<SortOrder>;
};

export enum TicketingScalarFieldEnum {
  AccountName = 'account_name',
  AssignedTo = 'assigned_to',
  Comment = 'comment',
  Content = 'content',
  CreatedAt = 'created_at',
  Date = 'date',
  DateModified = 'date_modified',
  Department = 'department',
  Id = 'id',
  Level = 'level',
  Location = 'location',
  Media = 'media',
  Name = 'name',
  Priority = 'priority',
  Products = 'products',
  Projects = 'projects',
  ProjectsProjectsToticketing = 'projects_projectsToticketing',
  Requester = 'requester',
  RequesterEmail = 'requester_email',
  Resolution = 'resolution',
  Severity = 'severity',
  Status = 'status',
  Team = 'team',
  TicketType = 'ticket_type'
}

export type TicketingScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TicketingScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TicketingScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TicketingScalarWhereWithAggregatesInput>>;
  account_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  assigned_to?: InputMaybe<StringNullableWithAggregatesFilter>;
  comment?: InputMaybe<StringNullableWithAggregatesFilter>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  date?: InputMaybe<StringNullableWithAggregatesFilter>;
  date_modified?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  department?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  level?: InputMaybe<StringNullableWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  priority?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects_projectsToticketing?: InputMaybe<StringNullableWithAggregatesFilter>;
  requester?: InputMaybe<StringNullableWithAggregatesFilter>;
  requester_email?: InputMaybe<StringNullableWithAggregatesFilter>;
  resolution?: InputMaybe<StringNullableWithAggregatesFilter>;
  severity?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
  team?: InputMaybe<StringNullableWithAggregatesFilter>;
  ticket_type?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type TicketingSumAggregate = {
  __typename?: 'TicketingSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type TicketingSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type TicketingUpdateInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  date_modified?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects_projectsToticketing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requester?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requester_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resolution?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  severity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  team?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TicketingUpdateManyMutationInput = {
  account_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  assigned_to?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  date_modified?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  department?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  level?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects_projectsToticketing?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requester?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requester_email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  resolution?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  severity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  team?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ticket_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TicketingWhereInput = {
  AND?: InputMaybe<Array<TicketingWhereInput>>;
  NOT?: InputMaybe<Array<TicketingWhereInput>>;
  OR?: InputMaybe<Array<TicketingWhereInput>>;
  account_name?: InputMaybe<StringNullableFilter>;
  assigned_to?: InputMaybe<StringNullableFilter>;
  comment?: InputMaybe<StringNullableFilter>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  date?: InputMaybe<StringNullableFilter>;
  date_modified?: InputMaybe<DateTimeNullableFilter>;
  department?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  level?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<StringNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  priority?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<StringNullableFilter>;
  projects_projectsToticketing?: InputMaybe<StringNullableFilter>;
  requester?: InputMaybe<StringNullableFilter>;
  requester_email?: InputMaybe<StringNullableFilter>;
  resolution?: InputMaybe<StringNullableFilter>;
  severity?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  team?: InputMaybe<StringNullableFilter>;
  ticket_type?: InputMaybe<StringNullableFilter>;
};

export type TicketingWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Transactions = {
  __typename?: 'Transactions';
  closed?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer_payment?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  order_id: Scalars['Int'];
  orders?: Maybe<Scalars['String']>;
  parent_transaction_id: Scalars['Int'];
  payment_method: Scalars['BigInt'];
  transaction_id: Scalars['Int'];
};

export type TransactionsAvgAggregate = {
  __typename?: 'TransactionsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
  order_id?: Maybe<Scalars['Float']>;
  parent_transaction_id?: Maybe<Scalars['Float']>;
  payment_method?: Maybe<Scalars['Float']>;
  transaction_id?: Maybe<Scalars['Float']>;
};

export type TransactionsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export type TransactionsCountAggregate = {
  __typename?: 'TransactionsCountAggregate';
  _all: Scalars['Int'];
  closed: Scalars['Int'];
  created: Scalars['Int'];
  customer_payment: Scalars['Int'];
  id: Scalars['Int'];
  order_id: Scalars['Int'];
  orders: Scalars['Int'];
  parent_transaction_id: Scalars['Int'];
  payment_method: Scalars['Int'];
  transaction_id: Scalars['Int'];
};

export type TransactionsCountOrderByAggregateInput = {
  closed?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export type TransactionsCreateInput = {
  closed?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  customer_payment?: InputMaybe<Scalars['String']>;
  order_id: Scalars['Int'];
  orders?: InputMaybe<Scalars['String']>;
  parent_transaction_id: Scalars['Int'];
  payment_method: Scalars['BigInt'];
  transaction_id: Scalars['Int'];
};

export type TransactionsCreateManyInput = {
  closed?: InputMaybe<Scalars['String']>;
  created?: InputMaybe<Scalars['DateTime']>;
  customer_payment?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  order_id: Scalars['Int'];
  orders?: InputMaybe<Scalars['String']>;
  parent_transaction_id: Scalars['Int'];
  payment_method: Scalars['BigInt'];
  transaction_id: Scalars['Int'];
};

export type TransactionsGroupBy = {
  __typename?: 'TransactionsGroupBy';
  _avg?: Maybe<TransactionsAvgAggregate>;
  _count?: Maybe<TransactionsCountAggregate>;
  _max?: Maybe<TransactionsMaxAggregate>;
  _min?: Maybe<TransactionsMinAggregate>;
  _sum?: Maybe<TransactionsSumAggregate>;
  closed?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer_payment?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  order_id: Scalars['Int'];
  orders?: Maybe<Scalars['String']>;
  parent_transaction_id: Scalars['Int'];
  payment_method: Scalars['BigInt'];
  transaction_id: Scalars['Int'];
};

export type TransactionsMaxAggregate = {
  __typename?: 'TransactionsMaxAggregate';
  closed?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer_payment?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['Int']>;
  orders?: Maybe<Scalars['String']>;
  parent_transaction_id?: Maybe<Scalars['Int']>;
  payment_method?: Maybe<Scalars['BigInt']>;
  transaction_id?: Maybe<Scalars['Int']>;
};

export type TransactionsMaxOrderByAggregateInput = {
  closed?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export type TransactionsMinAggregate = {
  __typename?: 'TransactionsMinAggregate';
  closed?: Maybe<Scalars['String']>;
  created?: Maybe<Scalars['DateTime']>;
  customer_payment?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['Int']>;
  orders?: Maybe<Scalars['String']>;
  parent_transaction_id?: Maybe<Scalars['Int']>;
  payment_method?: Maybe<Scalars['BigInt']>;
  transaction_id?: Maybe<Scalars['Int']>;
};

export type TransactionsMinOrderByAggregateInput = {
  closed?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export enum TransactionsOrderByRelevanceFieldEnum {
  Closed = 'closed',
  CustomerPayment = 'customer_payment',
  Orders = 'orders'
}

export type TransactionsOrderByRelevanceInput = {
  fields: Array<TransactionsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type TransactionsOrderByWithAggregationInput = {
  _avg?: InputMaybe<TransactionsAvgOrderByAggregateInput>;
  _count?: InputMaybe<TransactionsCountOrderByAggregateInput>;
  _max?: InputMaybe<TransactionsMaxOrderByAggregateInput>;
  _min?: InputMaybe<TransactionsMinOrderByAggregateInput>;
  _sum?: InputMaybe<TransactionsSumOrderByAggregateInput>;
  closed?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export type TransactionsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<TransactionsOrderByRelevanceInput>;
  closed?: InputMaybe<SortOrder>;
  created?: InputMaybe<SortOrder>;
  customer_payment?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  orders?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export enum TransactionsScalarFieldEnum {
  Closed = 'closed',
  Created = 'created',
  CustomerPayment = 'customer_payment',
  Id = 'id',
  OrderId = 'order_id',
  Orders = 'orders',
  ParentTransactionId = 'parent_transaction_id',
  PaymentMethod = 'payment_method',
  TransactionId = 'transaction_id'
}

export type TransactionsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TransactionsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TransactionsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TransactionsScalarWhereWithAggregatesInput>>;
  closed?: InputMaybe<StringNullableWithAggregatesFilter>;
  created?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customer_payment?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  order_id?: InputMaybe<IntWithAggregatesFilter>;
  orders?: InputMaybe<StringNullableWithAggregatesFilter>;
  parent_transaction_id?: InputMaybe<IntWithAggregatesFilter>;
  payment_method?: InputMaybe<BigIntWithAggregatesFilter>;
  transaction_id?: InputMaybe<IntWithAggregatesFilter>;
};

export type TransactionsSumAggregate = {
  __typename?: 'TransactionsSumAggregate';
  id?: Maybe<Scalars['Int']>;
  order_id?: Maybe<Scalars['Int']>;
  parent_transaction_id?: Maybe<Scalars['Int']>;
  payment_method?: Maybe<Scalars['BigInt']>;
  transaction_id?: Maybe<Scalars['Int']>;
};

export type TransactionsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  order_id?: InputMaybe<SortOrder>;
  parent_transaction_id?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  transaction_id?: InputMaybe<SortOrder>;
};

export type TransactionsUpdateInput = {
  closed?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_payment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parent_transaction_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  transaction_id?: InputMaybe<IntFieldUpdateOperationsInput>;
};

export type TransactionsUpdateManyMutationInput = {
  closed?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customer_payment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  orders?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parent_transaction_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  transaction_id?: InputMaybe<IntFieldUpdateOperationsInput>;
};

export type TransactionsWhereInput = {
  AND?: InputMaybe<Array<TransactionsWhereInput>>;
  NOT?: InputMaybe<Array<TransactionsWhereInput>>;
  OR?: InputMaybe<Array<TransactionsWhereInput>>;
  closed?: InputMaybe<StringNullableFilter>;
  created?: InputMaybe<DateTimeNullableFilter>;
  customer_payment?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  order_id?: InputMaybe<IntFilter>;
  orders?: InputMaybe<StringNullableFilter>;
  parent_transaction_id?: InputMaybe<IntFilter>;
  payment_method?: InputMaybe<BigIntFilter>;
  transaction_id?: InputMaybe<IntFilter>;
};

export type TransactionsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Upload_File = {
  __typename?: 'Upload_file';
  alternativeText?: Maybe<Scalars['String']>;
  caption?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  created_by?: Maybe<Scalars['Int']>;
  ext?: Maybe<Scalars['String']>;
  formats?: Maybe<Scalars['JSON']>;
  hash: Scalars['String'];
  height?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  mime: Scalars['String'];
  name: Scalars['String'];
  previewUrl?: Maybe<Scalars['String']>;
  provider: Scalars['String'];
  provider_metadata?: Maybe<Scalars['JSON']>;
  size: Scalars['Decimal'];
  updated_at?: Maybe<Scalars['DateTime']>;
  updated_by?: Maybe<Scalars['Int']>;
  url: Scalars['String'];
  width?: Maybe<Scalars['Int']>;
};

export type Upload_FileAvgAggregate = {
  __typename?: 'Upload_fileAvgAggregate';
  created_by?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  size?: Maybe<Scalars['Decimal']>;
  updated_by?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type Upload_FileAvgOrderByAggregateInput = {
  created_by?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type Upload_FileCountAggregate = {
  __typename?: 'Upload_fileCountAggregate';
  _all: Scalars['Int'];
  alternativeText: Scalars['Int'];
  caption: Scalars['Int'];
  created_at: Scalars['Int'];
  created_by: Scalars['Int'];
  ext: Scalars['Int'];
  formats: Scalars['Int'];
  hash: Scalars['Int'];
  height: Scalars['Int'];
  id: Scalars['Int'];
  mime: Scalars['Int'];
  name: Scalars['Int'];
  previewUrl: Scalars['Int'];
  provider: Scalars['Int'];
  provider_metadata: Scalars['Int'];
  size: Scalars['Int'];
  updated_at: Scalars['Int'];
  updated_by: Scalars['Int'];
  url: Scalars['Int'];
  width: Scalars['Int'];
};

export type Upload_FileCountOrderByAggregateInput = {
  alternativeText?: InputMaybe<SortOrder>;
  caption?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  created_by?: InputMaybe<SortOrder>;
  ext?: InputMaybe<SortOrder>;
  formats?: InputMaybe<SortOrder>;
  hash?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  mime?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewUrl?: InputMaybe<SortOrder>;
  provider?: InputMaybe<SortOrder>;
  provider_metadata?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type Upload_FileCreateInput = {
  alternativeText?: InputMaybe<Scalars['String']>;
  caption?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  created_by?: InputMaybe<Scalars['Int']>;
  ext?: InputMaybe<Scalars['String']>;
  formats?: InputMaybe<Scalars['JSON']>;
  hash: Scalars['String'];
  height?: InputMaybe<Scalars['Int']>;
  mime: Scalars['String'];
  name: Scalars['String'];
  previewUrl?: InputMaybe<Scalars['String']>;
  provider: Scalars['String'];
  provider_metadata?: InputMaybe<Scalars['JSON']>;
  size: Scalars['Decimal'];
  updated_at?: InputMaybe<Scalars['DateTime']>;
  updated_by?: InputMaybe<Scalars['Int']>;
  url: Scalars['String'];
  width?: InputMaybe<Scalars['Int']>;
};

export type Upload_FileCreateManyInput = {
  alternativeText?: InputMaybe<Scalars['String']>;
  caption?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  created_by?: InputMaybe<Scalars['Int']>;
  ext?: InputMaybe<Scalars['String']>;
  formats?: InputMaybe<Scalars['JSON']>;
  hash: Scalars['String'];
  height?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['Int']>;
  mime: Scalars['String'];
  name: Scalars['String'];
  previewUrl?: InputMaybe<Scalars['String']>;
  provider: Scalars['String'];
  provider_metadata?: InputMaybe<Scalars['JSON']>;
  size: Scalars['Decimal'];
  updated_at?: InputMaybe<Scalars['DateTime']>;
  updated_by?: InputMaybe<Scalars['Int']>;
  url: Scalars['String'];
  width?: InputMaybe<Scalars['Int']>;
};

export type Upload_FileGroupBy = {
  __typename?: 'Upload_fileGroupBy';
  _avg?: Maybe<Upload_FileAvgAggregate>;
  _count?: Maybe<Upload_FileCountAggregate>;
  _max?: Maybe<Upload_FileMaxAggregate>;
  _min?: Maybe<Upload_FileMinAggregate>;
  _sum?: Maybe<Upload_FileSumAggregate>;
  alternativeText?: Maybe<Scalars['String']>;
  caption?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  created_by?: Maybe<Scalars['Int']>;
  ext?: Maybe<Scalars['String']>;
  formats?: Maybe<Scalars['JSON']>;
  hash: Scalars['String'];
  height?: Maybe<Scalars['Int']>;
  id: Scalars['Int'];
  mime: Scalars['String'];
  name: Scalars['String'];
  previewUrl?: Maybe<Scalars['String']>;
  provider: Scalars['String'];
  provider_metadata?: Maybe<Scalars['JSON']>;
  size: Scalars['Decimal'];
  updated_at?: Maybe<Scalars['DateTime']>;
  updated_by?: Maybe<Scalars['Int']>;
  url: Scalars['String'];
  width?: Maybe<Scalars['Int']>;
};

export type Upload_FileMaxAggregate = {
  __typename?: 'Upload_fileMaxAggregate';
  alternativeText?: Maybe<Scalars['String']>;
  caption?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  created_by?: Maybe<Scalars['Int']>;
  ext?: Maybe<Scalars['String']>;
  hash?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  mime?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  previewUrl?: Maybe<Scalars['String']>;
  provider?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Decimal']>;
  updated_at?: Maybe<Scalars['DateTime']>;
  updated_by?: Maybe<Scalars['Int']>;
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Int']>;
};

export type Upload_FileMaxOrderByAggregateInput = {
  alternativeText?: InputMaybe<SortOrder>;
  caption?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  created_by?: InputMaybe<SortOrder>;
  ext?: InputMaybe<SortOrder>;
  hash?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  mime?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewUrl?: InputMaybe<SortOrder>;
  provider?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type Upload_FileMinAggregate = {
  __typename?: 'Upload_fileMinAggregate';
  alternativeText?: Maybe<Scalars['String']>;
  caption?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  created_by?: Maybe<Scalars['Int']>;
  ext?: Maybe<Scalars['String']>;
  hash?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  mime?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  previewUrl?: Maybe<Scalars['String']>;
  provider?: Maybe<Scalars['String']>;
  size?: Maybe<Scalars['Decimal']>;
  updated_at?: Maybe<Scalars['DateTime']>;
  updated_by?: Maybe<Scalars['Int']>;
  url?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Int']>;
};

export type Upload_FileMinOrderByAggregateInput = {
  alternativeText?: InputMaybe<SortOrder>;
  caption?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  created_by?: InputMaybe<SortOrder>;
  ext?: InputMaybe<SortOrder>;
  hash?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  mime?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewUrl?: InputMaybe<SortOrder>;
  provider?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export enum Upload_FileOrderByRelevanceFieldEnum {
  AlternativeText = 'alternativeText',
  Caption = 'caption',
  Ext = 'ext',
  Hash = 'hash',
  Mime = 'mime',
  Name = 'name',
  PreviewUrl = 'previewUrl',
  Provider = 'provider',
  Url = 'url'
}

export type Upload_FileOrderByRelevanceInput = {
  fields: Array<Upload_FileOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type Upload_FileOrderByWithAggregationInput = {
  _avg?: InputMaybe<Upload_FileAvgOrderByAggregateInput>;
  _count?: InputMaybe<Upload_FileCountOrderByAggregateInput>;
  _max?: InputMaybe<Upload_FileMaxOrderByAggregateInput>;
  _min?: InputMaybe<Upload_FileMinOrderByAggregateInput>;
  _sum?: InputMaybe<Upload_FileSumOrderByAggregateInput>;
  alternativeText?: InputMaybe<SortOrder>;
  caption?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  created_by?: InputMaybe<SortOrder>;
  ext?: InputMaybe<SortOrder>;
  formats?: InputMaybe<SortOrder>;
  hash?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  mime?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewUrl?: InputMaybe<SortOrder>;
  provider?: InputMaybe<SortOrder>;
  provider_metadata?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type Upload_FileOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<Upload_FileOrderByRelevanceInput>;
  alternativeText?: InputMaybe<SortOrder>;
  caption?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  created_by?: InputMaybe<SortOrder>;
  ext?: InputMaybe<SortOrder>;
  formats?: InputMaybe<SortOrder>;
  hash?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  mime?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  previewUrl?: InputMaybe<SortOrder>;
  provider?: InputMaybe<SortOrder>;
  provider_metadata?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export enum Upload_FileScalarFieldEnum {
  AlternativeText = 'alternativeText',
  Caption = 'caption',
  CreatedAt = 'created_at',
  CreatedBy = 'created_by',
  Ext = 'ext',
  Formats = 'formats',
  Hash = 'hash',
  Height = 'height',
  Id = 'id',
  Mime = 'mime',
  Name = 'name',
  PreviewUrl = 'previewUrl',
  Provider = 'provider',
  ProviderMetadata = 'provider_metadata',
  Size = 'size',
  UpdatedAt = 'updated_at',
  UpdatedBy = 'updated_by',
  Url = 'url',
  Width = 'width'
}

export type Upload_FileScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<Upload_FileScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<Upload_FileScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<Upload_FileScalarWhereWithAggregatesInput>>;
  alternativeText?: InputMaybe<StringNullableWithAggregatesFilter>;
  caption?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  created_by?: InputMaybe<IntNullableWithAggregatesFilter>;
  ext?: InputMaybe<StringNullableWithAggregatesFilter>;
  formats?: InputMaybe<JsonNullableWithAggregatesFilter>;
  hash?: InputMaybe<StringWithAggregatesFilter>;
  height?: InputMaybe<IntNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  mime?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  previewUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  provider?: InputMaybe<StringWithAggregatesFilter>;
  provider_metadata?: InputMaybe<JsonNullableWithAggregatesFilter>;
  size?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  updated_by?: InputMaybe<IntNullableWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
  width?: InputMaybe<IntNullableWithAggregatesFilter>;
};

export type Upload_FileSumAggregate = {
  __typename?: 'Upload_fileSumAggregate';
  created_by?: Maybe<Scalars['Int']>;
  height?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['Int']>;
  size?: Maybe<Scalars['Decimal']>;
  updated_by?: Maybe<Scalars['Int']>;
  width?: Maybe<Scalars['Int']>;
};

export type Upload_FileSumOrderByAggregateInput = {
  created_by?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  size?: InputMaybe<SortOrder>;
  updated_by?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type Upload_FileUpdateInput = {
  alternativeText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caption?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  created_by?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  ext?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formats?: InputMaybe<Scalars['JSON']>;
  hash?: InputMaybe<StringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mime?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  previewUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provider?: InputMaybe<StringFieldUpdateOperationsInput>;
  provider_metadata?: InputMaybe<Scalars['JSON']>;
  size?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updated_by?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type Upload_FileUpdateManyMutationInput = {
  alternativeText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  caption?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  created_by?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  ext?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  formats?: InputMaybe<Scalars['JSON']>;
  hash?: InputMaybe<StringFieldUpdateOperationsInput>;
  height?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mime?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  previewUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  provider?: InputMaybe<StringFieldUpdateOperationsInput>;
  provider_metadata?: InputMaybe<Scalars['JSON']>;
  size?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updated_by?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type Upload_FileWhereInput = {
  AND?: InputMaybe<Array<Upload_FileWhereInput>>;
  NOT?: InputMaybe<Array<Upload_FileWhereInput>>;
  OR?: InputMaybe<Array<Upload_FileWhereInput>>;
  alternativeText?: InputMaybe<StringNullableFilter>;
  caption?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  created_by?: InputMaybe<IntNullableFilter>;
  ext?: InputMaybe<StringNullableFilter>;
  formats?: InputMaybe<JsonNullableFilter>;
  hash?: InputMaybe<StringFilter>;
  height?: InputMaybe<IntNullableFilter>;
  id?: InputMaybe<IntFilter>;
  mime?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  previewUrl?: InputMaybe<StringNullableFilter>;
  provider?: InputMaybe<StringFilter>;
  provider_metadata?: InputMaybe<JsonNullableFilter>;
  size?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  updated_by?: InputMaybe<IntNullableFilter>;
  url?: InputMaybe<StringFilter>;
  width?: InputMaybe<IntNullableFilter>;
};

export type Upload_FileWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Users = {
  __typename?: 'Users';
  created_at?: Maybe<Scalars['DateTime']>;
  email: Scalars['String'];
  emails?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  id: Scalars['BigInt'];
  interface_locale?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  password: Scalars['String'];
  permissions?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  username: Scalars['String'];
  value?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type UsersAvgAggregate = {
  __typename?: 'UsersAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type UsersAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type UsersCountAggregate = {
  __typename?: 'UsersCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  email: Scalars['Int'];
  emails: Scalars['Int'];
  first_name: Scalars['Int'];
  id: Scalars['Int'];
  interface_locale: Scalars['Int'];
  last_name: Scalars['Int'];
  mediamanager: Scalars['Int'];
  messages: Scalars['Int'];
  password: Scalars['Int'];
  permissions: Scalars['Int'];
  projects: Scalars['Int'];
  username: Scalars['Int'];
  value: Scalars['Int'];
  workspaces: Scalars['Int'];
};

export type UsersCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  interface_locale?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type UsersCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  email: Scalars['String'];
  emails?: InputMaybe<Scalars['String']>;
  first_name: Scalars['String'];
  id?: InputMaybe<Scalars['BigInt']>;
  interface_locale?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  messages?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
  permissions?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
  value?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type UsersCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  email: Scalars['String'];
  emails?: InputMaybe<Scalars['String']>;
  first_name: Scalars['String'];
  id?: InputMaybe<Scalars['BigInt']>;
  interface_locale?: InputMaybe<Scalars['String']>;
  last_name?: InputMaybe<Scalars['String']>;
  mediamanager?: InputMaybe<Scalars['String']>;
  messages?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
  permissions?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['String']>;
  username: Scalars['String'];
  value?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type UsersGroupBy = {
  __typename?: 'UsersGroupBy';
  _avg?: Maybe<UsersAvgAggregate>;
  _count?: Maybe<UsersCountAggregate>;
  _max?: Maybe<UsersMaxAggregate>;
  _min?: Maybe<UsersMinAggregate>;
  _sum?: Maybe<UsersSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  email: Scalars['String'];
  emails?: Maybe<Scalars['String']>;
  first_name: Scalars['String'];
  id: Scalars['BigInt'];
  interface_locale?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  password: Scalars['String'];
  permissions?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  username: Scalars['String'];
  value?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type UsersMaxAggregate = {
  __typename?: 'UsersMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  emails?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  interface_locale?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  permissions?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type UsersMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  interface_locale?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type UsersMinAggregate = {
  __typename?: 'UsersMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  emails?: Maybe<Scalars['String']>;
  first_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  interface_locale?: Maybe<Scalars['String']>;
  last_name?: Maybe<Scalars['String']>;
  mediamanager?: Maybe<Scalars['String']>;
  messages?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  permissions?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type UsersMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  interface_locale?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum UsersOrderByRelevanceFieldEnum {
  Email = 'email',
  Emails = 'emails',
  FirstName = 'first_name',
  InterfaceLocale = 'interface_locale',
  LastName = 'last_name',
  Mediamanager = 'mediamanager',
  Messages = 'messages',
  Password = 'password',
  Permissions = 'permissions',
  Projects = 'projects',
  Username = 'username',
  Value = 'value',
  Workspaces = 'workspaces'
}

export type UsersOrderByRelevanceInput = {
  fields: Array<UsersOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type UsersOrderByWithAggregationInput = {
  _avg?: InputMaybe<UsersAvgOrderByAggregateInput>;
  _count?: InputMaybe<UsersCountOrderByAggregateInput>;
  _max?: InputMaybe<UsersMaxOrderByAggregateInput>;
  _min?: InputMaybe<UsersMinOrderByAggregateInput>;
  _sum?: InputMaybe<UsersSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  interface_locale?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type UsersOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<UsersOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  emails?: InputMaybe<SortOrder>;
  first_name?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  interface_locale?: InputMaybe<SortOrder>;
  last_name?: InputMaybe<SortOrder>;
  mediamanager?: InputMaybe<SortOrder>;
  messages?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum UsersScalarFieldEnum {
  CreatedAt = 'created_at',
  Email = 'email',
  Emails = 'emails',
  FirstName = 'first_name',
  Id = 'id',
  InterfaceLocale = 'interface_locale',
  LastName = 'last_name',
  Mediamanager = 'mediamanager',
  Messages = 'messages',
  Password = 'password',
  Permissions = 'permissions',
  Projects = 'projects',
  Username = 'username',
  Value = 'value',
  Workspaces = 'workspaces'
}

export type UsersScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<UsersScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<UsersScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<UsersScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringWithAggregatesFilter>;
  emails?: InputMaybe<StringNullableWithAggregatesFilter>;
  first_name?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  interface_locale?: InputMaybe<StringNullableWithAggregatesFilter>;
  last_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  mediamanager?: InputMaybe<StringNullableWithAggregatesFilter>;
  messages?: InputMaybe<StringNullableWithAggregatesFilter>;
  password?: InputMaybe<StringWithAggregatesFilter>;
  permissions?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<StringNullableWithAggregatesFilter>;
  username?: InputMaybe<StringWithAggregatesFilter>;
  value?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type UsersSumAggregate = {
  __typename?: 'UsersSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type UsersSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type UsersUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  emails?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  interface_locale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  messages?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<StringFieldUpdateOperationsInput>;
  permissions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UsersUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  emails?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  first_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  interface_locale?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  last_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mediamanager?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  messages?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<StringFieldUpdateOperationsInput>;
  permissions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UsersWhereInput = {
  AND?: InputMaybe<Array<UsersWhereInput>>;
  NOT?: InputMaybe<Array<UsersWhereInput>>;
  OR?: InputMaybe<Array<UsersWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringFilter>;
  emails?: InputMaybe<StringNullableFilter>;
  first_name?: InputMaybe<StringFilter>;
  id?: InputMaybe<BigIntFilter>;
  interface_locale?: InputMaybe<StringNullableFilter>;
  last_name?: InputMaybe<StringNullableFilter>;
  mediamanager?: InputMaybe<StringNullableFilter>;
  messages?: InputMaybe<StringNullableFilter>;
  password?: InputMaybe<StringFilter>;
  permissions?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<StringNullableFilter>;
  username?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
};

export type UsersWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Vendors = {
  __typename?: 'Vendors';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  gift_certificates?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  invoices?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  physical_store?: Maybe<Scalars['String']>;
  polls?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  reviews?: Maybe<Scalars['String']>;
  reward_points?: Maybe<Scalars['String']>;
  special_discounts?: Maybe<Scalars['String']>;
  statistics?: Maybe<Scalars['String']>;
  stocks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type VendorsAvgAggregate = {
  __typename?: 'VendorsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type VendorsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type VendorsCountAggregate = {
  __typename?: 'VendorsCountAggregate';
  _all: Scalars['Int'];
  articles: Scalars['Int'];
  categories: Scalars['Int'];
  comments: Scalars['Int'];
  country: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  description: Scalars['Int'];
  gift_certificates: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  invoices: Scalars['Int'];
  name: Scalars['Int'];
  physical_store: Scalars['Int'];
  polls: Scalars['Int'];
  products: Scalars['Int'];
  quotes: Scalars['Int'];
  rating: Scalars['Int'];
  reports: Scalars['Int'];
  reviews: Scalars['Int'];
  reward_points: Scalars['Int'];
  special_discounts: Scalars['Int'];
  statistics: Scalars['Int'];
  stocks: Scalars['Int'];
  tags: Scalars['Int'];
  type: Scalars['Int'];
  users: Scalars['Int'];
  website: Scalars['Int'];
  workspaces: Scalars['Int'];
};

export type VendorsCountOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gift_certificates?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  invoices?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  physical_store?: InputMaybe<SortOrder>;
  polls?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  reviews?: InputMaybe<SortOrder>;
  reward_points?: InputMaybe<SortOrder>;
  special_discounts?: InputMaybe<SortOrder>;
  statistics?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type VendorsCreateInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  gift_certificates?: InputMaybe<Scalars['String']>;
  image?: InputMaybe<Scalars['String']>;
  invoices?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  physical_store?: InputMaybe<Scalars['String']>;
  polls?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  rating?: InputMaybe<Scalars['String']>;
  reports?: InputMaybe<Scalars['String']>;
  reviews?: InputMaybe<Scalars['String']>;
  reward_points?: InputMaybe<Scalars['String']>;
  special_discounts?: InputMaybe<Scalars['String']>;
  statistics?: InputMaybe<Scalars['String']>;
  stocks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type VendorsCreateManyInput = {
  articles?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  comments?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  coupons?: InputMaybe<Scalars['String']>;
  customers?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  gift_certificates?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  image?: InputMaybe<Scalars['String']>;
  invoices?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  physical_store?: InputMaybe<Scalars['String']>;
  polls?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quotes?: InputMaybe<Scalars['String']>;
  rating?: InputMaybe<Scalars['String']>;
  reports?: InputMaybe<Scalars['String']>;
  reviews?: InputMaybe<Scalars['String']>;
  reward_points?: InputMaybe<Scalars['String']>;
  special_discounts?: InputMaybe<Scalars['String']>;
  statistics?: InputMaybe<Scalars['String']>;
  stocks?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<Scalars['String']>;
  workspaces?: InputMaybe<Scalars['String']>;
};

export type VendorsGroupBy = {
  __typename?: 'VendorsGroupBy';
  _avg?: Maybe<VendorsAvgAggregate>;
  _count?: Maybe<VendorsCountAggregate>;
  _max?: Maybe<VendorsMaxAggregate>;
  _min?: Maybe<VendorsMinAggregate>;
  _sum?: Maybe<VendorsSumAggregate>;
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  gift_certificates?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  image?: Maybe<Scalars['String']>;
  invoices?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  physical_store?: Maybe<Scalars['String']>;
  polls?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  reviews?: Maybe<Scalars['String']>;
  reward_points?: Maybe<Scalars['String']>;
  special_discounts?: Maybe<Scalars['String']>;
  statistics?: Maybe<Scalars['String']>;
  stocks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type VendorsMaxAggregate = {
  __typename?: 'VendorsMaxAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  gift_certificates?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  invoices?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  physical_store?: Maybe<Scalars['String']>;
  polls?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  reviews?: Maybe<Scalars['String']>;
  reward_points?: Maybe<Scalars['String']>;
  special_discounts?: Maybe<Scalars['String']>;
  statistics?: Maybe<Scalars['String']>;
  stocks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type VendorsMaxOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gift_certificates?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  invoices?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  physical_store?: InputMaybe<SortOrder>;
  polls?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  reviews?: InputMaybe<SortOrder>;
  reward_points?: InputMaybe<SortOrder>;
  special_discounts?: InputMaybe<SortOrder>;
  statistics?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type VendorsMinAggregate = {
  __typename?: 'VendorsMinAggregate';
  articles?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  comments?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  coupons?: Maybe<Scalars['String']>;
  customers?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  gift_certificates?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  image?: Maybe<Scalars['String']>;
  invoices?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  physical_store?: Maybe<Scalars['String']>;
  polls?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quotes?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['String']>;
  reports?: Maybe<Scalars['String']>;
  reviews?: Maybe<Scalars['String']>;
  reward_points?: Maybe<Scalars['String']>;
  special_discounts?: Maybe<Scalars['String']>;
  statistics?: Maybe<Scalars['String']>;
  stocks?: Maybe<Scalars['String']>;
  tags?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['String']>;
  website?: Maybe<Scalars['String']>;
  workspaces?: Maybe<Scalars['String']>;
};

export type VendorsMinOrderByAggregateInput = {
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gift_certificates?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  invoices?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  physical_store?: InputMaybe<SortOrder>;
  polls?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  reviews?: InputMaybe<SortOrder>;
  reward_points?: InputMaybe<SortOrder>;
  special_discounts?: InputMaybe<SortOrder>;
  statistics?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum VendorsOrderByRelevanceFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Comments = 'comments',
  Country = 'country',
  Coupons = 'coupons',
  Customers = 'customers',
  Description = 'description',
  GiftCertificates = 'gift_certificates',
  Image = 'image',
  Invoices = 'invoices',
  Name = 'name',
  PhysicalStore = 'physical_store',
  Polls = 'polls',
  Products = 'products',
  Quotes = 'quotes',
  Rating = 'rating',
  Reports = 'reports',
  Reviews = 'reviews',
  RewardPoints = 'reward_points',
  SpecialDiscounts = 'special_discounts',
  Statistics = 'statistics',
  Stocks = 'stocks',
  Tags = 'tags',
  Type = 'type',
  Users = 'users',
  Website = 'website',
  Workspaces = 'workspaces'
}

export type VendorsOrderByRelevanceInput = {
  fields: Array<VendorsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type VendorsOrderByWithAggregationInput = {
  _avg?: InputMaybe<VendorsAvgOrderByAggregateInput>;
  _count?: InputMaybe<VendorsCountOrderByAggregateInput>;
  _max?: InputMaybe<VendorsMaxOrderByAggregateInput>;
  _min?: InputMaybe<VendorsMinOrderByAggregateInput>;
  _sum?: InputMaybe<VendorsSumOrderByAggregateInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gift_certificates?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  invoices?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  physical_store?: InputMaybe<SortOrder>;
  polls?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  reviews?: InputMaybe<SortOrder>;
  reward_points?: InputMaybe<SortOrder>;
  special_discounts?: InputMaybe<SortOrder>;
  statistics?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export type VendorsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<VendorsOrderByRelevanceInput>;
  articles?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  comments?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  gift_certificates?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  invoices?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  physical_store?: InputMaybe<SortOrder>;
  polls?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quotes?: InputMaybe<SortOrder>;
  rating?: InputMaybe<SortOrder>;
  reports?: InputMaybe<SortOrder>;
  reviews?: InputMaybe<SortOrder>;
  reward_points?: InputMaybe<SortOrder>;
  special_discounts?: InputMaybe<SortOrder>;
  statistics?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  website?: InputMaybe<SortOrder>;
  workspaces?: InputMaybe<SortOrder>;
};

export enum VendorsScalarFieldEnum {
  Articles = 'articles',
  Categories = 'categories',
  Comments = 'comments',
  Country = 'country',
  Coupons = 'coupons',
  Customers = 'customers',
  Description = 'description',
  GiftCertificates = 'gift_certificates',
  Id = 'id',
  Image = 'image',
  Invoices = 'invoices',
  Name = 'name',
  PhysicalStore = 'physical_store',
  Polls = 'polls',
  Products = 'products',
  Quotes = 'quotes',
  Rating = 'rating',
  Reports = 'reports',
  Reviews = 'reviews',
  RewardPoints = 'reward_points',
  SpecialDiscounts = 'special_discounts',
  Statistics = 'statistics',
  Stocks = 'stocks',
  Tags = 'tags',
  Type = 'type',
  Users = 'users',
  Website = 'website',
  Workspaces = 'workspaces'
}

export type VendorsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<VendorsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<VendorsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<VendorsScalarWhereWithAggregatesInput>>;
  articles?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  comments?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  coupons?: InputMaybe<StringNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  gift_certificates?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<IntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  invoices?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  physical_store?: InputMaybe<StringNullableWithAggregatesFilter>;
  polls?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  quotes?: InputMaybe<StringNullableWithAggregatesFilter>;
  rating?: InputMaybe<StringNullableWithAggregatesFilter>;
  reports?: InputMaybe<StringNullableWithAggregatesFilter>;
  reviews?: InputMaybe<StringNullableWithAggregatesFilter>;
  reward_points?: InputMaybe<StringNullableWithAggregatesFilter>;
  special_discounts?: InputMaybe<StringNullableWithAggregatesFilter>;
  statistics?: InputMaybe<StringNullableWithAggregatesFilter>;
  stocks?: InputMaybe<StringNullableWithAggregatesFilter>;
  tags?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<StringNullableWithAggregatesFilter>;
  website?: InputMaybe<StringNullableWithAggregatesFilter>;
  workspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VendorsSumAggregate = {
  __typename?: 'VendorsSumAggregate';
  id?: Maybe<Scalars['Int']>;
};

export type VendorsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type VendorsUpdateInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gift_certificates?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  invoices?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  physical_store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  polls?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reviews?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reward_points?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_discounts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statistics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VendorsUpdateManyMutationInput = {
  articles?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  coupons?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gift_certificates?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  invoices?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  physical_store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  polls?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quotes?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  rating?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reports?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reviews?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reward_points?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  special_discounts?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  statistics?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VendorsWhereInput = {
  AND?: InputMaybe<Array<VendorsWhereInput>>;
  NOT?: InputMaybe<Array<VendorsWhereInput>>;
  OR?: InputMaybe<Array<VendorsWhereInput>>;
  articles?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  comments?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  coupons?: InputMaybe<StringNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  gift_certificates?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<IntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  invoices?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  physical_store?: InputMaybe<StringNullableFilter>;
  polls?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  quotes?: InputMaybe<StringNullableFilter>;
  rating?: InputMaybe<StringNullableFilter>;
  reports?: InputMaybe<StringNullableFilter>;
  reviews?: InputMaybe<StringNullableFilter>;
  reward_points?: InputMaybe<StringNullableFilter>;
  special_discounts?: InputMaybe<StringNullableFilter>;
  statistics?: InputMaybe<StringNullableFilter>;
  stocks?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<StringNullableFilter>;
  workspaces?: InputMaybe<StringNullableFilter>;
};

export type VendorsWhereUniqueInput = {
  id?: InputMaybe<Scalars['Int']>;
};

export type Visits = {
  __typename?: 'Visits';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  emergency?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  meeting?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type VisitsAvgAggregate = {
  __typename?: 'VisitsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type VisitsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type VisitsCountAggregate = {
  __typename?: 'VisitsCountAggregate';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  created_at: Scalars['Int'];
  emergency: Scalars['Int'];
  end_date: Scalars['Int'];
  id: Scalars['Int'];
  location: Scalars['Int'];
  meeting: Scalars['Int'];
  reason: Scalars['Int'];
  start_date: Scalars['Int'];
  task: Scalars['Int'];
  username: Scalars['Int'];
};

export type VisitsCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  emergency?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  meeting?: InputMaybe<SortOrder>;
  reason?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type VisitsCreateInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  emergency?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<Scalars['String']>;
  reason?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

export type VisitsCreateManyInput = {
  content?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  emergency?: InputMaybe<Scalars['String']>;
  end_date?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  location?: InputMaybe<Scalars['String']>;
  meeting?: InputMaybe<Scalars['String']>;
  reason?: InputMaybe<Scalars['String']>;
  start_date?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Scalars['String']>;
  username?: InputMaybe<Scalars['String']>;
};

export type VisitsGroupBy = {
  __typename?: 'VisitsGroupBy';
  _avg?: Maybe<VisitsAvgAggregate>;
  _count?: Maybe<VisitsCountAggregate>;
  _max?: Maybe<VisitsMaxAggregate>;
  _min?: Maybe<VisitsMinAggregate>;
  _sum?: Maybe<VisitsSumAggregate>;
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  emergency?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  location?: Maybe<Scalars['String']>;
  meeting?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type VisitsMaxAggregate = {
  __typename?: 'VisitsMaxAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  emergency?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  meeting?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type VisitsMaxOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  emergency?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  meeting?: InputMaybe<SortOrder>;
  reason?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type VisitsMinAggregate = {
  __typename?: 'VisitsMinAggregate';
  content?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  emergency?: Maybe<Scalars['String']>;
  end_date?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  location?: Maybe<Scalars['String']>;
  meeting?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  start_date?: Maybe<Scalars['String']>;
  task?: Maybe<Scalars['String']>;
  username?: Maybe<Scalars['String']>;
};

export type VisitsMinOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  emergency?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  meeting?: InputMaybe<SortOrder>;
  reason?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export enum VisitsOrderByRelevanceFieldEnum {
  Content = 'content',
  Emergency = 'emergency',
  EndDate = 'end_date',
  Location = 'location',
  Meeting = 'meeting',
  Reason = 'reason',
  StartDate = 'start_date',
  Task = 'task',
  Username = 'username'
}

export type VisitsOrderByRelevanceInput = {
  fields: Array<VisitsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type VisitsOrderByWithAggregationInput = {
  _avg?: InputMaybe<VisitsAvgOrderByAggregateInput>;
  _count?: InputMaybe<VisitsCountOrderByAggregateInput>;
  _max?: InputMaybe<VisitsMaxOrderByAggregateInput>;
  _min?: InputMaybe<VisitsMinOrderByAggregateInput>;
  _sum?: InputMaybe<VisitsSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  emergency?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  meeting?: InputMaybe<SortOrder>;
  reason?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type VisitsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<VisitsOrderByRelevanceInput>;
  content?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  emergency?: InputMaybe<SortOrder>;
  end_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  meeting?: InputMaybe<SortOrder>;
  reason?: InputMaybe<SortOrder>;
  start_date?: InputMaybe<SortOrder>;
  task?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export enum VisitsScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'created_at',
  Emergency = 'emergency',
  EndDate = 'end_date',
  Id = 'id',
  Location = 'location',
  Meeting = 'meeting',
  Reason = 'reason',
  StartDate = 'start_date',
  Task = 'task',
  Username = 'username'
}

export type VisitsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<VisitsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<VisitsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<VisitsScalarWhereWithAggregatesInput>>;
  content?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  emergency?: InputMaybe<StringNullableWithAggregatesFilter>;
  end_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  location?: InputMaybe<StringNullableWithAggregatesFilter>;
  meeting?: InputMaybe<StringNullableWithAggregatesFilter>;
  reason?: InputMaybe<StringNullableWithAggregatesFilter>;
  start_date?: InputMaybe<StringNullableWithAggregatesFilter>;
  task?: InputMaybe<StringNullableWithAggregatesFilter>;
  username?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VisitsSumAggregate = {
  __typename?: 'VisitsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type VisitsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type VisitsUpdateInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  emergency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meeting?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VisitsUpdateManyMutationInput = {
  content?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  emergency?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  end_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  location?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  meeting?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  reason?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  start_date?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  task?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  username?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VisitsWhereInput = {
  AND?: InputMaybe<Array<VisitsWhereInput>>;
  NOT?: InputMaybe<Array<VisitsWhereInput>>;
  OR?: InputMaybe<Array<VisitsWhereInput>>;
  content?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  emergency?: InputMaybe<StringNullableFilter>;
  end_date?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  location?: InputMaybe<StringNullableFilter>;
  meeting?: InputMaybe<StringNullableFilter>;
  reason?: InputMaybe<StringNullableFilter>;
  start_date?: InputMaybe<StringNullableFilter>;
  task?: InputMaybe<StringNullableFilter>;
  username?: InputMaybe<StringNullableFilter>;
};

export type VisitsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Warehouse = {
  __typename?: 'Warehouse';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postal?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type WarehouseAvgAggregate = {
  __typename?: 'WarehouseAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type WarehouseAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WarehouseCountAggregate = {
  __typename?: 'WarehouseCountAggregate';
  _all: Scalars['Int'];
  category: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  image: Scalars['Int'];
  isPublic: Scalars['Int'];
  name: Scalars['Int'];
  postal: Scalars['Int'];
  products: Scalars['Int'];
  state: Scalars['Int'];
  status: Scalars['Int'];
};

export type WarehouseCountOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postal?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type WarehouseCreateInput = {
  category?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  isPublic?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  postal?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type WarehouseCreateManyInput = {
  category?: InputMaybe<Scalars['String']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  image?: InputMaybe<Scalars['String']>;
  isPublic?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  postal?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
};

export type WarehouseGroupBy = {
  __typename?: 'WarehouseGroupBy';
  _avg?: Maybe<WarehouseAvgAggregate>;
  _count?: Maybe<WarehouseCountAggregate>;
  _max?: Maybe<WarehouseMaxAggregate>;
  _min?: Maybe<WarehouseMinAggregate>;
  _sum?: Maybe<WarehouseSumAggregate>;
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postal?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type WarehouseMaxAggregate = {
  __typename?: 'WarehouseMaxAggregate';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postal?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type WarehouseMaxOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postal?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type WarehouseMinAggregate = {
  __typename?: 'WarehouseMinAggregate';
  category?: Maybe<Scalars['String']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  image?: Maybe<Scalars['String']>;
  isPublic?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  postal?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
};

export type WarehouseMinOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postal?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum WarehouseOrderByRelevanceFieldEnum {
  Category = 'category',
  City = 'city',
  Country = 'country',
  Description = 'description',
  Image = 'image',
  IsPublic = 'isPublic',
  Name = 'name',
  Postal = 'postal',
  Products = 'products',
  State = 'state',
  Status = 'status'
}

export type WarehouseOrderByRelevanceInput = {
  fields: Array<WarehouseOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type WarehouseOrderByWithAggregationInput = {
  _avg?: InputMaybe<WarehouseAvgOrderByAggregateInput>;
  _count?: InputMaybe<WarehouseCountOrderByAggregateInput>;
  _max?: InputMaybe<WarehouseMaxOrderByAggregateInput>;
  _min?: InputMaybe<WarehouseMinOrderByAggregateInput>;
  _sum?: InputMaybe<WarehouseSumOrderByAggregateInput>;
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postal?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export type WarehouseOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<WarehouseOrderByRelevanceInput>;
  category?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  postal?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
};

export enum WarehouseScalarFieldEnum {
  Category = 'category',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  IsPublic = 'isPublic',
  Name = 'name',
  Postal = 'postal',
  Products = 'products',
  State = 'state',
  Status = 'status'
}

export type WarehouseScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<WarehouseScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<WarehouseScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<WarehouseScalarWhereWithAggregatesInput>>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  isPublic?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  postal?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  status?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WarehouseSumAggregate = {
  __typename?: 'WarehouseSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type WarehouseSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WarehouseUpdateInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WarehouseUpdateManyMutationInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WarehouseWhereInput = {
  AND?: InputMaybe<Array<WarehouseWhereInput>>;
  NOT?: InputMaybe<Array<WarehouseWhereInput>>;
  OR?: InputMaybe<Array<WarehouseWhereInput>>;
  category?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  image?: InputMaybe<StringNullableFilter>;
  isPublic?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  postal?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
};

export type WarehouseWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Webhooks = {
  __typename?: 'Webhooks';
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  headers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  publish?: Maybe<Scalars['String']>;
  retrieve?: Maybe<Scalars['String']>;
  unpublish?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  url: Scalars['String'];
};

export type WebhooksAvgAggregate = {
  __typename?: 'WebhooksAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type WebhooksAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WebhooksCountAggregate = {
  __typename?: 'WebhooksCountAggregate';
  _all: Scalars['Int'];
  create: Scalars['Int'];
  created_at: Scalars['Int'];
  delete: Scalars['Int'];
  headers: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  publish: Scalars['Int'];
  retrieve: Scalars['Int'];
  unpublish: Scalars['Int'];
  update: Scalars['Int'];
  url: Scalars['Int'];
};

export type WebhooksCountOrderByAggregateInput = {
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  headers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publish?: InputMaybe<SortOrder>;
  retrieve?: InputMaybe<SortOrder>;
  unpublish?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebhooksCreateInput = {
  create?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  delete?: InputMaybe<Scalars['String']>;
  headers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  publish?: InputMaybe<Scalars['String']>;
  retrieve?: InputMaybe<Scalars['String']>;
  unpublish?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['String']>;
  url: Scalars['String'];
};

export type WebhooksCreateManyInput = {
  create?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  delete?: InputMaybe<Scalars['String']>;
  headers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name: Scalars['String'];
  publish?: InputMaybe<Scalars['String']>;
  retrieve?: InputMaybe<Scalars['String']>;
  unpublish?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['String']>;
  url: Scalars['String'];
};

export type WebhooksGroupBy = {
  __typename?: 'WebhooksGroupBy';
  _avg?: Maybe<WebhooksAvgAggregate>;
  _count?: Maybe<WebhooksCountAggregate>;
  _max?: Maybe<WebhooksMaxAggregate>;
  _min?: Maybe<WebhooksMinAggregate>;
  _sum?: Maybe<WebhooksSumAggregate>;
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  headers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name: Scalars['String'];
  publish?: Maybe<Scalars['String']>;
  retrieve?: Maybe<Scalars['String']>;
  unpublish?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  url: Scalars['String'];
};

export type WebhooksMaxAggregate = {
  __typename?: 'WebhooksMaxAggregate';
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  headers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  publish?: Maybe<Scalars['String']>;
  retrieve?: Maybe<Scalars['String']>;
  unpublish?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type WebhooksMaxOrderByAggregateInput = {
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  headers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publish?: InputMaybe<SortOrder>;
  retrieve?: InputMaybe<SortOrder>;
  unpublish?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebhooksMinAggregate = {
  __typename?: 'WebhooksMinAggregate';
  create?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  delete?: Maybe<Scalars['String']>;
  headers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  publish?: Maybe<Scalars['String']>;
  retrieve?: Maybe<Scalars['String']>;
  unpublish?: Maybe<Scalars['String']>;
  update?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type WebhooksMinOrderByAggregateInput = {
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  headers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publish?: InputMaybe<SortOrder>;
  retrieve?: InputMaybe<SortOrder>;
  unpublish?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum WebhooksOrderByRelevanceFieldEnum {
  Create = 'create',
  Delete = 'delete',
  Headers = 'headers',
  Name = 'name',
  Publish = 'publish',
  Retrieve = 'retrieve',
  Unpublish = 'unpublish',
  Update = 'update',
  Url = 'url'
}

export type WebhooksOrderByRelevanceInput = {
  fields: Array<WebhooksOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type WebhooksOrderByWithAggregationInput = {
  _avg?: InputMaybe<WebhooksAvgOrderByAggregateInput>;
  _count?: InputMaybe<WebhooksCountOrderByAggregateInput>;
  _max?: InputMaybe<WebhooksMaxOrderByAggregateInput>;
  _min?: InputMaybe<WebhooksMinOrderByAggregateInput>;
  _sum?: InputMaybe<WebhooksSumOrderByAggregateInput>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  headers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publish?: InputMaybe<SortOrder>;
  retrieve?: InputMaybe<SortOrder>;
  unpublish?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebhooksOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<WebhooksOrderByRelevanceInput>;
  create?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  delete?: InputMaybe<SortOrder>;
  headers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  publish?: InputMaybe<SortOrder>;
  retrieve?: InputMaybe<SortOrder>;
  unpublish?: InputMaybe<SortOrder>;
  update?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum WebhooksScalarFieldEnum {
  Create = 'create',
  CreatedAt = 'created_at',
  Delete = 'delete',
  Headers = 'headers',
  Id = 'id',
  Name = 'name',
  Publish = 'publish',
  Retrieve = 'retrieve',
  Unpublish = 'unpublish',
  Update = 'update',
  Url = 'url'
}

export type WebhooksScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<WebhooksScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<WebhooksScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<WebhooksScalarWhereWithAggregatesInput>>;
  create?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  delete?: InputMaybe<StringNullableWithAggregatesFilter>;
  headers?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  publish?: InputMaybe<StringNullableWithAggregatesFilter>;
  retrieve?: InputMaybe<StringNullableWithAggregatesFilter>;
  unpublish?: InputMaybe<StringNullableWithAggregatesFilter>;
  update?: InputMaybe<StringNullableWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
};

export type WebhooksSumAggregate = {
  __typename?: 'WebhooksSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type WebhooksSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WebhooksUpdateInput = {
  create?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delete?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  headers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  publish?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  retrieve?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unpublish?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  update?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type WebhooksUpdateManyMutationInput = {
  create?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delete?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  headers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  publish?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  retrieve?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unpublish?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  update?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type WebhooksWhereInput = {
  AND?: InputMaybe<Array<WebhooksWhereInput>>;
  NOT?: InputMaybe<Array<WebhooksWhereInput>>;
  OR?: InputMaybe<Array<WebhooksWhereInput>>;
  create?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  delete?: InputMaybe<StringNullableFilter>;
  headers?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringFilter>;
  publish?: InputMaybe<StringNullableFilter>;
  retrieve?: InputMaybe<StringNullableFilter>;
  unpublish?: InputMaybe<StringNullableFilter>;
  update?: InputMaybe<StringNullableFilter>;
  url?: InputMaybe<StringFilter>;
};

export type WebhooksWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Websites = {
  __typename?: 'Websites';
  category?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  shop?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  themes: Scalars['String'];
  url?: Maybe<Scalars['String']>;
};

export type WebsitesAvgAggregate = {
  __typename?: 'WebsitesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type WebsitesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WebsitesCountAggregate = {
  __typename?: 'WebsitesCountAggregate';
  _all: Scalars['Int'];
  category: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  shop: Scalars['Int'];
  store: Scalars['Int'];
  themes: Scalars['Int'];
  url: Scalars['Int'];
};

export type WebsitesCountOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  shop?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  themes?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebsitesCreateInput = {
  category?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  shop?: InputMaybe<Scalars['String']>;
  store?: InputMaybe<Scalars['String']>;
  themes: Scalars['String'];
  url?: InputMaybe<Scalars['String']>;
};

export type WebsitesCreateManyInput = {
  category?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  shop?: InputMaybe<Scalars['String']>;
  store?: InputMaybe<Scalars['String']>;
  themes: Scalars['String'];
  url?: InputMaybe<Scalars['String']>;
};

export type WebsitesGroupBy = {
  __typename?: 'WebsitesGroupBy';
  _avg?: Maybe<WebsitesAvgAggregate>;
  _count?: Maybe<WebsitesCountAggregate>;
  _max?: Maybe<WebsitesMaxAggregate>;
  _min?: Maybe<WebsitesMinAggregate>;
  _sum?: Maybe<WebsitesSumAggregate>;
  category?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  shop?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  themes: Scalars['String'];
  url?: Maybe<Scalars['String']>;
};

export type WebsitesMaxAggregate = {
  __typename?: 'WebsitesMaxAggregate';
  category?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  shop?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  themes?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type WebsitesMaxOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  shop?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  themes?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebsitesMinAggregate = {
  __typename?: 'WebsitesMinAggregate';
  category?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  shop?: Maybe<Scalars['String']>;
  store?: Maybe<Scalars['String']>;
  themes?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type WebsitesMinOrderByAggregateInput = {
  category?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  shop?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  themes?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum WebsitesOrderByRelevanceFieldEnum {
  Category = 'category',
  Name = 'name',
  Shop = 'shop',
  Store = 'store',
  Themes = 'themes',
  Url = 'url'
}

export type WebsitesOrderByRelevanceInput = {
  fields: Array<WebsitesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type WebsitesOrderByWithAggregationInput = {
  _avg?: InputMaybe<WebsitesAvgOrderByAggregateInput>;
  _count?: InputMaybe<WebsitesCountOrderByAggregateInput>;
  _max?: InputMaybe<WebsitesMaxOrderByAggregateInput>;
  _min?: InputMaybe<WebsitesMinOrderByAggregateInput>;
  _sum?: InputMaybe<WebsitesSumOrderByAggregateInput>;
  category?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  shop?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  themes?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type WebsitesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<WebsitesOrderByRelevanceInput>;
  category?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  shop?: InputMaybe<SortOrder>;
  store?: InputMaybe<SortOrder>;
  themes?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export enum WebsitesScalarFieldEnum {
  Category = 'category',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Shop = 'shop',
  Store = 'store',
  Themes = 'themes',
  Url = 'url'
}

export type WebsitesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<WebsitesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<WebsitesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<WebsitesScalarWhereWithAggregatesInput>>;
  category?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  shop?: InputMaybe<StringNullableWithAggregatesFilter>;
  store?: InputMaybe<StringNullableWithAggregatesFilter>;
  themes?: InputMaybe<StringWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WebsitesSumAggregate = {
  __typename?: 'WebsitesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type WebsitesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WebsitesUpdateInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themes?: InputMaybe<StringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsitesUpdateManyMutationInput = {
  category?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shop?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  store?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themes?: InputMaybe<StringFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsitesWhereInput = {
  AND?: InputMaybe<Array<WebsitesWhereInput>>;
  NOT?: InputMaybe<Array<WebsitesWhereInput>>;
  OR?: InputMaybe<Array<WebsitesWhereInput>>;
  category?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  shop?: InputMaybe<StringNullableFilter>;
  store?: InputMaybe<StringNullableFilter>;
  themes?: InputMaybe<StringFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type WebsitesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Wishlists = {
  __typename?: 'Wishlists';
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
};

export type WishlistsAvgAggregate = {
  __typename?: 'WishlistsAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type WishlistsAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WishlistsCountAggregate = {
  __typename?: 'WishlistsCountAggregate';
  _all: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  occassions: Scalars['Int'];
  products: Scalars['Int'];
  quantity: Scalars['Int'];
  visibility: Scalars['Int'];
};

export type WishlistsCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
};

export type WishlistsCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  occassions?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
};

export type WishlistsCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  occassions?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['String']>;
  quantity?: InputMaybe<Scalars['String']>;
  visibility?: InputMaybe<Scalars['String']>;
};

export type WishlistsGroupBy = {
  __typename?: 'WishlistsGroupBy';
  _avg?: Maybe<WishlistsAvgAggregate>;
  _count?: Maybe<WishlistsCountAggregate>;
  _max?: Maybe<WishlistsMaxAggregate>;
  _min?: Maybe<WishlistsMinAggregate>;
  _sum?: Maybe<WishlistsSumAggregate>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
};

export type WishlistsMaxAggregate = {
  __typename?: 'WishlistsMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
};

export type WishlistsMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
};

export type WishlistsMinAggregate = {
  __typename?: 'WishlistsMinAggregate';
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  occassions?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['String']>;
  visibility?: Maybe<Scalars['String']>;
};

export type WishlistsMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
};

export enum WishlistsOrderByRelevanceFieldEnum {
  Customers = 'customers',
  Name = 'name',
  Occassions = 'occassions',
  Products = 'products',
  Quantity = 'quantity',
  Visibility = 'visibility'
}

export type WishlistsOrderByRelevanceInput = {
  fields: Array<WishlistsOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type WishlistsOrderByWithAggregationInput = {
  _avg?: InputMaybe<WishlistsAvgOrderByAggregateInput>;
  _count?: InputMaybe<WishlistsCountOrderByAggregateInput>;
  _max?: InputMaybe<WishlistsMaxOrderByAggregateInput>;
  _min?: InputMaybe<WishlistsMinOrderByAggregateInput>;
  _sum?: InputMaybe<WishlistsSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
};

export type WishlistsOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<WishlistsOrderByRelevanceInput>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  occassions?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  visibility?: InputMaybe<SortOrder>;
};

export enum WishlistsScalarFieldEnum {
  CreatedAt = 'created_at',
  Customers = 'customers',
  Id = 'id',
  Name = 'name',
  Occassions = 'occassions',
  Products = 'products',
  Quantity = 'quantity',
  Visibility = 'visibility'
}

export type WishlistsScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<WishlistsScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<WishlistsScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<WishlistsScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  occassions?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<StringNullableWithAggregatesFilter>;
  quantity?: InputMaybe<StringNullableWithAggregatesFilter>;
  visibility?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WishlistsSumAggregate = {
  __typename?: 'WishlistsSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type WishlistsSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type WishlistsUpdateInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  occassions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WishlistsUpdateManyMutationInput = {
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  occassions?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  visibility?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WishlistsWhereInput = {
  AND?: InputMaybe<Array<WishlistsWhereInput>>;
  NOT?: InputMaybe<Array<WishlistsWhereInput>>;
  OR?: InputMaybe<Array<WishlistsWhereInput>>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  occassions?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<StringNullableFilter>;
  quantity?: InputMaybe<StringNullableFilter>;
  visibility?: InputMaybe<StringNullableFilter>;
};

export type WishlistsWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Workspaces = {
  __typename?: 'Workspaces';
  author?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['Int']>;
  customers_customersToworkspaces?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['Boolean']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_productsToworkspaces?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: Maybe<Scalars['String']>;
  shops?: Maybe<Scalars['Int']>;
  shops_shopsToworkspaces?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['Int']>;
  users_usersToworkspaces?: Maybe<Scalars['String']>;
};

export type WorkspacesAvgAggregate = {
  __typename?: 'WorkspacesAvgAggregate';
  brands?: Maybe<Scalars['Float']>;
  category?: Maybe<Scalars['Float']>;
  customers?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  products?: Maybe<Scalars['Float']>;
  projects?: Maybe<Scalars['Float']>;
  shops?: Maybe<Scalars['Float']>;
  tasks?: Maybe<Scalars['Float']>;
  users?: Maybe<Scalars['Float']>;
};

export type WorkspacesAvgOrderByAggregateInput = {
  brands?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type WorkspacesCountAggregate = {
  __typename?: 'WorkspacesCountAggregate';
  _all: Scalars['Int'];
  author: Scalars['Int'];
  brands: Scalars['Int'];
  brands_brandsToworkspaces: Scalars['Int'];
  categories: Scalars['Int'];
  category: Scalars['Int'];
  code: Scalars['Int'];
  created_at: Scalars['Int'];
  customers: Scalars['Int'];
  customers_customersToworkspaces: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isPublic: Scalars['Int'];
  media: Scalars['Int'];
  name: Scalars['Int'];
  products: Scalars['Int'];
  products_productsToworkspaces: Scalars['Int'];
  projects: Scalars['Int'];
  projects_projectsToworkspaces: Scalars['Int'];
  shops: Scalars['Int'];
  shops_shopsToworkspaces: Scalars['Int'];
  tasks: Scalars['Int'];
  tasks_tasksToworkspaces: Scalars['Int'];
  users: Scalars['Int'];
  users_usersToworkspaces: Scalars['Int'];
};

export type WorkspacesCountOrderByAggregateInput = {
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsToworkspaces?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToworkspaces?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_productsToworkspaces?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToworkspaces?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  shops_shopsToworkspaces?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tasks_tasksToworkspaces?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  users_usersToworkspaces?: InputMaybe<SortOrder>;
};

export type WorkspacesCreateInput = {
  author?: InputMaybe<Scalars['String']>;
  brands?: InputMaybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['Int']>;
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['Int']>;
  customers_customersToworkspaces?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['BigInt']>;
  products_productsToworkspaces?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: InputMaybe<Scalars['String']>;
  shops?: InputMaybe<Scalars['Int']>;
  shops_shopsToworkspaces?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['Int']>;
  users_usersToworkspaces?: InputMaybe<Scalars['String']>;
};

export type WorkspacesCreateManyInput = {
  author?: InputMaybe<Scalars['String']>;
  brands?: InputMaybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<Scalars['String']>;
  category?: InputMaybe<Scalars['Int']>;
  code?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  customers?: InputMaybe<Scalars['Int']>;
  customers_customersToworkspaces?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['BigInt']>;
  isPublic?: InputMaybe<Scalars['Boolean']>;
  media?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<Scalars['BigInt']>;
  products_productsToworkspaces?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: InputMaybe<Scalars['String']>;
  shops?: InputMaybe<Scalars['Int']>;
  shops_shopsToworkspaces?: InputMaybe<Scalars['String']>;
  tasks?: InputMaybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: InputMaybe<Scalars['String']>;
  users?: InputMaybe<Scalars['Int']>;
  users_usersToworkspaces?: InputMaybe<Scalars['String']>;
};

export type WorkspacesGroupBy = {
  __typename?: 'WorkspacesGroupBy';
  _avg?: Maybe<WorkspacesAvgAggregate>;
  _count?: Maybe<WorkspacesCountAggregate>;
  _max?: Maybe<WorkspacesMaxAggregate>;
  _min?: Maybe<WorkspacesMinAggregate>;
  _sum?: Maybe<WorkspacesSumAggregate>;
  author?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['Int']>;
  customers_customersToworkspaces?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['BigInt'];
  isPublic?: Maybe<Scalars['Boolean']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_productsToworkspaces?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: Maybe<Scalars['String']>;
  shops?: Maybe<Scalars['Int']>;
  shops_shopsToworkspaces?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['Int']>;
  users_usersToworkspaces?: Maybe<Scalars['String']>;
};

export type WorkspacesMaxAggregate = {
  __typename?: 'WorkspacesMaxAggregate';
  author?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['Int']>;
  customers_customersToworkspaces?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['Boolean']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_productsToworkspaces?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: Maybe<Scalars['String']>;
  shops?: Maybe<Scalars['Int']>;
  shops_shopsToworkspaces?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['Int']>;
  users_usersToworkspaces?: Maybe<Scalars['String']>;
};

export type WorkspacesMaxOrderByAggregateInput = {
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsToworkspaces?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToworkspaces?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_productsToworkspaces?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToworkspaces?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  shops_shopsToworkspaces?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tasks_tasksToworkspaces?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  users_usersToworkspaces?: InputMaybe<SortOrder>;
};

export type WorkspacesMinAggregate = {
  __typename?: 'WorkspacesMinAggregate';
  author?: Maybe<Scalars['String']>;
  brands?: Maybe<Scalars['BigInt']>;
  brands_brandsToworkspaces?: Maybe<Scalars['String']>;
  categories?: Maybe<Scalars['String']>;
  category?: Maybe<Scalars['Int']>;
  code?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  customers?: Maybe<Scalars['Int']>;
  customers_customersToworkspaces?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['BigInt']>;
  isPublic?: Maybe<Scalars['Boolean']>;
  media?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  products?: Maybe<Scalars['BigInt']>;
  products_productsToworkspaces?: Maybe<Scalars['String']>;
  projects?: Maybe<Scalars['BigInt']>;
  projects_projectsToworkspaces?: Maybe<Scalars['String']>;
  shops?: Maybe<Scalars['Int']>;
  shops_shopsToworkspaces?: Maybe<Scalars['String']>;
  tasks?: Maybe<Scalars['BigInt']>;
  tasks_tasksToworkspaces?: Maybe<Scalars['String']>;
  users?: Maybe<Scalars['Int']>;
  users_usersToworkspaces?: Maybe<Scalars['String']>;
};

export type WorkspacesMinOrderByAggregateInput = {
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsToworkspaces?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToworkspaces?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_productsToworkspaces?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToworkspaces?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  shops_shopsToworkspaces?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tasks_tasksToworkspaces?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  users_usersToworkspaces?: InputMaybe<SortOrder>;
};

export enum WorkspacesOrderByRelevanceFieldEnum {
  Author = 'author',
  BrandsBrandsToworkspaces = 'brands_brandsToworkspaces',
  Categories = 'categories',
  Code = 'code',
  CustomersCustomersToworkspaces = 'customers_customersToworkspaces',
  Description = 'description',
  Media = 'media',
  Name = 'name',
  ProductsProductsToworkspaces = 'products_productsToworkspaces',
  ProjectsProjectsToworkspaces = 'projects_projectsToworkspaces',
  ShopsShopsToworkspaces = 'shops_shopsToworkspaces',
  TasksTasksToworkspaces = 'tasks_tasksToworkspaces',
  UsersUsersToworkspaces = 'users_usersToworkspaces'
}

export type WorkspacesOrderByRelevanceInput = {
  fields: Array<WorkspacesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type WorkspacesOrderByWithAggregationInput = {
  _avg?: InputMaybe<WorkspacesAvgOrderByAggregateInput>;
  _count?: InputMaybe<WorkspacesCountOrderByAggregateInput>;
  _max?: InputMaybe<WorkspacesMaxOrderByAggregateInput>;
  _min?: InputMaybe<WorkspacesMinOrderByAggregateInput>;
  _sum?: InputMaybe<WorkspacesSumOrderByAggregateInput>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsToworkspaces?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToworkspaces?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_productsToworkspaces?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToworkspaces?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  shops_shopsToworkspaces?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tasks_tasksToworkspaces?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  users_usersToworkspaces?: InputMaybe<SortOrder>;
};

export type WorkspacesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<WorkspacesOrderByRelevanceInput>;
  author?: InputMaybe<SortOrder>;
  brands?: InputMaybe<SortOrder>;
  brands_brandsToworkspaces?: InputMaybe<SortOrder>;
  categories?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  customers_customersToworkspaces?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isPublic?: InputMaybe<SortOrder>;
  media?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  products_productsToworkspaces?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  projects_projectsToworkspaces?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  shops_shopsToworkspaces?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  tasks_tasksToworkspaces?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
  users_usersToworkspaces?: InputMaybe<SortOrder>;
};

export enum WorkspacesScalarFieldEnum {
  Author = 'author',
  Brands = 'brands',
  BrandsBrandsToworkspaces = 'brands_brandsToworkspaces',
  Categories = 'categories',
  Category = 'category',
  Code = 'code',
  CreatedAt = 'created_at',
  Customers = 'customers',
  CustomersCustomersToworkspaces = 'customers_customersToworkspaces',
  Description = 'description',
  Id = 'id',
  IsPublic = 'isPublic',
  Media = 'media',
  Name = 'name',
  Products = 'products',
  ProductsProductsToworkspaces = 'products_productsToworkspaces',
  Projects = 'projects',
  ProjectsProjectsToworkspaces = 'projects_projectsToworkspaces',
  Shops = 'shops',
  ShopsShopsToworkspaces = 'shops_shopsToworkspaces',
  Tasks = 'tasks',
  TasksTasksToworkspaces = 'tasks_tasksToworkspaces',
  Users = 'users',
  UsersUsersToworkspaces = 'users_usersToworkspaces'
}

export type WorkspacesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<WorkspacesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<WorkspacesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<WorkspacesScalarWhereWithAggregatesInput>>;
  author?: InputMaybe<StringNullableWithAggregatesFilter>;
  brands?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  brands_brandsToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  categories?: InputMaybe<StringNullableWithAggregatesFilter>;
  category?: InputMaybe<IntNullableWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  customers?: InputMaybe<IntNullableWithAggregatesFilter>;
  customers_customersToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  isPublic?: InputMaybe<BoolNullableWithAggregatesFilter>;
  media?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  products?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  products_productsToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  projects?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  projects_projectsToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  shops?: InputMaybe<IntNullableWithAggregatesFilter>;
  shops_shopsToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  tasks?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  tasks_tasksToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
  users?: InputMaybe<IntNullableWithAggregatesFilter>;
  users_usersToworkspaces?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WorkspacesSumAggregate = {
  __typename?: 'WorkspacesSumAggregate';
  brands?: Maybe<Scalars['BigInt']>;
  category?: Maybe<Scalars['Int']>;
  customers?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['BigInt']>;
  products?: Maybe<Scalars['BigInt']>;
  projects?: Maybe<Scalars['BigInt']>;
  shops?: Maybe<Scalars['Int']>;
  tasks?: Maybe<Scalars['BigInt']>;
  users?: Maybe<Scalars['Int']>;
};

export type WorkspacesSumOrderByAggregateInput = {
  brands?: InputMaybe<SortOrder>;
  category?: InputMaybe<SortOrder>;
  customers?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  products?: InputMaybe<SortOrder>;
  projects?: InputMaybe<SortOrder>;
  shops?: InputMaybe<SortOrder>;
  tasks?: InputMaybe<SortOrder>;
  users?: InputMaybe<SortOrder>;
};

export type WorkspacesUpdateInput = {
  author?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  brands_brandsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  category?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  customers_customersToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products_productsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  projects_projectsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shops?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  shops_shopsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  tasks_tasksToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  users_usersToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkspacesUpdateManyMutationInput = {
  author?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  brands?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  brands_brandsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  category?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  customers_customersToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  isPublic?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  media?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  products_productsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  projects?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  projects_projectsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shops?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  shops_shopsToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tasks?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  tasks_tasksToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  users?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  users_usersToworkspaces?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkspacesWhereInput = {
  AND?: InputMaybe<Array<WorkspacesWhereInput>>;
  NOT?: InputMaybe<Array<WorkspacesWhereInput>>;
  OR?: InputMaybe<Array<WorkspacesWhereInput>>;
  author?: InputMaybe<StringNullableFilter>;
  brands?: InputMaybe<BigIntNullableFilter>;
  brands_brandsToworkspaces?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<StringNullableFilter>;
  category?: InputMaybe<IntNullableFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  customers?: InputMaybe<IntNullableFilter>;
  customers_customersToworkspaces?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  isPublic?: InputMaybe<BoolNullableFilter>;
  media?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<BigIntNullableFilter>;
  products_productsToworkspaces?: InputMaybe<StringNullableFilter>;
  projects?: InputMaybe<BigIntNullableFilter>;
  projects_projectsToworkspaces?: InputMaybe<StringNullableFilter>;
  shops?: InputMaybe<IntNullableFilter>;
  shops_shopsToworkspaces?: InputMaybe<StringNullableFilter>;
  tasks?: InputMaybe<BigIntNullableFilter>;
  tasks_tasksToworkspaces?: InputMaybe<StringNullableFilter>;
  users?: InputMaybe<IntNullableFilter>;
  users_usersToworkspaces?: InputMaybe<StringNullableFilter>;
};

export type WorkspacesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Zones = {
  __typename?: 'Zones';
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  scope?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['DateTime']>;
};

export type ZonesAvgAggregate = {
  __typename?: 'ZonesAvgAggregate';
  id?: Maybe<Scalars['Float']>;
};

export type ZonesAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ZonesCountAggregate = {
  __typename?: 'ZonesCountAggregate';
  _all: Scalars['Int'];
  code: Scalars['Int'];
  country: Scalars['Int'];
  created_at: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  scope: Scalars['Int'];
  type: Scalars['Int'];
  updated_at: Scalars['Int'];
};

export type ZonesCountOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  scope?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ZonesCreateInput = {
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['DateTime']>;
};

export type ZonesCreateManyInput = {
  code?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['BigInt']>;
  name?: InputMaybe<Scalars['String']>;
  scope?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updated_at?: InputMaybe<Scalars['DateTime']>;
};

export type ZonesGroupBy = {
  __typename?: 'ZonesGroupBy';
  _avg?: Maybe<ZonesAvgAggregate>;
  _count?: Maybe<ZonesCountAggregate>;
  _max?: Maybe<ZonesMaxAggregate>;
  _min?: Maybe<ZonesMinAggregate>;
  _sum?: Maybe<ZonesSumAggregate>;
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['BigInt'];
  name?: Maybe<Scalars['String']>;
  scope?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['DateTime']>;
};

export type ZonesMaxAggregate = {
  __typename?: 'ZonesMaxAggregate';
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  scope?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['DateTime']>;
};

export type ZonesMaxOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  scope?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ZonesMinAggregate = {
  __typename?: 'ZonesMinAggregate';
  code?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['BigInt']>;
  name?: Maybe<Scalars['String']>;
  scope?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['DateTime']>;
};

export type ZonesMinOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  scope?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export enum ZonesOrderByRelevanceFieldEnum {
  Code = 'code',
  Country = 'country',
  Name = 'name',
  Scope = 'scope',
  Type = 'type'
}

export type ZonesOrderByRelevanceInput = {
  fields: Array<ZonesOrderByRelevanceFieldEnum>;
  search: Scalars['String'];
  sort: SortOrder;
};

export type ZonesOrderByWithAggregationInput = {
  _avg?: InputMaybe<ZonesAvgOrderByAggregateInput>;
  _count?: InputMaybe<ZonesCountOrderByAggregateInput>;
  _max?: InputMaybe<ZonesMaxOrderByAggregateInput>;
  _min?: InputMaybe<ZonesMinOrderByAggregateInput>;
  _sum?: InputMaybe<ZonesSumOrderByAggregateInput>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  scope?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ZonesOrderByWithRelationAndSearchRelevanceInput = {
  _relevance?: InputMaybe<ZonesOrderByRelevanceInput>;
  code?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  scope?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export enum ZonesScalarFieldEnum {
  Code = 'code',
  Country = 'country',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Scope = 'scope',
  Type = 'type',
  UpdatedAt = 'updated_at'
}

export type ZonesScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ZonesScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ZonesScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ZonesScalarWhereWithAggregatesInput>>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  scope?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ZonesSumAggregate = {
  __typename?: 'ZonesSumAggregate';
  id?: Maybe<Scalars['BigInt']>;
};

export type ZonesSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
};

export type ZonesUpdateInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  scope?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ZonesUpdateManyMutationInput = {
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  scope?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ZonesWhereInput = {
  AND?: InputMaybe<Array<ZonesWhereInput>>;
  NOT?: InputMaybe<Array<ZonesWhereInput>>;
  OR?: InputMaybe<Array<ZonesWhereInput>>;
  code?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  name?: InputMaybe<StringNullableFilter>;
  scope?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ZonesWhereUniqueInput = {
  id?: InputMaybe<Scalars['BigInt']>;
};

export type Credit_MemosCredit_MemoIdCompoundUniqueInput = {
  credit_memo: Scalars['String'];
  id: Scalars['BigInt'];
};
