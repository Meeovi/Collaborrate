// <auto-generated />
using System;
using App.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201104113647_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("App.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 11, 4, 11, 36, 47, 54, DateTimeKind.Utc).AddTicks(8832),
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 11, 4, 11, 36, 47, 54, DateTimeKind.Utc).AddTicks(9517),
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("App.Models.TrafficData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Clicks")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Impressions")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrafficData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Clicks = 19,
                            CreatedAt = new DateTime(2020, 11, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Impressions = 257,
                            Position = 47
                        },
                        new
                        {
                            Id = 2,
                            Clicks = 32,
                            CreatedAt = new DateTime(2020, 11, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Impressions = 260,
                            Position = 41
                        },
                        new
                        {
                            Id = 3,
                            Clicks = 77,
                            CreatedAt = new DateTime(2020, 11, 1, 0, 0, 0, 0, DateTimeKind.Local),
                            Impressions = 530,
                            Position = 18
                        },
                        new
                        {
                            Id = 4,
                            Clicks = 87,
                            CreatedAt = new DateTime(2020, 10, 31, 0, 0, 0, 0, DateTimeKind.Local),
                            Impressions = 254,
                            Position = 47
                        },
                        new
                        {
                            Id = 5,
                            Clicks = 44,
                            CreatedAt = new DateTime(2020, 10, 30, 0, 0, 0, 0, DateTimeKind.Local),
                            Impressions = 329,
                            Position = 42
                        });
                });

            modelBuilder.Entity("App.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "https://mdbootstrap.com/img/new/avatars/2.jpg",
                            CreatedAt = new DateTime(2020, 11, 4, 11, 36, 47, 56, DateTimeKind.Utc).AddTicks(1534),
                            Email = "admin@mdbootstrap.com",
                            Name = "Admin",
                            Password = "10000.5GWwnkVL9+k4wxL7SGjQnA==.7Nr8Zf7AIzNTdxfb2D0Q6EAOZ7wtBRxbQ7qtvaRUrbk=",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "https://mdbootstrap.com/img/new/avatars/2.jpg",
                            CreatedAt = new DateTime(2020, 11, 4, 11, 36, 47, 69, DateTimeKind.Utc).AddTicks(8030),
                            Email = "user@mdbootstrap.com",
                            Name = "User",
                            Password = "10000.g4XaeJLRMkRu6+vyRb6W9Q==.r6jVCqWD4XN8wzIiHENkZsWNvDt11fE3MZOv92E/PNY=",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("App.Models.User", b =>
                {
                    b.HasOne("App.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
