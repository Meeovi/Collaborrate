generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:Whurashia1986@db.wyhrhklrokwbwfwkgyoi.supabase.co:5432/postgres"
}

model articles {
  id               Int     @id @default(autoincrement())
  name             String
  excerpt          String
  content          String?
  image            String?
  categories       String?
  customers        String?
  users            String?
  published        String?
  cust_id          Int     @default(autoincrement())
  isPublic         String?
  meta_description String?
  meta_name        String?
  meta_url         String?
  tags             String?
}

model cart_price_rules {
  id                                     Int       @id @default(autoincrement())
  rule                                   String?   @db.VarChar(255)
  description                            String?   @db.VarChar(255)
  active                                 Boolean?
  coupon                                 String?
  uses_per_customer                      String?
  priority                               String?
  start_date                             DateTime? @db.Date
  end_date                               DateTime? @db.Date
  status                                 String?
  website                                String?
  actions_apply                          String?
  actions_discount_amount                Decimal?  @db.Decimal
  actions_discard_subsequent_rules       Boolean?
  actions_max_qty_discount_is_applied_to Decimal?  @db.Decimal
  actions_discount_qty_step              Decimal?  @db.Decimal
  actions_apply_shipping_amount          Boolean?
}

model catalog_price_rule {
  id                               Int       @id @default(autoincrement())
  rule                             String?   @db.VarChar(255)
  description                      String?   @db.VarChar(255)
  active                           Boolean?
  customer_groups                  String?
  priority                         String?
  start_date                       DateTime? @db.Date
  end_date                         DateTime? @db.Date
  status                           String?
  website                          String?
  actions_apply                    String?
  actions_discount_amount          Decimal?  @db.Decimal
  actions_discard_subsequent_rules Boolean?
}

model categories {
  id               Int          @id @default(autoincrement())
  thumbnail        String?
  name             String       @db.VarChar(255)
  visibility       String?
  status           Boolean?
  websites         String?
  product          String?
  country          String?
  description      String?      @db.VarChar
  content          String?      @db.VarChar(255)
  image            String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
  meta_url         String?
  workspaces       workspaces[]
}

model cities {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  state       String? @db.VarChar
  country     String? @db.VarChar
  postalCode  String?
  image       String?
}

model comments {
  id            Int            @id @default(autoincrement())
  customer_name String         @db.VarChar(255)
  description   String?        @db.VarChar(255)
  image         String?
  response      String?
  published     DateTime?      @db.Timestamp(6)
  cust_id       Int            @default(autoincrement())
  customers     customers      @relation(fields: [cust_id], references: [id])
  mediamanager  mediamanager[]
  trainings     trainings[]
}

model countries {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String?
  image       String?
  region      String?
  trainings   trainings[]
}

model coupons {
  id                         BigInt    @id @default(autoincrement())
  name                       String
  excerpt                    String?
  discount                   String?
  image                      String?
  published                  DateTime? @default(now()) @db.Timestamp(6)
  expiration                 String?
  categories                 String?
  articles                   String?
  products                   String?
  customers                  String?
  users                      String?
  prod_id                    BigInt    @default(autoincrement())
  products_couponsToproducts products  @relation(fields: [prod_id], references: [id])
}

model credit_memos {
  credit_memo  String
  order_number Int       @default(autoincrement())
  created      DateTime? @default(now()) @db.Timestamp(6)
  bill_to_name String
  status       String?
  refunded     String?
  action       String?
  id           BigInt    @default(autoincrement())
  cust_id      Int       @default(autoincrement())
  prod_id      BigInt    @default(autoincrement())
  customers    customers @relation(fields: [cust_id], references: [id])
  products     products  @relation(fields: [prod_id], references: [id])

  @@id([credit_memo, id])
}

model currency_rates {
  import_service String   @id
  usd            Decimal? @db.Money
  id             BigInt   @unique @default(autoincrement())
}

model currency_symbols {
  symbol       String   @id
  use_standard Boolean?
  id           BigInt   @unique @default(autoincrement())
}

model customers {
  id                                       Int                      @id @default(autoincrement())
  thumbnail                                String?
  name_prefix                              String?
  first_name                               String
  middle_name                              String?
  last_name                                String
  email                                    String
  customer_group                           String?
  phone                                    String?
  zipcode                                  String?
  name_suffix                              String?
  websites                                 String?
  product                                  String?
  country                                  String?
  state                                    String?
  customer_since                           DateTime?                @default(now()) @db.Timestamptz(6)
  confirmed_email                          String?
  date_of_birth                            String?
  tax_vat_number                           String?
  gender                                   String?
  description                              String?
  short_description                        String?
  image                                    String?
  Address                                  String?
  address_two                              String?
  payment_type                             String?
  username                                 String?
  password                                 String?
  comments                                 comments[]
  credit_memos                             credit_memos[]
  customer_group_customer_groupTocustomers customer_group[]
  customer_payment                         customer_payment?
  emails                                   emails[]
  mediamanager                             mediamanager[]
  messages                                 messages[]
  newsletter_subscribers                   newsletter_subscribers[]
  orders                                   orders[]
  projects                                 projects[]
  quotes                                   quotes[]
  returns                                  returns[]
  workspaces                               workspaces[]
}

model gift_certificates {
  id             BigInt    @id @default(autoincrement())
  name           String
  excerpt        String?
  discount       String?
  image          String?
  published      DateTime? @default(now()) @db.Timestamp(6)
  special_offers String?
  rewards        String?
  coupons        String?
  expiration     String?
  categories     String?
  articles       String?
  products       String?
  customers      String?
  users          String?
  type           String?
}

model glossary {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  content   String?
  image     String?
  published DateTime? @db.Timestamp(6)
}

model invoices {
  invoice               Int       @default(autoincrement())
  order_number          BigInt    @default(autoincrement())
  invoice_date          DateTime? @default(now()) @db.Timestamp(6)
  bill_to_name          String
  billing_address       String?
  grand_total_base      String?
  grand_total_purchased String?
  status                String?
  shipping_address      String?
  customer_name         String?
  email                 String?
  customer_group        String?
  payment_method        String?
  shipping_information  String?
  subtotal              String?
  shipping_and_handling String?
  id                    BigInt    @id @default(autoincrement())
}

model newsletter_subscribers {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  customer_first_name String?
  customer_last_name  String?
  store               String?
  status              String?
  websites            String?
  created_at          DateTime? @default(now()) @db.Timestamp(6)
  cust_id             Int       @default(autoincrement())
  customers           customers @relation(fields: [cust_id], references: [id])
}

model orders {
  id                           Int            @id @default(autoincrement())
  purchase_point               Int?
  purchase_date                DateTime?      @db.Timestamp(6)
  bill_to_name                 String         @db.VarChar(255)
  ship_to_name                 String?        @db.VarChar(255)
  grand_total_base             Int?
  grand_total_purchased        Int?
  status                       Boolean?
  action                       Boolean?
  allocated_sources            String?
  braintree_transaction_source String?
  cust_id                      Int            @default(autoincrement())
  prod_id                      BigInt         @default(autoincrement())
  customers                    customers      @relation(fields: [cust_id], references: [id])
  products                     products       @relation(fields: [prod_id], references: [id])
  quotes                       quotes[]
  transactions                 transactions[]
}

model pages {
  id               BigInt    @id @default(autoincrement())
  enable_page      Boolean?
  title            String
  content_title    String?
  content          String?
  url_key          String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
  createdAt        DateTime? @default(now()) @db.Timestamptz(6)
}

model product_attribute {
  id                                BigInt   @id @default(autoincrement())
  default_label                     String?
  attribute_code                    String?
  filter_options                    String?
  use_search                        String?
  layered_navigation                Boolean?
  search_results_layered_navigation Boolean?
  position                          String?
  promo_rule_conditions             Boolean?
  allow_html_tags_storefront        Boolean?
  visible_catalog_pages_storefront  Boolean?
  used_product_listing              Boolean?
  used_sorting_product_listing      Boolean?
  prod_id                           BigInt   @default(autoincrement())
  attribute_class                   String?
  attribute_value                   String?
  column_options                    String?
  faceted_navigation                Boolean?
  isPublic                          String?
  meta_description                  String?
  meta_name                         Boolean?
  meta_url                          String?
  products                          products @relation(fields: [prod_id], references: [id])
}

model products {
  id                              BigInt              @id @default(autoincrement())
  sku                             BigInt              @unique @default(autoincrement())
  thumbnail                       String?
  name                            String
  types                           String?
  attributes                      String?
  price                           String?
  quantity_per_source             String?
  salable_quantity                String?
  visibility                      String?
  status                          Boolean?
  websites                        String?
  product                         String?
  tax_class                       String?
  stock_status                    String?
  weight                          String?
  categories                      String?
  created_at                      DateTime?           @default(now()) @db.Timestamptz(6)
  country                         String?
  size                            String?
  format                          String?
  height                          String?
  content                         String?
  short_description               String?
  image                           String?
  meta_title                      String?
  meta_keywords                   String?
  meta_description                String?
  meta_url                        String?
  file                            String?
  manufacture                     String?
  part_number                     String?
  contract                        String?
  cost_string                     String?
  manufacturer_part_number        String?
  related_product                 BigInt?
  tags                            String?
  brand                           String?
  occassions                      String?
  customer_type                   String?
  family                          String?
  zone                            String?
  variants                        String?
  products                        products?           @relation("productsToproducts_related_product", fields: [related_product], references: [id], onDelete: NoAction, onUpdate: NoAction)
  brands                          brands[]
  coupons                         coupons[]
  credit_memos                    credit_memos[]
  manufacturer                    manufacturer[]
  mediamanager                    mediamanager[]
  occassions_occassionsToproducts occassions[]
  orders                          orders[]
  product_attribute               product_attribute[]
  product_types                   product_types[]
  other_products                  products[]          @relation("productsToproducts_related_product")
  quotes                          quotes[]
  rating                          rating[]
  returns                         returns[]
  tax_rate                        tax_rate[]
  tax_rule                        tax_rule[]
  trainings                       trainings[]
  workspaces                      workspaces[]
}

model quotes {
  id                          BigInt    @id @default(autoincrement())
  name                        String
  grand_total                 String?
  created_at                  DateTime? @default(now()) @db.Timestamp(6)
  categories                  String?
  valid_until                 String?
  quote_stage                 String?
  customers                   String?
  cust_id                     Int       @default(autoincrement())
  prod_id                     BigInt    @default(autoincrement())
  order_id                    Int       @default(autoincrement())
  account                     String?
  approval_issues             String?
  approval_status             String?
  assigned_to                 String?
  billing_city                String?
  billing_country             String?
  billing_postal              String?
  billing_state               String?
  billing_street              String?
  contact                     String?
  currency                    String?
  discount                    String?
  invoice_status              String?
  line_item_discount          String?
  line_item_group_total       String?
  line_item_name              String?
  line_item_subtotal          String?
  line_item_tax               String?
  line_item_total             String?
  payment_terms               String?
  shipping                    String?
  shipping_city               String?
  shipping_country            String?
  shipping_postal             String?
  shipping_state              String?
  shipping_street             String?
  shipping_tax                String?
  subtotal                    String?
  tax                         String?
  total                       String?
  customers_customersToquotes customers @relation(fields: [cust_id], references: [id])
  orders                      orders    @relation(fields: [order_id], references: [id])
  products_productsToquotes   products  @relation(fields: [prod_id], references: [id])
}

model rating {
  id                 BigInt   @id @default(autoincrement())
  default_value      String?
  default_store_view String?
  rating_visibility  String?
  active             Boolean?
  sort_order         Decimal? @db.Decimal
  prod_id            BigInt   @default(autoincrement())
  products           products @relation(fields: [prod_id], references: [id])
}

model reports {
  id             BigInt    @id @default(autoincrement())
  customer       String?
  email          String?
  products       String?
  quantity       Decimal?  @db.Decimal
  subtotal       String?
  applied_coupon String?
  created        DateTime? @default(now()) @db.Timestamp(6)
  updated        DateTime? @default(now()) @db.Timestamp(6)
  ip_address     String?
}

model reviews {
  id         BigInt    @id @default(autoincrement())
  first_name String?
  last_name  String?
  content    String?
  websites   String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  shop_id    Int       @default(autoincrement())
  comment_id Int       @default(autoincrement())
}

model shipments {
  product       String?
  speed_grade   String?
  ship_date     DateTime? @default(now()) @db.Timestamp(6)
  carrier_name  String
  transit_time  String?
  tracking_url  String?
  image         String?
  id            BigInt    @id @default(autoincrement())
  client_id     String?
  client_secret String?
  country       String?
  website       String?
}

model shops {
  id                BigInt       @id @default(autoincrement())
  name              String
  description       String?
  image             String?
  website           String?
  products          String?
  articles          String?
  customers         String?
  comments          String?
  coupons           String?
  categories        String?
  polls             String?
  quotes            String?
  reviews           String?
  gift_certificates String?
  rating            String?
  tags              String?
  users             String?
  invoices          String?
  reports           String?
  reward_points     String?
  special_discounts String?
  statistics        String?
  stocks            String?
  country           String?
  physical_store    String?
  type              String?
  workspaces        String?
}

model special_discounts {
  id         BigInt    @id @default(autoincrement())
  name       String
  excerpt    String?
  image      String?
  published  DateTime? @default(now()) @db.Timestamp(6)
  rewards    String?
  coupons    String?
  expiration DateTime? @db.Date
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
  discount   String?
}

model states {
  id          BigInt      @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String?
  country     String?
  image       String?
  trainings   String?
}

model statistics {
  id             BigInt    @id @default(autoincrement())
  name           String    @db.VarChar(255)
  excerpt        String?   @db.VarChar(255)
  description    String?
  image          String?
  published      DateTime? @db.Timestamp(6)
  special_offers String?
  reports        String?
  rewards        String?
  coupons        String?
  expiration     DateTime? @db.Date
  categories     String?
  articles       String?
  products       String?
  customers      String?
  users          String?
}

model stocks {
  id          BigInt   @id @default(autoincrement())
  name        String   @db.VarChar(255)
  enabled     Boolean?
  description String?  @db.VarChar(255)
  website     String?
  sources     String?
}

model tags {
  id         BigInt  @id @default(autoincrement())
  name       String  @db.VarChar(255)
  excerpt    String? @db.VarChar(255)
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
}

model tax_rate {
  id                 BigInt   @id @default(autoincrement())
  tax_identifier     String
  zip_post_is_range  Boolean?
  postcode           String?
  state              String?
  country            String?
  rate_percent       String?
  default_store_view String?
  prod_id            BigInt   @default(autoincrement())
  products           products @relation(fields: [prod_id], references: [id])
}

model tax_rule {
  id       BigInt   @id @default(autoincrement())
  name     String   @db.VarChar(255)
  tax_rate String?
  prod_id  BigInt   @default(autoincrement())
  products products @relation(fields: [prod_id], references: [id])
}

model themes {
  id           BigInt   @id @default(autoincrement())
  title        String?
  parent_theme String?
  theme_path   String?
  action       String?
  website_id   BigInt   @default(autoincrement())
  websites     websites @relation(fields: [website_id], references: [id])
}

model transactions {
  id                    BigInt           @id @default(autoincrement())
  order_id              Int              @default(autoincrement())
  transaction_id        Int              @default(autoincrement())
  parent_transaction_id Int              @default(autoincrement())
  created               DateTime?        @default(now()) @db.Timestamp(6)
  payment_method        BigInt           @default(autoincrement())
  closed                String?
  orders                orders           @relation(fields: [order_id], references: [id])
  customer_payment      customer_payment @relation(fields: [payment_method], references: [id])
}

model url_rewrites {
  id            BigInt   @id @default(autoincrement())
  request_path  String?
  description   String?  @db.VarChar(255)
  redirect_type Boolean?
  target_path   String?
  store         String?
}

model users {
  id               BigInt         @id @default(autoincrement())
  username         String
  first_name       String
  last_name        String?
  email            String
  password         String
  interface_locale String?
  value            String?
  permissions      String?
  created_at       DateTime?      @default(now()) @db.Timestamptz(6)
  emails           String?
  mediamanager     String?
  messages         String?
  projects         String?
  workspaces       String?
}

model agreements {
  id           BigInt         @id @default(autoincrement())
  reference_id String
  created      DateTime?      @default(now()) @db.Timestamp(6)
  updated      DateTime?      @default(now()) @db.Timestamp(6)
  content      String?
  name         String?
  image        String?
  excerpt      String?
  type         String?
  user_id      String
  shop_id      String
  mediamanager String?
}

model collections {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String?
  description      String?
  image            String?
  product          String?
  meta_title       String?
  meta_keywords    String?
  meta_description String?
}

model customer_group {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  tax_class  String?
  cust_id    Int       @default(autoincrement())
  customers  customers @relation(fields: [cust_id], references: [id])
}

model emails {
  id         Int       @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamp(6)
  subject    String?
  content    String?
  cust_id    Int       @default(autoincrement())
  bcc        String?
  cc         String?
  from       String?
  media      String?
  staff_id   Int?
  customers  customers @relation(fields: [cust_id], references: [id])
  users      String?
}

model events {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  content    String?
  tickets    String?
  image      String?
  start      String?
  end        String?
  category   String?
  city       String?
  state      String?
  country    String?
  postalcode String?
}

model returns {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  validity      String?
  return_prefix String?
  prod_id       BigInt    @default(autoincrement())
  cust_id       Int       @default(autoincrement())
  customers     customers @relation(fields: [cust_id], references: [id])
  products      products  @relation(fields: [prod_id], references: [id])
}

model segments {
  id          BigInt    @id @unique @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  description String?
  website     String?
  status      String?
  apply_to    String?
  customers   String?
}

model websites {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  url        String?
  shop       String?
  store      String?
  image      String?
  category   String?
  themes     themes[]
}

model customer_payment {
  id           BigInt         @id @default(autoincrement())
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  cust_id      Int            @unique @default(autoincrement())
  payment_info String?
  provider     String?
  account_no   BigInt         @unique @default(autoincrement())
  expiry       BigInt?
  customers    customers      @relation(fields: [cust_id], references: [id])
  transactions transactions[]
}

model general_settings {
  id                  BigInt    @id @default(autoincrement())
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  title               String?
  tagline             String?
  url                 String?
  email               String?
  access_restrictions String?
  restriction_mode    String?
  startup_page        String?
  landing_page        String?
  http_response       String?
  store_email         String?
  store_contact       String?
  store_contact_two   String?
  customer_support    String?
}

model shop_settings {
  id                       BigInt    @id @default(autoincrement())
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  store_name               String?
  store_phone              String?
  store_hours              String?
  country                  String?
  region                   String?
  zipcode                  String?
  city                     String?
  address                  String?
  address_two              String?
  vat_number               String?
  allow_state              String?
  state_required_for       String?
  allow_countries          String?
  default_country          String?
  optional_zip             String?
  european_union_countries String?
  top_destinations         String?
  base_currency            String?
  default_currency         String?
  allowed_currency         String?
}

model fullfillments {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  name           String?
  shipping_zones String?
  company        String?
  address        String?
  address_two    String?
  city           String?
  state          String?
  zipcode        String?
  country        String?
  country_area   String?   @map("country area")
  phone          String?
  pickup         String?
  stock          String?
}

model permissions {
  id         BigInt    @id @unique @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  content    String?
  role       String?
  create     String?
  read       String?
  update     String?
  delete     String?
  users      String?
}

model warehouse {
  id          BigInt    @id @unique @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  description String?
  city        String?
  state       String?
  country     String?
  postal      String?
  status      String?
  image       String?
  products    String?
  category    String?
  isPublic    String?
}

model apitoken {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String    @unique
  token_type  String?
  description String?
  token       BigInt    @unique
}

model cases {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  case_number   Int?      @db.SmallInt
  state         String?
  type          String?
  subject       String?
  description   String?
  resolution    String?
  priority      String?
  status        String?
  account_name  String?
  assigned_to   String?
  date_modified DateTime? @default(now()) @db.Timestamptz(6)
}

model contracts {
  id                   BigInt    @id @default(autoincrement())
  contract_title       String?
  contract_value       String?
  start_date           String?
  end_date             String?
  renewal_reminder     String?
  customer_signed_date String?
  company_signed_date  String?
  status               String?
  contract_manager     String?
  account              String?
  contact              String?
  description          String?
  opportunity          String?
  contract_type        String?
  currency             String?
  line_items           String?
  total                String?
  discount             String?
  subtotal             String?
  shipping             String?
  shipping_tax         String?
  tax                  String?
  grand_total          String?
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
}

model internalization {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  region      String?
  description String?
  default     String?
  website     String?
}

model leads {
  id                      BigInt    @id @default(autoincrement())
  created_at              DateTime? @default(now()) @db.Timestamptz(6)
  Prefix                  String?
  first_name              String?
  last_name               String?
  department              String?
  account_name            String?
  address                 String?
  postalcode              String?
  city                    String?
  state                   String?
  country                 String?
  email                   String?
  description             String?
  fax                     String?
  website                 String?
  mobile                  String?
  job_title               String?
  alt_address             String?
  alt_postalcode          String?
  alt_city                String?
  alt_state               String?
  alt_country             String?
  office_phone            String?
  status                  String?
  status_description      String?
  opportunity_amount      String?
  campaign                String?
  lead_source             String?
  lead_source_description String?
  referred_by             String?
  customer_name           String?
}

model opportunities {
  id                  BigInt    @id @default(autoincrement())
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  name                String?
  amount              String?
  sales_stage         String?
  currency            String?
  probability         String?
  next_step           String?
  description         String?
  assigned_to         String?
  lead_source         String?
  campaign            String?
  type                String?
  account_name        String?
  expected_close_date String?
}

model projects {
  id                   BigInt       @id @default(autoincrement())
  name                 String?
  project_manager      String?
  start_date           String?
  end_date             String?
  resource             String?
  considerworkingdays  String?
  project_template     String?
  status               String?
  created_at           DateTime?    @default(now()) @db.Timestamptz(6)
  priority             String?
  assignee             String?
  doing                String?
  done                 String?
  section_rule         String?
  goal_name            String?
  goal_timeperiod      String?
  goal_privacy         String?
  goal_collaborators   String?
  goal_updatemethod    String?
  goal_progress_source String?
  goal_measurement     String?
  cust_id              Int?
  staff_id             Int?
  task_id              BigInt?
  ticket_id            BigInt?
  customers            customers?   @relation(fields: [cust_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                String?
  todoLists            todoLists?   @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ticketing            ticketing?   @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workspaces           workspaces[]
}

model providers {
  id               BigInt    @id @unique @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  client_id        String?
  client_secret    String?
  host_uri         String?
  redirect_url     String?
  redirect_url_app String?
  icon             String?
  name             String    @unique
  active           String?
}

model surveys {
  id                BigInt    @id @default(autoincrement())
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  name              String?
  assigned_to       String?
  status            String?
  description       String?
  question          String?
  answer            String?
  submit_text       String?
  satisfied_text    String?
  neither_text      String?
  dissatisfied_text String?
}

model targets {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  Prefix         String?
  first_name     String?
  last_name      String?
  department     String?
  account_name   String?
  address        String?
  postalcode     String?
  city           String?
  state          String?
  country        String?
  email          String?
  description    String?
  fax            String?
  website        String?
  mobile         String?
  job_title      String?
  alt_address    String?
  alt_postalcode String?
  alt_city       String?
  alt_state      String?
  alt_country    String?
  office_phone   String?
  customer_name  String?
  email_opt_out  String?
  donotcall      String?
}

model webhooks {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String    @unique
  url        String
  headers    String?
  create     String?
  retrieve   String?
  update     String?
  delete     String?
  publish    String?
  unpublish  String?
}

model meeting {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  subject     String?
  start_date  String?
  end_date    String?
  duration    String?
  status      String?
  related_to  String?
  reminders   String?
  content     String?
  assigned_to String?
  invitees    String?
  scheduling  String?
}

model ooto {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  login      String?
  start_date String?
  end_date   String?
  note       String?
  using_time String?
  location   String?
}

model accounts {
  id             BigInt    @id @default(autoincrement())
  created_at     DateTime? @default(now()) @db.Timestamptz(6)
  name           String?
  website        String?
  office_phone   String?
  fax            String?
  email          String?
  address        String?
  postalcode     String?
  city           String?
  state          String?
  country        String?
  assigned_to    String?
  alt_address    String?
  alt_postalcode String?
  alt_city       String?
  alt_state      String?
  alt_country    String?
  type           String?
  industry       String?
  employees      String?
  annual_revenue String?
  member_of      String?
  campaign       String?
}

model email_templates {
  id              BigInt    @id @default(autoincrement())
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  name            String?
  assigned_to     String?
  type            String?
  active          String?
  insert_variable String?
  subject         String?
  content         String?
  header          String?
  footer          String?
  width           String?
  height          String?
  media           String?
}

model importm {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  name        String?
  description String?
  file        String?
  url         String?
  image       String?
}

model integrations {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  content    String?
  media      String?
  location   String?
  category   String?
}

model knowledgebase {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  status        String?
  revision      String?
  content       String?
  resolution    String?
  author        String?
  approver      String?
  date_modified DateTime? @default(now()) @db.Timestamptz(6)
}

model payments {
  id               BigInt    @id @unique @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  client_id        String?
  client_secret    String?
  host_uri         String?
  redirect_url     String?
  redirect_url_app String?
  icon             String?
  name             String    @unique
  active           String?
  country          String?
}

model pdf_templates {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  assigned_to   String?
  type          String?
  active        String?
  page_size     String?
  orientation   String?
  content       String?
  header        String?
  footer        String?
  margin_left   String?
  margin_right  String?
  margin_top    String?
  margin_bottom String?
  margin_header String?
  margin_footer String?
}

model project_templates {
  id                    BigInt  @id @default(autoincrement())
  name                  String?
  status                String?
  consider_working_days String?
  priority              String?
  project_manager       String?
  resource              String?
  content               String?
}

model rewards {
  id         BigInt    @id @default(autoincrement())
  name       String
  slug       String?
  level      String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  coupons    String?
  expiration DateTime? @db.Date
  categories String?
  articles   String?
  products   String?
  customers  String?
  users      String?
}

model checklist {
  id               BigInt      @id @default(autoincrement())
  created_at       DateTime?   @default(now()) @db.Timestamptz(6)
  username         String?
  location         String?
  regional_manager String?
  manager          String?
  description      String?
  ticket           String?
  project          String?
  region           String?
  country          String?
  media            String?
  prod_id          String?
  trainings        trainings[]
}

model content_type {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  text          String?
  number        Decimal?  @db.Decimal
  json          Json?     @db.Json
  link          String?
  email         String?
  uid           String?   @db.Uuid
  date          DateTime? @db.Date
  time          DateTime? @db.Time(6)
  timestamp     DateTime? @db.Timestamptz(6)
  boolean       Boolean?
  rich_text     String?
  password      String?
  media         String?
  database_name String?
}

model plugins {
  id              BigInt    @id @default(autoincrement())
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  name            String?
  url             String?
  github_link     String?
  description     String?
  logo            String?
  screenshots     String?
  last_updated    DateTime? @default(now()) @db.Timestamptz(6)
  publisher_name  String?
  agree_terms     Boolean?
  publisher_email String?
}

model product_types {
  id               BigInt   @id @default(autoincrement())
  type_name        String?
  taxes            String?
  isShippable      String?
  meta_url         String?
  meta_description String?
  filter_options   String?
  product_type     String?
  prod_id          BigInt   @default(autoincrement())
  products         products @relation(fields: [prod_id], references: [id])
}

model ticketing {
  id                           BigInt     @id @default(autoincrement())
  created_at                   DateTime?  @default(now()) @db.Timestamptz(6)
  name                         String?
  location                     String?
  date                         String?
  severity                     String?
  team                         String?
  requester                    String?
  requester_email              String?
  content                      String?
  department                   String?
  media                        String?
  projects                     String?
  ticket_type                  String?
  comment                      String?
  products                     String?
  priority                     String?
  status                       String?
  resolution                   String?
  assigned_to                  String?
  date_modified                DateTime?  @default(now()) @db.Timestamptz(6)
  account_name                 String?
  level                        String?
  projects_projectsToticketing projects[]
}

model visits {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  location   String?
  username   String?
  reason     String?
  content    String?
  emergency  String?
  start_date String?
  end_date   String?
  task       String?
  meeting    String?
}

model channels {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  code             String?
  name             String?
  currency         String?
  default_lang     String?
  include_tax      String?
  default_zone     String?
  default_shipping String?
  client_id        String?
  client_secret    String?
}

model currencies {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  code       String?
  name       String?
  region     String?
}

model messages {
  id         Int       @id @default(autoincrement())
  from       String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  subject    String?
  content    String?
  sender     String?
  cust_id    Int       @default(autoincrement())
  media      String?
  staff_id   Int?
  customers  customers @relation(fields: [cust_id], references: [id])
  users      String?
}

model partners {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  address       String?
  city          String?
  state         String?
  country       String?
  isPublic      String?
  business_type String?
}

model settingscustomers {
  id                       BigInt    @id @default(autoincrement())
  created_at               DateTime? @default(now()) @db.Timestamptz(6)
  login_as_customer        String?
  share_customer_accounts  String?
  online_minutes_interval  String?
  customer_data_lifetime   String?
  email_after_registration String?
}

model settingsgeneral {
  id           BigInt    @id @default(autoincrement())
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  site_title   String?
  site_tagline String?
  site_website String?
  email        String?
  aws_s3       String?
  google_drive String?
}

model settingshop {
  id                              BigInt  @id @default(autoincrement())
  enable_product_assignment       String?
  product_videos                  String?
  seller_payouts                  String?
  admin_approval                  String?
  enable_review_system            String?
  customer_rate_vendor            String?
  multishipping                   String?
  vendor_transaction_id           String?
  enable_vendor_product_attribute String?
}

model settingsmarketing {
  id                     BigInt  @id @default(autoincrement())
  mail_port              String?
  recaptcha_api          String?
  adsense_api            String?
  sitemap_url            String?
  customer_data_lifetime String?
  mail_server            String?
}

model settingssales {
  id                             BigInt    @id @default(autoincrement())
  created_at                     DateTime? @default(now()) @db.Timestamptz(6)
  analytics_account_type         String?
  analytics_account_number       String?
  analytics_anonymizeip          String?
  analytics_content_experiments  String?
  adwords_conversionid           String?
  adwords_conversionlanguage     String?
  adwords_conversionformat       String?
  adwords_conversioncolor        String?
  adwords_conversionlabel        String?
  adwords_conversionvalue_type   String?
  adwords_sendorder              String?
  tag_manager_anonymizeip        String?
  tag_manager_contentexperiments String?
  tag_manager_containerid        String?
}

model tax_category {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  default    String?
}

model wishlists {
  id         BigInt       @id @default(autoincrement())
  created_at DateTime?    @default(now()) @db.Timestamptz(6)
  name       String?
  customers  String?
  visibility String?
  products   String?
  quantity   String?
  occassions occassions[]
}

model zones {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  scope      String?
  type       String?
  country    String?
  code       String?
}

model analytics {
  id               BigInt    @id @default(autoincrement())
  created_at       DateTime? @default(now()) @db.Timestamptz(6)
  name             String?
  country          String?
  share_data       String?
  website_name     String?
  client_id        String?
  client_secret    String?
  tracking_id      String?
  property_name    String?
  url              String?
  default_view     String?
  category         String?
  property_hit     String?
  tracking_code    String?
  data_collection  Boolean?
  data_retention   Boolean?
  search_analytics String?
}

model dashboards {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  name          String?
  client_id     String?
  client_secret String?
  privacy       String?
  category      String?
  url           String?
  media         String?
  task          String?
  reports       String?
  tasks         String?
  projects      String?
  tickets       String?
  customers     String?
  checklists    String?
  visits        String?
  users         String?
  products      String?
  articles      String?
  sales         String?
}

model brands {
  id           BigInt         @id @default(autoincrement())
  created_at   DateTime?      @default(now()) @db.Timestamptz(6)
  code         String?
  name         String?
  country      String?
  state        String?
  isPublic     String?
  city         String?
  product      BigInt?
  description  String?
  media        String?
  products     products?      @relation(fields: [product], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mediamanager mediamanager[]
  workspaces   workspaces[]
}

model manufacturer {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  code        String?
  name        String?
  country     String?
  state       String?
  isPublic    String?
  city        String?
  product     BigInt?
  description String?
  media       String?
  products    products? @relation(fields: [product], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model mediamanager {
  id                                  Int         @id @default(autoincrement())
  created_at                          DateTime?   @default(now()) @db.Timestamptz(6)
  name                                String?
  description                         String?
  media                               String?
  keywords                            String?
  tags                                String?
  brands                              BigInt?
  status                              String?
  expiration_date                     String?
  copyright                           String?
  dimensions                          String?
  author                              Int?
  content_type                        String?
  versions                            String?
  watermark_name                      String?
  watermark_description               String?
  watermark_media                     String?
  agreements                          Int?
  albums                              String?
  comment                             Int?
  workspace                           String?
  task_name                           BigInt?
  task_description                    String?
  task_type                           String?
  members                             Int?
  products                            BigInt?
  agreements_agreementsTomediamanager String?
  customers                           customers?  @relation(fields: [author], references: [id], onDelete: NoAction, onUpdate: NoAction)
  brands_brandsTomediamanager         brands?     @relation(fields: [brands], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments                            comments?   @relation(fields: [comment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                               String?
  products_mediamanagerToproducts     products?   @relation(fields: [products], references: [id], onDelete: NoAction, onUpdate: NoAction)
  todoLists                           todoLists?  @relation(fields: [task_name], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model occassions {
  id                              BigInt     @id @default(autoincrement())
  created_at                      DateTime?  @default(now()) @db.Timestamptz(6)
  code                            String?
  name                            String?
  category                        String?
  tags                            String?
  description                     String?
  products                        BigInt?
  wishlists                       BigInt?
  products_occassionsToproducts   products?  @relation(fields: [products], references: [id], onDelete: NoAction, onUpdate: NoAction)
  wishlists_occassionsTowishlists wishlists? @relation(fields: [wishlists], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model workspaces {
  id                              BigInt      @id @default(autoincrement())
  created_at                      DateTime?   @default(now()) @db.Timestamptz(6)
  code                            String?
  name                            String?
  description                     String?
  customers                       Int?
  users                           Int?
  products                        BigInt?
  tasks                           BigInt?
  brands                          BigInt?
  shops                           Int?
  category                        Int?
  isPublic                        Boolean?
  projects                        BigInt?
  author                          String?
  media                           String?
  brands_brandsToworkspaces       brands?     @relation(fields: [brands], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories                      categories? @relation(fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  customers_customersToworkspaces customers?  @relation(fields: [customers], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products_productsToworkspaces   products?   @relation(fields: [products], references: [id], onDelete: NoAction, onUpdate: NoAction)
  projects_projectsToworkspaces   projects?   @relation(fields: [projects], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shops_shopsToworkspaces         String?
  todoLists                       todoLists?  @relation(fields: [tasks], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_usersToworkspaces         String?
}

model customizations {
  id           Int       @id @default(autoincrement())
  created_at   DateTime? @default(now()) @db.Timestamptz(6)
  site_name    String?
  nav_link     String?
  notification String?
  banner       String?
  footer_link  String?
  announcement String?
  email        String?
  site_url     String?
  allow_signup String?
}

model SCHEMA {
  className    String   @id @db.VarChar(120)
  schema       Json?
  isParseClass Boolean?

  @@map("_SCHEMA")
}

model invitations {
  id                  BigInt    @id @default(autoincrement())
  created_at          DateTime? @default(now()) @db.Timestamptz(6)
  invoiceDate         DateTime? @default(now()) @db.Timestamptz(6)
  email               String?
  billingAddress      String?
  shippingAddress     String?
  orderNumber         String?
  grandTotalPurchased String?
  paymentMethod       String?
  status              String?
  media               String?
  content             String?
}

model trainings {
  id                           BigInt     @id @default(autoincrement())
  created_at                   DateTime?  @default(now()) @db.Timestamptz(6)
  name                         String?
  subject                      String?
  content                      String?
  media                        String?
  link                         String?
  steps                        String?
  updated                      DateTime?  @default(now()) @db.Timestamptz(6)
  analytics                    String?
  competency                   String?
  course                       String?
  grade                        String?
  school                       String?
  comment                      Int?
  address                      String?
  country                      Int?
  state                        Int?
  postal                       String?
  teacher                      String?
  student                      String?
  anncouncement                String?
  resource                     String?
  badges                       String?
  isPublic                     String?
  isCompleted                  String?
  speakers                     String?
  fieldTrips                   String?
  assignments                  String?
  assignmentsDueDate           String?
  origanlityReport             String?
  products                     BigInt?
  faqs                         String?
  languages                    String?
  checklists                   BigInt?
  city                         String?
  meetups                      String?
  lab                          String?
  digiboards                   String?
  checklist                    checklist? @relation(fields: [checklists], references: [id], onDelete: NoAction, onUpdate: NoAction)
  comments                     comments?  @relation(fields: [comment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  countries                    countries? @relation(fields: [country], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products_productsTotrainings products?  @relation(fields: [products], references: [id], onDelete: NoAction, onUpdate: NoAction)
  states                       String?
}

model Endofshift {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  content    String?
  login      String?
  mcms       String?
  next_shift String?
  projects   String?
  tickets    String?
  whid       String?
}

model deepdive {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  end_date   String?
  content    String?
  attendees  String?
  login      String?
  start_date String?
  whid       String?
}

model userRoles {
  id         BigInt    @id(map: "role_pkey") @default(autoincrement())
  role_name  String
  content    String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
}

model scheduler {
  id         BigInt    @id(map: "Scheduler_pkey") @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  endDate    String?
  level      String?
  login      String?
  notes      String?
  startDate  String?
  whid       String?
}

model todoLists {
  id                           BigInt         @id(map: "tasks_pkey") @default(autoincrement())
  created_at                   DateTime?      @default(now()) @db.Timestamptz(6)
  subject                      String?
  start_date                   String?
  due_date                     String?
  priority                     String?
  description                  String?
  status                       String?
  related_to                   String?
  contact                      String?
  assigned_to                  String?
  date_modified                DateTime?      @default(now()) @db.Timestamptz(6)
  task                         String?
  checklists                   String?
  visits                       String?
  projects                     String?
  tickets                      String?
  cases                        String?
  surveys                      String?
  articles                     String?
  endofshift                   String?
  name                         String?
  mediamanager                 mediamanager[]
  projects_projectsTotodoLists projects[]
  workspaces                   workspaces[]
}
