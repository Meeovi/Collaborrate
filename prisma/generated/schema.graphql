
type Query {
  articles(id: ID!): articles
  articless: [articles!]!
  cart_price_rules(id: ID!): cart_price_rules
  cart_price_ruless: [cart_price_rules!]!
  catalog_price_rule(id: ID!): catalog_price_rule
  catalog_price_rules: [catalog_price_rule!]!
  categories(id: ID!): categories
  categoriess: [categories!]!
  cities(id: ID!): cities
  citiess: [cities!]!
  comments(id: ID!): comments
  commentss: [comments!]!
  core_store(id: ID!): core_store
  core_stores: [core_store!]!
  countries(id: ID!): countries
  countriess: [countries!]!
  coupons(id: ID!): coupons
  couponss: [coupons!]!
  credit_memos(id: ID!): credit_memos
  credit_memoss: [credit_memos!]!
  currency_rates(import_service: ID!): currency_rates
  currency_ratess: [currency_rates!]!
  currency_symbols(symbol: ID!): currency_symbols
  currency_symbolss: [currency_symbols!]!
  customers(id: ID!): customers
  customerss: [customers!]!
  gift_certificates(id: ID!): gift_certificates
  gift_certificatess: [gift_certificates!]!
  glossary(id: ID!): glossary
  glossarys: [glossary!]!
  invoices(id: ID!): invoices
  invoicess: [invoices!]!
  newsletter_subscribers(id: ID!): newsletter_subscribers
  newsletter_subscriberss: [newsletter_subscribers!]!
  orders(id: ID!): orders
  orderss: [orders!]!
  pages(id: ID!): pages
  pagess: [pages!]!
  polls(id: ID!): polls
  pollss: [polls!]!
  product_attribute(id: ID!): product_attribute
  product_attributes: [product_attribute!]!
  product_attribute_set(id: ID!): product_attribute_set
  product_attribute_sets: [product_attribute_set!]!
  products(id: ID!): products
  productss: [products!]!
  quotes(id: ID!): quotes
  quotess: [quotes!]!
  rating(id: ID!): rating
  ratings: [rating!]!
  reports(id: ID!): reports
  reportss: [reports!]!
  reviews(id: ID!): reviews
  reviewss: [reviews!]!
  shipments(id: ID!): shipments
  shipmentss: [shipments!]!
  shops(id: ID!): shops
  shopss: [shops!]!
  source(id: ID!): source
  sources: [source!]!
  special_discounts(id: ID!): special_discounts
  special_discountss: [special_discounts!]!
  states(id: ID!): states
  statess: [states!]!
  statistics(id: ID!): statistics
  statisticss: [statistics!]!
  stocks(id: ID!): stocks
  stockss: [stocks!]!
  tags(id: ID!): tags
  tagss: [tags!]!
  tax_rate(id: ID!): tax_rate
  tax_rates: [tax_rate!]!
  tax_rule(id: ID!): tax_rule
  tax_rules: [tax_rule!]!
  themes(id: ID!): themes
  themess: [themes!]!
  transactions(id: ID!): transactions
  transactionss: [transactions!]!
  upload_file(id: ID!): upload_file
  upload_files: [upload_file!]!
  upload_file_morph(id: ID!): upload_file_morph
  upload_file_morphs: [upload_file_morph!]!
  url_rewrites(id: ID!): url_rewrites
  url_rewritess: [url_rewrites!]!
  users(id: ID!): users
  userss: [users!]!
  agreements(id: ID!): agreements
  agreementss: [agreements!]!
  collections(id: ID!): collections
  collectionss: [collections!]!
  customer_group(id: ID!): customer_group
  customer_groups: [customer_group!]!
  emails(id: ID!): emails
  emailss: [emails!]!
  events(id: ID!): events
  eventss: [events!]!
  returns(id: ID!): returns
  returnss: [returns!]!
  segments(id: ID!): segments
  segmentss: [segments!]!
  websites(id: ID!): websites
  websitess: [websites!]!
  customer_payment(id: ID!): customer_payment
  customer_payments: [customer_payment!]!
  general_settings(id: ID!): general_settings
  general_settingss: [general_settings!]!
  shop_settings(id: ID!): shop_settings
  shop_settingss: [shop_settings!]!
  fullfillments(id: ID!): fullfillments
  fullfillmentss: [fullfillments!]!
  permissions(id: ID!): permissions
  permissionss: [permissions!]!
  warehouse(id: ID!): warehouse
  warehouses: [warehouse!]!
  apitoken(id: ID!): apitoken
  apitokens: [apitoken!]!
  cases(id: ID!): cases
  casess: [cases!]!
  contracts(id: ID!): contracts
  contractss: [contracts!]!
  internalization(id: ID!): internalization
  internalizations: [internalization!]!
  leads(id: ID!): leads
  leadss: [leads!]!
  opportunities(id: ID!): opportunities
  opportunitiess: [opportunities!]!
  projects(id: ID!): projects
  projectss: [projects!]!
  providers(id: ID!): providers
  providerss: [providers!]!
  surveys(id: ID!): surveys
  surveyss: [surveys!]!
  targets(id: ID!): targets
  targetss: [targets!]!
  tasks(id: ID!): tasks
  taskss: [tasks!]!
  webhooks(id: ID!): webhooks
  webhookss: [webhooks!]!
  meeting(id: ID!): meeting
  meetings: [meeting!]!
  ooto(id: ID!): ooto
  ootos: [ooto!]!
  accounts(id: ID!): accounts
  accountss: [accounts!]!
  email_templates(id: ID!): email_templates
  email_templatess: [email_templates!]!
  importm(id: ID!): importm
  importms: [importm!]!
  integrations(id: ID!): integrations
  integrationss: [integrations!]!
  knowledgebase(id: ID!): knowledgebase
  knowledgebases: [knowledgebase!]!
  payments(id: ID!): payments
  paymentss: [payments!]!
  pdf_templates(id: ID!): pdf_templates
  pdf_templatess: [pdf_templates!]!
  project_templates(id: ID!): project_templates
  project_templatess: [project_templates!]!
  rewards(id: ID!): rewards
  rewardss: [rewards!]!
  checklist(id: ID!): checklist
  checklists: [checklist!]!
  content_type(id: ID!): content_type
  content_types: [content_type!]!
  plugins(id: ID!): plugins
  pluginss: [plugins!]!
  product_types(id: ID!): product_types
  product_typess: [product_types!]!
  ticketing(id: ID!): ticketing
  ticketings: [ticketing!]!
  visits(id: ID!): visits
  visitss: [visits!]!
  channels(id: ID!): channels
  channelss: [channels!]!
  currencies(id: ID!): currencies
  currenciess: [currencies!]!
  messages(id: ID!): messages
  messagess: [messages!]!
  partners(id: ID!): partners
  partnerss: [partners!]!
  settingscustomers(id: ID!): settingscustomers
  settingscustomerss: [settingscustomers!]!
  settingsgeneral(id: ID!): settingsgeneral
  settingsgenerals: [settingsgeneral!]!
  settingshop(id: ID!): settingshop
  settingshops: [settingshop!]!
  settingsmarketing(id: ID!): settingsmarketing
  settingsmarketings: [settingsmarketing!]!
  settingssales(id: ID!): settingssales
  settingssaless: [settingssales!]!
  tax_category(id: ID!): tax_category
  tax_categorys: [tax_category!]!
  wishlists(id: ID!): wishlists
  wishlistss: [wishlists!]!
  zones(id: ID!): zones
  zoness: [zones!]!
  analytics(id: ID!): analytics
  analyticss: [analytics!]!
  dashboards(id: ID!): dashboards
  dashboardss: [dashboards!]!
  brands(id: ID!): brands
  brandss: [brands!]!
  manufacturer(id: ID!): manufacturer
  manufacturers: [manufacturer!]!
  mediamanager(id: ID!): mediamanager
  mediamanagers: [mediamanager!]!
  occassions(id: ID!): occassions
  occassionss: [occassions!]!
  workspaces(id: ID!): workspaces
  workspacess: [workspaces!]!
  customizations(id: ID!): customizations
  customizationss: [customizations!]!
  roles(id: ID!): roles
  roless: [roles!]!
}

input articlesCreateInput {
  name: String!
  excerpt: String!
  content: String
  image: String
  categories: String
  customers: String
  users: String
  published: String
  cust_id: Int!
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  tags: String
}

input articlesUpdateInput {
  name: String
  excerpt: String
  content: String
  image: String
  categories: String
  customers: String
  users: String
  published: String
  cust_id: Int
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  tags: String
}

input cart_price_rulesCreateInput {
  rule: String
  description: String
  active: Boolean
  coupon: String
  uses_per_customer: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
  actions_max_qty_discount_is_applied_to: Float
  actions_discount_qty_step: Float
  actions_apply_shipping_amount: Boolean
}

input cart_price_rulesUpdateInput {
  rule: String
  description: String
  active: Boolean
  coupon: String
  uses_per_customer: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
  actions_max_qty_discount_is_applied_to: Float
  actions_discount_qty_step: Float
  actions_apply_shipping_amount: Boolean
}

input catalog_price_ruleCreateInput {
  rule: String
  description: String
  active: Boolean
  customer_groups: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
}

input catalog_price_ruleUpdateInput {
  rule: String
  description: String
  active: Boolean
  customer_groups: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
}

input categoriesCreateInput {
  thumbnail: String
  name: String!
  visibility: String
  status: Boolean
  websites: String
  product: String
  country: String
  description: String
  content: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  workspaces: [workspaces!]!
}

input categoriesUpdateInput {
  thumbnail: String
  name: String
  visibility: String
  status: Boolean
  websites: String
  product: String
  country: String
  description: String
  content: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  workspaces: [workspaces!]
}

input citiesCreateInput {
  name: String!
  description: String
  state: String
  country: String
  postalCode: String
  image: String
}

input citiesUpdateInput {
  name: String
  description: String
  state: String
  country: String
  postalCode: String
  image: String
}

input commentsCreateInput {
  customer_name: String!
  description: String
  image: String
  response: String
  published: DateTime
  customers: customers!
  mediamanager: [mediamanager!]!
}

input commentsUpdateInput {
  customer_name: String
  description: String
  image: String
  response: String
  published: DateTime
  customers: customers
  mediamanager: [mediamanager!]
}

input core_storeCreateInput {
  key: String
  value: String
  type: String
  environment: String
  tag: String
}

input core_storeUpdateInput {
  key: String
  value: String
  type: String
  environment: String
  tag: String
}

input countriesCreateInput {
  name: String!
  description: String
  image: String
  region: String
}

input countriesUpdateInput {
  name: String
  description: String
  image: String
  region: String
}

input couponsCreateInput {
  name: String!
  excerpt: String
  discount: String
  image: String
  published: DateTime
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  products_couponsToproducts: products!
}

input couponsUpdateInput {
  name: String
  excerpt: String
  discount: String
  image: String
  published: DateTime
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  products_couponsToproducts: products
}

input credit_memosCreateInput {
  credit_memo: String!
  order_number: Int!
  created: DateTime
  bill_to_name: String!
  status: String
  refunded: String
  action: String
  id: Int!
  customers: customers!
  products: products!
}

input credit_memosUpdateInput {
  credit_memo: String
  order_number: Int
  created: DateTime
  bill_to_name: String
  status: String
  refunded: String
  action: String
  id: Int
  customers: customers
  products: products
}

input currency_ratesCreateInput {
  usd: Float
}

input currency_ratesUpdateInput {
  usd: Float
}

input currency_symbolsCreateInput {
  use_standard: Boolean
}

input currency_symbolsUpdateInput {
  use_standard: Boolean
}

input customersCreateInput {
  thumbnail: String
  name_prefix: String
  first_name: String!
  middle_name: String
  last_name: String!
  email: String!
  customer_group: String
  phone: String
  zipcode: String
  name_suffix: String
  websites: String
  product: String
  country: String
  state: String
  customer_since: DateTime
  confirmed_email: String
  date_of_birth: String
  tax_vat_number: String
  gender: String
  description: String
  short_description: String
  image: String
  Address: String
  address_two: String
  payment_type: String
  username: String
  password: String
  comments: [comments!]!
  credit_memos: [credit_memos!]!
  customer_group_customer_groupTocustomers: [customer_group!]!
  customer_payment: customer_payment
  emails: [emails!]!
  mediamanager: [mediamanager!]!
  messages: [messages!]!
  newsletter_subscribers: [newsletter_subscribers!]!
  orders: [orders!]!
  projects: [projects!]!
  quotes: [quotes!]!
  returns: [returns!]!
  workspaces: [workspaces!]!
}

input customersUpdateInput {
  thumbnail: String
  name_prefix: String
  first_name: String
  middle_name: String
  last_name: String
  email: String
  customer_group: String
  phone: String
  zipcode: String
  name_suffix: String
  websites: String
  product: String
  country: String
  state: String
  customer_since: DateTime
  confirmed_email: String
  date_of_birth: String
  tax_vat_number: String
  gender: String
  description: String
  short_description: String
  image: String
  Address: String
  address_two: String
  payment_type: String
  username: String
  password: String
  comments: [comments!]
  credit_memos: [credit_memos!]
  customer_group_customer_groupTocustomers: [customer_group!]
  customer_payment: customer_payment
  emails: [emails!]
  mediamanager: [mediamanager!]
  messages: [messages!]
  newsletter_subscribers: [newsletter_subscribers!]
  orders: [orders!]
  projects: [projects!]
  quotes: [quotes!]
  returns: [returns!]
  workspaces: [workspaces!]
}

input gift_certificatesCreateInput {
  name: String!
  excerpt: String
  discount: String
  image: String
  published: DateTime
  special_offers: String
  rewards: String
  coupons: String
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  type: String
}

input gift_certificatesUpdateInput {
  name: String
  excerpt: String
  discount: String
  image: String
  published: DateTime
  special_offers: String
  rewards: String
  coupons: String
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  type: String
}

input glossaryCreateInput {
  name: String!
  content: String
  image: String
  published: DateTime
}

input glossaryUpdateInput {
  name: String
  content: String
  image: String
  published: DateTime
}

input invoicesCreateInput {
  invoice: Int!
  order_number: Int!
  invoice_date: DateTime
  bill_to_name: String!
  billing_address: String
  grand_total_base: String
  grand_total_purchased: String
  status: String
  shipping_address: String
  customer_name: String
  email: String
  customer_group: String
  payment_method: String
  shipping_information: String
  subtotal: String
  shipping_and_handling: String
}

input invoicesUpdateInput {
  invoice: Int
  order_number: Int
  invoice_date: DateTime
  bill_to_name: String
  billing_address: String
  grand_total_base: String
  grand_total_purchased: String
  status: String
  shipping_address: String
  customer_name: String
  email: String
  customer_group: String
  payment_method: String
  shipping_information: String
  subtotal: String
  shipping_and_handling: String
}

input newsletter_subscribersCreateInput {
  email: String!
  customer_first_name: String
  customer_last_name: String
  store: String
  status: String
  websites: String
  created_at: DateTime
  customers: customers!
}

input newsletter_subscribersUpdateInput {
  email: String
  customer_first_name: String
  customer_last_name: String
  store: String
  status: String
  websites: String
  created_at: DateTime
  customers: customers
}

input ordersCreateInput {
  purchase_point: Int
  purchase_date: DateTime
  bill_to_name: String!
  ship_to_name: String
  grand_total_base: Int
  grand_total_purchased: Int
  status: Boolean
  action: Boolean
  allocated_sources: String
  braintree_transaction_source: String
  customers: customers!
  products: products!
  quotes: [quotes!]!
  transactions: [transactions!]!
}

input ordersUpdateInput {
  purchase_point: Int
  purchase_date: DateTime
  bill_to_name: String
  ship_to_name: String
  grand_total_base: Int
  grand_total_purchased: Int
  status: Boolean
  action: Boolean
  allocated_sources: String
  braintree_transaction_source: String
  customers: customers
  products: products
  quotes: [quotes!]
  transactions: [transactions!]
}

input pagesCreateInput {
  enable_page: Boolean
  title: String!
  content_title: String
  content: String
  url_key: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

input pagesUpdateInput {
  enable_page: Boolean
  title: String
  content_title: String
  content: String
  url_key: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

input pollsCreateInput {
  name: String!
  excerpt: String
  description: String
  image: String
  published: DateTime
  question: String
  response: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input pollsUpdateInput {
  name: String
  excerpt: String
  description: String
  image: String
  published: DateTime
  question: String
  response: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input product_attributeCreateInput {
  default_label: String
  attribute_code: String
  filter_options: String
  use_search: String
  layered_navigation: Boolean
  search_results_layered_navigation: Boolean
  position: String
  promo_rule_conditions: Boolean
  allow_html_tags_storefront: Boolean
  visible_catalog_pages_storefront: Boolean
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  attribute_class: String
  attribute_value: String
  column_options: String
  faceted_navigation: Boolean
  isPublic: String
  meta_description: String
  meta_name: Boolean
  meta_url: String
  products: products!
  product_attribute_set: [product_attribute_set!]!
}

input product_attributeUpdateInput {
  default_label: String
  attribute_code: String
  filter_options: String
  use_search: String
  layered_navigation: Boolean
  search_results_layered_navigation: Boolean
  position: String
  promo_rule_conditions: Boolean
  allow_html_tags_storefront: Boolean
  visible_catalog_pages_storefront: Boolean
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  attribute_class: String
  attribute_value: String
  column_options: String
  faceted_navigation: Boolean
  isPublic: String
  meta_description: String
  meta_name: Boolean
  meta_url: String
  products: products
  product_attribute_set: [product_attribute_set!]
}

input product_attribute_setCreateInput {
  name: String!
  based_on: String
  product_attribute: product_attribute!
}

input product_attribute_setUpdateInput {
  name: String
  based_on: String
  product_attribute: product_attribute
}

input productsCreateInput {
  sku: Int!
  thumbnail: String
  name: String!
  types: String
  attributes: String
  price: String
  quantity_per_source: String
  salable_quantity: String
  visibility: String
  status: Boolean
  websites: String
  product: String
  tax_class: String
  stock_status: String
  weight: String
  categories: String
  created_at: DateTime
  country: String
  size: String
  format: String
  height: String
  content: String
  short_description: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  file: String
  manufacture: String
  part_number: String
  contract: String
  cost_string: String
  manufacturer_part_number: String
  tags: String
  brand: String
  occassions: String
  customer_type: String
  family: String
  zone: String
  variants: String
  products: products
  brands: [brands!]!
  coupons: [coupons!]!
  credit_memos: [credit_memos!]!
  manufacturer: [manufacturer!]!
  mediamanager: [mediamanager!]!
  occassions_occassionsToproducts: [occassions!]!
  orders: [orders!]!
  product_attribute: [product_attribute!]!
  product_types: [product_types!]!
  other_products: [products!]!
  quotes: [quotes!]!
  rating: [rating!]!
  returns: [returns!]!
  tax_rate: [tax_rate!]!
  tax_rule: [tax_rule!]!
  workspaces: [workspaces!]!
}

input productsUpdateInput {
  sku: Int
  thumbnail: String
  name: String
  types: String
  attributes: String
  price: String
  quantity_per_source: String
  salable_quantity: String
  visibility: String
  status: Boolean
  websites: String
  product: String
  tax_class: String
  stock_status: String
  weight: String
  categories: String
  created_at: DateTime
  country: String
  size: String
  format: String
  height: String
  content: String
  short_description: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  file: String
  manufacture: String
  part_number: String
  contract: String
  cost_string: String
  manufacturer_part_number: String
  tags: String
  brand: String
  occassions: String
  customer_type: String
  family: String
  zone: String
  variants: String
  products: products
  brands: [brands!]
  coupons: [coupons!]
  credit_memos: [credit_memos!]
  manufacturer: [manufacturer!]
  mediamanager: [mediamanager!]
  occassions_occassionsToproducts: [occassions!]
  orders: [orders!]
  product_attribute: [product_attribute!]
  product_types: [product_types!]
  other_products: [products!]
  quotes: [quotes!]
  rating: [rating!]
  returns: [returns!]
  tax_rate: [tax_rate!]
  tax_rule: [tax_rule!]
  workspaces: [workspaces!]
}

input quotesCreateInput {
  name: String!
  grand_total: String
  created_at: DateTime
  categories: String
  valid_until: String
  quote_stage: String
  customers: String
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  contact: String
  currency: String
  discount: String
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  payment_terms: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  customers_customersToquotes: customers!
  orders: orders!
  products_productsToquotes: products!
}

input quotesUpdateInput {
  name: String
  grand_total: String
  created_at: DateTime
  categories: String
  valid_until: String
  quote_stage: String
  customers: String
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  contact: String
  currency: String
  discount: String
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  payment_terms: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  customers_customersToquotes: customers
  orders: orders
  products_productsToquotes: products
}

input ratingCreateInput {
  default_value: String
  default_store_view: String
  rating_visibility: String
  active: Boolean
  sort_order: Float
  products: products!
}

input ratingUpdateInput {
  default_value: String
  default_store_view: String
  rating_visibility: String
  active: Boolean
  sort_order: Float
  products: products
}

input reportsCreateInput {
  customer: String
  email: String
  products: String
  quantity: Float
  subtotal: String
  applied_coupon: String
  created: DateTime
  updated: DateTime
  ip_address: String
}

input reportsUpdateInput {
  customer: String
  email: String
  products: String
  quantity: Float
  subtotal: String
  applied_coupon: String
  created: DateTime
  updated: DateTime
  ip_address: String
}

input reviewsCreateInput {
  first_name: String
  last_name: String
  content: String
  websites: String
  created_at: DateTime
  shop_id: Int!
  comment_id: Int!
}

input reviewsUpdateInput {
  first_name: String
  last_name: String
  content: String
  websites: String
  created_at: DateTime
  shop_id: Int
  comment_id: Int
}

input shipmentsCreateInput {
  product: String
  speed_grade: String
  ship_date: DateTime
  carrier_name: String!
  transit_time: String
  tracking_url: String
  image: String
  client_id: String
  client_secret: String
  country: String
  website: String
}

input shipmentsUpdateInput {
  product: String
  speed_grade: String
  ship_date: DateTime
  carrier_name: String
  transit_time: String
  tracking_url: String
  image: String
  client_id: String
  client_secret: String
  country: String
  website: String
}

input shopsCreateInput {
  name: String!
  description: String
  image: String
  website: String
  products: String
  articles: String
  customers: String
  comments: String
  coupons: String
  categories: String
  polls: String
  quotes: String
  reviews: String
  gift_certificates: String
  rating: String
  tags: String
  users: String
  invoices: String
  reports: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  country: String
  physical_store: String
  type: String
  workspaces: [workspaces!]!
}

input shopsUpdateInput {
  name: String
  description: String
  image: String
  website: String
  products: String
  articles: String
  customers: String
  comments: String
  coupons: String
  categories: String
  polls: String
  quotes: String
  reviews: String
  gift_certificates: String
  rating: String
  tags: String
  users: String
  invoices: String
  reports: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  country: String
  physical_store: String
  type: String
  workspaces: [workspaces!]
}

input sourceCreateInput {
  name: String!
  code: Int!
  enabled: Boolean
  description: String
  latitude: String
  longitude: String
  pickup_location: Boolean
  contact_name: String
  email: String
  phone: Float
  fax: Float
  country: String
  state: String
  city: String
  street: String
  postcode: Float
}

input sourceUpdateInput {
  name: String
  code: Int
  enabled: Boolean
  description: String
  latitude: String
  longitude: String
  pickup_location: Boolean
  contact_name: String
  email: String
  phone: Float
  fax: Float
  country: String
  state: String
  city: String
  street: String
  postcode: Float
}

input special_discountsCreateInput {
  name: String!
  excerpt: String
  discount: Float
  image: String
  published: DateTime
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input special_discountsUpdateInput {
  name: String
  excerpt: String
  discount: Float
  image: String
  published: DateTime
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input statesCreateInput {
  name: String!
  description: String
  country: String
  image: String
}

input statesUpdateInput {
  name: String
  description: String
  country: String
  image: String
}

input statisticsCreateInput {
  name: String!
  excerpt: String
  description: String
  image: String
  published: DateTime
  special_offers: String
  reports: String
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input statisticsUpdateInput {
  name: String
  excerpt: String
  description: String
  image: String
  published: DateTime
  special_offers: String
  reports: String
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input stocksCreateInput {
  name: String!
  enabled: Boolean
  description: String
  website: String
  sources: String
}

input stocksUpdateInput {
  name: String
  enabled: Boolean
  description: String
  website: String
  sources: String
}

input tagsCreateInput {
  name: String!
  excerpt: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input tagsUpdateInput {
  name: String
  excerpt: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input tax_rateCreateInput {
  tax_identifier: String!
  zip_post_is_range: Boolean
  postcode: String
  state: String
  country: String
  rate_percent: String
  default_store_view: String
  products: products!
}

input tax_rateUpdateInput {
  tax_identifier: String
  zip_post_is_range: Boolean
  postcode: String
  state: String
  country: String
  rate_percent: String
  default_store_view: String
  products: products
}

input tax_ruleCreateInput {
  name: String!
  tax_rate: String
  products: products!
}

input tax_ruleUpdateInput {
  name: String
  tax_rate: String
  products: products
}

input themesCreateInput {
  title: String
  parent_theme: String
  theme_path: String
  action: String
  websites: websites!
}

input themesUpdateInput {
  title: String
  parent_theme: String
  theme_path: String
  action: String
  websites: websites
}

input transactionsCreateInput {
  transaction_id: Int!
  parent_transaction_id: Int!
  created: DateTime
  closed: String
  orders: orders!
  customer_payment: customer_payment!
}

input transactionsUpdateInput {
  transaction_id: Int
  parent_transaction_id: Int
  created: DateTime
  closed: String
  orders: orders
  customer_payment: customer_payment
}

input upload_fileCreateInput {
  name: String!
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: String
  hash: String!
  ext: String
  mime: String!
  size: Float!
  url: String!
  previewUrl: String
  provider: String!
  provider_metadata: String
  created_by: Int
  updated_by: Int
  created_at: DateTime
  updated_at: DateTime
}

input upload_fileUpdateInput {
  name: String
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: String
  hash: String
  ext: String
  mime: String
  size: Float
  url: String
  previewUrl: String
  provider: String
  provider_metadata: String
  created_by: Int
  updated_by: Int
  created_at: DateTime
  updated_at: DateTime
}

input upload_file_morphCreateInput {
  upload_file_id: Int
  related_id: Int
  related_type: String
  field: String
  order: Int
}

input upload_file_morphUpdateInput {
  upload_file_id: Int
  related_id: Int
  related_type: String
  field: String
  order: Int
}

input url_rewritesCreateInput {
  request_path: String
  description: String
  redirect_type: Boolean
  target_path: String
  store: String
}

input url_rewritesUpdateInput {
  request_path: String
  description: String
  redirect_type: Boolean
  target_path: String
  store: String
}

input usersCreateInput {
  username: String!
  first_name: String!
  last_name: String
  email: String!
  password: String!
  interface_locale: String
  value: String
  permissions: String
  created_at: DateTime
  emails: [emails!]!
  mediamanager: [mediamanager!]!
  messages: [messages!]!
  projects: [projects!]!
  workspaces: [workspaces!]!
}

input usersUpdateInput {
  username: String
  first_name: String
  last_name: String
  email: String
  password: String
  interface_locale: String
  value: String
  permissions: String
  created_at: DateTime
  emails: [emails!]
  mediamanager: [mediamanager!]
  messages: [messages!]
  projects: [projects!]
  workspaces: [workspaces!]
}

input agreementsCreateInput {
  reference_id: Int!
  created: DateTime
  updated: DateTime
  content: String
  name: String
  image: String
  excerpt: String
  type: String
  user_id: Int!
  shop_id: Int!
  mediamanager: [mediamanager!]!
}

input agreementsUpdateInput {
  reference_id: Int
  created: DateTime
  updated: DateTime
  content: String
  name: String
  image: String
  excerpt: String
  type: String
  user_id: Int
  shop_id: Int
  mediamanager: [mediamanager!]
}

input collectionsCreateInput {
  created_at: DateTime
  name: String
  description: String
  image: String
  product: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

input collectionsUpdateInput {
  created_at: DateTime
  name: String
  description: String
  image: String
  product: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

input customer_groupCreateInput {
  created_at: DateTime
  name: String
  tax_class: String
  customers: customers!
}

input customer_groupUpdateInput {
  created_at: DateTime
  name: String
  tax_class: String
  customers: customers
}

input emailsCreateInput {
  created_at: DateTime
  subject: String
  content: String
  bcc: String
  cc: String
  from: String
  media: String
  customers: customers!
  users: users
}

input emailsUpdateInput {
  created_at: DateTime
  subject: String
  content: String
  bcc: String
  cc: String
  from: String
  media: String
  customers: customers
  users: users
}

input eventsCreateInput {
  created_at: DateTime
  name: String
  content: String
  tickets: String
  image: String
  start: String
  end: String
  category: String
  city: String
  state: String
  country: String
  postalcode: String
}

input eventsUpdateInput {
  created_at: DateTime
  name: String
  content: String
  tickets: String
  image: String
  start: String
  end: String
  category: String
  city: String
  state: String
  country: String
  postalcode: String
}

input returnsCreateInput {
  created_at: DateTime
  name: String
  validity: String
  return_prefix: String
  customers: customers!
  products: products!
}

input returnsUpdateInput {
  created_at: DateTime
  name: String
  validity: String
  return_prefix: String
  customers: customers
  products: products
}

input segmentsCreateInput {
  created_at: DateTime
  name: String
  description: String
  website: String
  status: String
  apply_to: String
  customers: String
}

input segmentsUpdateInput {
  created_at: DateTime
  name: String
  description: String
  website: String
  status: String
  apply_to: String
  customers: String
}

input websitesCreateInput {
  created_at: DateTime
  name: String
  url: String
  shop: String
  store: String
  themes: [themes!]!
}

input websitesUpdateInput {
  created_at: DateTime
  name: String
  url: String
  shop: String
  store: String
  themes: [themes!]
}

input customer_paymentCreateInput {
  created_at: DateTime
  payment_info: String
  provider: String
  account_no: Int!
  expiry: Int
  customers: customers!
  transactions: [transactions!]!
}

input customer_paymentUpdateInput {
  created_at: DateTime
  payment_info: String
  provider: String
  account_no: Int
  expiry: Int
  customers: customers
  transactions: [transactions!]
}

input general_settingsCreateInput {
  created_at: DateTime
  title: String
  tagline: String
  url: String
  email: String
  access_restrictions: String
  restriction_mode: String
  startup_page: String
  landing_page: String
  http_response: String
  store_email: String
  store_contact: String
  store_contact_two: String
  customer_support: String
}

input general_settingsUpdateInput {
  created_at: DateTime
  title: String
  tagline: String
  url: String
  email: String
  access_restrictions: String
  restriction_mode: String
  startup_page: String
  landing_page: String
  http_response: String
  store_email: String
  store_contact: String
  store_contact_two: String
  customer_support: String
}

input shop_settingsCreateInput {
  created_at: DateTime
  store_name: String
  store_phone: String
  store_hours: String
  country: String
  region: String
  zipcode: String
  city: String
  address: String
  address_two: String
  vat_number: String
  allow_state: String
  state_required_for: String
  allow_countries: String
  default_country: String
  optional_zip: String
  european_union_countries: String
  top_destinations: String
  base_currency: String
  default_currency: String
  allowed_currency: String
}

input shop_settingsUpdateInput {
  created_at: DateTime
  store_name: String
  store_phone: String
  store_hours: String
  country: String
  region: String
  zipcode: String
  city: String
  address: String
  address_two: String
  vat_number: String
  allow_state: String
  state_required_for: String
  allow_countries: String
  default_country: String
  optional_zip: String
  european_union_countries: String
  top_destinations: String
  base_currency: String
  default_currency: String
  allowed_currency: String
}

input fullfillmentsCreateInput {
  created_at: DateTime
  name: String
  shipping_zones: String
  company: String
  address: String
  address_two: String
  city: String
  state: String
  zipcode: String
  country: String
  country_area: String
  phone: String
  pickup: String
  stock: String
}

input fullfillmentsUpdateInput {
  created_at: DateTime
  name: String
  shipping_zones: String
  company: String
  address: String
  address_two: String
  city: String
  state: String
  zipcode: String
  country: String
  country_area: String
  phone: String
  pickup: String
  stock: String
}

input permissionsCreateInput {
  created_at: DateTime
  name: String
  content: String
  role: String
  create: String
  read: String
  update: String
  delete: String
  users: String
}

input permissionsUpdateInput {
  created_at: DateTime
  name: String
  content: String
  role: String
  create: String
  read: String
  update: String
  delete: String
  users: String
}

input warehouseCreateInput {
  created_at: DateTime
  name: String
  description: String
  city: String
  state: String
  country: String
  postal: String
  status: String
  image: String
  products: String
  category: String
  isPublic: String
}

input warehouseUpdateInput {
  created_at: DateTime
  name: String
  description: String
  city: String
  state: String
  country: String
  postal: String
  status: String
  image: String
  products: String
  category: String
  isPublic: String
}

input apitokenCreateInput {
  created_at: DateTime
  name: String!
  token_type: String
  description: String
  token: Int!
}

input apitokenUpdateInput {
  created_at: DateTime
  name: String
  token_type: String
  description: String
  token: Int
}

input casesCreateInput {
  created_at: DateTime
  case_number: Int
  state: String
  type: String
  subject: String
  description: String
  resolution: String
  priority: String
  status: String
  account_name: String
  assigned_to: String
  date_modified: DateTime
}

input casesUpdateInput {
  created_at: DateTime
  case_number: Int
  state: String
  type: String
  subject: String
  description: String
  resolution: String
  priority: String
  status: String
  account_name: String
  assigned_to: String
  date_modified: DateTime
}

input contractsCreateInput {
  contract_title: String
  contract_value: String
  start_date: String
  end_date: String
  renewal_reminder: String
  customer_signed_date: String
  company_signed_date: String
  status: String
  contract_manager: String
  account: String
  contact: String
  description: String
  opportunity: String
  contract_type: String
  currency: String
  line_items: String
  total: String
  discount: String
  subtotal: String
  shipping: String
  shipping_tax: String
  tax: String
  grand_total: String
  created_at: DateTime
}

input contractsUpdateInput {
  contract_title: String
  contract_value: String
  start_date: String
  end_date: String
  renewal_reminder: String
  customer_signed_date: String
  company_signed_date: String
  status: String
  contract_manager: String
  account: String
  contact: String
  description: String
  opportunity: String
  contract_type: String
  currency: String
  line_items: String
  total: String
  discount: String
  subtotal: String
  shipping: String
  shipping_tax: String
  tax: String
  grand_total: String
  created_at: DateTime
}

input internalizationCreateInput {
  created_at: DateTime
  name: String
  region: String
  description: String
  default: String
  website: String
}

input internalizationUpdateInput {
  created_at: DateTime
  name: String
  region: String
  description: String
  default: String
  website: String
}

input leadsCreateInput {
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  status: String
  status_description: String
  opportunity_amount: String
  campaign: String
  lead_source: String
  lead_source_description: String
  referred_by: String
  customer_name: String
}

input leadsUpdateInput {
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  status: String
  status_description: String
  opportunity_amount: String
  campaign: String
  lead_source: String
  lead_source_description: String
  referred_by: String
  customer_name: String
}

input opportunitiesCreateInput {
  created_at: DateTime
  name: String
  amount: String
  sales_stage: String
  currency: String
  probability: String
  next_step: String
  description: String
  assigned_to: String
  lead_source: String
  campaign: String
  type: String
  account_name: String
  expected_close_date: String
}

input opportunitiesUpdateInput {
  created_at: DateTime
  name: String
  amount: String
  sales_stage: String
  currency: String
  probability: String
  next_step: String
  description: String
  assigned_to: String
  lead_source: String
  campaign: String
  type: String
  account_name: String
  expected_close_date: String
}

input projectsCreateInput {
  name: String
  project_manager: String
  start_date: String
  end_date: String
  resource: String
  considerworkingdays: String
  project_template: String
  status: String
  created_at: DateTime
  priority: String
  assignee: String
  doing: String
  done: String
  section_rule: String
  goal_name: String
  goal_timeperiod: String
  goal_privacy: String
  goal_collaborators: String
  goal_updatemethod: String
  goal_progress_source: String
  goal_measurement: String
  customers: customers
  users: users
  tasks: tasks
  ticketing: ticketing
  workspaces: [workspaces!]!
}

input projectsUpdateInput {
  name: String
  project_manager: String
  start_date: String
  end_date: String
  resource: String
  considerworkingdays: String
  project_template: String
  status: String
  created_at: DateTime
  priority: String
  assignee: String
  doing: String
  done: String
  section_rule: String
  goal_name: String
  goal_timeperiod: String
  goal_privacy: String
  goal_collaborators: String
  goal_updatemethod: String
  goal_progress_source: String
  goal_measurement: String
  customers: customers
  users: users
  tasks: tasks
  ticketing: ticketing
  workspaces: [workspaces!]
}

input providersCreateInput {
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String!
  active: String
}

input providersUpdateInput {
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String
  active: String
}

input surveysCreateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  status: String
  description: String
  question: String
  answer: String
  submit_text: String
  satisfied_text: String
  neither_text: String
  dissatisfied_text: String
}

input surveysUpdateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  status: String
  description: String
  question: String
  answer: String
  submit_text: String
  satisfied_text: String
  neither_text: String
  dissatisfied_text: String
}

input targetsCreateInput {
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  customer_name: String
  email_opt_out: String
  donotcall: String
}

input targetsUpdateInput {
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  customer_name: String
  email_opt_out: String
  donotcall: String
}

input tasksCreateInput {
  created_at: DateTime
  subject: String
  start_date: String
  due_date: String
  priority: String
  description: String
  status: String
  related_to: String
  contact: String
  assigned_to: String
  date_modified: DateTime
  mediamanager: [mediamanager!]!
  projects: [projects!]!
  workspaces: [workspaces!]!
}

input tasksUpdateInput {
  created_at: DateTime
  subject: String
  start_date: String
  due_date: String
  priority: String
  description: String
  status: String
  related_to: String
  contact: String
  assigned_to: String
  date_modified: DateTime
  mediamanager: [mediamanager!]
  projects: [projects!]
  workspaces: [workspaces!]
}

input webhooksCreateInput {
  created_at: DateTime
  name: String!
  url: String!
  headers: String
  create: String
  retrieve: String
  update: String
  delete: String
  publish: String
  unpublish: String
}

input webhooksUpdateInput {
  created_at: DateTime
  name: String
  url: String
  headers: String
  create: String
  retrieve: String
  update: String
  delete: String
  publish: String
  unpublish: String
}

input meetingCreateInput {
  created_at: DateTime
  subject: String
  start_date: String
  end_date: String
  duration: String
  status: String
  related_to: String
  reminders: String
  content: String
  assigned_to: String
  invitees: String
  scheduling: String
}

input meetingUpdateInput {
  created_at: DateTime
  subject: String
  start_date: String
  end_date: String
  duration: String
  status: String
  related_to: String
  reminders: String
  content: String
  assigned_to: String
  invitees: String
  scheduling: String
}

input ootoCreateInput {
  created_at: DateTime
  login: String
  start_date: String
  end_date: String
  note: String
  using_time: String
  location: String
}

input ootoUpdateInput {
  created_at: DateTime
  login: String
  start_date: String
  end_date: String
  note: String
  using_time: String
  location: String
}

input accountsCreateInput {
  created_at: DateTime
  name: String
  website: String
  office_phone: String
  fax: String
  email: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  assigned_to: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  type: String
  industry: String
  employees: String
  annual_revenue: String
  member_of: String
  campaign: String
}

input accountsUpdateInput {
  created_at: DateTime
  name: String
  website: String
  office_phone: String
  fax: String
  email: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  assigned_to: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  type: String
  industry: String
  employees: String
  annual_revenue: String
  member_of: String
  campaign: String
}

input email_templatesCreateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  insert_variable: String
  subject: String
  content: String
  header: String
  footer: String
  width: String
  height: String
  media: String
}

input email_templatesUpdateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  insert_variable: String
  subject: String
  content: String
  header: String
  footer: String
  width: String
  height: String
  media: String
}

input importmCreateInput {
  created_at: DateTime
  name: String
  description: String
  file: String
  url: String
  image: String
}

input importmUpdateInput {
  created_at: DateTime
  name: String
  description: String
  file: String
  url: String
  image: String
}

input integrationsCreateInput {
  created_at: DateTime
  name: String
  content: String
  media: String
  location: String
  category: String
}

input integrationsUpdateInput {
  created_at: DateTime
  name: String
  content: String
  media: String
  location: String
  category: String
}

input knowledgebaseCreateInput {
  created_at: DateTime
  name: String
  status: String
  revision: String
  content: String
  resolution: String
  author: String
  approver: String
  date_modified: DateTime
}

input knowledgebaseUpdateInput {
  created_at: DateTime
  name: String
  status: String
  revision: String
  content: String
  resolution: String
  author: String
  approver: String
  date_modified: DateTime
}

input paymentsCreateInput {
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String!
  active: String
  country: String
}

input paymentsUpdateInput {
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String
  active: String
  country: String
}

input pdf_templatesCreateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  page_size: String
  orientation: String
  content: String
  header: String
  footer: String
  margin_left: String
  margin_right: String
  margin_top: String
  margin_bottom: String
  margin_header: String
  margin_footer: String
}

input pdf_templatesUpdateInput {
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  page_size: String
  orientation: String
  content: String
  header: String
  footer: String
  margin_left: String
  margin_right: String
  margin_top: String
  margin_bottom: String
  margin_header: String
  margin_footer: String
}

input project_templatesCreateInput {
  name: String
  status: String
  consider_working_days: String
  priority: String
  project_manager: String
  resource: String
  content: String
}

input project_templatesUpdateInput {
  name: String
  status: String
  consider_working_days: String
  priority: String
  project_manager: String
  resource: String
  content: String
}

input rewardsCreateInput {
  name: String!
  slug: String
  level: String
  created_at: DateTime
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input rewardsUpdateInput {
  name: String
  slug: String
  level: String
  created_at: DateTime
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

input checklistCreateInput {
  created_at: DateTime
  username: String
  location: String
  regional_manager: String
  manager: String
  description: String
  ticket: String
  project: String
  region: String
  country: String
  media: String
  prod_id: String
}

input checklistUpdateInput {
  created_at: DateTime
  username: String
  location: String
  regional_manager: String
  manager: String
  description: String
  ticket: String
  project: String
  region: String
  country: String
  media: String
  prod_id: String
}

input content_typeCreateInput {
  created_at: DateTime
  text: String
  number: Float
  json: String
  link: String
  email: String
  uid: String
  date: DateTime
  time: DateTime
  timestamp: DateTime
  boolean: Boolean
  rich_text: String
  password: String
  media: String
  database_name: String
}

input content_typeUpdateInput {
  created_at: DateTime
  text: String
  number: Float
  json: String
  link: String
  email: String
  uid: String
  date: DateTime
  time: DateTime
  timestamp: DateTime
  boolean: Boolean
  rich_text: String
  password: String
  media: String
  database_name: String
}

input pluginsCreateInput {
  created_at: DateTime
  name: String
  url: String
  github_link: String
  description: String
  logo: String
  screenshots: String
  last_updated: DateTime
  publisher_name: String
  agree_terms: Boolean
  publisher_email: String
}

input pluginsUpdateInput {
  created_at: DateTime
  name: String
  url: String
  github_link: String
  description: String
  logo: String
  screenshots: String
  last_updated: DateTime
  publisher_name: String
  agree_terms: Boolean
  publisher_email: String
}

input product_typesCreateInput {
  type_name: String
  taxes: String
  isShippable: String
  meta_url: String
  meta_description: String
  filter_options: String
  product_type: String
  products: products!
}

input product_typesUpdateInput {
  type_name: String
  taxes: String
  isShippable: String
  meta_url: String
  meta_description: String
  filter_options: String
  product_type: String
  products: products
}

input ticketingCreateInput {
  created_at: DateTime
  name: String
  location: String
  date: String
  severity: String
  team: String
  requester: String
  requester_email: String
  content: String
  department: String
  media: String
  projects: String
  ticket_type: String
  comment: String
  products: String
  priority: String
  status: String
  resolution: String
  assigned_to: String
  date_modified: DateTime
  account_name: String
  level: String
  projects_projectsToticketing: [projects!]!
}

input ticketingUpdateInput {
  created_at: DateTime
  name: String
  location: String
  date: String
  severity: String
  team: String
  requester: String
  requester_email: String
  content: String
  department: String
  media: String
  projects: String
  ticket_type: String
  comment: String
  products: String
  priority: String
  status: String
  resolution: String
  assigned_to: String
  date_modified: DateTime
  account_name: String
  level: String
  projects_projectsToticketing: [projects!]
}

input visitsCreateInput {
  created_at: DateTime
  location: String
  username: String
  reason: String
  content: String
  emergency: String
  start_date: String
  end_date: String
  task: String
  meeting: String
}

input visitsUpdateInput {
  created_at: DateTime
  location: String
  username: String
  reason: String
  content: String
  emergency: String
  start_date: String
  end_date: String
  task: String
  meeting: String
}

input channelsCreateInput {
  created_at: DateTime
  code: String
  name: String
  currency: String
  default_lang: String
  include_tax: String
  default_zone: String
  default_shipping: String
  client_id: String
  client_secret: String
}

input channelsUpdateInput {
  created_at: DateTime
  code: String
  name: String
  currency: String
  default_lang: String
  include_tax: String
  default_zone: String
  default_shipping: String
  client_id: String
  client_secret: String
}

input currenciesCreateInput {
  created_at: DateTime
  code: String
  name: String
  region: String
}

input currenciesUpdateInput {
  created_at: DateTime
  code: String
  name: String
  region: String
}

input messagesCreateInput {
  from: String
  created_at: DateTime
  subject: String
  content: String
  sender: String
  media: String
  customers: customers!
  users: users
}

input messagesUpdateInput {
  from: String
  created_at: DateTime
  subject: String
  content: String
  sender: String
  media: String
  customers: customers
  users: users
}

input partnersCreateInput {
  created_at: DateTime
  name: String
  address: String
  city: String
  state: String
  country: String
  isPublic: String
  business_type: String
}

input partnersUpdateInput {
  created_at: DateTime
  name: String
  address: String
  city: String
  state: String
  country: String
  isPublic: String
  business_type: String
}

input settingscustomersCreateInput {
  created_at: DateTime
  login_as_customer: String
  share_customer_accounts: String
  online_minutes_interval: String
  customer_data_lifetime: String
  email_after_registration: String
}

input settingscustomersUpdateInput {
  created_at: DateTime
  login_as_customer: String
  share_customer_accounts: String
  online_minutes_interval: String
  customer_data_lifetime: String
  email_after_registration: String
}

input settingsgeneralCreateInput {
  created_at: DateTime
  site_title: String
  site_tagline: String
  site_website: String
  email: String
  aws_s3: String
  google_drive: String
}

input settingsgeneralUpdateInput {
  created_at: DateTime
  site_title: String
  site_tagline: String
  site_website: String
  email: String
  aws_s3: String
  google_drive: String
}

input settingshopCreateInput {
  enable_product_assignment: String
  product_videos: String
  seller_payouts: String
  admin_approval: String
  enable_review_system: String
  customer_rate_vendor: String
  multishipping: String
  vendor_transaction_id: String
  enable_vendor_product_attribute: String
}

input settingshopUpdateInput {
  enable_product_assignment: String
  product_videos: String
  seller_payouts: String
  admin_approval: String
  enable_review_system: String
  customer_rate_vendor: String
  multishipping: String
  vendor_transaction_id: String
  enable_vendor_product_attribute: String
}

input settingsmarketingCreateInput {
  mail_port: String
  recaptcha_api: String
  adsense_api: String
  sitemap_url: String
  customer_data_lifetime: String
  mail_server: String
}

input settingsmarketingUpdateInput {
  mail_port: String
  recaptcha_api: String
  adsense_api: String
  sitemap_url: String
  customer_data_lifetime: String
  mail_server: String
}

input settingssalesCreateInput {
  created_at: DateTime
  analytics_account_type: String
  analytics_account_number: String
  analytics_anonymizeip: String
  analytics_content_experiments: String
  adwords_conversionid: String
  adwords_conversionlanguage: String
  adwords_conversionformat: String
  adwords_conversioncolor: String
  adwords_conversionlabel: String
  adwords_conversionvalue_type: String
  adwords_sendorder: String
  tag_manager_anonymizeip: String
  tag_manager_contentexperiments: String
  tag_manager_containerid: String
}

input settingssalesUpdateInput {
  created_at: DateTime
  analytics_account_type: String
  analytics_account_number: String
  analytics_anonymizeip: String
  analytics_content_experiments: String
  adwords_conversionid: String
  adwords_conversionlanguage: String
  adwords_conversionformat: String
  adwords_conversioncolor: String
  adwords_conversionlabel: String
  adwords_conversionvalue_type: String
  adwords_sendorder: String
  tag_manager_anonymizeip: String
  tag_manager_contentexperiments: String
  tag_manager_containerid: String
}

input tax_categoryCreateInput {
  created_at: DateTime
  name: String
  default: String
}

input tax_categoryUpdateInput {
  created_at: DateTime
  name: String
  default: String
}

input wishlistsCreateInput {
  created_at: DateTime
  name: String
  customers: String
  visibility: String
  products: String
  quantity: String
  occassions: [occassions!]!
}

input wishlistsUpdateInput {
  created_at: DateTime
  name: String
  customers: String
  visibility: String
  products: String
  quantity: String
  occassions: [occassions!]
}

input zonesCreateInput {
  created_at: DateTime
  name: String
  updated_at: DateTime
  scope: String
  type: String
  country: String
  code: String
}

input zonesUpdateInput {
  created_at: DateTime
  name: String
  updated_at: DateTime
  scope: String
  type: String
  country: String
  code: String
}

input analyticsCreateInput {
  created_at: DateTime
  name: String
  country: String
  share_data: String
  website_name: String
  client_id: String
  client_secret: String
  tracking_id: String
  property_name: String
  url: String
  default_view: String
  category: String
  property_hit: String
  tracking_code: String
  data_collection: Boolean
  data_retention: Boolean
  search_analytics: String
}

input analyticsUpdateInput {
  created_at: DateTime
  name: String
  country: String
  share_data: String
  website_name: String
  client_id: String
  client_secret: String
  tracking_id: String
  property_name: String
  url: String
  default_view: String
  category: String
  property_hit: String
  tracking_code: String
  data_collection: Boolean
  data_retention: Boolean
  search_analytics: String
}

input dashboardsCreateInput {
  created_at: DateTime
  name: String
  client_id: String
  client_secret: String
  privacy: String
  category: String
  url: String
  media: String
  task: String
  reports: String
  tasks: String
  projects: String
  tickets: String
  customers: String
  checklists: String
  visits: String
  users: String
  products: String
  articles: String
  sales: String
}

input dashboardsUpdateInput {
  created_at: DateTime
  name: String
  client_id: String
  client_secret: String
  privacy: String
  category: String
  url: String
  media: String
  task: String
  reports: String
  tasks: String
  projects: String
  tickets: String
  customers: String
  checklists: String
  visits: String
  users: String
  products: String
  articles: String
  sales: String
}

input brandsCreateInput {
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
  mediamanager: [mediamanager!]!
  workspaces: [workspaces!]!
}

input brandsUpdateInput {
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
  mediamanager: [mediamanager!]
  workspaces: [workspaces!]
}

input manufacturerCreateInput {
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
}

input manufacturerUpdateInput {
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
}

input mediamanagerCreateInput {
  created_at: DateTime
  name: String
  description: String
  media: String
  keywords: String
  tags: String
  status: String
  expiration_date: String
  copyright: String
  dimensions: String
  content_type: String
  versions: String
  watermark_name: String
  watermark_description: String
  watermark_media: String
  albums: String
  workspace: String
  task_description: String
  task_type: String
  agreements_agreementsTomediamanager: agreements
  customers: customers
  brands_brandsTomediamanager: brands
  comments: comments
  users: users
  products_mediamanagerToproducts: products
  tasks: tasks
}

input mediamanagerUpdateInput {
  created_at: DateTime
  name: String
  description: String
  media: String
  keywords: String
  tags: String
  status: String
  expiration_date: String
  copyright: String
  dimensions: String
  content_type: String
  versions: String
  watermark_name: String
  watermark_description: String
  watermark_media: String
  albums: String
  workspace: String
  task_description: String
  task_type: String
  agreements_agreementsTomediamanager: agreements
  customers: customers
  brands_brandsTomediamanager: brands
  comments: comments
  users: users
  products_mediamanagerToproducts: products
  tasks: tasks
}

input occassionsCreateInput {
  created_at: DateTime
  code: String
  name: String
  category: String
  tags: String
  description: String
  products_occassionsToproducts: products
  wishlists_occassionsTowishlists: wishlists
}

input occassionsUpdateInput {
  created_at: DateTime
  code: String
  name: String
  category: String
  tags: String
  description: String
  products_occassionsToproducts: products
  wishlists_occassionsTowishlists: wishlists
}

input workspacesCreateInput {
  created_at: DateTime
  code: String
  name: String
  description: String
  isPublic: Boolean
  author: String
  media: String
  brands_brandsToworkspaces: brands
  categories: categories
  customers_customersToworkspaces: customers
  products_productsToworkspaces: products
  projects_projectsToworkspaces: projects
  shops_shopsToworkspaces: shops
  tasks_tasksToworkspaces: tasks
  users_usersToworkspaces: users
}

input workspacesUpdateInput {
  created_at: DateTime
  code: String
  name: String
  description: String
  isPublic: Boolean
  author: String
  media: String
  brands_brandsToworkspaces: brands
  categories: categories
  customers_customersToworkspaces: customers
  products_productsToworkspaces: products
  projects_projectsToworkspaces: projects
  shops_shopsToworkspaces: shops
  tasks_tasksToworkspaces: tasks
  users_usersToworkspaces: users
}

input customizationsCreateInput {
  created_at: DateTime
  site_name: String
  nav_link: String
  notification: String
  banner: String
  footer_link: String
  announcement: String
  email: String
  site_url: String
  allow_signup: String
}

input customizationsUpdateInput {
  created_at: DateTime
  site_name: String
  nav_link: String
  notification: String
  banner: String
  footer_link: String
  announcement: String
  email: String
  site_url: String
  allow_signup: String
}

input rolesCreateInput {
  role_name: String!
  content: String
  created_at: DateTime
}

input rolesUpdateInput {
  role_name: String
  content: String
  created_at: DateTime
}

type Mutation {
  createarticles(articles: articlesCreateInput!): articles
  updatearticles(articles: articlesUpdateInput!): articles
  deletearticles(id: ID!): articles
  createcart_price_rules(cart_price_rules: cart_price_rulesCreateInput!): cart_price_rules
  updatecart_price_rules(cart_price_rules: cart_price_rulesUpdateInput!): cart_price_rules
  deletecart_price_rules(id: ID!): cart_price_rules
  createcatalog_price_rule(catalog_price_rule: catalog_price_ruleCreateInput!): catalog_price_rule
  updatecatalog_price_rule(catalog_price_rule: catalog_price_ruleUpdateInput!): catalog_price_rule
  deletecatalog_price_rule(id: ID!): catalog_price_rule
  createcategories(categories: categoriesCreateInput!): categories
  updatecategories(categories: categoriesUpdateInput!): categories
  deletecategories(id: ID!): categories
  createcities(cities: citiesCreateInput!): cities
  updatecities(cities: citiesUpdateInput!): cities
  deletecities(id: ID!): cities
  createcomments(comments: commentsCreateInput!): comments
  updatecomments(comments: commentsUpdateInput!): comments
  deletecomments(id: ID!): comments
  createcore_store(core_store: core_storeCreateInput!): core_store
  updatecore_store(core_store: core_storeUpdateInput!): core_store
  deletecore_store(id: ID!): core_store
  createcountries(countries: countriesCreateInput!): countries
  updatecountries(countries: countriesUpdateInput!): countries
  deletecountries(id: ID!): countries
  createcoupons(coupons: couponsCreateInput!): coupons
  updatecoupons(coupons: couponsUpdateInput!): coupons
  deletecoupons(id: ID!): coupons
  createcredit_memos(credit_memos: credit_memosCreateInput!): credit_memos
  updatecredit_memos(credit_memos: credit_memosUpdateInput!): credit_memos
  deletecredit_memos(id: ID!): credit_memos
  createcurrency_rates(currency_rates: currency_ratesCreateInput!): currency_rates
  updatecurrency_rates(currency_rates: currency_ratesUpdateInput!): currency_rates
  deletecurrency_rates(import_service: ID!): currency_rates
  createcurrency_symbols(currency_symbols: currency_symbolsCreateInput!): currency_symbols
  updatecurrency_symbols(currency_symbols: currency_symbolsUpdateInput!): currency_symbols
  deletecurrency_symbols(symbol: ID!): currency_symbols
  createcustomers(customers: customersCreateInput!): customers
  updatecustomers(customers: customersUpdateInput!): customers
  deletecustomers(id: ID!): customers
  creategift_certificates(gift_certificates: gift_certificatesCreateInput!): gift_certificates
  updategift_certificates(gift_certificates: gift_certificatesUpdateInput!): gift_certificates
  deletegift_certificates(id: ID!): gift_certificates
  createglossary(glossary: glossaryCreateInput!): glossary
  updateglossary(glossary: glossaryUpdateInput!): glossary
  deleteglossary(id: ID!): glossary
  createinvoices(invoices: invoicesCreateInput!): invoices
  updateinvoices(invoices: invoicesUpdateInput!): invoices
  deleteinvoices(id: ID!): invoices
  createnewsletter_subscribers(newsletter_subscribers: newsletter_subscribersCreateInput!): newsletter_subscribers
  updatenewsletter_subscribers(newsletter_subscribers: newsletter_subscribersUpdateInput!): newsletter_subscribers
  deletenewsletter_subscribers(id: ID!): newsletter_subscribers
  createorders(orders: ordersCreateInput!): orders
  updateorders(orders: ordersUpdateInput!): orders
  deleteorders(id: ID!): orders
  createpages(pages: pagesCreateInput!): pages
  updatepages(pages: pagesUpdateInput!): pages
  deletepages(id: ID!): pages
  createpolls(polls: pollsCreateInput!): polls
  updatepolls(polls: pollsUpdateInput!): polls
  deletepolls(id: ID!): polls
  createproduct_attribute(product_attribute: product_attributeCreateInput!): product_attribute
  updateproduct_attribute(product_attribute: product_attributeUpdateInput!): product_attribute
  deleteproduct_attribute(id: ID!): product_attribute
  createproduct_attribute_set(product_attribute_set: product_attribute_setCreateInput!): product_attribute_set
  updateproduct_attribute_set(product_attribute_set: product_attribute_setUpdateInput!): product_attribute_set
  deleteproduct_attribute_set(id: ID!): product_attribute_set
  createproducts(products: productsCreateInput!): products
  updateproducts(products: productsUpdateInput!): products
  deleteproducts(id: ID!): products
  createquotes(quotes: quotesCreateInput!): quotes
  updatequotes(quotes: quotesUpdateInput!): quotes
  deletequotes(id: ID!): quotes
  createrating(rating: ratingCreateInput!): rating
  updaterating(rating: ratingUpdateInput!): rating
  deleterating(id: ID!): rating
  createreports(reports: reportsCreateInput!): reports
  updatereports(reports: reportsUpdateInput!): reports
  deletereports(id: ID!): reports
  createreviews(reviews: reviewsCreateInput!): reviews
  updatereviews(reviews: reviewsUpdateInput!): reviews
  deletereviews(id: ID!): reviews
  createshipments(shipments: shipmentsCreateInput!): shipments
  updateshipments(shipments: shipmentsUpdateInput!): shipments
  deleteshipments(id: ID!): shipments
  createshops(shops: shopsCreateInput!): shops
  updateshops(shops: shopsUpdateInput!): shops
  deleteshops(id: ID!): shops
  createsource(source: sourceCreateInput!): source
  updatesource(source: sourceUpdateInput!): source
  deletesource(id: ID!): source
  createspecial_discounts(special_discounts: special_discountsCreateInput!): special_discounts
  updatespecial_discounts(special_discounts: special_discountsUpdateInput!): special_discounts
  deletespecial_discounts(id: ID!): special_discounts
  createstates(states: statesCreateInput!): states
  updatestates(states: statesUpdateInput!): states
  deletestates(id: ID!): states
  createstatistics(statistics: statisticsCreateInput!): statistics
  updatestatistics(statistics: statisticsUpdateInput!): statistics
  deletestatistics(id: ID!): statistics
  createstocks(stocks: stocksCreateInput!): stocks
  updatestocks(stocks: stocksUpdateInput!): stocks
  deletestocks(id: ID!): stocks
  createtags(tags: tagsCreateInput!): tags
  updatetags(tags: tagsUpdateInput!): tags
  deletetags(id: ID!): tags
  createtax_rate(tax_rate: tax_rateCreateInput!): tax_rate
  updatetax_rate(tax_rate: tax_rateUpdateInput!): tax_rate
  deletetax_rate(id: ID!): tax_rate
  createtax_rule(tax_rule: tax_ruleCreateInput!): tax_rule
  updatetax_rule(tax_rule: tax_ruleUpdateInput!): tax_rule
  deletetax_rule(id: ID!): tax_rule
  createthemes(themes: themesCreateInput!): themes
  updatethemes(themes: themesUpdateInput!): themes
  deletethemes(id: ID!): themes
  createtransactions(transactions: transactionsCreateInput!): transactions
  updatetransactions(transactions: transactionsUpdateInput!): transactions
  deletetransactions(id: ID!): transactions
  createupload_file(upload_file: upload_fileCreateInput!): upload_file
  updateupload_file(upload_file: upload_fileUpdateInput!): upload_file
  deleteupload_file(id: ID!): upload_file
  createupload_file_morph(upload_file_morph: upload_file_morphCreateInput!): upload_file_morph
  updateupload_file_morph(upload_file_morph: upload_file_morphUpdateInput!): upload_file_morph
  deleteupload_file_morph(id: ID!): upload_file_morph
  createurl_rewrites(url_rewrites: url_rewritesCreateInput!): url_rewrites
  updateurl_rewrites(url_rewrites: url_rewritesUpdateInput!): url_rewrites
  deleteurl_rewrites(id: ID!): url_rewrites
  createusers(users: usersCreateInput!): users
  updateusers(users: usersUpdateInput!): users
  deleteusers(id: ID!): users
  createagreements(agreements: agreementsCreateInput!): agreements
  updateagreements(agreements: agreementsUpdateInput!): agreements
  deleteagreements(id: ID!): agreements
  createcollections(collections: collectionsCreateInput!): collections
  updatecollections(collections: collectionsUpdateInput!): collections
  deletecollections(id: ID!): collections
  createcustomer_group(customer_group: customer_groupCreateInput!): customer_group
  updatecustomer_group(customer_group: customer_groupUpdateInput!): customer_group
  deletecustomer_group(id: ID!): customer_group
  createemails(emails: emailsCreateInput!): emails
  updateemails(emails: emailsUpdateInput!): emails
  deleteemails(id: ID!): emails
  createevents(events: eventsCreateInput!): events
  updateevents(events: eventsUpdateInput!): events
  deleteevents(id: ID!): events
  createreturns(returns: returnsCreateInput!): returns
  updatereturns(returns: returnsUpdateInput!): returns
  deletereturns(id: ID!): returns
  createsegments(segments: segmentsCreateInput!): segments
  updatesegments(segments: segmentsUpdateInput!): segments
  deletesegments(id: ID!): segments
  createwebsites(websites: websitesCreateInput!): websites
  updatewebsites(websites: websitesUpdateInput!): websites
  deletewebsites(id: ID!): websites
  createcustomer_payment(customer_payment: customer_paymentCreateInput!): customer_payment
  updatecustomer_payment(customer_payment: customer_paymentUpdateInput!): customer_payment
  deletecustomer_payment(id: ID!): customer_payment
  creategeneral_settings(general_settings: general_settingsCreateInput!): general_settings
  updategeneral_settings(general_settings: general_settingsUpdateInput!): general_settings
  deletegeneral_settings(id: ID!): general_settings
  createshop_settings(shop_settings: shop_settingsCreateInput!): shop_settings
  updateshop_settings(shop_settings: shop_settingsUpdateInput!): shop_settings
  deleteshop_settings(id: ID!): shop_settings
  createfullfillments(fullfillments: fullfillmentsCreateInput!): fullfillments
  updatefullfillments(fullfillments: fullfillmentsUpdateInput!): fullfillments
  deletefullfillments(id: ID!): fullfillments
  createpermissions(permissions: permissionsCreateInput!): permissions
  updatepermissions(permissions: permissionsUpdateInput!): permissions
  deletepermissions(id: ID!): permissions
  createwarehouse(warehouse: warehouseCreateInput!): warehouse
  updatewarehouse(warehouse: warehouseUpdateInput!): warehouse
  deletewarehouse(id: ID!): warehouse
  createapitoken(apitoken: apitokenCreateInput!): apitoken
  updateapitoken(apitoken: apitokenUpdateInput!): apitoken
  deleteapitoken(id: ID!): apitoken
  createcases(cases: casesCreateInput!): cases
  updatecases(cases: casesUpdateInput!): cases
  deletecases(id: ID!): cases
  createcontracts(contracts: contractsCreateInput!): contracts
  updatecontracts(contracts: contractsUpdateInput!): contracts
  deletecontracts(id: ID!): contracts
  createinternalization(internalization: internalizationCreateInput!): internalization
  updateinternalization(internalization: internalizationUpdateInput!): internalization
  deleteinternalization(id: ID!): internalization
  createleads(leads: leadsCreateInput!): leads
  updateleads(leads: leadsUpdateInput!): leads
  deleteleads(id: ID!): leads
  createopportunities(opportunities: opportunitiesCreateInput!): opportunities
  updateopportunities(opportunities: opportunitiesUpdateInput!): opportunities
  deleteopportunities(id: ID!): opportunities
  createprojects(projects: projectsCreateInput!): projects
  updateprojects(projects: projectsUpdateInput!): projects
  deleteprojects(id: ID!): projects
  createproviders(providers: providersCreateInput!): providers
  updateproviders(providers: providersUpdateInput!): providers
  deleteproviders(id: ID!): providers
  createsurveys(surveys: surveysCreateInput!): surveys
  updatesurveys(surveys: surveysUpdateInput!): surveys
  deletesurveys(id: ID!): surveys
  createtargets(targets: targetsCreateInput!): targets
  updatetargets(targets: targetsUpdateInput!): targets
  deletetargets(id: ID!): targets
  createtasks(tasks: tasksCreateInput!): tasks
  updatetasks(tasks: tasksUpdateInput!): tasks
  deletetasks(id: ID!): tasks
  createwebhooks(webhooks: webhooksCreateInput!): webhooks
  updatewebhooks(webhooks: webhooksUpdateInput!): webhooks
  deletewebhooks(id: ID!): webhooks
  createmeeting(meeting: meetingCreateInput!): meeting
  updatemeeting(meeting: meetingUpdateInput!): meeting
  deletemeeting(id: ID!): meeting
  createooto(ooto: ootoCreateInput!): ooto
  updateooto(ooto: ootoUpdateInput!): ooto
  deleteooto(id: ID!): ooto
  createaccounts(accounts: accountsCreateInput!): accounts
  updateaccounts(accounts: accountsUpdateInput!): accounts
  deleteaccounts(id: ID!): accounts
  createemail_templates(email_templates: email_templatesCreateInput!): email_templates
  updateemail_templates(email_templates: email_templatesUpdateInput!): email_templates
  deleteemail_templates(id: ID!): email_templates
  createimportm(importm: importmCreateInput!): importm
  updateimportm(importm: importmUpdateInput!): importm
  deleteimportm(id: ID!): importm
  createintegrations(integrations: integrationsCreateInput!): integrations
  updateintegrations(integrations: integrationsUpdateInput!): integrations
  deleteintegrations(id: ID!): integrations
  createknowledgebase(knowledgebase: knowledgebaseCreateInput!): knowledgebase
  updateknowledgebase(knowledgebase: knowledgebaseUpdateInput!): knowledgebase
  deleteknowledgebase(id: ID!): knowledgebase
  createpayments(payments: paymentsCreateInput!): payments
  updatepayments(payments: paymentsUpdateInput!): payments
  deletepayments(id: ID!): payments
  createpdf_templates(pdf_templates: pdf_templatesCreateInput!): pdf_templates
  updatepdf_templates(pdf_templates: pdf_templatesUpdateInput!): pdf_templates
  deletepdf_templates(id: ID!): pdf_templates
  createproject_templates(project_templates: project_templatesCreateInput!): project_templates
  updateproject_templates(project_templates: project_templatesUpdateInput!): project_templates
  deleteproject_templates(id: ID!): project_templates
  createrewards(rewards: rewardsCreateInput!): rewards
  updaterewards(rewards: rewardsUpdateInput!): rewards
  deleterewards(id: ID!): rewards
  createchecklist(checklist: checklistCreateInput!): checklist
  updatechecklist(checklist: checklistUpdateInput!): checklist
  deletechecklist(id: ID!): checklist
  createcontent_type(content_type: content_typeCreateInput!): content_type
  updatecontent_type(content_type: content_typeUpdateInput!): content_type
  deletecontent_type(id: ID!): content_type
  createplugins(plugins: pluginsCreateInput!): plugins
  updateplugins(plugins: pluginsUpdateInput!): plugins
  deleteplugins(id: ID!): plugins
  createproduct_types(product_types: product_typesCreateInput!): product_types
  updateproduct_types(product_types: product_typesUpdateInput!): product_types
  deleteproduct_types(id: ID!): product_types
  createticketing(ticketing: ticketingCreateInput!): ticketing
  updateticketing(ticketing: ticketingUpdateInput!): ticketing
  deleteticketing(id: ID!): ticketing
  createvisits(visits: visitsCreateInput!): visits
  updatevisits(visits: visitsUpdateInput!): visits
  deletevisits(id: ID!): visits
  createchannels(channels: channelsCreateInput!): channels
  updatechannels(channels: channelsUpdateInput!): channels
  deletechannels(id: ID!): channels
  createcurrencies(currencies: currenciesCreateInput!): currencies
  updatecurrencies(currencies: currenciesUpdateInput!): currencies
  deletecurrencies(id: ID!): currencies
  createmessages(messages: messagesCreateInput!): messages
  updatemessages(messages: messagesUpdateInput!): messages
  deletemessages(id: ID!): messages
  createpartners(partners: partnersCreateInput!): partners
  updatepartners(partners: partnersUpdateInput!): partners
  deletepartners(id: ID!): partners
  createsettingscustomers(settingscustomers: settingscustomersCreateInput!): settingscustomers
  updatesettingscustomers(settingscustomers: settingscustomersUpdateInput!): settingscustomers
  deletesettingscustomers(id: ID!): settingscustomers
  createsettingsgeneral(settingsgeneral: settingsgeneralCreateInput!): settingsgeneral
  updatesettingsgeneral(settingsgeneral: settingsgeneralUpdateInput!): settingsgeneral
  deletesettingsgeneral(id: ID!): settingsgeneral
  createsettingshop(settingshop: settingshopCreateInput!): settingshop
  updatesettingshop(settingshop: settingshopUpdateInput!): settingshop
  deletesettingshop(id: ID!): settingshop
  createsettingsmarketing(settingsmarketing: settingsmarketingCreateInput!): settingsmarketing
  updatesettingsmarketing(settingsmarketing: settingsmarketingUpdateInput!): settingsmarketing
  deletesettingsmarketing(id: ID!): settingsmarketing
  createsettingssales(settingssales: settingssalesCreateInput!): settingssales
  updatesettingssales(settingssales: settingssalesUpdateInput!): settingssales
  deletesettingssales(id: ID!): settingssales
  createtax_category(tax_category: tax_categoryCreateInput!): tax_category
  updatetax_category(tax_category: tax_categoryUpdateInput!): tax_category
  deletetax_category(id: ID!): tax_category
  createwishlists(wishlists: wishlistsCreateInput!): wishlists
  updatewishlists(wishlists: wishlistsUpdateInput!): wishlists
  deletewishlists(id: ID!): wishlists
  createzones(zones: zonesCreateInput!): zones
  updatezones(zones: zonesUpdateInput!): zones
  deletezones(id: ID!): zones
  createanalytics(analytics: analyticsCreateInput!): analytics
  updateanalytics(analytics: analyticsUpdateInput!): analytics
  deleteanalytics(id: ID!): analytics
  createdashboards(dashboards: dashboardsCreateInput!): dashboards
  updatedashboards(dashboards: dashboardsUpdateInput!): dashboards
  deletedashboards(id: ID!): dashboards
  createbrands(brands: brandsCreateInput!): brands
  updatebrands(brands: brandsUpdateInput!): brands
  deletebrands(id: ID!): brands
  createmanufacturer(manufacturer: manufacturerCreateInput!): manufacturer
  updatemanufacturer(manufacturer: manufacturerUpdateInput!): manufacturer
  deletemanufacturer(id: ID!): manufacturer
  createmediamanager(mediamanager: mediamanagerCreateInput!): mediamanager
  updatemediamanager(mediamanager: mediamanagerUpdateInput!): mediamanager
  deletemediamanager(id: ID!): mediamanager
  createoccassions(occassions: occassionsCreateInput!): occassions
  updateoccassions(occassions: occassionsUpdateInput!): occassions
  deleteoccassions(id: ID!): occassions
  createworkspaces(workspaces: workspacesCreateInput!): workspaces
  updateworkspaces(workspaces: workspacesUpdateInput!): workspaces
  deleteworkspaces(id: ID!): workspaces
  createcustomizations(customizations: customizationsCreateInput!): customizations
  updatecustomizations(customizations: customizationsUpdateInput!): customizations
  deletecustomizations(id: ID!): customizations
  createroles(roles: rolesCreateInput!): roles
  updateroles(roles: rolesUpdateInput!): roles
  deleteroles(id: ID!): roles
}

scalar DateTime

type articles {
  id: ID!
  name: String!
  excerpt: String!
  content: String
  image: String
  categories: String
  customers: String
  users: String
  published: String
  cust_id: Int!
  isPublic: String
  meta_description: String
  meta_name: String
  meta_url: String
  tags: String
}

type cart_price_rules {
  id: ID!
  rule: String
  description: String
  active: Boolean
  coupon: String
  uses_per_customer: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
  actions_max_qty_discount_is_applied_to: Float
  actions_discount_qty_step: Float
  actions_apply_shipping_amount: Boolean
}

type catalog_price_rule {
  id: ID!
  rule: String
  description: String
  active: Boolean
  customer_groups: String
  priority: String
  start_date: DateTime
  end_date: DateTime
  status: String
  website: String
  actions_apply: String
  actions_discount_amount: Float
  actions_discard_subsequent_rules: Boolean
}

type categories {
  id: ID!
  thumbnail: String
  name: String!
  visibility: String
  status: Boolean
  websites: String
  product: String
  country: String
  description: String
  content: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  workspaces: [workspaces!]!
}

type cities {
  id: ID!
  name: String!
  description: String
  state: String
  country: String
  postalCode: String
  image: String
}

type comments {
  id: ID!
  customer_name: String!
  description: String
  image: String
  response: String
  published: DateTime
  customers: customers!
  mediamanager: [mediamanager!]!
}

type core_store {
  id: ID!
  key: String
  value: String
  type: String
  environment: String
  tag: String
}

type countries {
  id: ID!
  name: String!
  description: String
  image: String
  region: String
}

type coupons {
  id: ID!
  name: String!
  excerpt: String
  discount: String
  image: String
  published: DateTime
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  products_couponsToproducts: products!
}

type credit_memos {
  credit_memo: String!
  order_number: Int!
  created: DateTime
  bill_to_name: String!
  status: String
  refunded: String
  action: String
  id: Int!
  customers: customers!
  products: products!
}

type currency_rates {
  import_service: ID!
  usd: Float
}

type currency_symbols {
  symbol: ID!
  use_standard: Boolean
}

type customers {
  id: ID!
  thumbnail: String
  name_prefix: String
  first_name: String!
  middle_name: String
  last_name: String!
  email: String!
  customer_group: String
  phone: String
  zipcode: String
  name_suffix: String
  websites: String
  product: String
  country: String
  state: String
  customer_since: DateTime
  confirmed_email: String
  date_of_birth: String
  tax_vat_number: String
  gender: String
  description: String
  short_description: String
  image: String
  Address: String
  address_two: String
  payment_type: String
  username: String
  password: String
  comments: [comments!]!
  credit_memos: [credit_memos!]!
  customer_group_customer_groupTocustomers: [customer_group!]!
  customer_payment: customer_payment
  emails: [emails!]!
  mediamanager: [mediamanager!]!
  messages: [messages!]!
  newsletter_subscribers: [newsletter_subscribers!]!
  orders: [orders!]!
  projects: [projects!]!
  quotes: [quotes!]!
  returns: [returns!]!
  workspaces: [workspaces!]!
}

type gift_certificates {
  id: ID!
  name: String!
  excerpt: String
  discount: String
  image: String
  published: DateTime
  special_offers: String
  rewards: String
  coupons: String
  expiration: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
  type: String
}

type glossary {
  id: ID!
  name: String!
  content: String
  image: String
  published: DateTime
}

type invoices {
  invoice: Int!
  order_number: Int!
  invoice_date: DateTime
  bill_to_name: String!
  billing_address: String
  grand_total_base: String
  grand_total_purchased: String
  status: String
  shipping_address: String
  customer_name: String
  email: String
  customer_group: String
  payment_method: String
  shipping_information: String
  subtotal: String
  shipping_and_handling: String
  id: ID!
}

type newsletter_subscribers {
  id: ID!
  email: String!
  customer_first_name: String
  customer_last_name: String
  store: String
  status: String
  websites: String
  created_at: DateTime
  customers: customers!
}

type orders {
  id: ID!
  purchase_point: Int
  purchase_date: DateTime
  bill_to_name: String!
  ship_to_name: String
  grand_total_base: Int
  grand_total_purchased: Int
  status: Boolean
  action: Boolean
  allocated_sources: String
  braintree_transaction_source: String
  customers: customers!
  products: products!
  quotes: [quotes!]!
  transactions: [transactions!]!
}

type pages {
  id: ID!
  enable_page: Boolean
  title: String!
  content_title: String
  content: String
  url_key: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

type polls {
  id: ID!
  name: String!
  excerpt: String
  description: String
  image: String
  published: DateTime
  question: String
  response: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

type product_attribute {
  id: ID!
  default_label: String
  attribute_code: String
  filter_options: String
  use_search: String
  layered_navigation: Boolean
  search_results_layered_navigation: Boolean
  position: String
  promo_rule_conditions: Boolean
  allow_html_tags_storefront: Boolean
  visible_catalog_pages_storefront: Boolean
  used_product_listing: Boolean
  used_sorting_product_listing: Boolean
  attribute_class: String
  attribute_value: String
  column_options: String
  faceted_navigation: Boolean
  isPublic: String
  meta_description: String
  meta_name: Boolean
  meta_url: String
  products: products!
  product_attribute_set: [product_attribute_set!]!
}

type product_attribute_set {
  id: ID!
  name: String!
  based_on: String
  product_attribute: product_attribute!
}

type products {
  id: ID!
  sku: Int!
  thumbnail: String
  name: String!
  types: String
  attributes: String
  price: String
  quantity_per_source: String
  salable_quantity: String
  visibility: String
  status: Boolean
  websites: String
  product: String
  tax_class: String
  stock_status: String
  weight: String
  categories: String
  created_at: DateTime
  country: String
  size: String
  format: String
  height: String
  content: String
  short_description: String
  image: String
  meta_title: String
  meta_keywords: String
  meta_description: String
  meta_url: String
  file: String
  manufacture: String
  part_number: String
  contract: String
  cost_string: String
  manufacturer_part_number: String
  tags: String
  brand: String
  occassions: String
  customer_type: String
  family: String
  zone: String
  variants: String
  products: products
  brands: [brands!]!
  coupons: [coupons!]!
  credit_memos: [credit_memos!]!
  manufacturer: [manufacturer!]!
  mediamanager: [mediamanager!]!
  occassions_occassionsToproducts: [occassions!]!
  orders: [orders!]!
  product_attribute: [product_attribute!]!
  product_types: [product_types!]!
  other_products: [products!]!
  quotes: [quotes!]!
  rating: [rating!]!
  returns: [returns!]!
  tax_rate: [tax_rate!]!
  tax_rule: [tax_rule!]!
  workspaces: [workspaces!]!
}

type quotes {
  id: ID!
  name: String!
  grand_total: String
  created_at: DateTime
  categories: String
  valid_until: String
  quote_stage: String
  customers: String
  account: String
  approval_issues: String
  approval_status: String
  assigned_to: String
  billing_city: String
  billing_country: String
  billing_postal: String
  billing_state: String
  billing_street: String
  contact: String
  currency: String
  discount: String
  invoice_status: String
  line_item_discount: String
  line_item_group_total: String
  line_item_name: String
  line_item_subtotal: String
  line_item_tax: String
  line_item_total: String
  payment_terms: String
  shipping: String
  shipping_city: String
  shipping_country: String
  shipping_postal: String
  shipping_state: String
  shipping_street: String
  shipping_tax: String
  subtotal: String
  tax: String
  total: String
  customers_customersToquotes: customers!
  orders: orders!
  products_productsToquotes: products!
}

type rating {
  id: ID!
  default_value: String
  default_store_view: String
  rating_visibility: String
  active: Boolean
  sort_order: Float
  products: products!
}

type reports {
  id: ID!
  customer: String
  email: String
  products: String
  quantity: Float
  subtotal: String
  applied_coupon: String
  created: DateTime
  updated: DateTime
  ip_address: String
}

type reviews {
  id: ID!
  first_name: String
  last_name: String
  content: String
  websites: String
  created_at: DateTime
  shop_id: Int!
  comment_id: Int!
}

type shipments {
  product: String
  speed_grade: String
  ship_date: DateTime
  carrier_name: String!
  transit_time: String
  tracking_url: String
  image: String
  id: ID!
  client_id: String
  client_secret: String
  country: String
  website: String
}

type shops {
  id: ID!
  name: String!
  description: String
  image: String
  website: String
  products: String
  articles: String
  customers: String
  comments: String
  coupons: String
  categories: String
  polls: String
  quotes: String
  reviews: String
  gift_certificates: String
  rating: String
  tags: String
  users: String
  invoices: String
  reports: String
  reward_points: String
  special_discounts: String
  statistics: String
  stocks: String
  country: String
  physical_store: String
  type: String
  workspaces: [workspaces!]!
}

type source {
  id: ID!
  name: String!
  code: Int!
  enabled: Boolean
  description: String
  latitude: String
  longitude: String
  pickup_location: Boolean
  contact_name: String
  email: String
  phone: Float
  fax: Float
  country: String
  state: String
  city: String
  street: String
  postcode: Float
}

type special_discounts {
  id: ID!
  name: String!
  excerpt: String
  discount: Float
  image: String
  published: DateTime
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

type states {
  id: ID!
  name: String!
  description: String
  country: String
  image: String
}

type statistics {
  id: ID!
  name: String!
  excerpt: String
  description: String
  image: String
  published: DateTime
  special_offers: String
  reports: String
  rewards: String
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

type stocks {
  id: ID!
  name: String!
  enabled: Boolean
  description: String
  website: String
  sources: String
}

type tags {
  id: ID!
  name: String!
  excerpt: String
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

type tax_rate {
  id: ID!
  tax_identifier: String!
  zip_post_is_range: Boolean
  postcode: String
  state: String
  country: String
  rate_percent: String
  default_store_view: String
  products: products!
}

type tax_rule {
  id: ID!
  name: String!
  tax_rate: String
  products: products!
}

type themes {
  id: ID!
  title: String
  parent_theme: String
  theme_path: String
  action: String
  websites: websites!
}

type transactions {
  id: ID!
  transaction_id: Int!
  parent_transaction_id: Int!
  created: DateTime
  closed: String
  orders: orders!
  customer_payment: customer_payment!
}

type upload_file {
  id: ID!
  name: String!
  alternativeText: String
  caption: String
  width: Int
  height: Int
  formats: String
  hash: String!
  ext: String
  mime: String!
  size: Float!
  url: String!
  previewUrl: String
  provider: String!
  provider_metadata: String
  created_by: Int
  updated_by: Int
  created_at: DateTime
  updated_at: DateTime
}

type upload_file_morph {
  id: ID!
  upload_file_id: Int
  related_id: Int
  related_type: String
  field: String
  order: Int
}

type url_rewrites {
  id: ID!
  request_path: String
  description: String
  redirect_type: Boolean
  target_path: String
  store: String
}

type users {
  id: ID!
  username: String!
  first_name: String!
  last_name: String
  email: String!
  password: String!
  interface_locale: String
  value: String
  permissions: String
  created_at: DateTime
  emails: [emails!]!
  mediamanager: [mediamanager!]!
  messages: [messages!]!
  projects: [projects!]!
  workspaces: [workspaces!]!
}

type agreements {
  id: ID!
  reference_id: Int!
  created: DateTime
  updated: DateTime
  content: String
  name: String
  image: String
  excerpt: String
  type: String
  user_id: Int!
  shop_id: Int!
  mediamanager: [mediamanager!]!
}

type collections {
  id: ID!
  created_at: DateTime
  name: String
  description: String
  image: String
  product: String
  meta_title: String
  meta_keywords: String
  meta_description: String
}

type customer_group {
  id: ID!
  created_at: DateTime
  name: String
  tax_class: String
  customers: customers!
}

type emails {
  id: ID!
  created_at: DateTime
  subject: String
  content: String
  bcc: String
  cc: String
  from: String
  media: String
  customers: customers!
  users: users
}

type events {
  id: ID!
  created_at: DateTime
  name: String
  content: String
  tickets: String
  image: String
  start: String
  end: String
  category: String
  city: String
  state: String
  country: String
  postalcode: String
}

type returns {
  id: ID!
  created_at: DateTime
  name: String
  validity: String
  return_prefix: String
  customers: customers!
  products: products!
}

type segments {
  id: ID!
  created_at: DateTime
  name: String
  description: String
  website: String
  status: String
  apply_to: String
  customers: String
}

type websites {
  id: ID!
  created_at: DateTime
  name: String
  url: String
  shop: String
  store: String
  themes: [themes!]!
}

type customer_payment {
  id: ID!
  created_at: DateTime
  payment_info: String
  provider: String
  account_no: Int!
  expiry: Int
  customers: customers!
  transactions: [transactions!]!
}

type general_settings {
  id: ID!
  created_at: DateTime
  title: String
  tagline: String
  url: String
  email: String
  access_restrictions: String
  restriction_mode: String
  startup_page: String
  landing_page: String
  http_response: String
  store_email: String
  store_contact: String
  store_contact_two: String
  customer_support: String
}

type shop_settings {
  id: ID!
  created_at: DateTime
  store_name: String
  store_phone: String
  store_hours: String
  country: String
  region: String
  zipcode: String
  city: String
  address: String
  address_two: String
  vat_number: String
  allow_state: String
  state_required_for: String
  allow_countries: String
  default_country: String
  optional_zip: String
  european_union_countries: String
  top_destinations: String
  base_currency: String
  default_currency: String
  allowed_currency: String
}

type fullfillments {
  id: ID!
  created_at: DateTime
  name: String
  shipping_zones: String
  company: String
  address: String
  address_two: String
  city: String
  state: String
  zipcode: String
  country: String
  country_area: String
  phone: String
  pickup: String
  stock: String
}

type permissions {
  id: ID!
  created_at: DateTime
  name: String
  content: String
  role: String
  create: String
  read: String
  update: String
  delete: String
  users: String
}

type warehouse {
  id: ID!
  created_at: DateTime
  name: String
  description: String
  city: String
  state: String
  country: String
  postal: String
  status: String
  image: String
  products: String
  category: String
  isPublic: String
}

type apitoken {
  id: ID!
  created_at: DateTime
  name: String!
  token_type: String
  description: String
  token: Int!
}

type cases {
  id: ID!
  created_at: DateTime
  case_number: Int
  state: String
  type: String
  subject: String
  description: String
  resolution: String
  priority: String
  status: String
  account_name: String
  assigned_to: String
  date_modified: DateTime
}

type contracts {
  id: ID!
  contract_title: String
  contract_value: String
  start_date: String
  end_date: String
  renewal_reminder: String
  customer_signed_date: String
  company_signed_date: String
  status: String
  contract_manager: String
  account: String
  contact: String
  description: String
  opportunity: String
  contract_type: String
  currency: String
  line_items: String
  total: String
  discount: String
  subtotal: String
  shipping: String
  shipping_tax: String
  tax: String
  grand_total: String
  created_at: DateTime
}

type internalization {
  id: ID!
  created_at: DateTime
  name: String
  region: String
  description: String
  default: String
  website: String
}

type leads {
  id: ID!
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  status: String
  status_description: String
  opportunity_amount: String
  campaign: String
  lead_source: String
  lead_source_description: String
  referred_by: String
  customer_name: String
}

type opportunities {
  id: ID!
  created_at: DateTime
  name: String
  amount: String
  sales_stage: String
  currency: String
  probability: String
  next_step: String
  description: String
  assigned_to: String
  lead_source: String
  campaign: String
  type: String
  account_name: String
  expected_close_date: String
}

type projects {
  id: ID!
  name: String
  project_manager: String
  start_date: String
  end_date: String
  resource: String
  considerworkingdays: String
  project_template: String
  status: String
  created_at: DateTime
  priority: String
  assignee: String
  doing: String
  done: String
  section_rule: String
  goal_name: String
  goal_timeperiod: String
  goal_privacy: String
  goal_collaborators: String
  goal_updatemethod: String
  goal_progress_source: String
  goal_measurement: String
  customers: customers
  users: users
  tasks: tasks
  ticketing: ticketing
  workspaces: [workspaces!]!
}

type providers {
  id: ID!
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String!
  active: String
}

type surveys {
  id: ID!
  created_at: DateTime
  name: String
  assigned_to: String
  status: String
  description: String
  question: String
  answer: String
  submit_text: String
  satisfied_text: String
  neither_text: String
  dissatisfied_text: String
}

type targets {
  id: ID!
  created_at: DateTime
  Prefix: String
  first_name: String
  last_name: String
  department: String
  account_name: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  email: String
  description: String
  fax: String
  website: String
  mobile: String
  job_title: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  office_phone: String
  customer_name: String
  email_opt_out: String
  donotcall: String
}

type tasks {
  id: ID!
  created_at: DateTime
  subject: String
  start_date: String
  due_date: String
  priority: String
  description: String
  status: String
  related_to: String
  contact: String
  assigned_to: String
  date_modified: DateTime
  mediamanager: [mediamanager!]!
  projects: [projects!]!
  workspaces: [workspaces!]!
}

type webhooks {
  id: ID!
  created_at: DateTime
  name: String!
  url: String!
  headers: String
  create: String
  retrieve: String
  update: String
  delete: String
  publish: String
  unpublish: String
}

type meeting {
  id: ID!
  created_at: DateTime
  subject: String
  start_date: String
  end_date: String
  duration: String
  status: String
  related_to: String
  reminders: String
  content: String
  assigned_to: String
  invitees: String
  scheduling: String
}

type ooto {
  id: ID!
  created_at: DateTime
  login: String
  start_date: String
  end_date: String
  note: String
  using_time: String
  location: String
}

type accounts {
  id: ID!
  created_at: DateTime
  name: String
  website: String
  office_phone: String
  fax: String
  email: String
  address: String
  postalcode: String
  city: String
  state: String
  country: String
  assigned_to: String
  alt_address: String
  alt_postalcode: String
  alt_city: String
  alt_state: String
  alt_country: String
  type: String
  industry: String
  employees: String
  annual_revenue: String
  member_of: String
  campaign: String
}

type email_templates {
  id: ID!
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  insert_variable: String
  subject: String
  content: String
  header: String
  footer: String
  width: String
  height: String
  media: String
}

type importm {
  id: ID!
  created_at: DateTime
  name: String
  description: String
  file: String
  url: String
  image: String
}

type integrations {
  id: ID!
  created_at: DateTime
  name: String
  content: String
  media: String
  location: String
  category: String
}

type knowledgebase {
  id: ID!
  created_at: DateTime
  name: String
  status: String
  revision: String
  content: String
  resolution: String
  author: String
  approver: String
  date_modified: DateTime
}

type payments {
  id: ID!
  created_at: DateTime
  client_id: String
  client_secret: String
  host_uri: String
  redirect_url: String
  redirect_url_app: String
  icon: String
  name: String!
  active: String
  country: String
}

type pdf_templates {
  id: ID!
  created_at: DateTime
  name: String
  assigned_to: String
  type: String
  active: String
  page_size: String
  orientation: String
  content: String
  header: String
  footer: String
  margin_left: String
  margin_right: String
  margin_top: String
  margin_bottom: String
  margin_header: String
  margin_footer: String
}

type project_templates {
  id: ID!
  name: String
  status: String
  consider_working_days: String
  priority: String
  project_manager: String
  resource: String
  content: String
}

type rewards {
  id: ID!
  name: String!
  slug: String
  level: String
  created_at: DateTime
  coupons: String
  expiration: DateTime
  categories: String
  articles: String
  products: String
  customers: String
  users: String
}

type checklist {
  id: ID!
  created_at: DateTime
  username: String
  location: String
  regional_manager: String
  manager: String
  description: String
  ticket: String
  project: String
  region: String
  country: String
  media: String
  prod_id: String
}

type content_type {
  id: ID!
  created_at: DateTime
  text: String
  number: Float
  json: String
  link: String
  email: String
  uid: String
  date: DateTime
  time: DateTime
  timestamp: DateTime
  boolean: Boolean
  rich_text: String
  password: String
  media: String
  database_name: String
}

type plugins {
  id: ID!
  created_at: DateTime
  name: String
  url: String
  github_link: String
  description: String
  logo: String
  screenshots: String
  last_updated: DateTime
  publisher_name: String
  agree_terms: Boolean
  publisher_email: String
}

type product_types {
  id: ID!
  type_name: String
  taxes: String
  isShippable: String
  meta_url: String
  meta_description: String
  filter_options: String
  product_type: String
  products: products!
}

type ticketing {
  id: ID!
  created_at: DateTime
  name: String
  location: String
  date: String
  severity: String
  team: String
  requester: String
  requester_email: String
  content: String
  department: String
  media: String
  projects: String
  ticket_type: String
  comment: String
  products: String
  priority: String
  status: String
  resolution: String
  assigned_to: String
  date_modified: DateTime
  account_name: String
  level: String
  projects_projectsToticketing: [projects!]!
}

type visits {
  id: ID!
  created_at: DateTime
  location: String
  username: String
  reason: String
  content: String
  emergency: String
  start_date: String
  end_date: String
  task: String
  meeting: String
}

type channels {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  currency: String
  default_lang: String
  include_tax: String
  default_zone: String
  default_shipping: String
  client_id: String
  client_secret: String
}

type currencies {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  region: String
}

type messages {
  id: ID!
  from: String
  created_at: DateTime
  subject: String
  content: String
  sender: String
  media: String
  customers: customers!
  users: users
}

type partners {
  id: ID!
  created_at: DateTime
  name: String
  address: String
  city: String
  state: String
  country: String
  isPublic: String
  business_type: String
}

type settingscustomers {
  id: ID!
  created_at: DateTime
  login_as_customer: String
  share_customer_accounts: String
  online_minutes_interval: String
  customer_data_lifetime: String
  email_after_registration: String
}

type settingsgeneral {
  id: ID!
  created_at: DateTime
  site_title: String
  site_tagline: String
  site_website: String
  email: String
  aws_s3: String
  google_drive: String
}

type settingshop {
  id: ID!
  enable_product_assignment: String
  product_videos: String
  seller_payouts: String
  admin_approval: String
  enable_review_system: String
  customer_rate_vendor: String
  multishipping: String
  vendor_transaction_id: String
  enable_vendor_product_attribute: String
}

type settingsmarketing {
  id: ID!
  mail_port: String
  recaptcha_api: String
  adsense_api: String
  sitemap_url: String
  customer_data_lifetime: String
  mail_server: String
}

type settingssales {
  id: ID!
  created_at: DateTime
  analytics_account_type: String
  analytics_account_number: String
  analytics_anonymizeip: String
  analytics_content_experiments: String
  adwords_conversionid: String
  adwords_conversionlanguage: String
  adwords_conversionformat: String
  adwords_conversioncolor: String
  adwords_conversionlabel: String
  adwords_conversionvalue_type: String
  adwords_sendorder: String
  tag_manager_anonymizeip: String
  tag_manager_contentexperiments: String
  tag_manager_containerid: String
}

type tax_category {
  id: ID!
  created_at: DateTime
  name: String
  default: String
}

type wishlists {
  id: ID!
  created_at: DateTime
  name: String
  customers: String
  visibility: String
  products: String
  quantity: String
  occassions: [occassions!]!
}

type zones {
  id: ID!
  created_at: DateTime
  name: String
  updated_at: DateTime
  scope: String
  type: String
  country: String
  code: String
}

type analytics {
  id: ID!
  created_at: DateTime
  name: String
  country: String
  share_data: String
  website_name: String
  client_id: String
  client_secret: String
  tracking_id: String
  property_name: String
  url: String
  default_view: String
  category: String
  property_hit: String
  tracking_code: String
  data_collection: Boolean
  data_retention: Boolean
  search_analytics: String
}

type dashboards {
  id: ID!
  created_at: DateTime
  name: String
  client_id: String
  client_secret: String
  privacy: String
  category: String
  url: String
  media: String
  task: String
  reports: String
  tasks: String
  projects: String
  tickets: String
  customers: String
  checklists: String
  visits: String
  users: String
  products: String
  articles: String
  sales: String
}

type brands {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
  mediamanager: [mediamanager!]!
  workspaces: [workspaces!]!
}

type manufacturer {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  country: String
  state: String
  isPublic: String
  city: String
  description: String
  media: String
  products: products
}

type mediamanager {
  id: ID!
  created_at: DateTime
  name: String
  description: String
  media: String
  keywords: String
  tags: String
  status: String
  expiration_date: String
  copyright: String
  dimensions: String
  content_type: String
  versions: String
  watermark_name: String
  watermark_description: String
  watermark_media: String
  albums: String
  workspace: String
  task_description: String
  task_type: String
  agreements_agreementsTomediamanager: agreements
  customers: customers
  brands_brandsTomediamanager: brands
  comments: comments
  users: users
  products_mediamanagerToproducts: products
  tasks: tasks
}

type occassions {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  category: String
  tags: String
  description: String
  products_occassionsToproducts: products
  wishlists_occassionsTowishlists: wishlists
}

type workspaces {
  id: ID!
  created_at: DateTime
  code: String
  name: String
  description: String
  isPublic: Boolean
  author: String
  media: String
  brands_brandsToworkspaces: brands
  categories: categories
  customers_customersToworkspaces: customers
  products_productsToworkspaces: products
  projects_projectsToworkspaces: projects
  shops_shopsToworkspaces: shops
  tasks_tasksToworkspaces: tasks
  users_usersToworkspaces: users
}

type customizations {
  id: ID!
  created_at: DateTime
  site_name: String
  nav_link: String
  notification: String
  banner: String
  footer_link: String
  announcement: String
  email: String
  site_url: String
  allow_signup: String
}

type roles {
  id: ID!
  role_name: String!
  content: String
  created_at: DateTime
}