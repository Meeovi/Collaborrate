import { GraphQLResolveInfo } from "graphql";
import { AggregateCredit_memosArgs } from "./args/AggregateCredit_memosArgs";
import { CreateManyCredit_memosArgs } from "./args/CreateManyCredit_memosArgs";
import { CreateOneCredit_memosArgs } from "./args/CreateOneCredit_memosArgs";
import { DeleteManyCredit_memosArgs } from "./args/DeleteManyCredit_memosArgs";
import { DeleteOneCredit_memosArgs } from "./args/DeleteOneCredit_memosArgs";
import { FindFirstCredit_memosArgs } from "./args/FindFirstCredit_memosArgs";
import { FindManyCredit_memosArgs } from "./args/FindManyCredit_memosArgs";
import { FindUniqueCredit_memosArgs } from "./args/FindUniqueCredit_memosArgs";
import { GroupByCredit_memosArgs } from "./args/GroupByCredit_memosArgs";
import { UpdateManyCredit_memosArgs } from "./args/UpdateManyCredit_memosArgs";
import { UpdateOneCredit_memosArgs } from "./args/UpdateOneCredit_memosArgs";
import { UpsertOneCredit_memosArgs } from "./args/UpsertOneCredit_memosArgs";
import { Credit_memos } from "../../../models/Credit_memos";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateCredit_memos } from "../../outputs/AggregateCredit_memos";
import { Credit_memosGroupBy } from "../../outputs/Credit_memosGroupBy";
export declare class Credit_memosCrudResolver {
    aggregateCredit_memos(ctx: any, info: GraphQLResolveInfo, args: AggregateCredit_memosArgs): Promise<AggregateCredit_memos>;
    createManyCredit_memos(ctx: any, info: GraphQLResolveInfo, args: CreateManyCredit_memosArgs): Promise<AffectedRowsOutput>;
    createOneCredit_memos(ctx: any, info: GraphQLResolveInfo, args: CreateOneCredit_memosArgs): Promise<Credit_memos>;
    deleteManyCredit_memos(ctx: any, info: GraphQLResolveInfo, args: DeleteManyCredit_memosArgs): Promise<AffectedRowsOutput>;
    deleteOneCredit_memos(ctx: any, info: GraphQLResolveInfo, args: DeleteOneCredit_memosArgs): Promise<Credit_memos | null>;
    findFirstCredit_memos(ctx: any, info: GraphQLResolveInfo, args: FindFirstCredit_memosArgs): Promise<Credit_memos | null>;
    findManyCredit_memos(ctx: any, info: GraphQLResolveInfo, args: FindManyCredit_memosArgs): Promise<Credit_memos[]>;
    findUniqueCredit_memos(ctx: any, info: GraphQLResolveInfo, args: FindUniqueCredit_memosArgs): Promise<Credit_memos | null>;
    groupByCredit_memos(ctx: any, info: GraphQLResolveInfo, args: GroupByCredit_memosArgs): Promise<Credit_memosGroupBy[]>;
    updateManyCredit_memos(ctx: any, info: GraphQLResolveInfo, args: UpdateManyCredit_memosArgs): Promise<AffectedRowsOutput>;
    updateOneCredit_memos(ctx: any, info: GraphQLResolveInfo, args: UpdateOneCredit_memosArgs): Promise<Credit_memos | null>;
    upsertOneCredit_memos(ctx: any, info: GraphQLResolveInfo, args: UpsertOneCredit_memosArgs): Promise<Credit_memos>;
}
