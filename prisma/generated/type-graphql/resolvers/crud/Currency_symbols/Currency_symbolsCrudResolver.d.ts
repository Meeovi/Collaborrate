import { GraphQLResolveInfo } from "graphql";
import { AggregateCurrency_symbolsArgs } from "./args/AggregateCurrency_symbolsArgs";
import { CreateCurrency_symbolsArgs } from "./args/CreateCurrency_symbolsArgs";
import { CreateManyCurrency_symbolsArgs } from "./args/CreateManyCurrency_symbolsArgs";
import { DeleteCurrency_symbolsArgs } from "./args/DeleteCurrency_symbolsArgs";
import { DeleteManyCurrency_symbolsArgs } from "./args/DeleteManyCurrency_symbolsArgs";
import { FindFirstCurrency_symbolsArgs } from "./args/FindFirstCurrency_symbolsArgs";
import { FindManyCurrency_symbolsArgs } from "./args/FindManyCurrency_symbolsArgs";
import { FindUniqueCurrency_symbolsArgs } from "./args/FindUniqueCurrency_symbolsArgs";
import { GroupByCurrency_symbolsArgs } from "./args/GroupByCurrency_symbolsArgs";
import { UpdateCurrency_symbolsArgs } from "./args/UpdateCurrency_symbolsArgs";
import { UpdateManyCurrency_symbolsArgs } from "./args/UpdateManyCurrency_symbolsArgs";
import { UpsertCurrency_symbolsArgs } from "./args/UpsertCurrency_symbolsArgs";
import { Currency_symbols } from "../../../models/Currency_symbols";
import { AffectedRowsOutput } from "../../outputs/AffectedRowsOutput";
import { AggregateCurrency_symbols } from "../../outputs/AggregateCurrency_symbols";
import { Currency_symbolsGroupBy } from "../../outputs/Currency_symbolsGroupBy";
export declare class Currency_symbolsCrudResolver {
    findUniqueCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: FindUniqueCurrency_symbolsArgs): Promise<Currency_symbols | null>;
    findFirstCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: FindFirstCurrency_symbolsArgs): Promise<Currency_symbols | null>;
    findManyCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: FindManyCurrency_symbolsArgs): Promise<Currency_symbols[]>;
    createCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: CreateCurrency_symbolsArgs): Promise<Currency_symbols>;
    createManyCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: CreateManyCurrency_symbolsArgs): Promise<AffectedRowsOutput>;
    deleteCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: DeleteCurrency_symbolsArgs): Promise<Currency_symbols | null>;
    updateCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: UpdateCurrency_symbolsArgs): Promise<Currency_symbols | null>;
    deleteManyCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: DeleteManyCurrency_symbolsArgs): Promise<AffectedRowsOutput>;
    updateManyCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: UpdateManyCurrency_symbolsArgs): Promise<AffectedRowsOutput>;
    upsertCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: UpsertCurrency_symbolsArgs): Promise<Currency_symbols>;
    aggregateCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: AggregateCurrency_symbolsArgs): Promise<AggregateCurrency_symbols>;
    groupByCurrency_symbols(ctx: any, info: GraphQLResolveInfo, args: GroupByCurrency_symbolsArgs): Promise<Currency_symbolsGroupBy[]>;
}
